

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jun 02 15:31:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16LF1718
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16LF1718 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  011A                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011C                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  018E                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0199                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019D                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019E                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  020C                     	;# 
   186  020D                     	;# 
   187  020E                     	;# 
   188  0210                     	;# 
   189  0211                     	;# 
   190  0211                     	;# 
   191  0212                     	;# 
   192  0212                     	;# 
   193  0213                     	;# 
   194  0213                     	;# 
   195  0214                     	;# 
   196  0214                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0216                     	;# 
   202  0216                     	;# 
   203  0217                     	;# 
   204  0217                     	;# 
   205  028C                     	;# 
   206  028D                     	;# 
   207  028E                     	;# 
   208  0291                     	;# 
   209  0291                     	;# 
   210  0292                     	;# 
   211  0293                     	;# 
   212  0293                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029A                     	;# 
   218  029E                     	;# 
   219  030C                     	;# 
   220  030D                     	;# 
   221  030E                     	;# 
   222  038C                     	;# 
   223  038D                     	;# 
   224  038E                     	;# 
   225  0390                     	;# 
   226  0391                     	;# 
   227  0392                     	;# 
   228  0393                     	;# 
   229  0394                     	;# 
   230  0395                     	;# 
   231  0396                     	;# 
   232  0397                     	;# 
   233  0398                     	;# 
   234  0399                     	;# 
   235  039D                     	;# 
   236  039E                     	;# 
   237  039F                     	;# 
   238  0415                     	;# 
   239  0416                     	;# 
   240  0417                     	;# 
   241  041C                     	;# 
   242  041D                     	;# 
   243  041E                     	;# 
   244  0498                     	;# 
   245  0498                     	;# 
   246  0499                     	;# 
   247  049A                     	;# 
   248  049B                     	;# 
   249  049B                     	;# 
   250  049C                     	;# 
   251  049D                     	;# 
   252  049E                     	;# 
   253  049F                     	;# 
   254  0511                     	;# 
   255  0515                     	;# 
   256  0617                     	;# 
   257  0618                     	;# 
   258  0619                     	;# 
   259  0619                     	;# 
   260  061A                     	;# 
   261  061B                     	;# 
   262  061C                     	;# 
   263  061C                     	;# 
   264  0691                     	;# 
   265  0692                     	;# 
   266  0693                     	;# 
   267  0694                     	;# 
   268  0695                     	;# 
   269  0696                     	;# 
   270  0697                     	;# 
   271  0698                     	;# 
   272  0699                     	;# 
   273  069A                     	;# 
   274  069B                     	;# 
   275  069C                     	;# 
   276  069D                     	;# 
   277  069E                     	;# 
   278  069F                     	;# 
   279  0E0F                     	;# 
   280  0E10                     	;# 
   281  0E11                     	;# 
   282  0E12                     	;# 
   283  0E13                     	;# 
   284  0E14                     	;# 
   285  0E15                     	;# 
   286  0E17                     	;# 
   287  0E20                     	;# 
   288  0E21                     	;# 
   289  0E22                     	;# 
   290  0E24                     	;# 
   291  0E25                     	;# 
   292  0E28                     	;# 
   293  0E29                     	;# 
   294  0E2A                     	;# 
   295  0E2B                     	;# 
   296  0E90                     	;# 
   297  0E91                     	;# 
   298  0E92                     	;# 
   299  0E93                     	;# 
   300  0E94                     	;# 
   301  0E95                     	;# 
   302  0E96                     	;# 
   303  0E97                     	;# 
   304  0E98                     	;# 
   305  0E99                     	;# 
   306  0E9A                     	;# 
   307  0E9B                     	;# 
   308  0E9C                     	;# 
   309  0E9D                     	;# 
   310  0E9E                     	;# 
   311  0E9F                     	;# 
   312  0EA0                     	;# 
   313  0EA1                     	;# 
   314  0EA2                     	;# 
   315  0EA3                     	;# 
   316  0EA4                     	;# 
   317  0EA5                     	;# 
   318  0EA6                     	;# 
   319  0EA7                     	;# 
   320  0F0F                     	;# 
   321  0F10                     	;# 
   322  0F11                     	;# 
   323  0F12                     	;# 
   324  0F13                     	;# 
   325  0F14                     	;# 
   326  0F15                     	;# 
   327  0F16                     	;# 
   328  0F17                     	;# 
   329  0F18                     	;# 
   330  0F19                     	;# 
   331  0F1A                     	;# 
   332  0F1B                     	;# 
   333  0F1C                     	;# 
   334  0F1D                     	;# 
   335  0F1E                     	;# 
   336  0F1F                     	;# 
   337  0F20                     	;# 
   338  0F21                     	;# 
   339  0F22                     	;# 
   340  0F23                     	;# 
   341  0F24                     	;# 
   342  0F25                     	;# 
   343  0F26                     	;# 
   344  0F27                     	;# 
   345  0F28                     	;# 
   346  0F29                     	;# 
   347  0F2A                     	;# 
   348  0F2B                     	;# 
   349  0F2C                     	;# 
   350  0F2D                     	;# 
   351  0F2E                     	;# 
   352  0F2F                     	;# 
   353  0F30                     	;# 
   354  0F31                     	;# 
   355  0F32                     	;# 
   356  0F33                     	;# 
   357  0F34                     	;# 
   358  0F35                     	;# 
   359  0F36                     	;# 
   360  0F37                     	;# 
   361  0FE4                     	;# 
   362  0FE5                     	;# 
   363  0FE6                     	;# 
   364  0FE7                     	;# 
   365  0FE8                     	;# 
   366  0FE9                     	;# 
   367  0FEA                     	;# 
   368  0FEB                     	;# 
   369  0FED                     	;# 
   370  0FEE                     	;# 
   371  0FEF                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  008C                     	;# 
   401  008D                     	;# 
   402  008E                     	;# 
   403  0090                     	;# 
   404  0091                     	;# 
   405  0092                     	;# 
   406  0093                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0097                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009A                     	;# 
   413  009B                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  010C                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  0111                     	;# 
   423  0112                     	;# 
   424  0113                     	;# 
   425  0114                     	;# 
   426  0115                     	;# 
   427  0116                     	;# 
   428  0117                     	;# 
   429  0118                     	;# 
   430  0119                     	;# 
   431  011A                     	;# 
   432  011B                     	;# 
   433  011B                     	;# 
   434  011C                     	;# 
   435  018C                     	;# 
   436  018D                     	;# 
   437  018E                     	;# 
   438  0191                     	;# 
   439  0191                     	;# 
   440  0192                     	;# 
   441  0193                     	;# 
   442  0193                     	;# 
   443  0194                     	;# 
   444  0195                     	;# 
   445  0196                     	;# 
   446  0199                     	;# 
   447  0199                     	;# 
   448  0199                     	;# 
   449  019A                     	;# 
   450  019A                     	;# 
   451  019A                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019C                     	;# 
   458  019C                     	;# 
   459  019C                     	;# 
   460  019D                     	;# 
   461  019D                     	;# 
   462  019D                     	;# 
   463  019E                     	;# 
   464  019E                     	;# 
   465  019E                     	;# 
   466  019F                     	;# 
   467  019F                     	;# 
   468  019F                     	;# 
   469  019F                     	;# 
   470  019F                     	;# 
   471  020C                     	;# 
   472  020D                     	;# 
   473  020E                     	;# 
   474  0210                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0212                     	;# 
   479  0213                     	;# 
   480  0213                     	;# 
   481  0214                     	;# 
   482  0214                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0216                     	;# 
   489  0217                     	;# 
   490  0217                     	;# 
   491  028C                     	;# 
   492  028D                     	;# 
   493  028E                     	;# 
   494  0291                     	;# 
   495  0291                     	;# 
   496  0292                     	;# 
   497  0293                     	;# 
   498  0293                     	;# 
   499  0298                     	;# 
   500  0298                     	;# 
   501  0299                     	;# 
   502  029A                     	;# 
   503  029A                     	;# 
   504  029E                     	;# 
   505  030C                     	;# 
   506  030D                     	;# 
   507  030E                     	;# 
   508  038C                     	;# 
   509  038D                     	;# 
   510  038E                     	;# 
   511  0390                     	;# 
   512  0391                     	;# 
   513  0392                     	;# 
   514  0393                     	;# 
   515  0394                     	;# 
   516  0395                     	;# 
   517  0396                     	;# 
   518  0397                     	;# 
   519  0398                     	;# 
   520  0399                     	;# 
   521  039D                     	;# 
   522  039E                     	;# 
   523  039F                     	;# 
   524  0415                     	;# 
   525  0416                     	;# 
   526  0417                     	;# 
   527  041C                     	;# 
   528  041D                     	;# 
   529  041E                     	;# 
   530  0498                     	;# 
   531  0498                     	;# 
   532  0499                     	;# 
   533  049A                     	;# 
   534  049B                     	;# 
   535  049B                     	;# 
   536  049C                     	;# 
   537  049D                     	;# 
   538  049E                     	;# 
   539  049F                     	;# 
   540  0511                     	;# 
   541  0515                     	;# 
   542  0617                     	;# 
   543  0618                     	;# 
   544  0619                     	;# 
   545  0619                     	;# 
   546  061A                     	;# 
   547  061B                     	;# 
   548  061C                     	;# 
   549  061C                     	;# 
   550  0691                     	;# 
   551  0692                     	;# 
   552  0693                     	;# 
   553  0694                     	;# 
   554  0695                     	;# 
   555  0696                     	;# 
   556  0697                     	;# 
   557  0698                     	;# 
   558  0699                     	;# 
   559  069A                     	;# 
   560  069B                     	;# 
   561  069C                     	;# 
   562  069D                     	;# 
   563  069E                     	;# 
   564  069F                     	;# 
   565  0E0F                     	;# 
   566  0E10                     	;# 
   567  0E11                     	;# 
   568  0E12                     	;# 
   569  0E13                     	;# 
   570  0E14                     	;# 
   571  0E15                     	;# 
   572  0E17                     	;# 
   573  0E20                     	;# 
   574  0E21                     	;# 
   575  0E22                     	;# 
   576  0E24                     	;# 
   577  0E25                     	;# 
   578  0E28                     	;# 
   579  0E29                     	;# 
   580  0E2A                     	;# 
   581  0E2B                     	;# 
   582  0E90                     	;# 
   583  0E91                     	;# 
   584  0E92                     	;# 
   585  0E93                     	;# 
   586  0E94                     	;# 
   587  0E95                     	;# 
   588  0E96                     	;# 
   589  0E97                     	;# 
   590  0E98                     	;# 
   591  0E99                     	;# 
   592  0E9A                     	;# 
   593  0E9B                     	;# 
   594  0E9C                     	;# 
   595  0E9D                     	;# 
   596  0E9E                     	;# 
   597  0E9F                     	;# 
   598  0EA0                     	;# 
   599  0EA1                     	;# 
   600  0EA2                     	;# 
   601  0EA3                     	;# 
   602  0EA4                     	;# 
   603  0EA5                     	;# 
   604  0EA6                     	;# 
   605  0EA7                     	;# 
   606  0F0F                     	;# 
   607  0F10                     	;# 
   608  0F11                     	;# 
   609  0F12                     	;# 
   610  0F13                     	;# 
   611  0F14                     	;# 
   612  0F15                     	;# 
   613  0F16                     	;# 
   614  0F17                     	;# 
   615  0F18                     	;# 
   616  0F19                     	;# 
   617  0F1A                     	;# 
   618  0F1B                     	;# 
   619  0F1C                     	;# 
   620  0F1D                     	;# 
   621  0F1E                     	;# 
   622  0F1F                     	;# 
   623  0F20                     	;# 
   624  0F21                     	;# 
   625  0F22                     	;# 
   626  0F23                     	;# 
   627  0F24                     	;# 
   628  0F25                     	;# 
   629  0F26                     	;# 
   630  0F27                     	;# 
   631  0F28                     	;# 
   632  0F29                     	;# 
   633  0F2A                     	;# 
   634  0F2B                     	;# 
   635  0F2C                     	;# 
   636  0F2D                     	;# 
   637  0F2E                     	;# 
   638  0F2F                     	;# 
   639  0F30                     	;# 
   640  0F31                     	;# 
   641  0F32                     	;# 
   642  0F33                     	;# 
   643  0F34                     	;# 
   644  0F35                     	;# 
   645  0F36                     	;# 
   646  0F37                     	;# 
   647  0FE4                     	;# 
   648  0FE5                     	;# 
   649  0FE6                     	;# 
   650  0FE7                     	;# 
   651  0FE8                     	;# 
   652  0FE9                     	;# 
   653  0FEA                     	;# 
   654  0FEB                     	;# 
   655  0FED                     	;# 
   656  0FEE                     	;# 
   657  0FEF                     	;# 
   658  0000                     	;# 
   659  0001                     	;# 
   660  0002                     	;# 
   661  0003                     	;# 
   662  0004                     	;# 
   663  0005                     	;# 
   664  0006                     	;# 
   665  0007                     	;# 
   666  0008                     	;# 
   667  0009                     	;# 
   668  000A                     	;# 
   669  000B                     	;# 
   670  000C                     	;# 
   671  000D                     	;# 
   672  000E                     	;# 
   673  0010                     	;# 
   674  0011                     	;# 
   675  0012                     	;# 
   676  0013                     	;# 
   677  0015                     	;# 
   678  0016                     	;# 
   679  0016                     	;# 
   680  0017                     	;# 
   681  0018                     	;# 
   682  0019                     	;# 
   683  001A                     	;# 
   684  001B                     	;# 
   685  001C                     	;# 
   686  008C                     	;# 
   687  008D                     	;# 
   688  008E                     	;# 
   689  0090                     	;# 
   690  0091                     	;# 
   691  0092                     	;# 
   692  0093                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0098                     	;# 
   697  0099                     	;# 
   698  009A                     	;# 
   699  009B                     	;# 
   700  009B                     	;# 
   701  009C                     	;# 
   702  009D                     	;# 
   703  009E                     	;# 
   704  009F                     	;# 
   705  010C                     	;# 
   706  010D                     	;# 
   707  010E                     	;# 
   708  0111                     	;# 
   709  0112                     	;# 
   710  0113                     	;# 
   711  0114                     	;# 
   712  0115                     	;# 
   713  0116                     	;# 
   714  0117                     	;# 
   715  0118                     	;# 
   716  0119                     	;# 
   717  011A                     	;# 
   718  011B                     	;# 
   719  011B                     	;# 
   720  011C                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  018E                     	;# 
   724  0191                     	;# 
   725  0191                     	;# 
   726  0192                     	;# 
   727  0193                     	;# 
   728  0193                     	;# 
   729  0194                     	;# 
   730  0195                     	;# 
   731  0196                     	;# 
   732  0199                     	;# 
   733  0199                     	;# 
   734  0199                     	;# 
   735  019A                     	;# 
   736  019A                     	;# 
   737  019A                     	;# 
   738  019B                     	;# 
   739  019B                     	;# 
   740  019B                     	;# 
   741  019B                     	;# 
   742  019B                     	;# 
   743  019C                     	;# 
   744  019C                     	;# 
   745  019C                     	;# 
   746  019D                     	;# 
   747  019D                     	;# 
   748  019D                     	;# 
   749  019E                     	;# 
   750  019E                     	;# 
   751  019E                     	;# 
   752  019F                     	;# 
   753  019F                     	;# 
   754  019F                     	;# 
   755  019F                     	;# 
   756  019F                     	;# 
   757  020C                     	;# 
   758  020D                     	;# 
   759  020E                     	;# 
   760  0210                     	;# 
   761  0211                     	;# 
   762  0211                     	;# 
   763  0212                     	;# 
   764  0212                     	;# 
   765  0213                     	;# 
   766  0213                     	;# 
   767  0214                     	;# 
   768  0214                     	;# 
   769  0215                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0215                     	;# 
   773  0216                     	;# 
   774  0216                     	;# 
   775  0217                     	;# 
   776  0217                     	;# 
   777  028C                     	;# 
   778  028D                     	;# 
   779  028E                     	;# 
   780  0291                     	;# 
   781  0291                     	;# 
   782  0292                     	;# 
   783  0293                     	;# 
   784  0293                     	;# 
   785  0298                     	;# 
   786  0298                     	;# 
   787  0299                     	;# 
   788  029A                     	;# 
   789  029A                     	;# 
   790  029E                     	;# 
   791  030C                     	;# 
   792  030D                     	;# 
   793  030E                     	;# 
   794  038C                     	;# 
   795  038D                     	;# 
   796  038E                     	;# 
   797  0390                     	;# 
   798  0391                     	;# 
   799  0392                     	;# 
   800  0393                     	;# 
   801  0394                     	;# 
   802  0395                     	;# 
   803  0396                     	;# 
   804  0397                     	;# 
   805  0398                     	;# 
   806  0399                     	;# 
   807  039D                     	;# 
   808  039E                     	;# 
   809  039F                     	;# 
   810  0415                     	;# 
   811  0416                     	;# 
   812  0417                     	;# 
   813  041C                     	;# 
   814  041D                     	;# 
   815  041E                     	;# 
   816  0498                     	;# 
   817  0498                     	;# 
   818  0499                     	;# 
   819  049A                     	;# 
   820  049B                     	;# 
   821  049B                     	;# 
   822  049C                     	;# 
   823  049D                     	;# 
   824  049E                     	;# 
   825  049F                     	;# 
   826  0511                     	;# 
   827  0515                     	;# 
   828  0617                     	;# 
   829  0618                     	;# 
   830  0619                     	;# 
   831  0619                     	;# 
   832  061A                     	;# 
   833  061B                     	;# 
   834  061C                     	;# 
   835  061C                     	;# 
   836  0691                     	;# 
   837  0692                     	;# 
   838  0693                     	;# 
   839  0694                     	;# 
   840  0695                     	;# 
   841  0696                     	;# 
   842  0697                     	;# 
   843  0698                     	;# 
   844  0699                     	;# 
   845  069A                     	;# 
   846  069B                     	;# 
   847  069C                     	;# 
   848  069D                     	;# 
   849  069E                     	;# 
   850  069F                     	;# 
   851  0E0F                     	;# 
   852  0E10                     	;# 
   853  0E11                     	;# 
   854  0E12                     	;# 
   855  0E13                     	;# 
   856  0E14                     	;# 
   857  0E15                     	;# 
   858  0E17                     	;# 
   859  0E20                     	;# 
   860  0E21                     	;# 
   861  0E22                     	;# 
   862  0E24                     	;# 
   863  0E25                     	;# 
   864  0E28                     	;# 
   865  0E29                     	;# 
   866  0E2A                     	;# 
   867  0E2B                     	;# 
   868  0E90                     	;# 
   869  0E91                     	;# 
   870  0E92                     	;# 
   871  0E93                     	;# 
   872  0E94                     	;# 
   873  0E95                     	;# 
   874  0E96                     	;# 
   875  0E97                     	;# 
   876  0E98                     	;# 
   877  0E99                     	;# 
   878  0E9A                     	;# 
   879  0E9B                     	;# 
   880  0E9C                     	;# 
   881  0E9D                     	;# 
   882  0E9E                     	;# 
   883  0E9F                     	;# 
   884  0EA0                     	;# 
   885  0EA1                     	;# 
   886  0EA2                     	;# 
   887  0EA3                     	;# 
   888  0EA4                     	;# 
   889  0EA5                     	;# 
   890  0EA6                     	;# 
   891  0EA7                     	;# 
   892  0F0F                     	;# 
   893  0F10                     	;# 
   894  0F11                     	;# 
   895  0F12                     	;# 
   896  0F13                     	;# 
   897  0F14                     	;# 
   898  0F15                     	;# 
   899  0F16                     	;# 
   900  0F17                     	;# 
   901  0F18                     	;# 
   902  0F19                     	;# 
   903  0F1A                     	;# 
   904  0F1B                     	;# 
   905  0F1C                     	;# 
   906  0F1D                     	;# 
   907  0F1E                     	;# 
   908  0F1F                     	;# 
   909  0F20                     	;# 
   910  0F21                     	;# 
   911  0F22                     	;# 
   912  0F23                     	;# 
   913  0F24                     	;# 
   914  0F25                     	;# 
   915  0F26                     	;# 
   916  0F27                     	;# 
   917  0F28                     	;# 
   918  0F29                     	;# 
   919  0F2A                     	;# 
   920  0F2B                     	;# 
   921  0F2C                     	;# 
   922  0F2D                     	;# 
   923  0F2E                     	;# 
   924  0F2F                     	;# 
   925  0F30                     	;# 
   926  0F31                     	;# 
   927  0F32                     	;# 
   928  0F33                     	;# 
   929  0F34                     	;# 
   930  0F35                     	;# 
   931  0F36                     	;# 
   932  0F37                     	;# 
   933  0FE4                     	;# 
   934  0FE5                     	;# 
   935  0FE6                     	;# 
   936  0FE7                     	;# 
   937  0FE8                     	;# 
   938  0FE9                     	;# 
   939  0FEA                     	;# 
   940  0FEB                     	;# 
   941  0FED                     	;# 
   942  0FEE                     	;# 
   943  0FEF                     	;# 
   944  0000                     	;# 
   945  0001                     	;# 
   946  0002                     	;# 
   947  0003                     	;# 
   948  0004                     	;# 
   949  0005                     	;# 
   950  0006                     	;# 
   951  0007                     	;# 
   952  0008                     	;# 
   953  0009                     	;# 
   954  000A                     	;# 
   955  000B                     	;# 
   956  000C                     	;# 
   957  000D                     	;# 
   958  000E                     	;# 
   959  0010                     	;# 
   960  0011                     	;# 
   961  0012                     	;# 
   962  0013                     	;# 
   963  0015                     	;# 
   964  0016                     	;# 
   965  0016                     	;# 
   966  0017                     	;# 
   967  0018                     	;# 
   968  0019                     	;# 
   969  001A                     	;# 
   970  001B                     	;# 
   971  001C                     	;# 
   972  008C                     	;# 
   973  008D                     	;# 
   974  008E                     	;# 
   975  0090                     	;# 
   976  0091                     	;# 
   977  0092                     	;# 
   978  0093                     	;# 
   979  0095                     	;# 
   980  0096                     	;# 
   981  0097                     	;# 
   982  0098                     	;# 
   983  0099                     	;# 
   984  009A                     	;# 
   985  009B                     	;# 
   986  009B                     	;# 
   987  009C                     	;# 
   988  009D                     	;# 
   989  009E                     	;# 
   990  009F                     	;# 
   991  010C                     	;# 
   992  010D                     	;# 
   993  010E                     	;# 
   994  0111                     	;# 
   995  0112                     	;# 
   996  0113                     	;# 
   997  0114                     	;# 
   998  0115                     	;# 
   999  0116                     	;# 
  1000  0117                     	;# 
  1001  0118                     	;# 
  1002  0119                     	;# 
  1003  011A                     	;# 
  1004  011B                     	;# 
  1005  011B                     	;# 
  1006  011C                     	;# 
  1007  018C                     	;# 
  1008  018D                     	;# 
  1009  018E                     	;# 
  1010  0191                     	;# 
  1011  0191                     	;# 
  1012  0192                     	;# 
  1013  0193                     	;# 
  1014  0193                     	;# 
  1015  0194                     	;# 
  1016  0195                     	;# 
  1017  0196                     	;# 
  1018  0199                     	;# 
  1019  0199                     	;# 
  1020  0199                     	;# 
  1021  019A                     	;# 
  1022  019A                     	;# 
  1023  019A                     	;# 
  1024  019B                     	;# 
  1025  019B                     	;# 
  1026  019B                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019C                     	;# 
  1030  019C                     	;# 
  1031  019C                     	;# 
  1032  019D                     	;# 
  1033  019D                     	;# 
  1034  019D                     	;# 
  1035  019E                     	;# 
  1036  019E                     	;# 
  1037  019E                     	;# 
  1038  019F                     	;# 
  1039  019F                     	;# 
  1040  019F                     	;# 
  1041  019F                     	;# 
  1042  019F                     	;# 
  1043  020C                     	;# 
  1044  020D                     	;# 
  1045  020E                     	;# 
  1046  0210                     	;# 
  1047  0211                     	;# 
  1048  0211                     	;# 
  1049  0212                     	;# 
  1050  0212                     	;# 
  1051  0213                     	;# 
  1052  0213                     	;# 
  1053  0214                     	;# 
  1054  0214                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0215                     	;# 
  1058  0215                     	;# 
  1059  0216                     	;# 
  1060  0216                     	;# 
  1061  0217                     	;# 
  1062  0217                     	;# 
  1063  028C                     	;# 
  1064  028D                     	;# 
  1065  028E                     	;# 
  1066  0291                     	;# 
  1067  0291                     	;# 
  1068  0292                     	;# 
  1069  0293                     	;# 
  1070  0293                     	;# 
  1071  0298                     	;# 
  1072  0298                     	;# 
  1073  0299                     	;# 
  1074  029A                     	;# 
  1075  029A                     	;# 
  1076  029E                     	;# 
  1077  030C                     	;# 
  1078  030D                     	;# 
  1079  030E                     	;# 
  1080  038C                     	;# 
  1081  038D                     	;# 
  1082  038E                     	;# 
  1083  0390                     	;# 
  1084  0391                     	;# 
  1085  0392                     	;# 
  1086  0393                     	;# 
  1087  0394                     	;# 
  1088  0395                     	;# 
  1089  0396                     	;# 
  1090  0397                     	;# 
  1091  0398                     	;# 
  1092  0399                     	;# 
  1093  039D                     	;# 
  1094  039E                     	;# 
  1095  039F                     	;# 
  1096  0415                     	;# 
  1097  0416                     	;# 
  1098  0417                     	;# 
  1099  041C                     	;# 
  1100  041D                     	;# 
  1101  041E                     	;# 
  1102  0498                     	;# 
  1103  0498                     	;# 
  1104  0499                     	;# 
  1105  049A                     	;# 
  1106  049B                     	;# 
  1107  049B                     	;# 
  1108  049C                     	;# 
  1109  049D                     	;# 
  1110  049E                     	;# 
  1111  049F                     	;# 
  1112  0511                     	;# 
  1113  0515                     	;# 
  1114  0617                     	;# 
  1115  0618                     	;# 
  1116  0619                     	;# 
  1117  0619                     	;# 
  1118  061A                     	;# 
  1119  061B                     	;# 
  1120  061C                     	;# 
  1121  061C                     	;# 
  1122  0691                     	;# 
  1123  0692                     	;# 
  1124  0693                     	;# 
  1125  0694                     	;# 
  1126  0695                     	;# 
  1127  0696                     	;# 
  1128  0697                     	;# 
  1129  0698                     	;# 
  1130  0699                     	;# 
  1131  069A                     	;# 
  1132  069B                     	;# 
  1133  069C                     	;# 
  1134  069D                     	;# 
  1135  069E                     	;# 
  1136  069F                     	;# 
  1137  0E0F                     	;# 
  1138  0E10                     	;# 
  1139  0E11                     	;# 
  1140  0E12                     	;# 
  1141  0E13                     	;# 
  1142  0E14                     	;# 
  1143  0E15                     	;# 
  1144  0E17                     	;# 
  1145  0E20                     	;# 
  1146  0E21                     	;# 
  1147  0E22                     	;# 
  1148  0E24                     	;# 
  1149  0E25                     	;# 
  1150  0E28                     	;# 
  1151  0E29                     	;# 
  1152  0E2A                     	;# 
  1153  0E2B                     	;# 
  1154  0E90                     	;# 
  1155  0E91                     	;# 
  1156  0E92                     	;# 
  1157  0E93                     	;# 
  1158  0E94                     	;# 
  1159  0E95                     	;# 
  1160  0E96                     	;# 
  1161  0E97                     	;# 
  1162  0E98                     	;# 
  1163  0E99                     	;# 
  1164  0E9A                     	;# 
  1165  0E9B                     	;# 
  1166  0E9C                     	;# 
  1167  0E9D                     	;# 
  1168  0E9E                     	;# 
  1169  0E9F                     	;# 
  1170  0EA0                     	;# 
  1171  0EA1                     	;# 
  1172  0EA2                     	;# 
  1173  0EA3                     	;# 
  1174  0EA4                     	;# 
  1175  0EA5                     	;# 
  1176  0EA6                     	;# 
  1177  0EA7                     	;# 
  1178  0F0F                     	;# 
  1179  0F10                     	;# 
  1180  0F11                     	;# 
  1181  0F12                     	;# 
  1182  0F13                     	;# 
  1183  0F14                     	;# 
  1184  0F15                     	;# 
  1185  0F16                     	;# 
  1186  0F17                     	;# 
  1187  0F18                     	;# 
  1188  0F19                     	;# 
  1189  0F1A                     	;# 
  1190  0F1B                     	;# 
  1191  0F1C                     	;# 
  1192  0F1D                     	;# 
  1193  0F1E                     	;# 
  1194  0F1F                     	;# 
  1195  0F20                     	;# 
  1196  0F21                     	;# 
  1197  0F22                     	;# 
  1198  0F23                     	;# 
  1199  0F24                     	;# 
  1200  0F25                     	;# 
  1201  0F26                     	;# 
  1202  0F27                     	;# 
  1203  0F28                     	;# 
  1204  0F29                     	;# 
  1205  0F2A                     	;# 
  1206  0F2B                     	;# 
  1207  0F2C                     	;# 
  1208  0F2D                     	;# 
  1209  0F2E                     	;# 
  1210  0F2F                     	;# 
  1211  0F30                     	;# 
  1212  0F31                     	;# 
  1213  0F32                     	;# 
  1214  0F33                     	;# 
  1215  0F34                     	;# 
  1216  0F35                     	;# 
  1217  0F36                     	;# 
  1218  0F37                     	;# 
  1219  0FE4                     	;# 
  1220  0FE5                     	;# 
  1221  0FE6                     	;# 
  1222  0FE7                     	;# 
  1223  0FE8                     	;# 
  1224  0FE9                     	;# 
  1225  0FEA                     	;# 
  1226  0FEB                     	;# 
  1227  0FED                     	;# 
  1228  0FEE                     	;# 
  1229  0FEF                     	;# 
  1230                           
  1231                           	psect	idataBANK1
  1232  0E2A                     __pidataBANK1:
  1233                           
  1234                           ;initializer for _last3digitsCarnet3
  1235  0E2A  34A4               	retlw	164
  1236  0E2B  3401               	retlw	1
  1237                           
  1238                           ;initializer for _last3digitsCarnet2
  1239  0E2C  34ED               	retlw	237
  1240  0E2D  3401               	retlw	1
  1241                           
  1242                           ;initializer for _last3digitsCarnet1
  1243  0E2E  34FF               	retlw	255
  1244  0E2F  3400               	retlw	0
  1245                           
  1246                           	psect	stringtext1
  1247  1000                     __pstringtext1:
  1248  1000                     main@label:
  1249  1000  3401               	retlw	1
  1250  1001  3400               	retlw	0
  1251  1002                     __end_ofmain@label:
  1252  000D                     _PORTBbits	set	13
  1253  000D                     _PORTB	set	13
  1254  0097                     _WDTCON	set	151
  1255  0098                     _OSCTUNE	set	152
  1256  0099                     _OSCCON	set	153
  1257  0095                     _OPTION_REGbits	set	149
  1258  008E                     _TRISC	set	142
  1259  008D                     _TRISB	set	141
  1260  008C                     _TRISA	set	140
  1261  0090                     _TRISE	set	144
  1262  0116                     _BORCON	set	278
  1263  010E                     _LATC	set	270
  1264  010D                     _LATB	set	269
  1265  010C                     _LATA	set	268
  1266  018C                     _ANSELA	set	396
  1267  018D                     _ANSELB	set	397
  1268  018E                     _ANSELC	set	398
  1269  020E                     _WPUC	set	526
  1270  020C                     _WPUA	set	524
  1271  020D                     _WPUB	set	525
  1272  0210                     _WPUE	set	528
  1273  028E                     _ODCONC	set	654
  1274  028D                     _ODCONB	set	653
  1275  028C                     _ODCONA	set	652
  1276  030E                     _SLRCONC	set	782
  1277  030D                     _SLRCONB	set	781
  1278  030C                     _SLRCONA	set	780
  1279  0390                     _INLVLE	set	912
  1280  038E                     _INLVLC	set	910
  1281  038D                     _INLVLB	set	909
  1282  038C                     _INLVLA	set	908
  1283  1002                     STR_8:
  1284  1002  3420               	retlw	32	;' '
  1285  1003  3420               	retlw	32	;' '
  1286  1004  3420               	retlw	32	;' '
  1287  1005  3420               	retlw	32	;' '
  1288  1006  3420               	retlw	32	;' '
  1289  1007  3420               	retlw	32	;' '
  1290  1008  3420               	retlw	32	;' '
  1291  1009  3420               	retlw	32	;' '
  1292  100A  3420               	retlw	32	;' '
  1293  100B  3420               	retlw	32	;' '
  1294  100C  3420               	retlw	32	;' '
  1295  100D  3420               	retlw	32	;' '
  1296  100E  3420               	retlw	32	;' '
  1297  100F  3420               	retlw	32	;' '
  1298  1010  3420               	retlw	32	;' '
  1299  1011  3420               	retlw	32	;' '
  1300  1012  3400               	retlw	0
  1301                           
  1302                           	psect	stringtext2
  1303  1013                     __pstringtext2:
  1304  1013                     STR_1:
  1305  1013  3443               	retlw	67	;'C'
  1306  1014  3461               	retlw	97	;'a'
  1307  1015  346C               	retlw	108	;'l'
  1308  1016  3463               	retlw	99	;'c'
  1309  1017  3475               	retlw	117	;'u'
  1310  1018  346C               	retlw	108	;'l'
  1311  1019  3461               	retlw	97	;'a'
  1312  101A  346E               	retlw	110	;'n'
  1313  101B  3464               	retlw	100	;'d'
  1314  101C  346F               	retlw	111	;'o'
  1315  101D  342E               	retlw	46	;'.'
  1316  101E  342E               	retlw	46	;'.'
  1317  101F  342E               	retlw	46	;'.'
  1318  1020  3400               	retlw	0
  1319                           
  1320                           	psect	stringtext3
  1321  1021                     __pstringtext3:
  1322  1021                     STR_4:
  1323  1021  3473               	retlw	115	;'s'
  1324  1022  3475               	retlw	117	;'u'
  1325  1023  346D               	retlw	109	;'m'
  1326  1024  3444               	retlw	68	;'D'
  1327  1025  3469               	retlw	105	;'i'
  1328  1026  3467               	retlw	103	;'g'
  1329  1027  3469               	retlw	105	;'i'
  1330  1028  3474               	retlw	116	;'t'
  1331  1029  3473               	retlw	115	;'s'
  1332  102A  343D               	retlw	61	;'='
  1333  102B  3400               	retlw	0
  1334                           
  1335                           	psect	stringtext4
  1336  102C                     __pstringtext4:
  1337  102C                     STR_2:
  1338  102C  3453               	retlw	83	;'S'
  1339  102D  3475               	retlw	117	;'u'
  1340  102E  346D               	retlw	109	;'m'
  1341  102F  3450               	retlw	80	;'P'
  1342  1030  3472               	retlw	114	;'r'
  1343  1031  3469               	retlw	105	;'i'
  1344  1032  346D               	retlw	109	;'m'
  1345  1033  3465               	retlw	101	;'e'
  1346  1034  343D               	retlw	61	;'='
  1347  1035  3400               	retlw	0
  1348                           
  1349                           	psect	stringtext5
  1350  1036                     __pstringtext5:
  1351  1036                     STR_6:
  1352  1036  3442               	retlw	66	;'B'
  1353  1037  3469               	retlw	105	;'i'
  1354  1038  346E               	retlw	110	;'n'
  1355  1039  3461               	retlw	97	;'a'
  1356  103A  3472               	retlw	114	;'r'
  1357  103B  3479               	retlw	121	;'y'
  1358  103C  343D               	retlw	61	;'='
  1359  103D  3400               	retlw	0
  1360                           
  1361                           	psect	stringtext6
  1362  103E                     __pstringtext6:
  1363  103E                     STR_3:
  1364  103E  3425               	retlw	37	;'%'
  1365  103F  3464               	retlw	100	;'d'
  1366  1040  3400               	retlw	0
  1367                           
  1368                           	psect	stringtext7
  1369  0000                     __pstringtext7:
  1370  1002                     
  1371                           	psect	cinit
  1372  07D7                     start_initialization:	
  1373                           ; #config settings
  1374                           
  1375  07D7                     __initialization:
  1376                           
  1377                           ; Initialize objects allocated to BANK1
  1378  07D7  302A               	movlw	low __pidataBANK1
  1379  07D8  0084               	movwf	4
  1380  07D9  308E               	movlw	(high __pidataBANK1)| (0+128)
  1381  07DA  0085               	movwf	5
  1382  07DB  0021               	movlb	1	; select bank1
  1383  07DC  0012               	moviw fsr0++
  1384  07DD  00E5               	movwf	__pdataBANK1& (0+127)
  1385  07DE  0012               	moviw fsr0++
  1386  07DF  00E6               	movwf	(__pdataBANK1+1)& (0+127)
  1387  07E0  0012               	moviw fsr0++
  1388  07E1  00E7               	movwf	(__pdataBANK1+2)& (0+127)
  1389  07E2  0012               	moviw fsr0++
  1390  07E3  00E8               	movwf	(__pdataBANK1+3)& (0+127)
  1391  07E4  0012               	moviw fsr0++
  1392  07E5  00E9               	movwf	(__pdataBANK1+4)& (0+127)
  1393  07E6  0012               	moviw fsr0++
  1394  07E7  00EA               	movwf	(__pdataBANK1+5)& (0+127)
  1395                           
  1396                           ; Clear objects allocated to BANK0
  1397  07E8  0020               	movlb	0	; select bank0
  1398  07E9  01EC               	clrf	__pbssBANK0& (0+127)
  1399  07EA  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  1400  07EB  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  1401  07EC  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  1402                           
  1403                           ; Clear objects allocated to BANK1
  1404  07ED  30D9               	movlw	low __pbssBANK1
  1405  07EE  0084               	movwf	4
  1406  07EF  3000               	movlw	high __pbssBANK1
  1407  07F0  0085               	movwf	5
  1408  07F1  300C               	movlw	12
  1409  07F2  318E  2624  3187   	fcall	clear_ram0
  1410                           
  1411                           ; Clear objects allocated to BANK2
  1412  07F5  3020               	movlw	low __pbssBANK2
  1413  07F6  0084               	movwf	4
  1414  07F7  3001               	movlw	high __pbssBANK2
  1415  07F8  0085               	movwf	5
  1416  07F9  3020               	movlw	32
  1417  07FA  318E  2624  3187   	fcall	clear_ram0
  1418  07FD                     end_of_initialization:	
  1419                           ;End of C runtime variable initialization code
  1420                           
  1421  07FD                     __end_of__initialization:
  1422  07FD  0020               	movlb	0
  1423  07FE  3185  2DE8         	ljmp	_main	;jump to C main() function
  1424                           
  1425                           	psect	bssBANK0
  1426  006C                     __pbssBANK0:
  1427  006C                     _prec:
  1428  006C                     	ds	2
  1429  006E                     _flags:
  1430  006E                     	ds	2
  1431                           
  1432                           	psect	bssBANK1
  1433  00D9                     __pbssBANK1:
  1434  00D9                     main@F5610:
  1435  00D9                     	ds	8
  1436  00E1                     _nout:
  1437  00E1                     	ds	2
  1438  00E3                     _width:
  1439  00E3                     	ds	2
  1440                           
  1441                           	psect	dataBANK1
  1442  00E5                     __pdataBANK1:
  1443  00E5                     _last3digitsCarnet3:
  1444  00E5                     	ds	2
  1445  00E7                     _last3digitsCarnet2:
  1446  00E7                     	ds	2
  1447  00E9                     _last3digitsCarnet1:
  1448  00E9                     	ds	2
  1449                           
  1450                           	psect	bssBANK2
  1451  0120                     __pbssBANK2:
  1452  0120                     _dbuf:
  1453  0120                     	ds	32
  1454                           
  1455                           	psect	clrtext
  1456  0E24                     clear_ram0:	
  1457                           ;	Called with FSR0 containing the base address, and
  1458                           ;	WREG with the size to clear
  1459                           
  1460  0E24  0064               	clrwdt	;clear the watchdog before getting into this loop
  1461  0E25                     clrloop0:
  1462  0E25  0180               	clrf	0	;clear RAM location pointed to by FSR
  1463  0E26  3101               	addfsr 0,1
  1464  0E27  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1465  0E28  2E25               	goto	clrloop0	;have we reached the end yet?
  1466  0E29  3400               	retlw	0	;all done for this memory range, return
  1467                           
  1468                           	psect	cstackBANK1
  1469  00A0                     __pcstackBANK1:
  1470  00A0                     	ds	2
  1471  00A2                     sprintf@ap:
  1472                           
  1473                           ; 1 bytes @ 0x2
  1474  00A2                     	ds	1
  1475  00A3                     sprintf@s:
  1476                           
  1477                           ; 1 bytes @ 0x3
  1478  00A3                     	ds	1
  1479  00A4                     sprintf@f:
  1480                           
  1481                           ; 5 bytes @ 0x4
  1482  00A4                     	ds	5
  1483  00A9                     ??_main:
  1484                           
  1485                           ; 1 bytes @ 0x9
  1486  00A9                     	ds	14
  1487  00B7                     main@printchar:
  1488                           
  1489                           ; 10 bytes @ 0x17
  1490  00B7                     	ds	10
  1491  00C1                     main@bin:
  1492                           
  1493                           ; 8 bytes @ 0x21
  1494  00C1                     	ds	8
  1495  00C9                     main@prime:
  1496                           
  1497                           ; 2 bytes @ 0x29
  1498  00C9                     	ds	2
  1499  00CB                     main@carnet:
  1500                           
  1501                           ; 2 bytes @ 0x2B
  1502  00CB                     	ds	2
  1503  00CD                     main@Binary:
  1504                           
  1505                           ; 4 bytes @ 0x2D
  1506  00CD                     	ds	4
  1507  00D1                     main@i:
  1508                           
  1509                           ; 2 bytes @ 0x31
  1510  00D1                     	ds	2
  1511  00D3                     main@SumPrime:
  1512                           
  1513                           ; 2 bytes @ 0x33
  1514  00D3                     	ds	2
  1515  00D5                     main@SumDigits:
  1516                           
  1517                           ; 2 bytes @ 0x35
  1518  00D5                     	ds	2
  1519  00D7                     main@number:
  1520                           
  1521                           ; 2 bytes @ 0x37
  1522  00D7                     	ds	2
  1523                           
  1524                           	psect	cstackCOMMON
  1525  0070                     __pcstackCOMMON:
  1526  0070                     ?_SYSTEM_Initialize:
  1527  0070                     ??_SYSTEM_Initialize:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_LCD_Initialize:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_LCDClear:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_OSCILLATOR_Initialize:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ??_OSCILLATOR_Initialize:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_WDT_Initialize:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ??_WDT_Initialize:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_LCDPutCmd:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_putch:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ??_putch:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?_main:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_PIN_MANAGER_Initialize:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ??_PIN_MANAGER_Initialize:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ?_LCDWriteNibble:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_LCDPutChar:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ??___aodiv:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ??___aomod:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?_fputc:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ?_strlen:	
  1582                           ; 2 bytes @ 0x0
  1583                           
  1584  0070                     ?___wmul:	
  1585                           ; 2 bytes @ 0x0
  1586                           
  1587  0070                     ?___awdiv:	
  1588                           ; 2 bytes @ 0x0
  1589                           
  1590  0070                     ?___awmod:	
  1591                           ; 2 bytes @ 0x0
  1592                           
  1593  0070                     LCDWriteNibble@rs:	
  1594                           ; 2 bytes @ 0x0
  1595                           
  1596  0070                     putch@c:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0070                     ___wmul@multiplier:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0070                     ___awdiv@divisor:	
  1603                           ; 2 bytes @ 0x0
  1604                           
  1605  0070                     ___awmod@divisor:	
  1606                           ; 2 bytes @ 0x0
  1607                           
  1608  0070                     fputc@c:	
  1609                           ; 2 bytes @ 0x0
  1610                           
  1611                           
  1612                           ; 2 bytes @ 0x0
  1613  0070                     	ds	1
  1614  0071                     ??_LCDWriteNibble:
  1615  0071                     ___aodiv@counter:	
  1616                           ; 1 bytes @ 0x1
  1617                           
  1618  0071                     ___aomod@counter:	
  1619                           ; 1 bytes @ 0x1
  1620                           
  1621                           
  1622                           ; 1 bytes @ 0x1
  1623  0071                     	ds	1
  1624  0072                     ??_strlen:
  1625  0072                     ___aodiv@sign:	
  1626                           ; 1 bytes @ 0x2
  1627                           
  1628  0072                     ___aomod@sign:	
  1629                           ; 1 bytes @ 0x2
  1630                           
  1631  0072                     fputc@fp:	
  1632                           ; 1 bytes @ 0x2
  1633                           
  1634  0072                     ___wmul@multiplicand:	
  1635                           ; 1 bytes @ 0x2
  1636                           
  1637  0072                     ___awdiv@dividend:	
  1638                           ; 2 bytes @ 0x2
  1639                           
  1640  0072                     ___awmod@dividend:	
  1641                           ; 2 bytes @ 0x2
  1642                           
  1643                           
  1644                           ; 2 bytes @ 0x2
  1645  0072                     	ds	1
  1646  0073                     ??_fputc:
  1647  0073                     ?_abs:	
  1648                           ; 1 bytes @ 0x3
  1649                           
  1650  0073                     LCDWriteNibble@ch:	
  1651                           ; 2 bytes @ 0x3
  1652                           
  1653  0073                     strlen@a:	
  1654                           ; 1 bytes @ 0x3
  1655                           
  1656  0073                     abs@a:	
  1657                           ; 1 bytes @ 0x3
  1658                           
  1659  0073                     ___aodiv@quotient:	
  1660                           ; 2 bytes @ 0x3
  1661                           
  1662                           
  1663                           ; 8 bytes @ 0x3
  1664  0073                     	ds	1
  1665  0074                     ??_LCDPutCmd:
  1666  0074                     ??_LCDPutChar:	
  1667                           ; 1 bytes @ 0x4
  1668                           
  1669  0074                     ??___wmul:	
  1670                           ; 1 bytes @ 0x4
  1671                           
  1672  0074                     ??___awdiv:	
  1673                           ; 1 bytes @ 0x4
  1674                           
  1675  0074                     ??___awmod:	
  1676                           ; 1 bytes @ 0x4
  1677                           
  1678  0074                     strlen@s:	
  1679                           ; 1 bytes @ 0x4
  1680                           
  1681  0074                     ___wmul@product:	
  1682                           ; 1 bytes @ 0x4
  1683                           
  1684                           
  1685                           ; 2 bytes @ 0x4
  1686  0074                     	ds	1
  1687  0075                     ??_abs:
  1688  0075                     ___awdiv@counter:	
  1689                           ; 1 bytes @ 0x5
  1690                           
  1691  0075                     ___awmod@counter:	
  1692                           ; 1 bytes @ 0x5
  1693                           
  1694                           
  1695                           ; 1 bytes @ 0x5
  1696  0075                     	ds	1
  1697  0076                     LCDPutChar@ch:
  1698  0076                     LCDPutCmd@ch:	
  1699                           ; 1 bytes @ 0x6
  1700                           
  1701  0076                     ___awdiv@sign:	
  1702                           ; 1 bytes @ 0x6
  1703                           
  1704  0076                     ___awmod@sign:	
  1705                           ; 1 bytes @ 0x6
  1706                           
  1707                           
  1708                           ; 1 bytes @ 0x6
  1709  0076                     	ds	1
  1710  0077                     ??_LCD_Initialize:
  1711  0077                     ?_LCDGoto:	
  1712                           ; 1 bytes @ 0x7
  1713                           
  1714  0077                     ?_LCDPutStr:	
  1715                           ; 1 bytes @ 0x7
  1716                           
  1717  0077                     LCDGoto@ln:	
  1718                           ; 1 bytes @ 0x7
  1719                           
  1720  0077                     LCDPutStr@str:	
  1721                           ; 1 bytes @ 0x7
  1722                           
  1723  0077                     ___awdiv@quotient:	
  1724                           ; 2 bytes @ 0x7
  1725                           
  1726                           
  1727                           ; 2 bytes @ 0x7
  1728  0077                     	ds	1
  1729  0078                     ??_LCDGoto:
  1730  0078                     ?_fputs:	
  1731                           ; 1 bytes @ 0x8
  1732                           
  1733  0078                     fputs@fp:	
  1734                           ; 2 bytes @ 0x8
  1735                           
  1736  0078                     _LCDGoto$226:	
  1737                           ; 1 bytes @ 0x8
  1738                           
  1739                           
  1740                           ; 2 bytes @ 0x8
  1741  0078                     	ds	1
  1742  0079                     ??_LCDPutStr:
  1743  0079                     ??_fputs:	
  1744                           ; 1 bytes @ 0x9
  1745                           
  1746  0079                     ?_sumdigits:	
  1747                           ; 1 bytes @ 0x9
  1748                           
  1749  0079                     sumdigits@number:	
  1750                           ; 2 bytes @ 0x9
  1751                           
  1752                           
  1753                           ; 2 bytes @ 0x9
  1754  0079                     	ds	1
  1755  007A                     LCDGoto@pos:
  1756                           
  1757                           ; 1 bytes @ 0xA
  1758  007A                     	ds	1
  1759  007B                     ??_sumdigits:
  1760                           
  1761                           ; 1 bytes @ 0xB
  1762  007B                     	ds	1
  1763  007C                     ??_pad:
  1764  007C                     LCDPutStr@i:	
  1765                           ; 1 bytes @ 0xC
  1766                           
  1767                           
  1768                           ; 1 bytes @ 0xC
  1769  007C                     	ds	1
  1770  007D                     ??_LCDClear:
  1771  007D                     ??_sprintf:	
  1772                           ; 1 bytes @ 0xD
  1773                           
  1774                           
  1775                           ; 1 bytes @ 0xD
  1776  007D                     	ds	1
  1777                           
  1778                           	psect	cstackBANK0
  1779  0020                     __pcstackBANK0:
  1780  0020                     ?___aodiv:
  1781  0020                     ?___aomod:	
  1782                           ; 8 bytes @ 0x0
  1783                           
  1784  0020                     fputs@c:	
  1785                           ; 8 bytes @ 0x0
  1786                           
  1787  0020                     sumdigits@digit:	
  1788                           ; 1 bytes @ 0x0
  1789                           
  1790  0020                     ___aodiv@divisor:	
  1791                           ; 2 bytes @ 0x0
  1792                           
  1793  0020                     ___aomod@divisor:	
  1794                           ; 8 bytes @ 0x0
  1795                           
  1796                           
  1797                           ; 8 bytes @ 0x0
  1798  0020                     	ds	1
  1799  0021                     fputs@i:
  1800                           
  1801                           ; 2 bytes @ 0x1
  1802  0021                     	ds	1
  1803  0022                     sumdigits@SumDigits:
  1804                           
  1805                           ; 2 bytes @ 0x2
  1806  0022                     	ds	1
  1807  0023                     fputs@s:
  1808                           
  1809                           ; 1 bytes @ 0x3
  1810  0023                     	ds	1
  1811  0024                     ?_pad:
  1812  0024                     pad@buf:	
  1813                           ; 2 bytes @ 0x4
  1814                           
  1815                           
  1816                           ; 1 bytes @ 0x4
  1817  0024                     	ds	1
  1818  0025                     pad@p:
  1819                           
  1820                           ; 2 bytes @ 0x5
  1821  0025                     	ds	2
  1822  0027                     pad@i:
  1823                           
  1824                           ; 2 bytes @ 0x7
  1825  0027                     	ds	1
  1826  0028                     ___aodiv@dividend:
  1827  0028                     ___aomod@dividend:	
  1828                           ; 8 bytes @ 0x8
  1829                           
  1830                           
  1831                           ; 8 bytes @ 0x8
  1832  0028                     	ds	1
  1833  0029                     pad@w:
  1834                           
  1835                           ; 2 bytes @ 0x9
  1836  0029                     	ds	2
  1837  002B                     pad@fp:
  1838                           
  1839                           ; 1 bytes @ 0xB
  1840  002B                     	ds	5
  1841  0030                     ?_dtoa:
  1842  0030                     dtoa@d:	
  1843                           ; 2 bytes @ 0x10
  1844                           
  1845                           
  1846                           ; 8 bytes @ 0x10
  1847  0030                     	ds	8
  1848  0038                     ??_dtoa:
  1849                           
  1850                           ; 1 bytes @ 0x18
  1851  0038                     	ds	3
  1852  003B                     _dtoa$615:
  1853                           
  1854                           ; 2 bytes @ 0x1B
  1855  003B                     	ds	2
  1856  003D                     dtoa@fp:
  1857                           
  1858                           ; 1 bytes @ 0x1D
  1859  003D                     	ds	1
  1860  003E                     dtoa@p:
  1861                           
  1862                           ; 2 bytes @ 0x1E
  1863  003E                     	ds	2
  1864  0040                     dtoa@w:
  1865                           
  1866                           ; 2 bytes @ 0x20
  1867  0040                     	ds	2
  1868  0042                     dtoa@s:
  1869                           
  1870                           ; 2 bytes @ 0x22
  1871  0042                     	ds	2
  1872  0044                     dtoa@n:
  1873                           
  1874                           ; 8 bytes @ 0x24
  1875  0044                     	ds	8
  1876  004C                     dtoa@i:
  1877                           
  1878                           ; 2 bytes @ 0x2C
  1879  004C                     	ds	2
  1880  004E                     ?_vfpfcnvrt:
  1881  004E                     vfpfcnvrt@fmt:	
  1882                           ; 2 bytes @ 0x2E
  1883                           
  1884                           
  1885                           ; 1 bytes @ 0x2E
  1886  004E                     	ds	1
  1887  004F                     vfpfcnvrt@ap:
  1888                           
  1889                           ; 1 bytes @ 0x2F
  1890  004F                     	ds	1
  1891  0050                     ??_vfpfcnvrt:
  1892                           
  1893                           ; 1 bytes @ 0x30
  1894  0050                     	ds	5
  1895  0055                     vfpfcnvrt@ll:
  1896                           
  1897                           ; 8 bytes @ 0x35
  1898  0055                     	ds	8
  1899  005D                     vfpfcnvrt@fp:
  1900                           
  1901                           ; 1 bytes @ 0x3D
  1902  005D                     	ds	1
  1903  005E                     ?_vfprintf:
  1904  005E                     vfprintf@fmt:	
  1905                           ; 2 bytes @ 0x3E
  1906                           
  1907                           
  1908                           ; 2 bytes @ 0x3E
  1909  005E                     	ds	2
  1910  0060                     vfprintf@ap:
  1911                           
  1912                           ; 1 bytes @ 0x40
  1913  0060                     	ds	1
  1914  0061                     ??_vfprintf:
  1915                           
  1916                           ; 1 bytes @ 0x41
  1917  0061                     	ds	2
  1918  0063                     vfprintf@fp:
  1919                           
  1920                           ; 1 bytes @ 0x43
  1921  0063                     	ds	1
  1922  0064                     vfprintf@cfmt:
  1923                           
  1924                           ; 2 bytes @ 0x44
  1925  0064                     	ds	2
  1926  0066                     ?_sprintf:
  1927  0066                     sprintf@fmt:	
  1928                           ; 2 bytes @ 0x46
  1929                           
  1930                           
  1931                           ; 2 bytes @ 0x46
  1932  0066                     	ds	6
  1933                           
  1934                           	psect	maintext
  1935  05E8                     __pmaintext:	
  1936 ;;
  1937 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1938 ;;
  1939 ;; *************** function _main *****************
  1940 ;; Defined at:
  1941 ;;		line 32 in file "main.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  check3          4    0        long 
  1946 ;;  check2          2    0        int 
  1947 ;;  check1          2    0        int 
  1948 ;;  printchar      10   23[BANK1 ] unsigned char [10]
  1949 ;;  bin             8   33[BANK1 ] int [4]
  1950 ;;  Binary          4   45[BANK1 ] long 
  1951 ;;  number          2   55[BANK1 ] int 
  1952 ;;  SumDigits       2   53[BANK1 ] int 
  1953 ;;  SumPrime        2   51[BANK1 ] int 
  1954 ;;  i               2   49[BANK1 ] int 
  1955 ;;  carnet          2   43[BANK1 ] int 
  1956 ;;  prime           2   41[BANK1 ] int 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : B1F/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1967 ;;      Locals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1968 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1969 ;;      Totals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1970 ;;Total ram usage:       48 bytes
  1971 ;; Hardware stack levels required when called:    8
  1972 ;; This function calls:
  1973 ;;		_LCDClear
  1974 ;;		_LCDGoto
  1975 ;;		_LCDPutStr
  1976 ;;		_LCD_Initialize
  1977 ;;		_SYSTEM_Initialize
  1978 ;;		___awdiv
  1979 ;;		___awmod
  1980 ;;		___wmul
  1981 ;;		_sprintf
  1982 ;;		_sumdigits
  1983 ;; This function is called by:
  1984 ;;		Startup code after reset
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           
  1989                           ;psect for function _main
  1990  05E8                     _main:
  1991  05E8                     l1919:	
  1992                           ;incstack = 0
  1993                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1994                           
  1995                           
  1996                           ;main.c: 36:     SYSTEM_Initialize();
  1997  05E8  318E  2637  3185   	fcall	_SYSTEM_Initialize
  1998                           
  1999                           ;main.c: 37:     LCD_Initialize();
  2000  05EB  318F  270A  3185   	fcall	_LCD_Initialize
  2001                           
  2002                           ;main.c: 41:     const int label =1;;main.c: 42:     int carnet;;main.c: 46:     switch 
      +                          (label)
  2003  05EE  2DFE               	goto	l1927
  2004  05EF                     l1921:
  2005                           
  2006                           ;main.c: 49:         {;main.c: 50:             carnet = last3digitsCarnet1;
  2007  05EF  30FF               	movlw	255
  2008  05F0  00CB               	movwf	main@carnet^(0+128)
  2009  05F1  3000               	movlw	0
  2010  05F2  00CC               	movwf	(main@carnet^(0+128)+1)
  2011                           
  2012                           ;main.c: 51:             break;
  2013  05F3  2E14               	goto	l1929
  2014  05F4                     l1923:
  2015                           
  2016                           ;main.c: 54:         {;main.c: 55:             carnet = last3digitsCarnet2;
  2017  05F4  30ED               	movlw	237
  2018  05F5  00CB               	movwf	main@carnet^(0+128)
  2019  05F6  3001               	movlw	1
  2020  05F7  00CC               	movwf	(main@carnet^(0+128)+1)
  2021                           
  2022                           ;main.c: 56:             break;
  2023  05F8  2E14               	goto	l1929
  2024  05F9                     l1925:
  2025                           
  2026                           ;main.c: 59:         {;main.c: 60:             carnet = last3digitsCarnet3;
  2027  05F9  30A4               	movlw	164
  2028  05FA  00CB               	movwf	main@carnet^(0+128)
  2029  05FB  3001               	movlw	1
  2030  05FC  00CC               	movwf	(main@carnet^(0+128)+1)
  2031                           
  2032                           ;main.c: 61:         };main.c: 62:     }
  2033  05FD  2E14               	goto	l1929
  2034  05FE                     l1927:
  2035  05FE  3000               	movlw	low (main@label| (0+32768))
  2036  05FF  0084               	movwf	4
  2037  0600  3090               	movlw	high (main@label| (0+32768))
  2038  0601  0085               	movwf	5
  2039  0602  3F00               	moviw [0]fsr0
  2040  0603  0021               	movlb	1	; select bank1
  2041  0604  00A9               	movwf	??_main^(0+128)
  2042  0605  3F01               	moviw [1]fsr0
  2043  0606  00AA               	movwf	(??_main^(0+128)+1)
  2044                           
  2045                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2046                           ; Switch size 1, requested type "simple"
  2047                           ; Number of cases is 1, Range of values is 0 to 0
  2048                           ; switch strategies available:
  2049                           ; Name         Instructions Cycles
  2050                           ; simple_byte            4     3 (average)
  2051                           ; direct_byte            8     6 (fixed)
  2052                           ; jumptable            260     6 (fixed)
  2053                           ;	Chosen strategy is simple_byte
  2054  0607  082A               	movf	(??_main+1)^(0+128),w
  2055  0608  3A00               	xorlw	0	; case 0
  2056  0609  1903               	skipnz
  2057  060A  2E0C               	goto	l2065
  2058  060B  2DF9               	goto	l1925
  2059  060C                     l2065:
  2060                           
  2061                           ; Switch size 1, requested type "simple"
  2062                           ; Number of cases is 2, Range of values is 1 to 2
  2063                           ; switch strategies available:
  2064                           ; Name         Instructions Cycles
  2065                           ; simple_byte            7     4 (average)
  2066                           ; direct_byte           13     9 (fixed)
  2067                           ; jumptable            263     9 (fixed)
  2068                           ;	Chosen strategy is simple_byte
  2069  060C  0829               	movf	??_main^(0+128),w
  2070  060D  3A01               	xorlw	1	; case 1
  2071  060E  1903               	skipnz
  2072  060F  2DEF               	goto	l1921
  2073  0610  3A03               	xorlw	3	; case 2
  2074  0611  1903               	skipnz
  2075  0612  2DF4               	goto	l1923
  2076  0613  2DF9               	goto	l1925
  2077  0614                     l1929:
  2078                           
  2079                           ;main.c: 69:     int SumPrime = 0;
  2080  0614  01D3               	clrf	main@SumPrime^(0+128)
  2081  0615  01D4               	clrf	(main@SumPrime+1)^(0+128)
  2082  0616                     l1931:
  2083                           
  2084                           ;main.c: 73:     LCDGoto(0,0);
  2085  0616  01F7               	clrf	LCDGoto@ln
  2086  0617  3000               	movlw	0
  2087  0618  318F  2751  3185   	fcall	_LCDGoto
  2088  061B                     l1933:
  2089                           
  2090                           ;main.c: 74:     LCDPutStr("Calculando...");
  2091  061B  3013               	movlw	low (STR_1| (0+32768))
  2092  061C  00F7               	movwf	LCDPutStr@str
  2093  061D  3090               	movlw	high (STR_1| (0+32768))
  2094  061E  00F8               	movwf	LCDPutStr@str+1
  2095  061F  3180  2004  3185   	fcall	_LCDPutStr
  2096  0622                     l1935:
  2097                           
  2098                           ;main.c: 78:     int i,number=2, prime;
  2099  0622  3002               	movlw	2
  2100  0623  0021               	movlb	1	; select bank1
  2101  0624  00D7               	movwf	main@number^(0+128)
  2102  0625  3000               	movlw	0
  2103  0626  00D8               	movwf	(main@number^(0+128)+1)
  2104                           
  2105                           ;main.c: 79:     char printchar[10];;main.c: 83:     while(number<=carnet)
  2106  0627  2E78               	goto	l1953
  2107  0628                     l1937:
  2108                           
  2109                           ;main.c: 84:     {;main.c: 85:       prime = 1;
  2110  0628  3001               	movlw	1
  2111  0629  0021               	movlb	1	; select bank1
  2112  062A  00C9               	movwf	main@prime^(0+128)
  2113  062B  3000               	movlw	0
  2114  062C  00CA               	movwf	(main@prime^(0+128)+1)
  2115                           
  2116                           ;main.c: 86:       for(i=2;i<=number/2;i++)
  2117  062D  3002               	movlw	2
  2118  062E  00D1               	movwf	main@i^(0+128)
  2119  062F  3000               	movlw	0
  2120  0630  00D2               	movwf	(main@i^(0+128)+1)
  2121  0631  2E4D               	goto	l1945
  2122  0632                     l1939:
  2123                           
  2124                           ;main.c: 87:       {;main.c: 88:         if(number%i==0)
  2125  0632  0021               	movlb	1	; select bank1
  2126  0633  0852               	movf	(main@i+1)^(0+128),w
  2127  0634  00F1               	movwf	___awmod@divisor+1
  2128  0635  0851               	movf	main@i^(0+128),w
  2129  0636  00F0               	movwf	___awmod@divisor
  2130  0637  0858               	movf	(main@number+1)^(0+128),w
  2131  0638  00F3               	movwf	___awmod@dividend+1
  2132  0639  0857               	movf	main@number^(0+128),w
  2133  063A  00F2               	movwf	___awmod@dividend
  2134  063B  3180  20B5  3185   	fcall	___awmod
  2135  063E  0870               	movf	?___awmod,w
  2136  063F  0471               	iorwf	?___awmod+1,w
  2137  0640  1D03               	btfss	3,2
  2138  0641  2E43               	goto	u1761
  2139  0642  2E44               	goto	u1760
  2140  0643                     u1761:
  2141  0643  2E48               	goto	l1943
  2142  0644                     u1760:
  2143  0644                     l1941:
  2144                           
  2145                           ;main.c: 89:         {;main.c: 90:           prime = 0;
  2146  0644  0021               	movlb	1	; select bank1
  2147  0645  01C9               	clrf	main@prime^(0+128)
  2148  0646  01CA               	clrf	(main@prime+1)^(0+128)
  2149                           
  2150                           ;main.c: 91:           break;
  2151  0647  2E67               	goto	l1947
  2152  0648                     l1943:
  2153                           
  2154                           ;main.c: 93:       }
  2155  0648  3001               	movlw	1
  2156  0649  0021               	movlb	1	; select bank1
  2157  064A  07D1               	addwf	main@i^(0+128),f
  2158  064B  3000               	movlw	0
  2159  064C  3DD2               	addwfc	(main@i+1)^(0+128),f
  2160  064D                     l1945:
  2161  064D  3002               	movlw	2
  2162  064E  00F0               	movwf	___awdiv@divisor
  2163  064F  3000               	movlw	0
  2164  0650  00F1               	movwf	___awdiv@divisor+1
  2165  0651  0858               	movf	(main@number+1)^(0+128),w
  2166  0652  00F3               	movwf	___awdiv@dividend+1
  2167  0653  0857               	movf	main@number^(0+128),w
  2168  0654  00F2               	movwf	___awdiv@dividend
  2169  0655  3181  215E  3185   	fcall	___awdiv
  2170  0658  0871               	movf	?___awdiv+1,w
  2171  0659  3A80               	xorlw	128
  2172  065A  0021               	movlb	1	; select bank1
  2173  065B  00A9               	movwf	??_main^(0+128)
  2174  065C  0852               	movf	(main@i+1)^(0+128),w
  2175  065D  3A80               	xorlw	128
  2176  065E  0229               	subwf	??_main^(0+128),w
  2177  065F  1D03               	skipz
  2178  0660  2E63               	goto	u1775
  2179  0661  0851               	movf	main@i^(0+128),w
  2180  0662  0270               	subwf	?___awdiv,w
  2181  0663                     u1775:
  2182  0663  1803               	skipnc
  2183  0664  2E66               	goto	u1771
  2184  0665  2E67               	goto	u1770
  2185  0666                     u1771:
  2186  0666  2E32               	goto	l1939
  2187  0667                     u1770:
  2188  0667                     l1947:
  2189                           
  2190                           ;main.c: 94:       if(prime==1)
  2191  0667  0021               	movlb	1	; select bank1
  2192  0668  0349               	decf	main@prime^(0+128),w
  2193  0669  044A               	iorwf	(main@prime+1)^(0+128),w
  2194  066A  1D03               	btfss	3,2
  2195  066B  2E6D               	goto	u1781
  2196  066C  2E6E               	goto	u1780
  2197  066D                     u1781:
  2198  066D  2E74               	goto	l1951
  2199  066E                     u1780:
  2200  066E                     l1949:
  2201                           
  2202                           ;main.c: 95:       {;main.c: 96:         SumPrime = SumPrime+number;
  2203  066E  0857               	movf	main@number^(0+128),w
  2204  066F  0753               	addwf	main@SumPrime^(0+128),w
  2205  0670  00D3               	movwf	main@SumPrime^(0+128)
  2206  0671  0858               	movf	(main@number+1)^(0+128),w
  2207  0672  3D54               	addwfc	(main@SumPrime+1)^(0+128),w
  2208  0673  00D4               	movwf	(main@SumPrime+1)^(0+128)
  2209  0674                     l1951:
  2210                           
  2211                           ;main.c: 98:       ++number;
  2212  0674  3001               	movlw	1
  2213  0675  07D7               	addwf	main@number^(0+128),f
  2214  0676  3000               	movlw	0
  2215  0677  3DD8               	addwfc	(main@number+1)^(0+128),f
  2216  0678                     l1953:
  2217                           
  2218                           ;main.c: 83:     while(number<=carnet)
  2219  0678  084C               	movf	(main@carnet+1)^(0+128),w
  2220  0679  3A80               	xorlw	128
  2221  067A  00A9               	movwf	??_main^(0+128)
  2222  067B  0858               	movf	(main@number+1)^(0+128),w
  2223  067C  3A80               	xorlw	128
  2224  067D  0229               	subwf	??_main^(0+128),w
  2225  067E  1D03               	skipz
  2226  067F  2E82               	goto	u1795
  2227  0680  0857               	movf	main@number^(0+128),w
  2228  0681  024B               	subwf	main@carnet^(0+128),w
  2229  0682                     u1795:
  2230  0682  1803               	skipnc
  2231  0683  2E85               	goto	u1791
  2232  0684  2E86               	goto	u1790
  2233  0685                     u1791:
  2234  0685  2E28               	goto	l1937
  2235  0686                     u1790:
  2236  0686                     l1955:
  2237                           
  2238                           ;main.c: 102:     LCDClear();
  2239  0686  318E  2641  3185   	fcall	_LCDClear
  2240  0689                     l1957:
  2241                           
  2242                           ;main.c: 103:     LCDGoto(0,0);
  2243  0689  01F7               	clrf	LCDGoto@ln
  2244  068A  3000               	movlw	0
  2245  068B  318F  2751  3185   	fcall	_LCDGoto
  2246  068E                     l1959:
  2247                           
  2248                           ;main.c: 104:     LCDPutStr("SumPrime=");
  2249  068E  302C               	movlw	low (STR_2| (0+32768))
  2250  068F  00F7               	movwf	LCDPutStr@str
  2251  0690  3090               	movlw	high (STR_2| (0+32768))
  2252  0691  00F8               	movwf	LCDPutStr@str+1
  2253  0692  3180  2004  3185   	fcall	_LCDPutStr
  2254  0695                     l1961:
  2255                           
  2256                           ;main.c: 105:     sprintf(printchar,"%d",SumPrime);
  2257  0695  303E               	movlw	low (STR_3| (0+32768))
  2258  0696  0020               	movlb	0	; select bank0
  2259  0697  00E6               	movwf	sprintf@fmt
  2260  0698  3090               	movlw	high (STR_3| (0+32768))
  2261  0699  00E7               	movwf	sprintf@fmt+1
  2262  069A  0021               	movlb	1	; select bank1
  2263  069B  0854               	movf	(main@SumPrime+1)^(0+128),w
  2264  069C  0020               	movlb	0	; select bank0
  2265  069D  00E9               	movwf	?_sprintf+3
  2266  069E  0021               	movlb	1	; select bank1
  2267  069F  0853               	movf	main@SumPrime^(0+128),w
  2268  06A0  0020               	movlb	0	; select bank0
  2269  06A1  00E8               	movwf	?_sprintf+2
  2270  06A2  30B7               	movlw	(low (main@printchar| 0))& (0+255)
  2271  06A3  318F  272D  3185   	fcall	_sprintf
  2272  06A6                     l1963:
  2273                           
  2274                           ;main.c: 106:     LCDGoto(0,1);
  2275  06A6  01F7               	clrf	LCDGoto@ln
  2276  06A7  0AF7               	incf	LCDGoto@ln,f
  2277  06A8  3000               	movlw	0
  2278  06A9  318F  2751  3185   	fcall	_LCDGoto
  2279  06AC                     l1965:
  2280                           
  2281                           ;main.c: 107:     LCDPutStr(printchar);
  2282  06AC  30B7               	movlw	low main@printchar
  2283  06AD  00F7               	movwf	LCDPutStr@str
  2284  06AE  3000               	movlw	high main@printchar
  2285  06AF  00F8               	movwf	LCDPutStr@str+1
  2286  06B0  3180  2004  3185   	fcall	_LCDPutStr
  2287  06B3                     l1967:
  2288                           
  2289                           ;main.c: 108:     _delay((unsigned long)((5000)*(500000/4000.0)));
  2290  06B3  3004               	movlw	4
  2291  06B4  0021               	movlb	1	; select bank1
  2292  06B5  00AA               	movwf	(??_main^(0+128)+1)
  2293  06B6  302C               	movlw	44
  2294  06B7  00A9               	movwf	??_main^(0+128)
  2295  06B8  30AB               	movlw	171
  2296  06B9                     u1837:
  2297  06B9  0B89               	decfsz	9,f
  2298  06BA  2EB9               	goto	u1837
  2299  06BB  0BA9               	decfsz	??_main^(0+128),f
  2300  06BC  2EB9               	goto	u1837
  2301  06BD  0BAA               	decfsz	(??_main^(0+128)+1),f
  2302  06BE  2EB9               	goto	u1837
  2303  06BF  3200               	nop2
  2304  06C0                     l1969:
  2305                           
  2306                           ;main.c: 109:     LCDClear();
  2307  06C0  318E  2641  3185   	fcall	_LCDClear
  2308  06C3                     l1971:
  2309  06C3                     l1973:
  2310                           
  2311                           ;main.c: 120:     LCDGoto(0,0);
  2312  06C3  01F7               	clrf	LCDGoto@ln
  2313  06C4  3000               	movlw	0
  2314  06C5  318F  2751  3185   	fcall	_LCDGoto
  2315  06C8                     l1975:
  2316                           
  2317                           ;main.c: 121:     LCDPutStr("sumDigits=");
  2318  06C8  3021               	movlw	low (STR_4| (0+32768))
  2319  06C9  00F7               	movwf	LCDPutStr@str
  2320  06CA  3090               	movlw	high (STR_4| (0+32768))
  2321  06CB  00F8               	movwf	LCDPutStr@str+1
  2322  06CC  3180  2004  3185   	fcall	_LCDPutStr
  2323  06CF                     l1977:
  2324                           
  2325                           ;main.c: 125:     number=SumPrime;
  2326  06CF  0021               	movlb	1	; select bank1
  2327  06D0  0854               	movf	(main@SumPrime+1)^(0+128),w
  2328  06D1  00D8               	movwf	(main@number+1)^(0+128)
  2329  06D2  0853               	movf	main@SumPrime^(0+128),w
  2330  06D3  00D7               	movwf	main@number^(0+128)
  2331  06D4                     l1979:
  2332                           
  2333                           ;main.c: 127:     {;main.c: 128:       SumDigits = sumdigits(number);
  2334  06D4  0021               	movlb	1	; select bank1
  2335  06D5  0858               	movf	(main@number+1)^(0+128),w
  2336  06D6  00FA               	movwf	sumdigits@number+1
  2337  06D7  0857               	movf	main@number^(0+128),w
  2338  06D8  00F9               	movwf	sumdigits@number
  2339  06D9  3180  202A  3185   	fcall	_sumdigits
  2340  06DC  087A               	movf	?_sumdigits+1,w
  2341  06DD  0021               	movlb	1	; select bank1
  2342  06DE  00D6               	movwf	(main@SumDigits+1)^(0+128)
  2343  06DF  0879               	movf	?_sumdigits,w
  2344  06E0  00D5               	movwf	main@SumDigits^(0+128)
  2345  06E1                     l1981:
  2346                           
  2347                           ;main.c: 129:       number = SumDigits;
  2348  06E1  0856               	movf	(main@SumDigits+1)^(0+128),w
  2349  06E2  00D8               	movwf	(main@number+1)^(0+128)
  2350  06E3  0855               	movf	main@SumDigits^(0+128),w
  2351  06E4  00D7               	movwf	main@number^(0+128)
  2352  06E5                     l1983:
  2353                           
  2354                           ;main.c: 130:     } while (SumDigits>10);
  2355  06E5  0856               	movf	(main@SumDigits+1)^(0+128),w
  2356  06E6  3A80               	xorlw	128
  2357  06E7  00A9               	movwf	??_main^(0+128)
  2358  06E8  3080               	movlw	128
  2359  06E9  0229               	subwf	??_main^(0+128),w
  2360  06EA  1D03               	skipz
  2361  06EB  2EEE               	goto	u1805
  2362  06EC  300B               	movlw	11
  2363  06ED  0255               	subwf	main@SumDigits^(0+128),w
  2364  06EE                     u1805:
  2365  06EE  1803               	skipnc
  2366  06EF  2EF1               	goto	u1801
  2367  06F0  2EF2               	goto	u1800
  2368  06F1                     u1801:
  2369  06F1  2ED4               	goto	l1979
  2370  06F2                     u1800:
  2371  06F2                     l1985:
  2372                           
  2373                           ;main.c: 134:     sprintf(printchar,"%d",SumDigits);
  2374  06F2  303E               	movlw	low (STR_3| (0+32768))
  2375  06F3  0020               	movlb	0	; select bank0
  2376  06F4  00E6               	movwf	sprintf@fmt
  2377  06F5  3090               	movlw	high (STR_3| (0+32768))
  2378  06F6  00E7               	movwf	sprintf@fmt+1
  2379  06F7  0021               	movlb	1	; select bank1
  2380  06F8  0856               	movf	(main@SumDigits+1)^(0+128),w
  2381  06F9  0020               	movlb	0	; select bank0
  2382  06FA  00E9               	movwf	?_sprintf+3
  2383  06FB  0021               	movlb	1	; select bank1
  2384  06FC  0855               	movf	main@SumDigits^(0+128),w
  2385  06FD  0020               	movlb	0	; select bank0
  2386  06FE  00E8               	movwf	?_sprintf+2
  2387  06FF  30B7               	movlw	(low (main@printchar| 0))& (0+255)
  2388  0700  318F  272D  3185   	fcall	_sprintf
  2389  0703                     l1987:
  2390                           
  2391                           ;main.c: 135:     LCDGoto(0,1);
  2392  0703  01F7               	clrf	LCDGoto@ln
  2393  0704  0AF7               	incf	LCDGoto@ln,f
  2394  0705  3000               	movlw	0
  2395  0706  318F  2751  3185   	fcall	_LCDGoto
  2396  0709                     l1989:
  2397                           
  2398                           ;main.c: 136:     LCDPutStr(printchar);
  2399  0709  30B7               	movlw	low main@printchar
  2400  070A  00F7               	movwf	LCDPutStr@str
  2401  070B  3000               	movlw	high main@printchar
  2402  070C  00F8               	movwf	LCDPutStr@str+1
  2403  070D  3180  2004  3185   	fcall	_LCDPutStr
  2404  0710                     l1991:
  2405                           
  2406                           ;main.c: 137:     _delay((unsigned long)((5000)*(500000/4000.0)));
  2407  0710  3004               	movlw	4
  2408  0711  0021               	movlb	1	; select bank1
  2409  0712  00AA               	movwf	(??_main^(0+128)+1)
  2410  0713  302C               	movlw	44
  2411  0714  00A9               	movwf	??_main^(0+128)
  2412  0715  30AB               	movlw	171
  2413  0716                     u1847:
  2414  0716  0B89               	decfsz	9,f
  2415  0717  2F16               	goto	u1847
  2416  0718  0BA9               	decfsz	??_main^(0+128),f
  2417  0719  2F16               	goto	u1847
  2418  071A  0BAA               	decfsz	(??_main^(0+128)+1),f
  2419  071B  2F16               	goto	u1847
  2420  071C  3200               	nop2
  2421  071D                     l1993:
  2422                           
  2423                           ;main.c: 138:     LCDClear();
  2424  071D  318E  2641  3185   	fcall	_LCDClear
  2425  0720                     l1995:
  2426                           
  2427                           ;main.c: 150:     LCDGoto(0,0);
  2428  0720  01F7               	clrf	LCDGoto@ln
  2429  0721  3000               	movlw	0
  2430  0722  318F  2751  3185   	fcall	_LCDGoto
  2431  0725                     l1997:
  2432                           
  2433                           ;main.c: 151:     LCDPutStr("Binary=");
  2434  0725  3036               	movlw	low (STR_6| (0+32768))
  2435  0726  00F7               	movwf	LCDPutStr@str
  2436  0727  3090               	movlw	high (STR_6| (0+32768))
  2437  0728  00F8               	movwf	LCDPutStr@str+1
  2438  0729  3180  2004  3185   	fcall	_LCDPutStr
  2439  072C                     l1999:
  2440  072C                     l2001:
  2441                           
  2442                           ;main.c: 159:     int bin[4]={0,0,0,0};
  2443  072C  30C1               	movlw	low main@bin
  2444  072D  0086               	movwf	6
  2445  072E  3000               	movlw	high main@bin
  2446  072F  0087               	movwf	7
  2447  0730  3008               	movlw	8
  2448  0731  0021               	movlb	1	; select bank1
  2449  0732  00A9               	movwf	??_main^(0+128)
  2450  0733  3000               	movlw	0
  2451  0734                     u1810:
  2452  0734  001E               	movwi fsr1++
  2453  0735  0BA9               	decfsz	??_main^(0+128),f
  2454  0736  2F34               	goto	u1810
  2455  0737                     l2003:
  2456                           
  2457                           ;main.c: 160:     i=0;
  2458  0737  01D1               	clrf	main@i^(0+128)
  2459  0738  01D2               	clrf	(main@i+1)^(0+128)
  2460  0739                     l2005:
  2461                           
  2462                           ;main.c: 161:     number=SumDigits;
  2463  0739  0856               	movf	(main@SumDigits+1)^(0+128),w
  2464  073A  00D8               	movwf	(main@number+1)^(0+128)
  2465  073B  0855               	movf	main@SumDigits^(0+128),w
  2466  073C  00D7               	movwf	main@number^(0+128)
  2467                           
  2468                           ;main.c: 163:       while (number>0)
  2469  073D  2F61               	goto	l2013
  2470  073E                     l2007:
  2471                           
  2472                           ;main.c: 164:       {;main.c: 165:         bin[i] = number%2;
  2473  073E  3001               	movlw	1
  2474  073F  0021               	movlb	1	; select bank1
  2475  0740  0557               	andwf	main@number^(0+128),w
  2476  0741  00A9               	movwf	??_main^(0+128)
  2477  0742  3000               	movlw	0
  2478  0743  0558               	andwf	(main@number+1)^(0+128),w
  2479  0744  00AA               	movwf	(??_main+1)^(0+128)
  2480  0745  3551               	lslf	main@i^(0+128),w
  2481  0746  3EC1               	addlw	(low (main@bin| 0))& (0+255)
  2482  0747  0086               	movwf	6
  2483  0748  0187               	clrf	7
  2484  0749  0829               	movf	??_main^(0+128),w
  2485  074A  3FC0               	movwi [0]fsr1
  2486  074B  082A               	movf	(??_main+1)^(0+128),w
  2487  074C  3FC1               	movwi [1]fsr1
  2488  074D                     l2009:
  2489                           
  2490                           ;main.c: 166:         number = number/2;
  2491  074D  3002               	movlw	2
  2492  074E  00F0               	movwf	___awdiv@divisor
  2493  074F  3000               	movlw	0
  2494  0750  00F1               	movwf	___awdiv@divisor+1
  2495  0751  0858               	movf	(main@number+1)^(0+128),w
  2496  0752  00F3               	movwf	___awdiv@dividend+1
  2497  0753  0857               	movf	main@number^(0+128),w
  2498  0754  00F2               	movwf	___awdiv@dividend
  2499  0755  3181  215E  3185   	fcall	___awdiv
  2500  0758  0871               	movf	?___awdiv+1,w
  2501  0759  0021               	movlb	1	; select bank1
  2502  075A  00D8               	movwf	(main@number+1)^(0+128)
  2503  075B  0870               	movf	?___awdiv,w
  2504  075C  00D7               	movwf	main@number^(0+128)
  2505  075D                     l2011:
  2506                           
  2507                           ;main.c: 167:         i++;
  2508  075D  3001               	movlw	1
  2509  075E  07D1               	addwf	main@i^(0+128),f
  2510  075F  3000               	movlw	0
  2511  0760  3DD2               	addwfc	(main@i+1)^(0+128),f
  2512  0761                     l2013:
  2513                           
  2514                           ;main.c: 163:       while (number>0)
  2515  0761  0858               	movf	(main@number+1)^(0+128),w
  2516  0762  3A80               	xorlw	128
  2517  0763  00A9               	movwf	??_main^(0+128)
  2518  0764  3080               	movlw	128
  2519  0765  0229               	subwf	??_main^(0+128),w
  2520  0766  1D03               	skipz
  2521  0767  2F6A               	goto	u1825
  2522  0768  3001               	movlw	1
  2523  0769  0257               	subwf	main@number^(0+128),w
  2524  076A                     u1825:
  2525  076A  1803               	skipnc
  2526  076B  2F6D               	goto	u1821
  2527  076C  2F6E               	goto	u1820
  2528  076D                     u1821:
  2529  076D  2F3E               	goto	l2007
  2530  076E                     u1820:
  2531  076E                     l2015:
  2532                           
  2533                           ;main.c: 169:     Binary= (1000*bin[3])+(100*bin[2])+(10*bin[1])+(1*bin[0]);
  2534  076E  0021               	movlb	1	; select bank1
  2535  076F  0848               	movf	((main@bin+1)^(0+128)+6),w
  2536  0770  00F1               	movwf	___wmul@multiplier+1
  2537  0771  0847               	movf	(main@bin^(0+128)+6),w
  2538  0772  00F0               	movwf	___wmul@multiplier
  2539  0773  30E8               	movlw	232
  2540  0774  00F2               	movwf	___wmul@multiplicand
  2541  0775  3003               	movlw	3
  2542  0776  00F3               	movwf	___wmul@multiplicand+1
  2543  0777  318E  26CB  3185   	fcall	___wmul
  2544  077A  0870               	movf	?___wmul,w
  2545  077B  0021               	movlb	1	; select bank1
  2546  077C  00A9               	movwf	??_main^(0+128)
  2547  077D  0871               	movf	?___wmul+1,w
  2548  077E  00AA               	movwf	(??_main^(0+128)+1)
  2549  077F  0846               	movf	((main@bin+1)^(0+128)+4),w
  2550  0780  00F1               	movwf	___wmul@multiplier+1
  2551  0781  0845               	movf	(main@bin^(0+128)+4),w
  2552  0782  00F0               	movwf	___wmul@multiplier
  2553  0783  3064               	movlw	100
  2554  0784  00F2               	movwf	___wmul@multiplicand
  2555  0785  3000               	movlw	0
  2556  0786  00F3               	movwf	___wmul@multiplicand+1
  2557  0787  318E  26CB  3185   	fcall	___wmul
  2558  078A  0870               	movf	?___wmul,w
  2559  078B  0021               	movlb	1	; select bank1
  2560  078C  0729               	addwf	??_main^(0+128),w
  2561  078D  00AB               	movwf	(??_main+2)^(0+128)
  2562  078E  0871               	movf	?___wmul+1,w
  2563  078F  3D2A               	addwfc	(??_main+1)^(0+128),w
  2564  0790  00AC               	movwf	(??_main+3)^(0+128)
  2565  0791  0844               	movf	((main@bin+1)^(0+128)+2),w
  2566  0792  00F1               	movwf	___wmul@multiplier+1
  2567  0793  0843               	movf	(main@bin^(0+128)+2),w
  2568  0794  00F0               	movwf	___wmul@multiplier
  2569  0795  300A               	movlw	10
  2570  0796  00F2               	movwf	___wmul@multiplicand
  2571  0797  3000               	movlw	0
  2572  0798  00F3               	movwf	___wmul@multiplicand+1
  2573  0799  318E  26CB  3185   	fcall	___wmul
  2574  079C  0870               	movf	?___wmul,w
  2575  079D  0021               	movlb	1	; select bank1
  2576  079E  072B               	addwf	(??_main+2)^(0+128),w
  2577  079F  00AD               	movwf	(??_main+4)^(0+128)
  2578  07A0  0871               	movf	?___wmul+1,w
  2579  07A1  3D2C               	addwfc	(??_main+3)^(0+128),w
  2580  07A2  00AE               	movwf	(??_main+5)^(0+128)
  2581  07A3  0841               	movf	main@bin^(0+128),w
  2582  07A4  072D               	addwf	(??_main+4)^(0+128),w
  2583  07A5  00CD               	movwf	main@Binary^(0+128)
  2584  07A6  0842               	movf	(main@bin+1)^(0+128),w
  2585  07A7  3D2E               	addwfc	(??_main+5)^(0+128),w
  2586  07A8  00CE               	movwf	(main@Binary+1)^(0+128)
  2587  07A9  01CF               	clrf	(main@Binary^(0+128)+2)
  2588  07AA  1BCE               	btfsc	(main@Binary^(0+128)+1),7
  2589  07AB  03CF               	decf	(main@Binary+2)^(0+128),f
  2590  07AC  084F               	movf	(main@Binary^(0+128)+2),w
  2591  07AD  00D0               	movwf	(main@Binary+3)^(0+128)
  2592  07AE                     l2017:
  2593                           
  2594                           ;main.c: 174:     sprintf(printchar,"%d",Binary);
  2595  07AE  303E               	movlw	low (STR_3| (0+32768))
  2596  07AF  0020               	movlb	0	; select bank0
  2597  07B0  00E6               	movwf	sprintf@fmt
  2598  07B1  3090               	movlw	high (STR_3| (0+32768))
  2599  07B2  00E7               	movwf	sprintf@fmt+1
  2600  07B3  0021               	movlb	1	; select bank1
  2601  07B4  0850               	movf	(main@Binary+3)^(0+128),w
  2602  07B5  0020               	movlb	0	; select bank0
  2603  07B6  00EB               	movwf	?_sprintf+5
  2604  07B7  0021               	movlb	1	; select bank1
  2605  07B8  084F               	movf	(main@Binary+2)^(0+128),w
  2606  07B9  0020               	movlb	0	; select bank0
  2607  07BA  00EA               	movwf	?_sprintf+4
  2608  07BB  0021               	movlb	1	; select bank1
  2609  07BC  084E               	movf	(main@Binary+1)^(0+128),w
  2610  07BD  0020               	movlb	0	; select bank0
  2611  07BE  00E9               	movwf	?_sprintf+3
  2612  07BF  0021               	movlb	1	; select bank1
  2613  07C0  084D               	movf	main@Binary^(0+128),w
  2614  07C1  0020               	movlb	0	; select bank0
  2615  07C2  00E8               	movwf	?_sprintf+2
  2616  07C3  30B7               	movlw	(low (main@printchar| 0))& (0+255)
  2617  07C4  318F  272D  3185   	fcall	_sprintf
  2618  07C7                     l2019:
  2619                           
  2620                           ;main.c: 175:     LCDGoto(0,1);
  2621  07C7  01F7               	clrf	LCDGoto@ln
  2622  07C8  0AF7               	incf	LCDGoto@ln,f
  2623  07C9  3000               	movlw	0
  2624  07CA  318F  2751  3185   	fcall	_LCDGoto
  2625  07CD                     l2021:
  2626                           
  2627                           ;main.c: 176:     LCDPutStr(printchar);
  2628  07CD  30B7               	movlw	low main@printchar
  2629  07CE  00F7               	movwf	LCDPutStr@str
  2630  07CF  3000               	movlw	high main@printchar
  2631  07D0  00F8               	movwf	LCDPutStr@str+1
  2632  07D1  3180  2004  3185   	fcall	_LCDPutStr
  2633  07D4                     l2023:
  2634  07D4                     l2025:
  2635  07D4                     l2027:
  2636  07D4  2FD4               	goto	l2023
  2637  07D5  3180  2802         	ljmp	start
  2638  07D7                     __end_of_main:
  2639                           
  2640                           	psect	text1
  2641  002A                     __ptext1:	
  2642 ;; *************** function _sumdigits *****************
  2643 ;; Defined at:
  2644 ;;		line 18 in file "main.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  number          2    9[COMMON] int 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  SumDigits       2    2[BANK0 ] int 
  2649 ;;  digit           2    0[BANK0 ] int 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  2    9[COMMON] int 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0, pclath, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2660 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2662 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2663 ;;Total ram usage:        7 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    1
  2666 ;; This function calls:
  2667 ;;		___awdiv
  2668 ;;		___awmod
  2669 ;; This function is called by:
  2670 ;;		_main
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           
  2675                           ;psect for function _sumdigits
  2676  002A                     _sumdigits:
  2677  002A                     l1855:	
  2678                           ;incstack = 0
  2679                           ; Regs used in _sumdigits: [wreg+status,2+status,0+pclath+cstack]
  2680                           
  2681                           
  2682                           ;main.c: 18: int sumdigits(int number);main.c: 19: {;main.c: 20:   int SumDigits = 0,dig
      +                          it;
  2683  002A  0020               	movlb	0	; select bank0
  2684  002B  01A2               	clrf	sumdigits@SumDigits
  2685  002C  01A3               	clrf	sumdigits@SumDigits+1
  2686                           
  2687                           ;main.c: 21:   while (number>0)
  2688  002D  2853               	goto	l1863
  2689  002E                     l1857:
  2690                           
  2691                           ;main.c: 22:   {;main.c: 23:     digit = number%10;
  2692  002E  300A               	movlw	10
  2693  002F  00F0               	movwf	___awmod@divisor
  2694  0030  3000               	movlw	0
  2695  0031  00F1               	movwf	___awmod@divisor+1
  2696  0032  087A               	movf	sumdigits@number+1,w
  2697  0033  00F3               	movwf	___awmod@dividend+1
  2698  0034  0879               	movf	sumdigits@number,w
  2699  0035  00F2               	movwf	___awmod@dividend
  2700  0036  3180  20B5  3180   	fcall	___awmod
  2701  0039  0871               	movf	?___awmod+1,w
  2702  003A  0020               	movlb	0	; select bank0
  2703  003B  00A1               	movwf	sumdigits@digit+1
  2704  003C  0870               	movf	?___awmod,w
  2705  003D  00A0               	movwf	sumdigits@digit
  2706  003E                     l1859:
  2707                           
  2708                           ;main.c: 24:     SumDigits = SumDigits + digit;
  2709  003E  0820               	movf	sumdigits@digit,w
  2710  003F  0722               	addwf	sumdigits@SumDigits,w
  2711  0040  00A2               	movwf	sumdigits@SumDigits
  2712  0041  0821               	movf	sumdigits@digit+1,w
  2713  0042  3D23               	addwfc	sumdigits@SumDigits+1,w
  2714  0043  00A3               	movwf	sumdigits@SumDigits+1
  2715  0044                     l1861:
  2716                           
  2717                           ;main.c: 25:     number = number /10;
  2718  0044  300A               	movlw	10
  2719  0045  00F0               	movwf	___awdiv@divisor
  2720  0046  3000               	movlw	0
  2721  0047  00F1               	movwf	___awdiv@divisor+1
  2722  0048  087A               	movf	sumdigits@number+1,w
  2723  0049  00F3               	movwf	___awdiv@dividend+1
  2724  004A  0879               	movf	sumdigits@number,w
  2725  004B  00F2               	movwf	___awdiv@dividend
  2726  004C  3181  215E  3180   	fcall	___awdiv
  2727  004F  0871               	movf	?___awdiv+1,w
  2728  0050  00FA               	movwf	sumdigits@number+1
  2729  0051  0870               	movf	?___awdiv,w
  2730  0052  00F9               	movwf	sumdigits@number
  2731  0053                     l1863:
  2732                           
  2733                           ;main.c: 21:   while (number>0)
  2734  0053  087A               	movf	sumdigits@number+1,w
  2735  0054  3A80               	xorlw	128
  2736  0055  00FB               	movwf	??_sumdigits
  2737  0056  3080               	movlw	128
  2738  0057  027B               	subwf	??_sumdigits,w
  2739  0058  1D03               	skipz
  2740  0059  285C               	goto	u1715
  2741  005A  3001               	movlw	1
  2742  005B  0279               	subwf	sumdigits@number,w
  2743  005C                     u1715:
  2744  005C  1803               	skipnc
  2745  005D  285F               	goto	u1711
  2746  005E  2860               	goto	u1710
  2747  005F                     u1711:
  2748  005F  282E               	goto	l1857
  2749  0060                     u1710:
  2750  0060                     l1865:
  2751                           
  2752                           ;main.c: 27:   return SumDigits;
  2753  0060  0020               	movlb	0	; select bank0
  2754  0061  0823               	movf	sumdigits@SumDigits+1,w
  2755  0062  00FA               	movwf	?_sumdigits+1
  2756  0063  0822               	movf	sumdigits@SumDigits,w
  2757  0064  00F9               	movwf	?_sumdigits
  2758  0065                     l26:
  2759  0065  0008               	return
  2760  0066                     __end_of_sumdigits:
  2761                           
  2762                           	psect	text2
  2763  00B5                     __ptext2:	
  2764 ;; *************** function ___awmod *****************
  2765 ;; Defined at:
  2766 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  divisor         2    0[COMMON] int 
  2769 ;;  dividend        2    2[COMMON] int 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  sign            1    6[COMMON] unsigned char 
  2772 ;;  counter         1    5[COMMON] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  2    0[COMMON] int 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2785 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2786 ;;Total ram usage:        7 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_sumdigits
  2792 ;;		_main
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           
  2797                           ;psect for function ___awmod
  2798  00B5                     ___awmod:
  2799  00B5                     l1805:	
  2800                           ;incstack = 0
  2801                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2802                           
  2803  00B5  01F6               	clrf	___awmod@sign
  2804  00B6                     l1807:
  2805  00B6  1FF3               	btfss	___awmod@dividend+1,7
  2806  00B7  28B9               	goto	u1611
  2807  00B8  28BA               	goto	u1610
  2808  00B9                     u1611:
  2809  00B9  28C1               	goto	l1813
  2810  00BA                     u1610:
  2811  00BA                     l1809:
  2812  00BA  09F2               	comf	___awmod@dividend,f
  2813  00BB  09F3               	comf	___awmod@dividend+1,f
  2814  00BC  0AF2               	incf	___awmod@dividend,f
  2815  00BD  1903               	skipnz
  2816  00BE  0AF3               	incf	___awmod@dividend+1,f
  2817  00BF                     l1811:
  2818  00BF  01F6               	clrf	___awmod@sign
  2819  00C0  0AF6               	incf	___awmod@sign,f
  2820  00C1                     l1813:
  2821  00C1  1FF1               	btfss	___awmod@divisor+1,7
  2822  00C2  28C4               	goto	u1621
  2823  00C3  28C5               	goto	u1620
  2824  00C4                     u1621:
  2825  00C4  28CA               	goto	l1817
  2826  00C5                     u1620:
  2827  00C5                     l1815:
  2828  00C5  09F0               	comf	___awmod@divisor,f
  2829  00C6  09F1               	comf	___awmod@divisor+1,f
  2830  00C7  0AF0               	incf	___awmod@divisor,f
  2831  00C8  1903               	skipnz
  2832  00C9  0AF1               	incf	___awmod@divisor+1,f
  2833  00CA                     l1817:
  2834  00CA  0870               	movf	___awmod@divisor,w
  2835  00CB  0471               	iorwf	___awmod@divisor+1,w
  2836  00CC  1903               	btfsc	3,2
  2837  00CD  28CF               	goto	u1631
  2838  00CE  28D0               	goto	u1630
  2839  00CF                     u1631:
  2840  00CF  28F9               	goto	l1835
  2841  00D0                     u1630:
  2842  00D0                     l1819:
  2843  00D0  01F5               	clrf	___awmod@counter
  2844  00D1  0AF5               	incf	___awmod@counter,f
  2845  00D2  28DC               	goto	l1825
  2846  00D3                     l1821:
  2847  00D3  3001               	movlw	1
  2848  00D4                     u1645:
  2849  00D4  35F0               	lslf	___awmod@divisor,f
  2850  00D5  0DF1               	rlf	___awmod@divisor+1,f
  2851  00D6  0B89               	decfsz	9,f
  2852  00D7  28D4               	goto	u1645
  2853  00D8                     l1823:
  2854  00D8  3001               	movlw	1
  2855  00D9  00F4               	movwf	??___awmod
  2856  00DA  0874               	movf	??___awmod,w
  2857  00DB  07F5               	addwf	___awmod@counter,f
  2858  00DC                     l1825:
  2859  00DC  1FF1               	btfss	___awmod@divisor+1,7
  2860  00DD  28DF               	goto	u1651
  2861  00DE  28E0               	goto	u1650
  2862  00DF                     u1651:
  2863  00DF  28D3               	goto	l1821
  2864  00E0                     u1650:
  2865  00E0                     l1827:
  2866  00E0  0871               	movf	___awmod@divisor+1,w
  2867  00E1  0273               	subwf	___awmod@dividend+1,w
  2868  00E2  1D03               	skipz
  2869  00E3  28E6               	goto	u1665
  2870  00E4  0870               	movf	___awmod@divisor,w
  2871  00E5  0272               	subwf	___awmod@dividend,w
  2872  00E6                     u1665:
  2873  00E6  1C03               	skipc
  2874  00E7  28E9               	goto	u1661
  2875  00E8  28EA               	goto	u1660
  2876  00E9                     u1661:
  2877  00E9  28EE               	goto	l1831
  2878  00EA                     u1660:
  2879  00EA                     l1829:
  2880  00EA  0870               	movf	___awmod@divisor,w
  2881  00EB  02F2               	subwf	___awmod@dividend,f
  2882  00EC  0871               	movf	___awmod@divisor+1,w
  2883  00ED  3BF3               	subwfb	___awmod@dividend+1,f
  2884  00EE                     l1831:
  2885  00EE  3001               	movlw	1
  2886  00EF                     u1675:
  2887  00EF  36F1               	lsrf	___awmod@divisor+1,f
  2888  00F0  0CF0               	rrf	___awmod@divisor,f
  2889  00F1  0B89               	decfsz	9,f
  2890  00F2  28EF               	goto	u1675
  2891  00F3                     l1833:
  2892  00F3  3001               	movlw	1
  2893  00F4  02F5               	subwf	___awmod@counter,f
  2894  00F5  1D03               	btfss	3,2
  2895  00F6  28F8               	goto	u1681
  2896  00F7  28F9               	goto	u1680
  2897  00F8                     u1681:
  2898  00F8  28E0               	goto	l1827
  2899  00F9                     u1680:
  2900  00F9                     l1835:
  2901  00F9  0876               	movf	___awmod@sign,w
  2902  00FA  1903               	btfsc	3,2
  2903  00FB  28FD               	goto	u1691
  2904  00FC  28FE               	goto	u1690
  2905  00FD                     u1691:
  2906  00FD  2903               	goto	l1839
  2907  00FE                     u1690:
  2908  00FE                     l1837:
  2909  00FE  09F2               	comf	___awmod@dividend,f
  2910  00FF  09F3               	comf	___awmod@dividend+1,f
  2911  0100  0AF2               	incf	___awmod@dividend,f
  2912  0101  1903               	skipnz
  2913  0102  0AF3               	incf	___awmod@dividend+1,f
  2914  0103                     l1839:
  2915  0103  0873               	movf	___awmod@dividend+1,w
  2916  0104  00F1               	movwf	?___awmod+1
  2917  0105  0872               	movf	___awmod@dividend,w
  2918  0106  00F0               	movwf	?___awmod
  2919  0107                     l410:
  2920  0107  0008               	return
  2921  0108                     __end_of___awmod:
  2922                           
  2923                           	psect	text3
  2924  015E                     __ptext3:	
  2925 ;; *************** function ___awdiv *****************
  2926 ;; Defined at:
  2927 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  divisor         2    0[COMMON] int 
  2930 ;;  dividend        2    2[COMMON] int 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  quotient        2    7[COMMON] int 
  2933 ;;  sign            1    6[COMMON] unsigned char 
  2934 ;;  counter         1    5[COMMON] unsigned char 
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  2    0[COMMON] int 
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2945 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2946 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2947 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2948 ;;Total ram usage:        9 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_sumdigits
  2954 ;;		_main
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           
  2959                           ;psect for function ___awdiv
  2960  015E                     ___awdiv:
  2961  015E                     l1761:	
  2962                           ;incstack = 0
  2963                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2964                           
  2965  015E  01F6               	clrf	___awdiv@sign
  2966  015F                     l1763:
  2967  015F  1FF1               	btfss	___awdiv@divisor+1,7
  2968  0160  2962               	goto	u1511
  2969  0161  2963               	goto	u1510
  2970  0162                     u1511:
  2971  0162  296A               	goto	l1769
  2972  0163                     u1510:
  2973  0163                     l1765:
  2974  0163  09F0               	comf	___awdiv@divisor,f
  2975  0164  09F1               	comf	___awdiv@divisor+1,f
  2976  0165  0AF0               	incf	___awdiv@divisor,f
  2977  0166  1903               	skipnz
  2978  0167  0AF1               	incf	___awdiv@divisor+1,f
  2979  0168                     l1767:
  2980  0168  01F6               	clrf	___awdiv@sign
  2981  0169  0AF6               	incf	___awdiv@sign,f
  2982  016A                     l1769:
  2983  016A  1FF3               	btfss	___awdiv@dividend+1,7
  2984  016B  296D               	goto	u1521
  2985  016C  296E               	goto	u1520
  2986  016D                     u1521:
  2987  016D  2977               	goto	l1775
  2988  016E                     u1520:
  2989  016E                     l1771:
  2990  016E  09F2               	comf	___awdiv@dividend,f
  2991  016F  09F3               	comf	___awdiv@dividend+1,f
  2992  0170  0AF2               	incf	___awdiv@dividend,f
  2993  0171  1903               	skipnz
  2994  0172  0AF3               	incf	___awdiv@dividend+1,f
  2995  0173                     l1773:
  2996  0173  3001               	movlw	1
  2997  0174  00F4               	movwf	??___awdiv
  2998  0175  0874               	movf	??___awdiv,w
  2999  0176  06F6               	xorwf	___awdiv@sign,f
  3000  0177                     l1775:
  3001  0177  01F7               	clrf	___awdiv@quotient
  3002  0178  01F8               	clrf	___awdiv@quotient+1
  3003  0179                     l1777:
  3004  0179  0870               	movf	___awdiv@divisor,w
  3005  017A  0471               	iorwf	___awdiv@divisor+1,w
  3006  017B  1903               	btfsc	3,2
  3007  017C  297E               	goto	u1531
  3008  017D  297F               	goto	u1530
  3009  017E                     u1531:
  3010  017E  29AE               	goto	l1797
  3011  017F                     u1530:
  3012  017F                     l1779:
  3013  017F  01F5               	clrf	___awdiv@counter
  3014  0180  0AF5               	incf	___awdiv@counter,f
  3015  0181  298B               	goto	l1785
  3016  0182                     l1781:
  3017  0182  3001               	movlw	1
  3018  0183                     u1545:
  3019  0183  35F0               	lslf	___awdiv@divisor,f
  3020  0184  0DF1               	rlf	___awdiv@divisor+1,f
  3021  0185  0B89               	decfsz	9,f
  3022  0186  2983               	goto	u1545
  3023  0187                     l1783:
  3024  0187  3001               	movlw	1
  3025  0188  00F4               	movwf	??___awdiv
  3026  0189  0874               	movf	??___awdiv,w
  3027  018A  07F5               	addwf	___awdiv@counter,f
  3028  018B                     l1785:
  3029  018B  1FF1               	btfss	___awdiv@divisor+1,7
  3030  018C  298E               	goto	u1551
  3031  018D  298F               	goto	u1550
  3032  018E                     u1551:
  3033  018E  2982               	goto	l1781
  3034  018F                     u1550:
  3035  018F                     l1787:
  3036  018F  3001               	movlw	1
  3037  0190                     u1565:
  3038  0190  35F7               	lslf	___awdiv@quotient,f
  3039  0191  0DF8               	rlf	___awdiv@quotient+1,f
  3040  0192  0B89               	decfsz	9,f
  3041  0193  2990               	goto	u1565
  3042  0194  0871               	movf	___awdiv@divisor+1,w
  3043  0195  0273               	subwf	___awdiv@dividend+1,w
  3044  0196  1D03               	skipz
  3045  0197  299A               	goto	u1575
  3046  0198  0870               	movf	___awdiv@divisor,w
  3047  0199  0272               	subwf	___awdiv@dividend,w
  3048  019A                     u1575:
  3049  019A  1C03               	skipc
  3050  019B  299D               	goto	u1571
  3051  019C  299E               	goto	u1570
  3052  019D                     u1571:
  3053  019D  29A3               	goto	l1793
  3054  019E                     u1570:
  3055  019E                     l1789:
  3056  019E  0870               	movf	___awdiv@divisor,w
  3057  019F  02F2               	subwf	___awdiv@dividend,f
  3058  01A0  0871               	movf	___awdiv@divisor+1,w
  3059  01A1  3BF3               	subwfb	___awdiv@dividend+1,f
  3060  01A2                     l1791:
  3061  01A2  1477               	bsf	___awdiv@quotient,0
  3062  01A3                     l1793:
  3063  01A3  3001               	movlw	1
  3064  01A4                     u1585:
  3065  01A4  36F1               	lsrf	___awdiv@divisor+1,f
  3066  01A5  0CF0               	rrf	___awdiv@divisor,f
  3067  01A6  0B89               	decfsz	9,f
  3068  01A7  29A4               	goto	u1585
  3069  01A8                     l1795:
  3070  01A8  3001               	movlw	1
  3071  01A9  02F5               	subwf	___awdiv@counter,f
  3072  01AA  1D03               	btfss	3,2
  3073  01AB  29AD               	goto	u1591
  3074  01AC  29AE               	goto	u1590
  3075  01AD                     u1591:
  3076  01AD  298F               	goto	l1787
  3077  01AE                     u1590:
  3078  01AE                     l1797:
  3079  01AE  0876               	movf	___awdiv@sign,w
  3080  01AF  1903               	btfsc	3,2
  3081  01B0  29B2               	goto	u1601
  3082  01B1  29B3               	goto	u1600
  3083  01B2                     u1601:
  3084  01B2  29B8               	goto	l1801
  3085  01B3                     u1600:
  3086  01B3                     l1799:
  3087  01B3  09F7               	comf	___awdiv@quotient,f
  3088  01B4  09F8               	comf	___awdiv@quotient+1,f
  3089  01B5  0AF7               	incf	___awdiv@quotient,f
  3090  01B6  1903               	skipnz
  3091  01B7  0AF8               	incf	___awdiv@quotient+1,f
  3092  01B8                     l1801:
  3093  01B8  0878               	movf	___awdiv@quotient+1,w
  3094  01B9  00F1               	movwf	?___awdiv+1
  3095  01BA  0877               	movf	___awdiv@quotient,w
  3096  01BB  00F0               	movwf	?___awdiv
  3097  01BC                     l397:
  3098  01BC  0008               	return
  3099  01BD                     __end_of___awdiv:
  3100                           
  3101                           	psect	text4
  3102  0F2D                     __ptext4:	
  3103 ;; *************** function _sprintf *****************
  3104 ;; Defined at:
  3105 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  s               1    wreg     PTR unsigned char 
  3108 ;;		 -> main@printchar(10), 
  3109 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  3110 ;;		 -> STR_7(3), STR_5(3), STR_3(3), 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  s               1    3[BANK1 ] PTR unsigned char 
  3113 ;;		 -> main@printchar(10), 
  3114 ;;  f               5    4[BANK1 ] struct _IO_FILE
  3115 ;;  ret             2    0        int 
  3116 ;;  ap              1    2[BANK1 ] PTR void [1]
  3117 ;;		 -> ?_sprintf(2), 
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  2   70[BANK0 ] int 
  3120 ;; Registers used:
  3121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3127 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3128 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3130 ;;      Totals:         1       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3131 ;;Total ram usage:       16 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    7
  3134 ;; This function calls:
  3135 ;;		_vfprintf
  3136 ;; This function is called by:
  3137 ;;		_main
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           
  3142                           ;psect for function _sprintf
  3143  0F2D                     _sprintf:
  3144                           
  3145                           ;incstack = 0
  3146                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3147                           ;sprintf@s stored from wreg
  3148  0F2D  0021               	movlb	1	; select bank1
  3149  0F2E  00A3               	movwf	sprintf@s^(0+128)
  3150  0F2F                     l1893:
  3151  0F2F  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3152  0F30  00FD               	movwf	??_sprintf
  3153  0F31  087D               	movf	??_sprintf,w
  3154  0F32  00A2               	movwf	sprintf@ap^(0+128)
  3155  0F33  0823               	movf	sprintf@s^(0+128),w
  3156  0F34  00FD               	movwf	??_sprintf
  3157  0F35  087D               	movf	??_sprintf,w
  3158  0F36  00A4               	movwf	sprintf@f^(0+128)
  3159  0F37                     l1895:
  3160  0F37  01A5               	clrf	(sprintf@f^(0+128)+1)
  3161  0F38  01A6               	clrf	((sprintf@f+1)^(0+128)+1)
  3162  0F39                     l1897:
  3163  0F39  01A7               	clrf	(sprintf@f^(0+128)+3)
  3164  0F3A  01A8               	clrf	((sprintf@f+1)^(0+128)+3)
  3165  0F3B                     l1899:
  3166  0F3B  0020               	movlb	0	; select bank0
  3167  0F3C  0867               	movf	sprintf@fmt+1,w
  3168  0F3D  00DF               	movwf	vfprintf@fmt+1
  3169  0F3E  0866               	movf	sprintf@fmt,w
  3170  0F3F  00DE               	movwf	vfprintf@fmt
  3171  0F40  30A2               	movlw	(low (sprintf@ap| 0))& (0+255)
  3172  0F41  00FD               	movwf	??_sprintf
  3173  0F42  087D               	movf	??_sprintf,w
  3174  0F43  00E0               	movwf	vfprintf@ap
  3175  0F44  30A4               	movlw	(low (sprintf@f| 0))& (0+255)
  3176  0F45  318F  27CF  318F   	fcall	_vfprintf
  3177  0F48                     l1901:
  3178  0F48  0021               	movlb	1	; select bank1
  3179  0F49  0825               	movf	(sprintf@f^(0+128)+1),w
  3180  0F4A  0723               	addwf	sprintf@s^(0+128),w
  3181  0F4B  00FD               	movwf	??_sprintf
  3182  0F4C  087D               	movf	??_sprintf,w
  3183  0F4D  0086               	movwf	6
  3184  0F4E  0187               	clrf	7
  3185  0F4F  0181               	clrf	1
  3186  0F50                     l707:
  3187  0F50  0008               	return
  3188  0F51                     __end_of_sprintf:
  3189                           
  3190                           	psect	text5
  3191  0FCF                     __ptext5:	
  3192 ;; *************** function _vfprintf *****************
  3193 ;; Defined at:
  3194 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  fp              1    wreg     PTR struct _IO_FILE
  3197 ;;		 -> sprintf@f(5), 
  3198 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  3199 ;;		 -> STR_7(3), STR_5(3), STR_3(3), 
  3200 ;;  ap              1   64[BANK0 ] PTR PTR void 
  3201 ;;		 -> sprintf@ap(1), 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  3204 ;;		 -> sprintf@f(5), 
  3205 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  3206 ;;		 -> STR_7(3), STR_5(3), STR_3(3), 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  2   62[BANK0 ] int 
  3209 ;; Registers used:
  3210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3216 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3217 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3218 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3219 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3220 ;;Total ram usage:        8 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    6
  3223 ;; This function calls:
  3224 ;;		_vfpfcnvrt
  3225 ;; This function is called by:
  3226 ;;		_sprintf
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           
  3231                           ;psect for function _vfprintf
  3232  0FCF                     _vfprintf:
  3233                           
  3234                           ;incstack = 0
  3235                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3236                           ;vfprintf@fp stored from wreg
  3237  0FCF  0020               	movlb	0	; select bank0
  3238  0FD0  00E3               	movwf	vfprintf@fp
  3239  0FD1                     l1843:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3242  0FD1  085F               	movf	vfprintf@fmt+1,w
  3243  0FD2  00E5               	movwf	vfprintf@cfmt+1
  3244  0FD3  085E               	movf	vfprintf@fmt,w
  3245  0FD4  00E4               	movwf	vfprintf@cfmt
  3246  0FD5                     l1845:
  3247                           
  3248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3249  0FD5  0021               	movlb	1	; select bank1
  3250  0FD6  01E1               	clrf	_nout^(0+128)
  3251  0FD7  01E2               	clrf	(_nout+1)^(0+128)
  3252                           
  3253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3254  0FD8  2FED               	goto	l1849
  3255  0FD9                     l1847:
  3256                           
  3257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3258  0FD9  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3259  0FDA  00E1               	movwf	??_vfprintf
  3260  0FDB  0861               	movf	??_vfprintf,w
  3261  0FDC  00CE               	movwf	vfpfcnvrt@fmt
  3262  0FDD  0860               	movf	vfprintf@ap,w
  3263  0FDE  00E2               	movwf	??_vfprintf+1
  3264  0FDF  0862               	movf	??_vfprintf+1,w
  3265  0FE0  00CF               	movwf	vfpfcnvrt@ap
  3266  0FE1  0863               	movf	vfprintf@fp,w
  3267  0FE2  3181  21BD  318F   	fcall	_vfpfcnvrt
  3268  0FE5  0020               	movlb	0	; select bank0
  3269  0FE6  084E               	movf	?_vfpfcnvrt,w
  3270  0FE7  0021               	movlb	1	; select bank1
  3271  0FE8  07E1               	addwf	_nout^(0+128),f
  3272  0FE9  0020               	movlb	0	; select bank0
  3273  0FEA  084F               	movf	?_vfpfcnvrt+1,w
  3274  0FEB  0021               	movlb	1	; select bank1
  3275  0FEC  3DE2               	addwfc	(_nout+1)^(0+128),f
  3276  0FED                     l1849:
  3277                           
  3278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3279  0FED  0020               	movlb	0	; select bank0
  3280  0FEE  0864               	movf	vfprintf@cfmt,w
  3281  0FEF  0084               	movwf	4
  3282  0FF0  0865               	movf	vfprintf@cfmt+1,w
  3283  0FF1  0085               	movwf	5
  3284  0FF2  0012               	moviw fsr0++
  3285  0FF3  1D03               	btfss	3,2
  3286  0FF4  2FF6               	goto	u1701
  3287  0FF5  2FF7               	goto	u1700
  3288  0FF6                     u1701:
  3289  0FF6  2FD9               	goto	l1847
  3290  0FF7                     u1700:
  3291  0FF7                     l1851:
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3294  0FF7  0021               	movlb	1	; select bank1
  3295  0FF8  0862               	movf	(_nout+1)^(0+128),w
  3296  0FF9  0020               	movlb	0	; select bank0
  3297  0FFA  00DF               	movwf	?_vfprintf+1
  3298  0FFB  0021               	movlb	1	; select bank1
  3299  0FFC  0861               	movf	_nout^(0+128),w
  3300  0FFD  0020               	movlb	0	; select bank0
  3301  0FFE  00DE               	movwf	?_vfprintf
  3302  0FFF                     l779:
  3303  0FFF  0008               	return
  3304  1000                     __end_of_vfprintf:
  3305                           
  3306                           	psect	text6
  3307  01BD                     __ptext6:	
  3308 ;; *************** function _vfpfcnvrt *****************
  3309 ;; Defined at:
  3310 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  fp              1    wreg     PTR struct _IO_FILE
  3313 ;;		 -> sprintf@f(5), 
  3314 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3315 ;;		 -> vfprintf@cfmt(2), 
  3316 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3317 ;;		 -> sprintf@ap(1), 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  3320 ;;		 -> sprintf@f(5), 
  3321 ;;  ll              8   53[BANK0 ] long long 
  3322 ;;  llu             8    0        unsigned long long 
  3323 ;;  f               4    0        unsigned long long 
  3324 ;;  ct              3    0        unsigned char [3]
  3325 ;;  vp              2    0        PTR void 
  3326 ;;  i               2    0        int 
  3327 ;;  done            2    0        int 
  3328 ;;  cp              2    0        PTR unsigned char 
  3329 ;;  c               1    0        unsigned char 
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  2   46[BANK0 ] int 
  3332 ;; Registers used:
  3333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3340 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3341 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3342 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3343 ;;Total ram usage:       16 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:    5
  3346 ;; This function calls:
  3347 ;;		_dtoa
  3348 ;;		_fputc
  3349 ;; This function is called by:
  3350 ;;		_vfprintf
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           
  3355                           ;psect for function _vfpfcnvrt
  3356  01BD                     _vfpfcnvrt:
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3360                           ;vfpfcnvrt@fp stored from wreg
  3361  01BD  0020               	movlb	0	; select bank0
  3362  01BE  00DD               	movwf	vfpfcnvrt@fp
  3363  01BF                     l1659:
  3364                           
  3365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3366  01BF  084E               	movf	vfpfcnvrt@fmt,w
  3367  01C0  0086               	movwf	6
  3368  01C1  0187               	clrf	7
  3369  01C2  3F40               	moviw [0]fsr1
  3370  01C3  00D0               	movwf	??_vfpfcnvrt
  3371  01C4  3F41               	moviw [1]fsr1
  3372  01C5  00D1               	movwf	??_vfpfcnvrt+1
  3373  01C6  0850               	movf	??_vfpfcnvrt,w
  3374  01C7  0084               	movwf	4
  3375  01C8  0851               	movf	??_vfpfcnvrt+1,w
  3376  01C9  0085               	movwf	5
  3377  01CA  0012               	moviw fsr0++
  3378  01CB  3A25               	xorlw	37
  3379  01CC  1D03               	btfss	3,2
  3380  01CD  29CF               	goto	u1431
  3381  01CE  29D0               	goto	u1430
  3382  01CF                     u1431:
  3383  01CF  2A74               	goto	l1695
  3384  01D0                     u1430:
  3385  01D0                     l1661:
  3386                           
  3387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3388  01D0  084E               	movf	vfpfcnvrt@fmt,w
  3389  01D1  0086               	movwf	6
  3390  01D2  0187               	clrf	7
  3391  01D3  3001               	movlw	1
  3392  01D4  0781               	addwf	1,f
  3393  01D5  3141               	addfsr 1,1
  3394  01D6  1803               	skipnc
  3395  01D7  0A81               	incf	1,f
  3396  01D8                     l1663:
  3397                           
  3398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3399  01D8  0021               	movlb	1	; select bank1
  3400  01D9  01E3               	clrf	_width^(0+128)
  3401  01DA  01E4               	clrf	(_width+1)^(0+128)
  3402  01DB  0020               	movlb	0	; select bank0
  3403  01DC  01EE               	clrf	_flags
  3404  01DD  01EF               	clrf	_flags+1
  3405  01DE                     l1665:
  3406                           
  3407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3408  01DE  30FF               	movlw	255
  3409  01DF  00EC               	movwf	_prec
  3410  01E0  30FF               	movlw	255
  3411  01E1  00ED               	movwf	_prec+1
  3412  01E2                     l1667:
  3413                           
  3414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3415  01E2  084E               	movf	vfpfcnvrt@fmt,w
  3416  01E3  0086               	movwf	6
  3417  01E4  0187               	clrf	7
  3418  01E5  3F40               	moviw [0]fsr1
  3419  01E6  00D0               	movwf	??_vfpfcnvrt
  3420  01E7  3F41               	moviw [1]fsr1
  3421  01E8  00D1               	movwf	??_vfpfcnvrt+1
  3422  01E9  0850               	movf	??_vfpfcnvrt,w
  3423  01EA  0084               	movwf	4
  3424  01EB  0851               	movf	??_vfpfcnvrt+1,w
  3425  01EC  0085               	movwf	5
  3426  01ED  0012               	moviw fsr0++
  3427  01EE  3A64               	xorlw	100
  3428  01EF  1903               	btfsc	3,2
  3429  01F0  29F2               	goto	u1441
  3430  01F1  29F3               	goto	u1440
  3431  01F2                     u1441:
  3432  01F2  2A04               	goto	l1671
  3433  01F3                     u1440:
  3434  01F3                     l1669:
  3435  01F3  084E               	movf	vfpfcnvrt@fmt,w
  3436  01F4  0086               	movwf	6
  3437  01F5  0187               	clrf	7
  3438  01F6  3F40               	moviw [0]fsr1
  3439  01F7  00D0               	movwf	??_vfpfcnvrt
  3440  01F8  3F41               	moviw [1]fsr1
  3441  01F9  00D1               	movwf	??_vfpfcnvrt+1
  3442  01FA  0850               	movf	??_vfpfcnvrt,w
  3443  01FB  0084               	movwf	4
  3444  01FC  0851               	movf	??_vfpfcnvrt+1,w
  3445  01FD  0085               	movwf	5
  3446  01FE  0012               	moviw fsr0++
  3447  01FF  3A69               	xorlw	105
  3448  0200  1D03               	btfss	3,2
  3449  0201  2A03               	goto	u1451
  3450  0202  2A04               	goto	u1450
  3451  0203                     u1451:
  3452  0203  2A3F               	goto	l1679
  3453  0204                     u1450:
  3454  0204                     l1671:
  3455                           
  3456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3457  0204  084E               	movf	vfpfcnvrt@fmt,w
  3458  0205  0086               	movwf	6
  3459  0206  0187               	clrf	7
  3460  0207  3001               	movlw	1
  3461  0208  0781               	addwf	1,f
  3462  0209  3141               	addfsr 1,1
  3463  020A  1803               	skipnc
  3464  020B  0A81               	incf	1,f
  3465  020C                     l1673:
  3466                           
  3467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3468  020C  084F               	movf	vfpfcnvrt@ap,w
  3469  020D  0086               	movwf	6
  3470  020E  0187               	clrf	7
  3471  020F  0801               	movf	1,w
  3472  0210  0084               	movwf	4
  3473  0211  0185               	clrf	5
  3474  0212  3002               	movlw	2
  3475  0213  0781               	addwf	1,f
  3476  0214  3F00               	moviw [0]fsr0
  3477  0215  00D0               	movwf	??_vfpfcnvrt
  3478  0216  3F01               	moviw [1]fsr0
  3479  0217  00D1               	movwf	??_vfpfcnvrt+1
  3480  0218  0850               	movf	??_vfpfcnvrt,w
  3481  0219  00D5               	movwf	vfpfcnvrt@ll
  3482  021A  0851               	movf	??_vfpfcnvrt+1,w
  3483  021B  00D6               	movwf	vfpfcnvrt@ll+1
  3484  021C  0D89               	rlf	9,f
  3485  021D  3B89               	subwfb	9,f
  3486  021E  0989               	comf	9,f
  3487  021F  00D7               	movwf	vfpfcnvrt@ll+2
  3488  0220  00D8               	movwf	vfpfcnvrt@ll+3
  3489  0221  00D9               	movwf	vfpfcnvrt@ll+4
  3490  0222  00DA               	movwf	vfpfcnvrt@ll+5
  3491  0223  00DB               	movwf	vfpfcnvrt@ll+6
  3492  0224  00DC               	movwf	vfpfcnvrt@ll+7
  3493  0225                     l1675:
  3494                           
  3495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3496  0225  0855               	movf	vfpfcnvrt@ll,w
  3497  0226  00B0               	movwf	dtoa@d
  3498  0227  0856               	movf	vfpfcnvrt@ll+1,w
  3499  0228  00B1               	movwf	dtoa@d+1
  3500  0229  0857               	movf	vfpfcnvrt@ll+2,w
  3501  022A  00B2               	movwf	dtoa@d+2
  3502  022B  0858               	movf	vfpfcnvrt@ll+3,w
  3503  022C  00B3               	movwf	dtoa@d+3
  3504  022D  0859               	movf	vfpfcnvrt@ll+4,w
  3505  022E  00B4               	movwf	dtoa@d+4
  3506  022F  085A               	movf	vfpfcnvrt@ll+5,w
  3507  0230  00B5               	movwf	dtoa@d+5
  3508  0231  085B               	movf	vfpfcnvrt@ll+6,w
  3509  0232  00B6               	movwf	dtoa@d+6
  3510  0233  085C               	movf	vfpfcnvrt@ll+7,w
  3511  0234  00B7               	movwf	dtoa@d+7
  3512  0235  085D               	movf	vfpfcnvrt@fp,w
  3513  0236  3184  2483  3181   	fcall	_dtoa
  3514  0239  0020               	movlb	0	; select bank0
  3515  023A  0831               	movf	?_dtoa+1,w
  3516  023B  00CF               	movwf	?_vfpfcnvrt+1
  3517  023C  0830               	movf	?_dtoa,w
  3518  023D  00CE               	movwf	?_vfpfcnvrt
  3519  023E  2A97               	goto	l772
  3520  023F                     l1679:
  3521                           
  3522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3523  023F  084E               	movf	vfpfcnvrt@fmt,w
  3524  0240  0086               	movwf	6
  3525  0241  0187               	clrf	7
  3526  0242  3F40               	moviw [0]fsr1
  3527  0243  00D0               	movwf	??_vfpfcnvrt
  3528  0244  3F41               	moviw [1]fsr1
  3529  0245  00D1               	movwf	??_vfpfcnvrt+1
  3530  0246  0850               	movf	??_vfpfcnvrt,w
  3531  0247  0084               	movwf	4
  3532  0248  0851               	movf	??_vfpfcnvrt+1,w
  3533  0249  0085               	movwf	5
  3534  024A  0012               	moviw fsr0++
  3535  024B  3A25               	xorlw	37
  3536  024C  1D03               	btfss	3,2
  3537  024D  2A4F               	goto	u1461
  3538  024E  2A50               	goto	u1460
  3539  024F                     u1461:
  3540  024F  2A69               	goto	l1689
  3541  0250                     u1460:
  3542  0250                     l1681:
  3543                           
  3544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3545  0250  084E               	movf	vfpfcnvrt@fmt,w
  3546  0251  0086               	movwf	6
  3547  0252  0187               	clrf	7
  3548  0253  3001               	movlw	1
  3549  0254  0781               	addwf	1,f
  3550  0255  3141               	addfsr 1,1
  3551  0256  1803               	skipnc
  3552  0257  0A81               	incf	1,f
  3553  0258                     l1683:
  3554                           
  3555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3556  0258  3025               	movlw	37
  3557  0259  00F0               	movwf	fputc@c
  3558  025A  3000               	movlw	0
  3559  025B  00F1               	movwf	fputc@c+1
  3560  025C  085D               	movf	vfpfcnvrt@fp,w
  3561  025D  00D0               	movwf	??_vfpfcnvrt
  3562  025E  0850               	movf	??_vfpfcnvrt,w
  3563  025F  00F2               	movwf	fputc@fp
  3564  0260  3180  2066  3181   	fcall	_fputc
  3565  0263                     l1685:
  3566                           
  3567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3568  0263  3001               	movlw	1
  3569  0264  0020               	movlb	0	; select bank0
  3570  0265  00CE               	movwf	?_vfpfcnvrt
  3571  0266  3000               	movlw	0
  3572  0267  00CF               	movwf	?_vfpfcnvrt+1
  3573  0268  2A97               	goto	l772
  3574  0269                     l1689:
  3575                           
  3576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3577  0269  084E               	movf	vfpfcnvrt@fmt,w
  3578  026A  0086               	movwf	6
  3579  026B  0187               	clrf	7
  3580  026C  3001               	movlw	1
  3581  026D  0781               	addwf	1,f
  3582  026E  3141               	addfsr 1,1
  3583  026F  1803               	skipnc
  3584  0270  0A81               	incf	1,f
  3585  0271                     l1691:
  3586                           
  3587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3588  0271  01CE               	clrf	?_vfpfcnvrt
  3589  0272  01CF               	clrf	?_vfpfcnvrt+1
  3590  0273  2A97               	goto	l772
  3591  0274                     l1695:
  3592                           
  3593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3594  0274  084E               	movf	vfpfcnvrt@fmt,w
  3595  0275  0086               	movwf	6
  3596  0276  0187               	clrf	7
  3597  0277  3F40               	moviw [0]fsr1
  3598  0278  00D0               	movwf	??_vfpfcnvrt
  3599  0279  3F41               	moviw [1]fsr1
  3600  027A  00D1               	movwf	??_vfpfcnvrt+1
  3601  027B  0850               	movf	??_vfpfcnvrt,w
  3602  027C  0084               	movwf	4
  3603  027D  0851               	movf	??_vfpfcnvrt+1,w
  3604  027E  0085               	movwf	5
  3605  027F  0800               	movf	0,w	;code access
  3606  0280  00D2               	movwf	??_vfpfcnvrt+2
  3607  0281  01D3               	clrf	??_vfpfcnvrt+3
  3608  0282  0852               	movf	??_vfpfcnvrt+2,w
  3609  0283  00F0               	movwf	fputc@c
  3610  0284  0853               	movf	??_vfpfcnvrt+3,w
  3611  0285  00F1               	movwf	fputc@c+1
  3612  0286  085D               	movf	vfpfcnvrt@fp,w
  3613  0287  00D4               	movwf	??_vfpfcnvrt+4
  3614  0288  0854               	movf	??_vfpfcnvrt+4,w
  3615  0289  00F2               	movwf	fputc@fp
  3616  028A  3180  2066  3181   	fcall	_fputc
  3617  028D                     l1697:
  3618                           
  3619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3620  028D  0020               	movlb	0	; select bank0
  3621  028E  084E               	movf	vfpfcnvrt@fmt,w
  3622  028F  0086               	movwf	6
  3623  0290  0187               	clrf	7
  3624  0291  3001               	movlw	1
  3625  0292  0781               	addwf	1,f
  3626  0293  3141               	addfsr 1,1
  3627  0294  1803               	skipnc
  3628  0295  0A81               	incf	1,f
  3629  0296  2A63               	goto	l1685
  3630  0297                     l772:
  3631  0297  0008               	return
  3632  0298                     __end_of_vfpfcnvrt:
  3633                           
  3634                           	psect	text7
  3635  0483                     __ptext7:	
  3636 ;; *************** function _dtoa *****************
  3637 ;; Defined at:
  3638 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  fp              1    wreg     PTR struct _IO_FILE
  3641 ;;		 -> sprintf@f(5), 
  3642 ;;  d               8   16[BANK0 ] long long 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  3645 ;;		 -> sprintf@f(5), 
  3646 ;;  n               8   36[BANK0 ] long long 
  3647 ;;  i               2   44[BANK0 ] int 
  3648 ;;  s               2   34[BANK0 ] int 
  3649 ;;  w               2   32[BANK0 ] int 
  3650 ;;  p               2   30[BANK0 ] int 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  2   16[BANK0 ] int 
  3653 ;; Registers used:
  3654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3660 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3661 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3662 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3663 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3664 ;;Total ram usage:       30 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    4
  3667 ;; This function calls:
  3668 ;;		___aodiv
  3669 ;;		___aomod
  3670 ;;		_abs
  3671 ;;		_pad
  3672 ;; This function is called by:
  3673 ;;		_vfpfcnvrt
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function _dtoa
  3679  0483                     _dtoa:
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3683                           ;dtoa@fp stored from wreg
  3684  0483  0020               	movlb	0	; select bank0
  3685  0484  00BD               	movwf	dtoa@fp
  3686  0485                     l1583:
  3687                           
  3688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3689  0485  0830               	movf	dtoa@d,w
  3690  0486  00C4               	movwf	dtoa@n
  3691  0487  0831               	movf	dtoa@d+1,w
  3692  0488  00C5               	movwf	dtoa@n+1
  3693  0489  0832               	movf	dtoa@d+2,w
  3694  048A  00C6               	movwf	dtoa@n+2
  3695  048B  0833               	movf	dtoa@d+3,w
  3696  048C  00C7               	movwf	dtoa@n+3
  3697  048D  0834               	movf	dtoa@d+4,w
  3698  048E  00C8               	movwf	dtoa@n+4
  3699  048F  0835               	movf	dtoa@d+5,w
  3700  0490  00C9               	movwf	dtoa@n+5
  3701  0491  0836               	movf	dtoa@d+6,w
  3702  0492  00CA               	movwf	dtoa@n+6
  3703  0493  0837               	movf	dtoa@d+7,w
  3704  0494  00CB               	movwf	dtoa@n+7
  3705  0495                     l1585:
  3706                           
  3707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3708  0495  3044               	movlw	low dtoa@n
  3709  0496  0086               	movwf	6
  3710  0497  3000               	movlw	high dtoa@n
  3711  0498  0087               	movwf	7
  3712  0499  3F47               	moviw [7]fsr1
  3713  049A  00B8               	movwf	??_dtoa
  3714  049B  1BB8               	btfsc	??_dtoa,7
  3715  049C  2C9E               	goto	u1251
  3716  049D  2CA0               	goto	u1250
  3717  049E                     u1251:
  3718  049E  3001               	movlw	1
  3719  049F  2CA1               	goto	u1260
  3720  04A0                     u1250:
  3721  04A0  3000               	movlw	0
  3722  04A1                     u1260:
  3723  04A1  0020               	movlb	0	; select bank0
  3724  04A2  00B9               	movwf	??_dtoa+1
  3725  04A3  01BA               	clrf	??_dtoa+2
  3726  04A4  0839               	movf	??_dtoa+1,w
  3727  04A5  00C2               	movwf	dtoa@s
  3728  04A6  083A               	movf	??_dtoa+2,w
  3729  04A7  00C3               	movwf	dtoa@s+1
  3730  04A8                     l1587:
  3731                           
  3732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3733  04A8  0842               	movf	dtoa@s,w
  3734  04A9  0443               	iorwf	dtoa@s+1,w
  3735  04AA  1903               	btfsc	3,2
  3736  04AB  2CAD               	goto	u1271
  3737  04AC  2CAE               	goto	u1270
  3738  04AD                     u1271:
  3739  04AD  2CCC               	goto	l742
  3740  04AE                     u1270:
  3741  04AE                     l1589:
  3742                           
  3743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3744  04AE  09C4               	comf	dtoa@n,f
  3745  04AF  09C5               	comf	dtoa@n+1,f
  3746  04B0  09C6               	comf	dtoa@n+2,f
  3747  04B1  09C7               	comf	dtoa@n+3,f
  3748  04B2  09C8               	comf	dtoa@n+4,f
  3749  04B3  09C9               	comf	dtoa@n+5,f
  3750  04B4  09CA               	comf	dtoa@n+6,f
  3751  04B5  09CB               	comf	dtoa@n+7,f
  3752  04B6  0AC4               	incf	dtoa@n,f
  3753  04B7  1D03               	skipz
  3754  04B8  2CCC               	goto	u128lld
  3755  04B9  0AC5               	incf	dtoa@n+1,f
  3756  04BA  1D03               	skipz
  3757  04BB  2CCC               	goto	u128lld
  3758  04BC  0AC6               	incf	dtoa@n+2,f
  3759  04BD  1D03               	skipz
  3760  04BE  2CCC               	goto	u128lld
  3761  04BF  0AC7               	incf	dtoa@n+3,f
  3762  04C0  1D03               	skipz
  3763  04C1  2CCC               	goto	u128lld
  3764  04C2  0AC8               	incf	dtoa@n+4,f
  3765  04C3  1D03               	skipz
  3766  04C4  2CCC               	goto	u128lld
  3767  04C5  0AC9               	incf	dtoa@n+5,f
  3768  04C6  1D03               	skipz
  3769  04C7  2CCC               	goto	u128lld
  3770  04C8  0ACA               	incf	dtoa@n+6,f
  3771  04C9  1D03               	skipz
  3772  04CA  2CCC               	goto	u128lld
  3773  04CB  0ACB               	incf	dtoa@n+7,f
  3774  04CC                     u128lld:
  3775  04CC                     l742:	
  3776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
  3777                           
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3780  04CC  0020               	movlb	0	; select bank0
  3781  04CD  1BED               	btfsc	_prec+1,7
  3782  04CE  2CD0               	goto	u1291
  3783  04CF  2CD1               	goto	u1290
  3784  04D0                     u1291:
  3785  04D0  2CD5               	goto	l743
  3786  04D1                     u1290:
  3787  04D1                     l1591:
  3788                           
  3789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3790  04D1  30FD               	movlw	253
  3791  04D2  05EE               	andwf	_flags,f
  3792  04D3  30FF               	movlw	255
  3793  04D4  05EF               	andwf	_flags+1,f
  3794  04D5                     l743:	
  3795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
  3796                           
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3799  04D5  086D               	movf	_prec+1,w
  3800  04D6  3A80               	xorlw	128
  3801  04D7  00B8               	movwf	??_dtoa
  3802  04D8  3080               	movlw	128
  3803  04D9  0238               	subwf	??_dtoa,w
  3804  04DA  1D03               	skipz
  3805  04DB  2CDE               	goto	u1305
  3806  04DC  3001               	movlw	1
  3807  04DD  026C               	subwf	_prec,w
  3808  04DE                     u1305:
  3809  04DE  1803               	skipnc
  3810  04DF  2CE1               	goto	u1301
  3811  04E0  2CE2               	goto	u1300
  3812  04E1                     u1301:
  3813  04E1  2CE8               	goto	l1595
  3814  04E2                     u1300:
  3815  04E2                     l1593:
  3816  04E2  3001               	movlw	1
  3817  04E3  0020               	movlb	0	; select bank0
  3818  04E4  00BE               	movwf	dtoa@p
  3819  04E5  3000               	movlw	0
  3820  04E6  00BF               	movwf	dtoa@p+1
  3821  04E7  2CED               	goto	l747
  3822  04E8                     l1595:
  3823  04E8  0020               	movlb	0	; select bank0
  3824  04E9  086D               	movf	_prec+1,w
  3825  04EA  00BF               	movwf	dtoa@p+1
  3826  04EB  086C               	movf	_prec,w
  3827  04EC  00BE               	movwf	dtoa@p
  3828  04ED                     l747:
  3829                           
  3830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3831  04ED  0021               	movlb	1	; select bank1
  3832  04EE  0864               	movf	(_width+1)^(0+128),w
  3833  04EF  0020               	movlb	0	; select bank0
  3834  04F0  00C1               	movwf	dtoa@w+1
  3835  04F1  0021               	movlb	1	; select bank1
  3836  04F2  0863               	movf	_width^(0+128),w
  3837  04F3  0020               	movlb	0	; select bank0
  3838  04F4  00C0               	movwf	dtoa@w
  3839  04F5                     l1597:
  3840                           
  3841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3842  04F5  0842               	movf	dtoa@s,w
  3843  04F6  0443               	iorwf	dtoa@s+1,w
  3844  04F7  1D03               	btfss	3,2
  3845  04F8  2CFA               	goto	u1311
  3846  04F9  2CFB               	goto	u1310
  3847  04FA                     u1311:
  3848  04FA  2CFF               	goto	l1601
  3849  04FB                     u1310:
  3850  04FB                     l1599:
  3851  04FB  1D6E               	btfss	_flags,2
  3852  04FC  2CFE               	goto	u1321
  3853  04FD  2CFF               	goto	u1320
  3854  04FE                     u1321:
  3855  04FE  2D03               	goto	l748
  3856  04FF                     u1320:
  3857  04FF                     l1601:
  3858                           
  3859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  3860  04FF  30FF               	movlw	255
  3861  0500  07C0               	addwf	dtoa@w,f
  3862  0501  30FF               	movlw	255
  3863  0502  3DC1               	addwfc	dtoa@w+1,f
  3864  0503                     l748:	
  3865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
  3866                           
  3867                           
  3868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3869  0503  301F               	movlw	31
  3870  0504  00CC               	movwf	dtoa@i
  3871  0505  3000               	movlw	0
  3872  0506  00CD               	movwf	dtoa@i+1
  3873  0507                     l1603:
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3876  0507  0022               	movlb	2	; select bank2
  3877  0508  01BF               	clrf	(_dbuf^(0+256)+31)
  3878                           
  3879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3880  0509  2D73               	goto	l751
  3881  050A                     l1605:
  3882                           
  3883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  3884  050A  30FF               	movlw	255
  3885  050B  0020               	movlb	0	; select bank0
  3886  050C  07CC               	addwf	dtoa@i,f
  3887  050D  30FF               	movlw	255
  3888  050E  3DCD               	addwfc	dtoa@i+1,f
  3889  050F                     l1607:
  3890                           
  3891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3892  050F  300A               	movlw	10
  3893  0510  00A0               	movwf	___aomod@divisor
  3894  0511  01A1               	clrf	___aomod@divisor+1
  3895  0512  01A2               	clrf	___aomod@divisor+2
  3896  0513  01A3               	clrf	___aomod@divisor+3
  3897  0514  01A4               	clrf	___aomod@divisor+4
  3898  0515  01A5               	clrf	___aomod@divisor+5
  3899  0516  01A6               	clrf	___aomod@divisor+6
  3900  0517  01A7               	clrf	___aomod@divisor+7
  3901  0518  0844               	movf	dtoa@n,w
  3902  0519  00A8               	movwf	___aomod@dividend
  3903  051A  0845               	movf	dtoa@n+1,w
  3904  051B  00A9               	movwf	___aomod@dividend+1
  3905  051C  0846               	movf	dtoa@n+2,w
  3906  051D  00AA               	movwf	___aomod@dividend+2
  3907  051E  0847               	movf	dtoa@n+3,w
  3908  051F  00AB               	movwf	___aomod@dividend+3
  3909  0520  0848               	movf	dtoa@n+4,w
  3910  0521  00AC               	movwf	___aomod@dividend+4
  3911  0522  0849               	movf	dtoa@n+5,w
  3912  0523  00AD               	movwf	___aomod@dividend+5
  3913  0524  084A               	movf	dtoa@n+6,w
  3914  0525  00AE               	movwf	___aomod@dividend+6
  3915  0526  084B               	movf	dtoa@n+7,w
  3916  0527  00AF               	movwf	___aomod@dividend+7
  3917  0528  3182  2298  3184   	fcall	___aomod
  3918  052B  0020               	movlb	0	; select bank0
  3919  052C  0821               	movf	?___aomod+1,w
  3920  052D  00F4               	movwf	abs@a+1
  3921  052E  0820               	movf	?___aomod,w
  3922  052F  00F3               	movwf	abs@a
  3923  0530  318E  265B  3184   	fcall	_abs
  3924  0533  0873               	movf	?_abs,w
  3925  0534  3E30               	addlw	48
  3926  0535  0020               	movlb	0	; select bank0
  3927  0536  00B8               	movwf	??_dtoa
  3928  0537  084C               	movf	dtoa@i,w
  3929  0538  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3930  0539  0086               	movwf	6
  3931  053A  3001               	movlw	1	; select bank2/3
  3932  053B  0087               	movwf	7
  3933  053C  0838               	movf	??_dtoa,w
  3934  053D  0081               	movwf	1
  3935  053E                     l1609:
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  3938  053E  30FF               	movlw	255
  3939  053F  07BE               	addwf	dtoa@p,f
  3940  0540  30FF               	movlw	255
  3941  0541  3DBF               	addwfc	dtoa@p+1,f
  3942  0542                     l1611:
  3943                           
  3944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  3945  0542  30FF               	movlw	255
  3946  0543  07C0               	addwf	dtoa@w,f
  3947  0544  30FF               	movlw	255
  3948  0545  3DC1               	addwfc	dtoa@w+1,f
  3949  0546                     l1613:
  3950                           
  3951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3952  0546  300A               	movlw	10
  3953  0547  00A0               	movwf	___aodiv@divisor
  3954  0548  01A1               	clrf	___aodiv@divisor+1
  3955  0549  01A2               	clrf	___aodiv@divisor+2
  3956  054A  01A3               	clrf	___aodiv@divisor+3
  3957  054B  01A4               	clrf	___aodiv@divisor+4
  3958  054C  01A5               	clrf	___aodiv@divisor+5
  3959  054D  01A6               	clrf	___aodiv@divisor+6
  3960  054E  01A7               	clrf	___aodiv@divisor+7
  3961  054F  0844               	movf	dtoa@n,w
  3962  0550  00A8               	movwf	___aodiv@dividend
  3963  0551  0845               	movf	dtoa@n+1,w
  3964  0552  00A9               	movwf	___aodiv@dividend+1
  3965  0553  0846               	movf	dtoa@n+2,w
  3966  0554  00AA               	movwf	___aodiv@dividend+2
  3967  0555  0847               	movf	dtoa@n+3,w
  3968  0556  00AB               	movwf	___aodiv@dividend+3
  3969  0557  0848               	movf	dtoa@n+4,w
  3970  0558  00AC               	movwf	___aodiv@dividend+4
  3971  0559  0849               	movf	dtoa@n+5,w
  3972  055A  00AD               	movwf	___aodiv@dividend+5
  3973  055B  084A               	movf	dtoa@n+6,w
  3974  055C  00AE               	movwf	___aodiv@dividend+6
  3975  055D  084B               	movf	dtoa@n+7,w
  3976  055E  00AF               	movwf	___aodiv@dividend+7
  3977  055F  3183  2382  3184   	fcall	___aodiv
  3978  0562  0020               	movlb	0	; select bank0
  3979  0563  0820               	movf	?___aodiv,w
  3980  0564  00C4               	movwf	dtoa@n
  3981  0565  0821               	movf	?___aodiv+1,w
  3982  0566  00C5               	movwf	dtoa@n+1
  3983  0567  0822               	movf	?___aodiv+2,w
  3984  0568  00C6               	movwf	dtoa@n+2
  3985  0569  0823               	movf	?___aodiv+3,w
  3986  056A  00C7               	movwf	dtoa@n+3
  3987  056B  0824               	movf	?___aodiv+4,w
  3988  056C  00C8               	movwf	dtoa@n+4
  3989  056D  0825               	movf	?___aodiv+5,w
  3990  056E  00C9               	movwf	dtoa@n+5
  3991  056F  0826               	movf	?___aodiv+6,w
  3992  0570  00CA               	movwf	dtoa@n+6
  3993  0571  0827               	movf	?___aodiv+7,w
  3994  0572  00CB               	movwf	dtoa@n+7
  3995  0573                     l751:	
  3996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
  3997                           
  3998                           
  3999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4000  0573  0020               	movlb	0	; select bank0
  4001  0574  084D               	movf	dtoa@i+1,w
  4002  0575  3A80               	xorlw	128
  4003  0576  00B8               	movwf	??_dtoa
  4004  0577  3080               	movlw	128
  4005  0578  0238               	subwf	??_dtoa,w
  4006  0579  1D03               	skipz
  4007  057A  2D7D               	goto	u1335
  4008  057B  3001               	movlw	1
  4009  057C  024C               	subwf	dtoa@i,w
  4010  057D                     u1335:
  4011  057D  1C03               	skipc
  4012  057E  2D80               	goto	u1331
  4013  057F  2D81               	goto	u1330
  4014  0580                     u1331:
  4015  0580  2DAE               	goto	l1623
  4016  0581                     u1330:
  4017  0581                     l1615:
  4018  0581  0020               	movlb	0	; select bank0
  4019  0582  0844               	movf	dtoa@n,w
  4020  0583  0445               	iorwf	dtoa@n+1,w
  4021  0584  0446               	iorwf	dtoa@n+2,w
  4022  0585  0447               	iorwf	dtoa@n+3,w
  4023  0586  0448               	iorwf	dtoa@n+4,w
  4024  0587  0449               	iorwf	dtoa@n+5,w
  4025  0588  044A               	iorwf	dtoa@n+6,w
  4026  0589  044B               	iorwf	dtoa@n+7,w
  4027  058A  1D03               	skipz
  4028  058B  2D8D               	goto	u1341
  4029  058C  2D8E               	goto	u1340
  4030  058D                     u1341:
  4031  058D  2D0A               	goto	l1605
  4032  058E                     u1340:
  4033  058E                     l1617:
  4034  058E  083F               	movf	dtoa@p+1,w
  4035  058F  3A80               	xorlw	128
  4036  0590  00B8               	movwf	??_dtoa
  4037  0591  3080               	movlw	128
  4038  0592  0238               	subwf	??_dtoa,w
  4039  0593  1D03               	skipz
  4040  0594  2D97               	goto	u1355
  4041  0595  3001               	movlw	1
  4042  0596  023E               	subwf	dtoa@p,w
  4043  0597                     u1355:
  4044  0597  1803               	skipnc
  4045  0598  2D9A               	goto	u1351
  4046  0599  2D9B               	goto	u1350
  4047  059A                     u1351:
  4048  059A  2D0A               	goto	l1605
  4049  059B                     u1350:
  4050  059B                     l1619:
  4051  059B  0020               	movlb	0	; select bank0
  4052  059C  0841               	movf	dtoa@w+1,w
  4053  059D  3A80               	xorlw	128
  4054  059E  00B8               	movwf	??_dtoa
  4055  059F  3080               	movlw	128
  4056  05A0  0238               	subwf	??_dtoa,w
  4057  05A1  1D03               	skipz
  4058  05A2  2DA5               	goto	u1365
  4059  05A3  3001               	movlw	1
  4060  05A4  0240               	subwf	dtoa@w,w
  4061  05A5                     u1365:
  4062  05A5  1C03               	skipc
  4063  05A6  2DA8               	goto	u1361
  4064  05A7  2DA9               	goto	u1360
  4065  05A8                     u1361:
  4066  05A8  2DAE               	goto	l1623
  4067  05A9                     u1360:
  4068  05A9                     l1621:
  4069  05A9  0020               	movlb	0	; select bank0
  4070  05AA  18EE               	btfsc	_flags,1
  4071  05AB  2DAD               	goto	u1371
  4072  05AC  2DAE               	goto	u1370
  4073  05AD                     u1371:
  4074  05AD  2D0A               	goto	l1605
  4075  05AE                     u1370:
  4076  05AE                     l1623:
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4079  05AE  0020               	movlb	0	; select bank0
  4080  05AF  0842               	movf	dtoa@s,w
  4081  05B0  0443               	iorwf	dtoa@s+1,w
  4082  05B1  1D03               	btfss	3,2
  4083  05B2  2DB4               	goto	u1381
  4084  05B3  2DB5               	goto	u1380
  4085  05B4                     u1381:
  4086  05B4  2DB9               	goto	l1627
  4087  05B5                     u1380:
  4088  05B5                     l1625:
  4089  05B5  1D6E               	btfss	_flags,2
  4090  05B6  2DB8               	goto	u1391
  4091  05B7  2DB9               	goto	u1390
  4092  05B8                     u1391:
  4093  05B8  2DD5               	goto	l1637
  4094  05B9                     u1390:
  4095  05B9                     l1627:
  4096                           
  4097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  4098  05B9  30FF               	movlw	255
  4099  05BA  07CC               	addwf	dtoa@i,f
  4100  05BB  30FF               	movlw	255
  4101  05BC  3DCD               	addwfc	dtoa@i+1,f
  4102  05BD                     l1629:
  4103                           
  4104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4105  05BD  0842               	movf	dtoa@s,w
  4106  05BE  0443               	iorwf	dtoa@s+1,w
  4107  05BF  1D03               	btfss	3,2
  4108  05C0  2DC2               	goto	u1401
  4109  05C1  2DC3               	goto	u1400
  4110  05C2                     u1401:
  4111  05C2  2DC8               	goto	l1633
  4112  05C3                     u1400:
  4113  05C3                     l1631:
  4114  05C3  302B               	movlw	43
  4115  05C4  00BB               	movwf	_dtoa$615
  4116  05C5  3000               	movlw	0
  4117  05C6  00BC               	movwf	_dtoa$615+1
  4118  05C7  2DCC               	goto	l1635
  4119  05C8                     l1633:
  4120  05C8  302D               	movlw	45
  4121  05C9  00BB               	movwf	_dtoa$615
  4122  05CA  3000               	movlw	0
  4123  05CB  00BC               	movwf	_dtoa$615+1
  4124  05CC                     l1635:
  4125  05CC  083B               	movf	_dtoa$615,w
  4126  05CD  00B8               	movwf	??_dtoa
  4127  05CE  084C               	movf	dtoa@i,w
  4128  05CF  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4129  05D0  0086               	movwf	6
  4130  05D1  3001               	movlw	1	; select bank2/3
  4131  05D2  0087               	movwf	7
  4132  05D3  0838               	movf	??_dtoa,w
  4133  05D4  0081               	movwf	1
  4134  05D5                     l1637:
  4135                           
  4136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4137  05D5  084C               	movf	dtoa@i,w
  4138  05D6  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4139  05D7  00B8               	movwf	??_dtoa
  4140  05D8  0838               	movf	??_dtoa,w
  4141  05D9  00A4               	movwf	pad@buf
  4142  05DA  0841               	movf	dtoa@w+1,w
  4143  05DB  00A6               	movwf	pad@p+1
  4144  05DC  0840               	movf	dtoa@w,w
  4145  05DD  00A5               	movwf	pad@p
  4146  05DE  083D               	movf	dtoa@fp,w
  4147  05DF  3181  2108  3184   	fcall	_pad
  4148  05E2  0020               	movlb	0	; select bank0
  4149  05E3  0825               	movf	?_pad+1,w
  4150  05E4  00B1               	movwf	?_dtoa+1
  4151  05E5  0824               	movf	?_pad,w
  4152  05E6  00B0               	movwf	?_dtoa
  4153  05E7                     l765:
  4154  05E7  0008               	return
  4155  05E8                     __end_of_dtoa:
  4156                           
  4157                           	psect	text8
  4158  0108                     __ptext8:	
  4159 ;; *************** function _pad *****************
  4160 ;; Defined at:
  4161 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  fp              1    wreg     PTR struct _IO_FILE
  4164 ;;		 -> sprintf@f(5), 
  4165 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  4166 ;;		 -> dbuf(32), 
  4167 ;;  p               2    5[BANK0 ] int 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  4170 ;;		 -> sprintf@f(5), 
  4171 ;;  w               2    9[BANK0 ] int 
  4172 ;;  i               2    7[BANK0 ] int 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  2    4[BANK0 ] int 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4182 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4183 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4185 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4186 ;;Total ram usage:        9 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    3
  4189 ;; This function calls:
  4190 ;;		_fputc
  4191 ;;		_fputs
  4192 ;;		_strlen
  4193 ;; This function is called by:
  4194 ;;		_dtoa
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _pad
  4200  0108                     _pad:
  4201                           
  4202                           ;incstack = 0
  4203                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4204                           ;pad@fp stored from wreg
  4205  0108  0020               	movlb	0	; select bank0
  4206  0109  00AB               	movwf	pad@fp
  4207  010A                     l1543:
  4208                           
  4209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4210  010A  1C6E               	btfss	_flags,0
  4211  010B  290D               	goto	u1191
  4212  010C  290E               	goto	u1190
  4213  010D                     u1191:
  4214  010D  2916               	goto	l1547
  4215  010E                     u1190:
  4216  010E                     l1545:
  4217                           
  4218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4219  010E  082B               	movf	pad@fp,w
  4220  010F  00FC               	movwf	??_pad
  4221  0110  087C               	movf	??_pad,w
  4222  0111  00F8               	movwf	fputs@fp
  4223  0112  0824               	movf	pad@buf,w
  4224  0113  318F  2778  3181   	fcall	_fputs
  4225  0116                     l1547:
  4226                           
  4227                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4228  0116  0020               	movlb	0	; select bank0
  4229  0117  1BA6               	btfsc	pad@p+1,7
  4230  0118  291A               	goto	u1201
  4231  0119  291B               	goto	u1200
  4232  011A                     u1201:
  4233  011A  2920               	goto	l1551
  4234  011B                     u1200:
  4235  011B                     l1549:
  4236  011B  0826               	movf	pad@p+1,w
  4237  011C  00AA               	movwf	pad@w+1
  4238  011D  0825               	movf	pad@p,w
  4239  011E  00A9               	movwf	pad@w
  4240  011F  2922               	goto	l734
  4241  0120                     l1551:
  4242  0120  01A9               	clrf	pad@w
  4243  0121  01AA               	clrf	pad@w+1
  4244  0122                     l734:
  4245                           
  4246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4247  0122  01A7               	clrf	pad@i
  4248  0123  01A8               	clrf	pad@i+1
  4249                           
  4250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4251  0124  2936               	goto	l1557
  4252  0125                     l1553:
  4253                           
  4254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4255  0125  3020               	movlw	32
  4256  0126  00F0               	movwf	fputc@c
  4257  0127  3000               	movlw	0
  4258  0128  00F1               	movwf	fputc@c+1
  4259  0129  0020               	movlb	0	; select bank0
  4260  012A  082B               	movf	pad@fp,w
  4261  012B  00FC               	movwf	??_pad
  4262  012C  087C               	movf	??_pad,w
  4263  012D  00F2               	movwf	fputc@fp
  4264  012E  3180  2066  3181   	fcall	_fputc
  4265  0131                     l1555:
  4266                           
  4267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4268  0131  3001               	movlw	1
  4269  0132  0020               	movlb	0	; select bank0
  4270  0133  07A7               	addwf	pad@i,f
  4271  0134  3000               	movlw	0
  4272  0135  3DA8               	addwfc	pad@i+1,f
  4273  0136                     l1557:
  4274                           
  4275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4276  0136  0828               	movf	pad@i+1,w
  4277  0137  3A80               	xorlw	128
  4278  0138  00FC               	movwf	??_pad
  4279  0139  082A               	movf	pad@w+1,w
  4280  013A  3A80               	xorlw	128
  4281  013B  027C               	subwf	??_pad,w
  4282  013C  1D03               	skipz
  4283  013D  2940               	goto	u1215
  4284  013E  0829               	movf	pad@w,w
  4285  013F  0227               	subwf	pad@i,w
  4286  0140                     u1215:
  4287  0140  1C03               	skipc
  4288  0141  2943               	goto	u1211
  4289  0142  2944               	goto	u1210
  4290  0143                     u1211:
  4291  0143  2925               	goto	l1553
  4292  0144                     u1210:
  4293  0144                     l737:
  4294                           
  4295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4296  0144  0020               	movlb	0	; select bank0
  4297  0145  186E               	btfsc	_flags,0
  4298  0146  2948               	goto	u1221
  4299  0147  2949               	goto	u1220
  4300  0148                     u1221:
  4301  0148  2951               	goto	l1561
  4302  0149                     u1220:
  4303  0149                     l1559:
  4304                           
  4305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4306  0149  082B               	movf	pad@fp,w
  4307  014A  00FC               	movwf	??_pad
  4308  014B  087C               	movf	??_pad,w
  4309  014C  00F8               	movwf	fputs@fp
  4310  014D  0824               	movf	pad@buf,w
  4311  014E  318F  2778  3181   	fcall	_fputs
  4312  0151                     l1561:
  4313                           
  4314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4315  0151  0020               	movlb	0	; select bank0
  4316  0152  0824               	movf	pad@buf,w
  4317  0153  318E  2675  3181   	fcall	_strlen
  4318  0156  0020               	movlb	0	; select bank0
  4319  0157  0829               	movf	pad@w,w
  4320  0158  0770               	addwf	?_strlen,w
  4321  0159  00A4               	movwf	?_pad
  4322  015A  082A               	movf	pad@w+1,w
  4323  015B  3D71               	addwfc	?_strlen+1,w
  4324  015C  00A5               	movwf	?_pad+1
  4325  015D                     l739:
  4326  015D  0008               	return
  4327  015E                     __end_of_pad:
  4328                           
  4329                           	psect	text9
  4330  0E75                     __ptext9:	
  4331 ;; *************** function _strlen *****************
  4332 ;; Defined at:
  4333 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  s               1    wreg     PTR const unsigned char 
  4336 ;;		 -> dbuf(32), 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  s               1    4[COMMON] PTR const unsigned char 
  4339 ;;		 -> dbuf(32), 
  4340 ;;  a               1    3[COMMON] PTR const unsigned char 
  4341 ;;		 -> dbuf(32), 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  2    0[COMMON] unsigned int 
  4344 ;; Registers used:
  4345 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4353 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4354 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4355 ;;Total ram usage:        5 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_pad
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           
  4365                           ;psect for function _strlen
  4366  0E75                     _strlen:
  4367                           
  4368                           ;incstack = 0
  4369                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4370                           ;strlen@s stored from wreg
  4371  0E75  00F4               	movwf	strlen@s
  4372  0E76                     l1465:
  4373  0E76  0874               	movf	strlen@s,w
  4374  0E77  00F2               	movwf	??_strlen
  4375  0E78  0872               	movf	??_strlen,w
  4376  0E79  00F3               	movwf	strlen@a
  4377  0E7A  2E7F               	goto	l1469
  4378  0E7B                     l1467:
  4379  0E7B  3001               	movlw	1
  4380  0E7C  00F2               	movwf	??_strlen
  4381  0E7D  0872               	movf	??_strlen,w
  4382  0E7E  07F4               	addwf	strlen@s,f
  4383  0E7F                     l1469:
  4384  0E7F  0874               	movf	strlen@s,w
  4385  0E80  0086               	movwf	6
  4386  0E81  3001               	movlw	1	; select bank2/3
  4387  0E82  0087               	movwf	7
  4388  0E83  0801               	movf	1,w
  4389  0E84  1D03               	btfss	3,2
  4390  0E85  2E87               	goto	u971
  4391  0E86  2E88               	goto	u970
  4392  0E87                     u971:
  4393  0E87  2E7B               	goto	l1467
  4394  0E88                     u970:
  4395  0E88                     l1471:
  4396  0E88  0873               	movf	strlen@a,w
  4397  0E89  0274               	subwf	strlen@s,w
  4398  0E8A  00F0               	movwf	?_strlen
  4399  0E8B  01F1               	clrf	?_strlen+1
  4400  0E8C  1BF0               	btfsc	?_strlen,7
  4401  0E8D  03F1               	decf	?_strlen+1,f
  4402  0E8E                     l815:
  4403  0E8E  0008               	return
  4404  0E8F                     __end_of_strlen:
  4405                           
  4406                           	psect	text10
  4407  0F78                     __ptext10:	
  4408 ;; *************** function _fputs *****************
  4409 ;; Defined at:
  4410 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  s               1    wreg     PTR const unsigned char 
  4413 ;;		 -> dbuf(32), 
  4414 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  4415 ;;		 -> sprintf@f(5), 
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4418 ;;		 -> dbuf(32), 
  4419 ;;  i               2    1[BANK0 ] int 
  4420 ;;  c               1    0[BANK0 ] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  2    8[COMMON] int 
  4423 ;; Registers used:
  4424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4430 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4431 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4432 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4433 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4434 ;;Total ram usage:        8 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:    2
  4437 ;; This function calls:
  4438 ;;		_fputc
  4439 ;; This function is called by:
  4440 ;;		_pad
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           
  4445                           ;psect for function _fputs
  4446  0F78                     _fputs:
  4447                           
  4448                           ;incstack = 0
  4449                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4450                           ;fputs@s stored from wreg
  4451  0F78  0020               	movlb	0	; select bank0
  4452  0F79  00A3               	movwf	fputs@s
  4453  0F7A                     l1457:
  4454  0F7A  01A1               	clrf	fputs@i
  4455  0F7B  01A2               	clrf	fputs@i+1
  4456  0F7C  2F90               	goto	l1463
  4457  0F7D                     l1459:
  4458  0F7D  0820               	movf	fputs@c,w
  4459  0F7E  00F9               	movwf	??_fputs
  4460  0F7F  01FA               	clrf	??_fputs+1
  4461  0F80  0879               	movf	??_fputs,w
  4462  0F81  00F0               	movwf	fputc@c
  4463  0F82  087A               	movf	??_fputs+1,w
  4464  0F83  00F1               	movwf	fputc@c+1
  4465  0F84  0878               	movf	fputs@fp,w
  4466  0F85  00FB               	movwf	??_fputs+2
  4467  0F86  087B               	movf	??_fputs+2,w
  4468  0F87  00F2               	movwf	fputc@fp
  4469  0F88  3180  2066  318F   	fcall	_fputc
  4470  0F8B                     l1461:
  4471  0F8B  3001               	movlw	1
  4472  0F8C  0020               	movlb	0	; select bank0
  4473  0F8D  07A1               	addwf	fputs@i,f
  4474  0F8E  3000               	movlw	0
  4475  0F8F  3DA2               	addwfc	fputs@i+1,f
  4476  0F90                     l1463:
  4477  0F90  0821               	movf	fputs@i,w
  4478  0F91  0723               	addwf	fputs@s,w
  4479  0F92  00F9               	movwf	??_fputs
  4480  0F93  0879               	movf	??_fputs,w
  4481  0F94  0086               	movwf	6
  4482  0F95  3001               	movlw	1	; select bank2/3
  4483  0F96  0087               	movwf	7
  4484  0F97  0801               	movf	1,w
  4485  0F98  00FA               	movwf	??_fputs+1
  4486  0F99  087A               	movf	??_fputs+1,w
  4487  0F9A  00A0               	movwf	fputs@c
  4488  0F9B  0820               	movf	fputs@c,w
  4489  0F9C  1D03               	btfss	3,2
  4490  0F9D  2F9F               	goto	u961
  4491  0F9E  2FA0               	goto	u960
  4492  0F9F                     u961:
  4493  0F9F  2F7D               	goto	l1459
  4494  0FA0                     u960:
  4495  0FA0                     l806:
  4496  0FA0  0008               	return
  4497  0FA1                     __end_of_fputs:
  4498                           
  4499                           	psect	text11
  4500  0066                     __ptext11:	
  4501 ;; *************** function _fputc *****************
  4502 ;; Defined at:
  4503 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  c               2    0[COMMON] int 
  4506 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  4507 ;;		 -> sprintf@f(5), 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;		None
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  2    0[COMMON] int 
  4512 ;; Registers used:
  4513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4519 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4521 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4522 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4523 ;;Total ram usage:        8 bytes
  4524 ;; Hardware stack levels used:    1
  4525 ;; Hardware stack levels required when called:    1
  4526 ;; This function calls:
  4527 ;;		_putch
  4528 ;; This function is called by:
  4529 ;;		_pad
  4530 ;;		_vfpfcnvrt
  4531 ;;		_fputs
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           
  4536                           ;psect for function _fputc
  4537  0066                     _fputc:
  4538  0066                     l1441:	
  4539                           ;incstack = 0
  4540                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4541                           
  4542  0066  0872               	movf	fputc@fp,w
  4543  0067  1903               	btfsc	3,2
  4544  0068  286A               	goto	u921
  4545  0069  286B               	goto	u920
  4546  006A                     u921:
  4547  006A  2870               	goto	l1445
  4548  006B                     u920:
  4549  006B                     l1443:
  4550  006B  0872               	movf	fputc@fp,w
  4551  006C  1D03               	btfss	3,2
  4552  006D  286F               	goto	u931
  4553  006E  2870               	goto	u930
  4554  006F                     u931:
  4555  006F  2875               	goto	l1447
  4556  0070                     u930:
  4557  0070                     l1445:
  4558  0070  0870               	movf	fputc@c,w
  4559  0071  318E  261F  3180   	fcall	_putch
  4560  0074  28B4               	goto	l798
  4561  0075                     l1447:
  4562  0075  0872               	movf	fputc@fp,w
  4563  0076  3E03               	addlw	3
  4564  0077  0086               	movwf	6
  4565  0078  0187               	clrf	7
  4566  0079  0016               	moviw fsr1++
  4567  007A  0401               	iorwf	1,w
  4568  007B  1903               	btfsc	3,2
  4569  007C  287E               	goto	u941
  4570  007D  287F               	goto	u940
  4571  007E                     u941:
  4572  007E  289C               	goto	l1451
  4573  007F                     u940:
  4574  007F                     l1449:
  4575  007F  0872               	movf	fputc@fp,w
  4576  0080  3E03               	addlw	3
  4577  0081  0086               	movwf	6
  4578  0082  0187               	clrf	7
  4579  0083  3F40               	moviw [0]fsr1
  4580  0084  00F3               	movwf	??_fputc
  4581  0085  3F41               	moviw [1]fsr1
  4582  0086  00F4               	movwf	??_fputc+1
  4583  0087  0A72               	incf	fputc@fp,w
  4584  0088  0086               	movwf	6
  4585  0089  0187               	clrf	7
  4586  008A  3F40               	moviw [0]fsr1
  4587  008B  00F5               	movwf	??_fputc+2
  4588  008C  3F41               	moviw [1]fsr1
  4589  008D  00F6               	movwf	??_fputc+3
  4590  008E  0876               	movf	??_fputc+3,w
  4591  008F  3A80               	xorlw	128
  4592  0090  00F7               	movwf	??_fputc+4
  4593  0091  0874               	movf	??_fputc+1,w
  4594  0092  3A80               	xorlw	128
  4595  0093  0277               	subwf	??_fputc+4,w
  4596  0094  1D03               	skipz
  4597  0095  2898               	goto	u955
  4598  0096  0873               	movf	??_fputc,w
  4599  0097  0275               	subwf	??_fputc+2,w
  4600  0098                     u955:
  4601  0098  1803               	skipnc
  4602  0099  289B               	goto	u951
  4603  009A  289C               	goto	u950
  4604  009B                     u951:
  4605  009B  28B4               	goto	l798
  4606  009C                     u950:
  4607  009C                     l1451:
  4608  009C  0870               	movf	fputc@c,w
  4609  009D  00F3               	movwf	??_fputc
  4610  009E  0872               	movf	fputc@fp,w
  4611  009F  0086               	movwf	6
  4612  00A0  0187               	clrf	7
  4613  00A1  0A72               	incf	fputc@fp,w
  4614  00A2  0084               	movwf	4
  4615  00A3  0185               	clrf	5
  4616  00A4  0800               	movf	0,w
  4617  00A5  0701               	addwf	1,w
  4618  00A6  00F4               	movwf	??_fputc+1
  4619  00A7  0874               	movf	??_fputc+1,w
  4620  00A8  0086               	movwf	6
  4621  00A9  0187               	clrf	7
  4622  00AA  0873               	movf	??_fputc,w
  4623  00AB  0081               	movwf	1
  4624  00AC                     l1453:
  4625  00AC  0A72               	incf	fputc@fp,w
  4626  00AD  0086               	movwf	6
  4627  00AE  0187               	clrf	7
  4628  00AF  3001               	movlw	1
  4629  00B0  0781               	addwf	1,f
  4630  00B1  3141               	addfsr 1,1
  4631  00B2  1803               	skipnc
  4632  00B3  0A81               	incf	1,f
  4633  00B4                     l798:
  4634  00B4  0008               	return
  4635  00B5                     __end_of_fputc:
  4636                           
  4637                           	psect	text12
  4638  0E1F                     __ptext12:	
  4639 ;; *************** function _putch *****************
  4640 ;; Defined at:
  4641 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  c               1    wreg     unsigned char 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  c               1    0[COMMON] unsigned char 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4659 ;;Total ram usage:        0 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; This function calls:
  4662 ;;		Nothing
  4663 ;; This function is called by:
  4664 ;;		_fputc
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           
  4669                           ;psect for function _putch
  4670  0E1F                     _putch:
  4671  0E1F                     l809:	
  4672                           ;incstack = 0
  4673                           ; Regs used in _putch: [wreg]
  4674                           
  4675  0E1F  0008               	return
  4676  0E20                     __end_of_putch:
  4677                           
  4678                           	psect	text13
  4679  0E5B                     __ptext13:	
  4680 ;; *************** function _abs *****************
  4681 ;; Defined at:
  4682 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;  a               2    3[COMMON] int 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;		None
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  2    3[COMMON] int 
  4689 ;; Registers used:
  4690 ;;		wreg, status,2, status,0
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4696 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4698 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4699 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4700 ;;Total ram usage:        4 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_dtoa
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           
  4710                           ;psect for function _abs
  4711  0E5B                     _abs:
  4712  0E5B                     l1565:	
  4713                           ;incstack = 0
  4714                           ; Regs used in _abs: [wreg+status,2+status,0]
  4715                           
  4716  0E5B  0874               	movf	abs@a+1,w
  4717  0E5C  3A80               	xorlw	128
  4718  0E5D  00F5               	movwf	??_abs
  4719  0E5E  3080               	movlw	128
  4720  0E5F  0275               	subwf	??_abs,w
  4721  0E60  1D03               	skipz
  4722  0E61  2E64               	goto	u1235
  4723  0E62  3001               	movlw	1
  4724  0E63  0273               	subwf	abs@a,w
  4725  0E64                     u1235:
  4726  0E64  1803               	skipnc
  4727  0E65  2E67               	goto	u1231
  4728  0E66  2E68               	goto	u1230
  4729  0E67                     u1231:
  4730  0E67  2E74               	goto	l783
  4731  0E68                     u1230:
  4732  0E68                     l1567:
  4733  0E68  0973               	comf	abs@a,w
  4734  0E69  00F5               	movwf	??_abs
  4735  0E6A  0974               	comf	abs@a+1,w
  4736  0E6B  00F6               	movwf	??_abs+1
  4737  0E6C  0AF5               	incf	??_abs,f
  4738  0E6D  1903               	skipnz
  4739  0E6E  0AF6               	incf	??_abs+1,f
  4740  0E6F  0875               	movf	??_abs,w
  4741  0E70  00F3               	movwf	?_abs
  4742  0E71  0876               	movf	??_abs+1,w
  4743  0E72  00F4               	movwf	?_abs+1
  4744  0E73  2E74               	goto	l786
  4745  0E74                     l783:
  4746  0E74                     l786:
  4747  0E74  0008               	return
  4748  0E75                     __end_of_abs:
  4749                           
  4750                           	psect	text14
  4751  0298                     __ptext14:	
  4752 ;; *************** function ___aomod *****************
  4753 ;; Defined at:
  4754 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  divisor         8    0[BANK0 ] long long 
  4757 ;;  dividend        8    8[BANK0 ] long long 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  sign            1    2[COMMON] unsigned char 
  4760 ;;  counter         1    1[COMMON] unsigned char 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  8    0[BANK0 ] long long 
  4763 ;; Registers used:
  4764 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4770 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4771 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4772 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4773 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4774 ;;Total ram usage:       19 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_dtoa
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           
  4784                           ;psect for function ___aomod
  4785  0298                     ___aomod:
  4786  0298                     l1513:	
  4787                           ;incstack = 0
  4788                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4789                           
  4790  0298  01F2               	clrf	___aomod@sign
  4791  0299                     l1515:
  4792  0299  3028               	movlw	low ___aomod@dividend
  4793  029A  0086               	movwf	6
  4794  029B  3000               	movlw	high ___aomod@dividend
  4795  029C  0087               	movwf	7
  4796  029D  3F47               	moviw [7]fsr1
  4797  029E  00F0               	movwf	??___aomod
  4798  029F  1FF0               	btfss	??___aomod,7
  4799  02A0  2AA2               	goto	u1091
  4800  02A1  2AA3               	goto	u1090
  4801  02A2                     u1091:
  4802  02A2  2AC4               	goto	l1519
  4803  02A3                     u1090:
  4804  02A3                     l1517:
  4805  02A3  0020               	movlb	0	; select bank0
  4806  02A4  09A8               	comf	___aomod@dividend,f
  4807  02A5  09A9               	comf	___aomod@dividend+1,f
  4808  02A6  09AA               	comf	___aomod@dividend+2,f
  4809  02A7  09AB               	comf	___aomod@dividend+3,f
  4810  02A8  09AC               	comf	___aomod@dividend+4,f
  4811  02A9  09AD               	comf	___aomod@dividend+5,f
  4812  02AA  09AE               	comf	___aomod@dividend+6,f
  4813  02AB  09AF               	comf	___aomod@dividend+7,f
  4814  02AC  0AA8               	incf	___aomod@dividend,f
  4815  02AD  1D03               	skipz
  4816  02AE  2AC2               	goto	u110lld
  4817  02AF  0AA9               	incf	___aomod@dividend+1,f
  4818  02B0  1D03               	skipz
  4819  02B1  2AC2               	goto	u110lld
  4820  02B2  0AAA               	incf	___aomod@dividend+2,f
  4821  02B3  1D03               	skipz
  4822  02B4  2AC2               	goto	u110lld
  4823  02B5  0AAB               	incf	___aomod@dividend+3,f
  4824  02B6  1D03               	skipz
  4825  02B7  2AC2               	goto	u110lld
  4826  02B8  0AAC               	incf	___aomod@dividend+4,f
  4827  02B9  1D03               	skipz
  4828  02BA  2AC2               	goto	u110lld
  4829  02BB  0AAD               	incf	___aomod@dividend+5,f
  4830  02BC  1D03               	skipz
  4831  02BD  2AC2               	goto	u110lld
  4832  02BE  0AAE               	incf	___aomod@dividend+6,f
  4833  02BF  1D03               	skipz
  4834  02C0  2AC2               	goto	u110lld
  4835  02C1  0AAF               	incf	___aomod@dividend+7,f
  4836  02C2                     u110lld:
  4837  02C2  01F2               	clrf	___aomod@sign
  4838  02C3  0AF2               	incf	___aomod@sign,f
  4839  02C4                     l1519:
  4840  02C4  3020               	movlw	low ___aomod@divisor
  4841  02C5  0086               	movwf	6
  4842  02C6  3000               	movlw	high ___aomod@divisor
  4843  02C7  0087               	movwf	7
  4844  02C8  3F47               	moviw [7]fsr1
  4845  02C9  00F0               	movwf	??___aomod
  4846  02CA  1FF0               	btfss	??___aomod,7
  4847  02CB  2ACD               	goto	u1111
  4848  02CC  2ACE               	goto	u1110
  4849  02CD                     u1111:
  4850  02CD  2AED               	goto	l1523
  4851  02CE                     u1110:
  4852  02CE                     l1521:
  4853  02CE  0020               	movlb	0	; select bank0
  4854  02CF  09A0               	comf	___aomod@divisor,f
  4855  02D0  09A1               	comf	___aomod@divisor+1,f
  4856  02D1  09A2               	comf	___aomod@divisor+2,f
  4857  02D2  09A3               	comf	___aomod@divisor+3,f
  4858  02D3  09A4               	comf	___aomod@divisor+4,f
  4859  02D4  09A5               	comf	___aomod@divisor+5,f
  4860  02D5  09A6               	comf	___aomod@divisor+6,f
  4861  02D6  09A7               	comf	___aomod@divisor+7,f
  4862  02D7  0AA0               	incf	___aomod@divisor,f
  4863  02D8  1D03               	skipz
  4864  02D9  2AED               	goto	u112lld
  4865  02DA  0AA1               	incf	___aomod@divisor+1,f
  4866  02DB  1D03               	skipz
  4867  02DC  2AED               	goto	u112lld
  4868  02DD  0AA2               	incf	___aomod@divisor+2,f
  4869  02DE  1D03               	skipz
  4870  02DF  2AED               	goto	u112lld
  4871  02E0  0AA3               	incf	___aomod@divisor+3,f
  4872  02E1  1D03               	skipz
  4873  02E2  2AED               	goto	u112lld
  4874  02E3  0AA4               	incf	___aomod@divisor+4,f
  4875  02E4  1D03               	skipz
  4876  02E5  2AED               	goto	u112lld
  4877  02E6  0AA5               	incf	___aomod@divisor+5,f
  4878  02E7  1D03               	skipz
  4879  02E8  2AED               	goto	u112lld
  4880  02E9  0AA6               	incf	___aomod@divisor+6,f
  4881  02EA  1D03               	skipz
  4882  02EB  2AED               	goto	u112lld
  4883  02EC  0AA7               	incf	___aomod@divisor+7,f
  4884  02ED                     u112lld:
  4885  02ED                     l1523:
  4886  02ED  0020               	movlb	0	; select bank0
  4887  02EE  0820               	movf	___aomod@divisor,w
  4888  02EF  0421               	iorwf	___aomod@divisor+1,w
  4889  02F0  0422               	iorwf	___aomod@divisor+2,w
  4890  02F1  0423               	iorwf	___aomod@divisor+3,w
  4891  02F2  0424               	iorwf	___aomod@divisor+4,w
  4892  02F3  0425               	iorwf	___aomod@divisor+5,w
  4893  02F4  0426               	iorwf	___aomod@divisor+6,w
  4894  02F5  0427               	iorwf	___aomod@divisor+7,w
  4895  02F6  1903               	skipnz
  4896  02F7  2AF9               	goto	u1131
  4897  02F8  2AFA               	goto	u1130
  4898  02F9                     u1131:
  4899  02F9  2B4D               	goto	l1539
  4900  02FA                     u1130:
  4901  02FA                     l1525:
  4902  02FA  01F1               	clrf	___aomod@counter
  4903  02FB  0AF1               	incf	___aomod@counter,f
  4904  02FC  2B09               	goto	l1531
  4905  02FD                     l1527:
  4906  02FD  35A0               	lslf	___aomod@divisor,f
  4907  02FE  0DA1               	rlf	___aomod@divisor+1,f
  4908  02FF  0DA2               	rlf	___aomod@divisor+2,f
  4909  0300  0DA3               	rlf	___aomod@divisor+3,f
  4910  0301  0DA4               	rlf	___aomod@divisor+4,f
  4911  0302  0DA5               	rlf	___aomod@divisor+5,f
  4912  0303  0DA6               	rlf	___aomod@divisor+6,f
  4913  0304  0DA7               	rlf	___aomod@divisor+7,f
  4914  0305                     l1529:
  4915  0305  3001               	movlw	1
  4916  0306  00F0               	movwf	??___aomod
  4917  0307  0870               	movf	??___aomod,w
  4918  0308  07F1               	addwf	___aomod@counter,f
  4919  0309                     l1531:
  4920  0309  1FA7               	btfss	___aomod@divisor+7,7
  4921  030A  2B0C               	goto	u1141
  4922  030B  2B0D               	goto	u1140
  4923  030C                     u1141:
  4924  030C  2AFD               	goto	l1527
  4925  030D                     u1140:
  4926  030D                     l1533:
  4927  030D  0827               	movf	___aomod@divisor+7,w
  4928  030E  022F               	subwf	___aomod@dividend+7,w
  4929  030F  1D03               	skipz
  4930  0310  2B2B               	goto	u1155
  4931  0311  0826               	movf	___aomod@divisor+6,w
  4932  0312  022E               	subwf	___aomod@dividend+6,w
  4933  0313  1D03               	skipz
  4934  0314  2B2B               	goto	u1155
  4935  0315  0825               	movf	___aomod@divisor+5,w
  4936  0316  022D               	subwf	___aomod@dividend+5,w
  4937  0317  1D03               	skipz
  4938  0318  2B2B               	goto	u1155
  4939  0319  0824               	movf	___aomod@divisor+4,w
  4940  031A  022C               	subwf	___aomod@dividend+4,w
  4941  031B  1D03               	skipz
  4942  031C  2B2B               	goto	u1155
  4943  031D  0823               	movf	___aomod@divisor+3,w
  4944  031E  022B               	subwf	___aomod@dividend+3,w
  4945  031F  1D03               	skipz
  4946  0320  2B2B               	goto	u1155
  4947  0321  0822               	movf	___aomod@divisor+2,w
  4948  0322  022A               	subwf	___aomod@dividend+2,w
  4949  0323  1D03               	skipz
  4950  0324  2B2B               	goto	u1155
  4951  0325  0821               	movf	___aomod@divisor+1,w
  4952  0326  0229               	subwf	___aomod@dividend+1,w
  4953  0327  1D03               	skipz
  4954  0328  2B2B               	goto	u1155
  4955  0329  0820               	movf	___aomod@divisor,w
  4956  032A  0228               	subwf	___aomod@dividend,w
  4957  032B                     u1155:
  4958  032B  1C03               	skipc
  4959  032C  2B2E               	goto	u1151
  4960  032D  2B2F               	goto	u1150
  4961  032E                     u1151:
  4962  032E  2B3F               	goto	l1537
  4963  032F                     u1150:
  4964  032F                     l1535:
  4965  032F  0820               	movf	___aomod@divisor,w
  4966  0330  02A8               	subwf	___aomod@dividend,f
  4967  0331  0821               	movf	___aomod@divisor+1,w
  4968  0332  3BA9               	subwfb	___aomod@dividend+1,f
  4969  0333  0822               	movf	___aomod@divisor+2,w
  4970  0334  3BAA               	subwfb	___aomod@dividend+2,f
  4971  0335  0823               	movf	___aomod@divisor+3,w
  4972  0336  3BAB               	subwfb	___aomod@dividend+3,f
  4973  0337  0824               	movf	___aomod@divisor+4,w
  4974  0338  3BAC               	subwfb	___aomod@dividend+4,f
  4975  0339  0825               	movf	___aomod@divisor+5,w
  4976  033A  3BAD               	subwfb	___aomod@dividend+5,f
  4977  033B  0826               	movf	___aomod@divisor+6,w
  4978  033C  3BAE               	subwfb	___aomod@dividend+6,f
  4979  033D  0827               	movf	___aomod@divisor+7,w
  4980  033E  3BAF               	subwfb	___aomod@dividend+7,f
  4981  033F                     l1537:
  4982  033F  36A7               	lsrf	___aomod@divisor+7,f
  4983  0340  0CA6               	rrf	___aomod@divisor+6,f
  4984  0341  0CA5               	rrf	___aomod@divisor+5,f
  4985  0342  0CA4               	rrf	___aomod@divisor+4,f
  4986  0343  0CA3               	rrf	___aomod@divisor+3,f
  4987  0344  0CA2               	rrf	___aomod@divisor+2,f
  4988  0345  0CA1               	rrf	___aomod@divisor+1,f
  4989  0346  0CA0               	rrf	___aomod@divisor,f
  4990  0347  3001               	movlw	1
  4991  0348  02F1               	subwf	___aomod@counter,f
  4992  0349  1D03               	btfss	3,2
  4993  034A  2B4C               	goto	u1161
  4994  034B  2B4D               	goto	u1160
  4995  034C                     u1161:
  4996  034C  2B0D               	goto	l1533
  4997  034D                     u1160:
  4998  034D                     l1539:
  4999  034D  0872               	movf	___aomod@sign,w
  5000  034E  1903               	btfsc	3,2
  5001  034F  2B51               	goto	u1171
  5002  0350  2B52               	goto	u1170
  5003  0351                     u1171:
  5004  0351  2B70               	goto	l357
  5005  0352                     u1170:
  5006  0352                     l1541:
  5007  0352  09A8               	comf	___aomod@dividend,f
  5008  0353  09A9               	comf	___aomod@dividend+1,f
  5009  0354  09AA               	comf	___aomod@dividend+2,f
  5010  0355  09AB               	comf	___aomod@dividend+3,f
  5011  0356  09AC               	comf	___aomod@dividend+4,f
  5012  0357  09AD               	comf	___aomod@dividend+5,f
  5013  0358  09AE               	comf	___aomod@dividend+6,f
  5014  0359  09AF               	comf	___aomod@dividend+7,f
  5015  035A  0AA8               	incf	___aomod@dividend,f
  5016  035B  1D03               	skipz
  5017  035C  2B70               	goto	u118lld
  5018  035D  0AA9               	incf	___aomod@dividend+1,f
  5019  035E  1D03               	skipz
  5020  035F  2B70               	goto	u118lld
  5021  0360  0AAA               	incf	___aomod@dividend+2,f
  5022  0361  1D03               	skipz
  5023  0362  2B70               	goto	u118lld
  5024  0363  0AAB               	incf	___aomod@dividend+3,f
  5025  0364  1D03               	skipz
  5026  0365  2B70               	goto	u118lld
  5027  0366  0AAC               	incf	___aomod@dividend+4,f
  5028  0367  1D03               	skipz
  5029  0368  2B70               	goto	u118lld
  5030  0369  0AAD               	incf	___aomod@dividend+5,f
  5031  036A  1D03               	skipz
  5032  036B  2B70               	goto	u118lld
  5033  036C  0AAE               	incf	___aomod@dividend+6,f
  5034  036D  1D03               	skipz
  5035  036E  2B70               	goto	u118lld
  5036  036F  0AAF               	incf	___aomod@dividend+7,f
  5037  0370                     u118lld:
  5038  0370                     l357:
  5039  0370  0020               	movlb	0	; select bank0
  5040  0371  0828               	movf	___aomod@dividend,w
  5041  0372  00A0               	movwf	?___aomod
  5042  0373  0829               	movf	___aomod@dividend+1,w
  5043  0374  00A1               	movwf	?___aomod+1
  5044  0375  082A               	movf	___aomod@dividend+2,w
  5045  0376  00A2               	movwf	?___aomod+2
  5046  0377  082B               	movf	___aomod@dividend+3,w
  5047  0378  00A3               	movwf	?___aomod+3
  5048  0379  082C               	movf	___aomod@dividend+4,w
  5049  037A  00A4               	movwf	?___aomod+4
  5050  037B  082D               	movf	___aomod@dividend+5,w
  5051  037C  00A5               	movwf	?___aomod+5
  5052  037D  082E               	movf	___aomod@dividend+6,w
  5053  037E  00A6               	movwf	?___aomod+6
  5054  037F  082F               	movf	___aomod@dividend+7,w
  5055  0380  00A7               	movwf	?___aomod+7
  5056  0381                     l358:
  5057  0381  0008               	return
  5058  0382                     __end_of___aomod:
  5059                           
  5060                           	psect	text15
  5061  0382                     __ptext15:	
  5062 ;; *************** function ___aodiv *****************
  5063 ;; Defined at:
  5064 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;  divisor         8    0[BANK0 ] long long 
  5067 ;;  dividend        8    8[BANK0 ] long long 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  quotient        8    3[COMMON] long long 
  5070 ;;  sign            1    2[COMMON] unsigned char 
  5071 ;;  counter         1    1[COMMON] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  8    0[BANK0 ] long long 
  5074 ;; Registers used:
  5075 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5081 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5082 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5083 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5084 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5085 ;;Total ram usage:       27 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_dtoa
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           
  5095                           ;psect for function ___aodiv
  5096  0382                     ___aodiv:
  5097  0382                     l1475:	
  5098                           ;incstack = 0
  5099                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  5100                           
  5101  0382  01F2               	clrf	___aodiv@sign
  5102  0383                     l1477:
  5103  0383  3020               	movlw	low ___aodiv@divisor
  5104  0384  0086               	movwf	6
  5105  0385  3000               	movlw	high ___aodiv@divisor
  5106  0386  0087               	movwf	7
  5107  0387  3F47               	moviw [7]fsr1
  5108  0388  00F0               	movwf	??___aodiv
  5109  0389  1FF0               	btfss	??___aodiv,7
  5110  038A  2B8C               	goto	u981
  5111  038B  2B8D               	goto	u980
  5112  038C                     u981:
  5113  038C  2BAE               	goto	l1481
  5114  038D                     u980:
  5115  038D                     l1479:
  5116  038D  0020               	movlb	0	; select bank0
  5117  038E  09A0               	comf	___aodiv@divisor,f
  5118  038F  09A1               	comf	___aodiv@divisor+1,f
  5119  0390  09A2               	comf	___aodiv@divisor+2,f
  5120  0391  09A3               	comf	___aodiv@divisor+3,f
  5121  0392  09A4               	comf	___aodiv@divisor+4,f
  5122  0393  09A5               	comf	___aodiv@divisor+5,f
  5123  0394  09A6               	comf	___aodiv@divisor+6,f
  5124  0395  09A7               	comf	___aodiv@divisor+7,f
  5125  0396  0AA0               	incf	___aodiv@divisor,f
  5126  0397  1D03               	skipz
  5127  0398  2BAC               	goto	u99lld
  5128  0399  0AA1               	incf	___aodiv@divisor+1,f
  5129  039A  1D03               	skipz
  5130  039B  2BAC               	goto	u99lld
  5131  039C  0AA2               	incf	___aodiv@divisor+2,f
  5132  039D  1D03               	skipz
  5133  039E  2BAC               	goto	u99lld
  5134  039F  0AA3               	incf	___aodiv@divisor+3,f
  5135  03A0  1D03               	skipz
  5136  03A1  2BAC               	goto	u99lld
  5137  03A2  0AA4               	incf	___aodiv@divisor+4,f
  5138  03A3  1D03               	skipz
  5139  03A4  2BAC               	goto	u99lld
  5140  03A5  0AA5               	incf	___aodiv@divisor+5,f
  5141  03A6  1D03               	skipz
  5142  03A7  2BAC               	goto	u99lld
  5143  03A8  0AA6               	incf	___aodiv@divisor+6,f
  5144  03A9  1D03               	skipz
  5145  03AA  2BAC               	goto	u99lld
  5146  03AB  0AA7               	incf	___aodiv@divisor+7,f
  5147  03AC                     u99lld:
  5148  03AC  01F2               	clrf	___aodiv@sign
  5149  03AD  0AF2               	incf	___aodiv@sign,f
  5150  03AE                     l1481:
  5151  03AE  3028               	movlw	low ___aodiv@dividend
  5152  03AF  0086               	movwf	6
  5153  03B0  3000               	movlw	high ___aodiv@dividend
  5154  03B1  0087               	movwf	7
  5155  03B2  3F47               	moviw [7]fsr1
  5156  03B3  00F0               	movwf	??___aodiv
  5157  03B4  1FF0               	btfss	??___aodiv,7
  5158  03B5  2BB7               	goto	u1001
  5159  03B6  2BB8               	goto	u1000
  5160  03B7                     u1001:
  5161  03B7  2BDB               	goto	l1487
  5162  03B8                     u1000:
  5163  03B8                     l1483:
  5164  03B8  0020               	movlb	0	; select bank0
  5165  03B9  09A8               	comf	___aodiv@dividend,f
  5166  03BA  09A9               	comf	___aodiv@dividend+1,f
  5167  03BB  09AA               	comf	___aodiv@dividend+2,f
  5168  03BC  09AB               	comf	___aodiv@dividend+3,f
  5169  03BD  09AC               	comf	___aodiv@dividend+4,f
  5170  03BE  09AD               	comf	___aodiv@dividend+5,f
  5171  03BF  09AE               	comf	___aodiv@dividend+6,f
  5172  03C0  09AF               	comf	___aodiv@dividend+7,f
  5173  03C1  0AA8               	incf	___aodiv@dividend,f
  5174  03C2  1D03               	skipz
  5175  03C3  2BD7               	goto	u101lld
  5176  03C4  0AA9               	incf	___aodiv@dividend+1,f
  5177  03C5  1D03               	skipz
  5178  03C6  2BD7               	goto	u101lld
  5179  03C7  0AAA               	incf	___aodiv@dividend+2,f
  5180  03C8  1D03               	skipz
  5181  03C9  2BD7               	goto	u101lld
  5182  03CA  0AAB               	incf	___aodiv@dividend+3,f
  5183  03CB  1D03               	skipz
  5184  03CC  2BD7               	goto	u101lld
  5185  03CD  0AAC               	incf	___aodiv@dividend+4,f
  5186  03CE  1D03               	skipz
  5187  03CF  2BD7               	goto	u101lld
  5188  03D0  0AAD               	incf	___aodiv@dividend+5,f
  5189  03D1  1D03               	skipz
  5190  03D2  2BD7               	goto	u101lld
  5191  03D3  0AAE               	incf	___aodiv@dividend+6,f
  5192  03D4  1D03               	skipz
  5193  03D5  2BD7               	goto	u101lld
  5194  03D6  0AAF               	incf	___aodiv@dividend+7,f
  5195  03D7                     u101lld:
  5196  03D7                     l1485:
  5197  03D7  3001               	movlw	1
  5198  03D8  00F0               	movwf	??___aodiv
  5199  03D9  0870               	movf	??___aodiv,w
  5200  03DA  06F2               	xorwf	___aodiv@sign,f
  5201  03DB                     l1487:
  5202  03DB  3073               	movlw	low ___aodiv@quotient
  5203  03DC  0086               	movwf	6
  5204  03DD  3000               	movlw	high ___aodiv@quotient
  5205  03DE  0087               	movwf	7
  5206  03DF  3008               	movlw	8
  5207  03E0  00F0               	movwf	??___aodiv
  5208  03E1  3000               	movlw	0
  5209  03E2                     u1020:
  5210  03E2  001E               	movwi fsr1++
  5211  03E3  0BF0               	decfsz	??___aodiv,f
  5212  03E4  2BE2               	goto	u1020
  5213  03E5                     l1489:
  5214  03E5  0020               	movlb	0	; select bank0
  5215  03E6  0820               	movf	___aodiv@divisor,w
  5216  03E7  0421               	iorwf	___aodiv@divisor+1,w
  5217  03E8  0422               	iorwf	___aodiv@divisor+2,w
  5218  03E9  0423               	iorwf	___aodiv@divisor+3,w
  5219  03EA  0424               	iorwf	___aodiv@divisor+4,w
  5220  03EB  0425               	iorwf	___aodiv@divisor+5,w
  5221  03EC  0426               	iorwf	___aodiv@divisor+6,w
  5222  03ED  0427               	iorwf	___aodiv@divisor+7,w
  5223  03EE  1903               	skipnz
  5224  03EF  2BF1               	goto	u1031
  5225  03F0  2BF2               	goto	u1030
  5226  03F1                     u1031:
  5227  03F1  2C4E               	goto	l1509
  5228  03F2                     u1030:
  5229  03F2                     l1491:
  5230  03F2  01F1               	clrf	___aodiv@counter
  5231  03F3  0AF1               	incf	___aodiv@counter,f
  5232  03F4  2C01               	goto	l1497
  5233  03F5                     l1493:
  5234  03F5  35A0               	lslf	___aodiv@divisor,f
  5235  03F6  0DA1               	rlf	___aodiv@divisor+1,f
  5236  03F7  0DA2               	rlf	___aodiv@divisor+2,f
  5237  03F8  0DA3               	rlf	___aodiv@divisor+3,f
  5238  03F9  0DA4               	rlf	___aodiv@divisor+4,f
  5239  03FA  0DA5               	rlf	___aodiv@divisor+5,f
  5240  03FB  0DA6               	rlf	___aodiv@divisor+6,f
  5241  03FC  0DA7               	rlf	___aodiv@divisor+7,f
  5242  03FD                     l1495:
  5243  03FD  3001               	movlw	1
  5244  03FE  00F0               	movwf	??___aodiv
  5245  03FF  0870               	movf	??___aodiv,w
  5246  0400  07F1               	addwf	___aodiv@counter,f
  5247  0401                     l1497:
  5248  0401  1FA7               	btfss	___aodiv@divisor+7,7
  5249  0402  2C04               	goto	u1041
  5250  0403  2C05               	goto	u1040
  5251  0404                     u1041:
  5252  0404  2BF5               	goto	l1493
  5253  0405                     u1040:
  5254  0405                     l1499:
  5255  0405  35F3               	lslf	___aodiv@quotient,f
  5256  0406  0DF4               	rlf	___aodiv@quotient+1,f
  5257  0407  0DF5               	rlf	___aodiv@quotient+2,f
  5258  0408  0DF6               	rlf	___aodiv@quotient+3,f
  5259  0409  0DF7               	rlf	___aodiv@quotient+4,f
  5260  040A  0DF8               	rlf	___aodiv@quotient+5,f
  5261  040B  0DF9               	rlf	___aodiv@quotient+6,f
  5262  040C  0DFA               	rlf	___aodiv@quotient+7,f
  5263  040D                     l1501:
  5264  040D  0827               	movf	___aodiv@divisor+7,w
  5265  040E  022F               	subwf	___aodiv@dividend+7,w
  5266  040F  1D03               	skipz
  5267  0410  2C2B               	goto	u1055
  5268  0411  0826               	movf	___aodiv@divisor+6,w
  5269  0412  022E               	subwf	___aodiv@dividend+6,w
  5270  0413  1D03               	skipz
  5271  0414  2C2B               	goto	u1055
  5272  0415  0825               	movf	___aodiv@divisor+5,w
  5273  0416  022D               	subwf	___aodiv@dividend+5,w
  5274  0417  1D03               	skipz
  5275  0418  2C2B               	goto	u1055
  5276  0419  0824               	movf	___aodiv@divisor+4,w
  5277  041A  022C               	subwf	___aodiv@dividend+4,w
  5278  041B  1D03               	skipz
  5279  041C  2C2B               	goto	u1055
  5280  041D  0823               	movf	___aodiv@divisor+3,w
  5281  041E  022B               	subwf	___aodiv@dividend+3,w
  5282  041F  1D03               	skipz
  5283  0420  2C2B               	goto	u1055
  5284  0421  0822               	movf	___aodiv@divisor+2,w
  5285  0422  022A               	subwf	___aodiv@dividend+2,w
  5286  0423  1D03               	skipz
  5287  0424  2C2B               	goto	u1055
  5288  0425  0821               	movf	___aodiv@divisor+1,w
  5289  0426  0229               	subwf	___aodiv@dividend+1,w
  5290  0427  1D03               	skipz
  5291  0428  2C2B               	goto	u1055
  5292  0429  0820               	movf	___aodiv@divisor,w
  5293  042A  0228               	subwf	___aodiv@dividend,w
  5294  042B                     u1055:
  5295  042B  1C03               	skipc
  5296  042C  2C2E               	goto	u1051
  5297  042D  2C2F               	goto	u1050
  5298  042E                     u1051:
  5299  042E  2C40               	goto	l1507
  5300  042F                     u1050:
  5301  042F                     l1503:
  5302  042F  0820               	movf	___aodiv@divisor,w
  5303  0430  02A8               	subwf	___aodiv@dividend,f
  5304  0431  0821               	movf	___aodiv@divisor+1,w
  5305  0432  3BA9               	subwfb	___aodiv@dividend+1,f
  5306  0433  0822               	movf	___aodiv@divisor+2,w
  5307  0434  3BAA               	subwfb	___aodiv@dividend+2,f
  5308  0435  0823               	movf	___aodiv@divisor+3,w
  5309  0436  3BAB               	subwfb	___aodiv@dividend+3,f
  5310  0437  0824               	movf	___aodiv@divisor+4,w
  5311  0438  3BAC               	subwfb	___aodiv@dividend+4,f
  5312  0439  0825               	movf	___aodiv@divisor+5,w
  5313  043A  3BAD               	subwfb	___aodiv@dividend+5,f
  5314  043B  0826               	movf	___aodiv@divisor+6,w
  5315  043C  3BAE               	subwfb	___aodiv@dividend+6,f
  5316  043D  0827               	movf	___aodiv@divisor+7,w
  5317  043E  3BAF               	subwfb	___aodiv@dividend+7,f
  5318  043F                     l1505:
  5319  043F  1473               	bsf	___aodiv@quotient,0
  5320  0440                     l1507:
  5321  0440  36A7               	lsrf	___aodiv@divisor+7,f
  5322  0441  0CA6               	rrf	___aodiv@divisor+6,f
  5323  0442  0CA5               	rrf	___aodiv@divisor+5,f
  5324  0443  0CA4               	rrf	___aodiv@divisor+4,f
  5325  0444  0CA3               	rrf	___aodiv@divisor+3,f
  5326  0445  0CA2               	rrf	___aodiv@divisor+2,f
  5327  0446  0CA1               	rrf	___aodiv@divisor+1,f
  5328  0447  0CA0               	rrf	___aodiv@divisor,f
  5329  0448  3001               	movlw	1
  5330  0449  02F1               	subwf	___aodiv@counter,f
  5331  044A  1D03               	btfss	3,2
  5332  044B  2C4D               	goto	u1061
  5333  044C  2C4E               	goto	u1060
  5334  044D                     u1061:
  5335  044D  2C05               	goto	l1499
  5336  044E                     u1060:
  5337  044E                     l1509:
  5338  044E  0872               	movf	___aodiv@sign,w
  5339  044F  1903               	btfsc	3,2
  5340  0450  2C52               	goto	u1071
  5341  0451  2C53               	goto	u1070
  5342  0452                     u1071:
  5343  0452  2C71               	goto	l344
  5344  0453                     u1070:
  5345  0453                     l1511:
  5346  0453  09F3               	comf	___aodiv@quotient,f
  5347  0454  09F4               	comf	___aodiv@quotient+1,f
  5348  0455  09F5               	comf	___aodiv@quotient+2,f
  5349  0456  09F6               	comf	___aodiv@quotient+3,f
  5350  0457  09F7               	comf	___aodiv@quotient+4,f
  5351  0458  09F8               	comf	___aodiv@quotient+5,f
  5352  0459  09F9               	comf	___aodiv@quotient+6,f
  5353  045A  09FA               	comf	___aodiv@quotient+7,f
  5354  045B  0AF3               	incf	___aodiv@quotient,f
  5355  045C  1D03               	skipz
  5356  045D  2C71               	goto	u108lld
  5357  045E  0AF4               	incf	___aodiv@quotient+1,f
  5358  045F  1D03               	skipz
  5359  0460  2C71               	goto	u108lld
  5360  0461  0AF5               	incf	___aodiv@quotient+2,f
  5361  0462  1D03               	skipz
  5362  0463  2C71               	goto	u108lld
  5363  0464  0AF6               	incf	___aodiv@quotient+3,f
  5364  0465  1D03               	skipz
  5365  0466  2C71               	goto	u108lld
  5366  0467  0AF7               	incf	___aodiv@quotient+4,f
  5367  0468  1D03               	skipz
  5368  0469  2C71               	goto	u108lld
  5369  046A  0AF8               	incf	___aodiv@quotient+5,f
  5370  046B  1D03               	skipz
  5371  046C  2C71               	goto	u108lld
  5372  046D  0AF9               	incf	___aodiv@quotient+6,f
  5373  046E  1D03               	skipz
  5374  046F  2C71               	goto	u108lld
  5375  0470  0AFA               	incf	___aodiv@quotient+7,f
  5376  0471                     u108lld:
  5377  0471                     l344:
  5378  0471  0873               	movf	___aodiv@quotient,w
  5379  0472  0020               	movlb	0	; select bank0
  5380  0473  00A0               	movwf	?___aodiv
  5381  0474  0874               	movf	___aodiv@quotient+1,w
  5382  0475  00A1               	movwf	?___aodiv+1
  5383  0476  0875               	movf	___aodiv@quotient+2,w
  5384  0477  00A2               	movwf	?___aodiv+2
  5385  0478  0876               	movf	___aodiv@quotient+3,w
  5386  0479  00A3               	movwf	?___aodiv+3
  5387  047A  0877               	movf	___aodiv@quotient+4,w
  5388  047B  00A4               	movwf	?___aodiv+4
  5389  047C  0878               	movf	___aodiv@quotient+5,w
  5390  047D  00A5               	movwf	?___aodiv+5
  5391  047E  0879               	movf	___aodiv@quotient+6,w
  5392  047F  00A6               	movwf	?___aodiv+6
  5393  0480  087A               	movf	___aodiv@quotient+7,w
  5394  0481  00A7               	movwf	?___aodiv+7
  5395  0482                     l345:
  5396  0482  0008               	return
  5397  0483                     __end_of___aodiv:
  5398                           
  5399                           	psect	text16
  5400  0ECB                     __ptext16:	
  5401 ;; *************** function ___wmul *****************
  5402 ;; Defined at:
  5403 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  multiplier      2    0[COMMON] unsigned int 
  5406 ;;  multiplicand    2    2[COMMON] unsigned int 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  product         2    4[COMMON] unsigned int 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  2    0[COMMON] unsigned int 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5418 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5421 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5422 ;;Total ram usage:        6 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; This function calls:
  5425 ;;		Nothing
  5426 ;; This function is called by:
  5427 ;;		_main
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           
  5432                           ;psect for function ___wmul
  5433  0ECB                     ___wmul:
  5434  0ECB                     l1905:	
  5435                           ;incstack = 0
  5436                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5437                           
  5438  0ECB  01F4               	clrf	___wmul@product
  5439  0ECC  01F5               	clrf	___wmul@product+1
  5440  0ECD                     l1907:
  5441  0ECD  1C70               	btfss	___wmul@multiplier,0
  5442  0ECE  2ED0               	goto	u1721
  5443  0ECF  2ED1               	goto	u1720
  5444  0ED0                     u1721:
  5445  0ED0  2ED5               	goto	l244
  5446  0ED1                     u1720:
  5447  0ED1                     l1909:
  5448  0ED1  0872               	movf	___wmul@multiplicand,w
  5449  0ED2  07F4               	addwf	___wmul@product,f
  5450  0ED3  0873               	movf	___wmul@multiplicand+1,w
  5451  0ED4  3DF5               	addwfc	___wmul@product+1,f
  5452  0ED5                     l244:
  5453  0ED5  3001               	movlw	1
  5454  0ED6                     u1735:
  5455  0ED6  35F2               	lslf	___wmul@multiplicand,f
  5456  0ED7  0DF3               	rlf	___wmul@multiplicand+1,f
  5457  0ED8  0B89               	decfsz	9,f
  5458  0ED9  2ED6               	goto	u1735
  5459  0EDA                     l1911:
  5460  0EDA  3001               	movlw	1
  5461  0EDB                     u1745:
  5462  0EDB  36F1               	lsrf	___wmul@multiplier+1,f
  5463  0EDC  0CF0               	rrf	___wmul@multiplier,f
  5464  0EDD  0B89               	decfsz	9,f
  5465  0EDE  2EDB               	goto	u1745
  5466  0EDF                     l1913:
  5467  0EDF  0870               	movf	___wmul@multiplier,w
  5468  0EE0  0471               	iorwf	___wmul@multiplier+1,w
  5469  0EE1  1D03               	btfss	3,2
  5470  0EE2  2EE4               	goto	u1751
  5471  0EE3  2EE5               	goto	u1750
  5472  0EE4                     u1751:
  5473  0EE4  2ECD               	goto	l1907
  5474  0EE5                     u1750:
  5475  0EE5                     l1915:
  5476  0EE5  0875               	movf	___wmul@product+1,w
  5477  0EE6  00F1               	movwf	?___wmul+1
  5478  0EE7  0874               	movf	___wmul@product,w
  5479  0EE8  00F0               	movwf	?___wmul
  5480  0EE9                     l246:
  5481  0EE9  0008               	return
  5482  0EEA                     __end_of___wmul:
  5483                           
  5484                           	psect	text17
  5485  0E37                     __ptext17:	
  5486 ;; *************** function _SYSTEM_Initialize *****************
  5487 ;; Defined at:
  5488 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;		None
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;		None
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  1    wreg      void 
  5495 ;; Registers used:
  5496 ;;		wreg, status,2, status,0, pclath, cstack
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5506 ;;Total ram usage:        0 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:    1
  5509 ;; This function calls:
  5510 ;;		_OSCILLATOR_Initialize
  5511 ;;		_PIN_MANAGER_Initialize
  5512 ;;		_WDT_Initialize
  5513 ;; This function is called by:
  5514 ;;		_main
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           
  5519                           ;psect for function _SYSTEM_Initialize
  5520  0E37                     _SYSTEM_Initialize:
  5521  0E37                     l1869:	
  5522                           ;incstack = 0
  5523                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5524                           
  5525                           
  5526                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5527  0E37  318F  27A1  318E   	fcall	_PIN_MANAGER_Initialize
  5528                           
  5529                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5530  0E3A  318E  2630  318E   	fcall	_OSCILLATOR_Initialize
  5531                           
  5532                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  5533  0E3D  318E  2620  318E   	fcall	_WDT_Initialize
  5534  0E40                     l129:
  5535  0E40  0008               	return
  5536  0E41                     __end_of_SYSTEM_Initialize:
  5537                           
  5538                           	psect	text18
  5539  0E20                     __ptext18:	
  5540 ;; *************** function _WDT_Initialize *****************
  5541 ;; Defined at:
  5542 ;;		line 68 in file "mcc_generated_files/mcc.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;		None
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;		None
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      void 
  5549 ;; Registers used:
  5550 ;;		wreg
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5560 ;;Total ram usage:        0 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; This function calls:
  5563 ;;		Nothing
  5564 ;; This function is called by:
  5565 ;;		_SYSTEM_Initialize
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           
  5570                           ;psect for function _WDT_Initialize
  5571  0E20                     _WDT_Initialize:
  5572  0E20                     l1759:	
  5573                           ;incstack = 0
  5574                           ; Regs used in _WDT_Initialize: [wreg]
  5575                           
  5576                           
  5577                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  5578  0E20  3016               	movlw	22
  5579  0E21  0021               	movlb	1	; select bank1
  5580  0E22  0097               	movwf	23	;volatile
  5581  0E23                     l135:
  5582  0E23  0008               	return
  5583  0E24                     __end_of_WDT_Initialize:
  5584                           
  5585                           	psect	text19
  5586  0FA1                     __ptext19:	
  5587 ;; *************** function _PIN_MANAGER_Initialize *****************
  5588 ;; Defined at:
  5589 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;		None
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;		None
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      void 
  5596 ;; Registers used:
  5597 ;;		wreg, status,2
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5607 ;;Total ram usage:        0 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; This function calls:
  5610 ;;		Nothing
  5611 ;; This function is called by:
  5612 ;;		_SYSTEM_Initialize
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           
  5617                           ;psect for function _PIN_MANAGER_Initialize
  5618  0FA1                     _PIN_MANAGER_Initialize:
  5619  0FA1                     l1725:	
  5620                           ;incstack = 0
  5621                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5622                           
  5623                           
  5624                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5625  0FA1  0022               	movlb	2	; select bank2
  5626  0FA2  018C               	clrf	12	;volatile
  5627                           
  5628                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5629  0FA3  018D               	clrf	13	;volatile
  5630                           
  5631                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5632  0FA4  018E               	clrf	14	;volatile
  5633  0FA5                     l1727:
  5634                           
  5635                           ;mcc_generated_files/pin_manager.c: 67:     TRISE = 0x08;
  5636  0FA5  3008               	movlw	8
  5637  0FA6  0021               	movlb	1	; select bank1
  5638  0FA7  0090               	movwf	16	;volatile
  5639  0FA8                     l1729:
  5640                           
  5641                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0xFF;
  5642  0FA8  30FF               	movlw	255
  5643  0FA9  008C               	movwf	12	;volatile
  5644                           
  5645                           ;mcc_generated_files/pin_manager.c: 69:     TRISB = 0x00;
  5646  0FAA  018D               	clrf	13	;volatile
  5647  0FAB                     l1731:
  5648                           
  5649                           ;mcc_generated_files/pin_manager.c: 70:     TRISC = 0xFF;
  5650  0FAB  30FF               	movlw	255
  5651  0FAC  008E               	movwf	14	;volatile
  5652  0FAD                     l1733:
  5653                           
  5654                           ;mcc_generated_files/pin_manager.c: 75:     ANSELC = 0xFC;
  5655  0FAD  30FC               	movlw	252
  5656  0FAE  0023               	movlb	3	; select bank3
  5657  0FAF  008E               	movwf	14	;volatile
  5658                           
  5659                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x00;
  5660  0FB0  018D               	clrf	13	;volatile
  5661  0FB1                     l1735:
  5662                           
  5663                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x3F;
  5664  0FB1  303F               	movlw	63
  5665  0FB2  008C               	movwf	12	;volatile
  5666  0FB3                     l1737:
  5667                           
  5668                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  5669  0FB3  0024               	movlb	4	; select bank4
  5670  0FB4  0190               	clrf	16	;volatile
  5671  0FB5                     l1739:
  5672                           
  5673                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  5674  0FB5  018D               	clrf	13	;volatile
  5675  0FB6                     l1741:
  5676                           
  5677                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  5678  0FB6  018C               	clrf	12	;volatile
  5679  0FB7                     l1743:
  5680                           
  5681                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  5682  0FB7  018E               	clrf	14	;volatile
  5683  0FB8                     l1745:
  5684                           
  5685                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  5686  0FB8  0021               	movlb	1	; select bank1
  5687  0FB9  1795               	bsf	21,7	;volatile
  5688  0FBA                     l1747:
  5689                           
  5690                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  5691  0FBA  0025               	movlb	5	; select bank5
  5692  0FBB  018C               	clrf	12	;volatile
  5693  0FBC                     l1749:
  5694                           
  5695                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  5696  0FBC  018D               	clrf	13	;volatile
  5697  0FBD                     l1751:
  5698                           
  5699                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  5700  0FBD  018E               	clrf	14	;volatile
  5701                           
  5702                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0xFF;
  5703  0FBE  30FF               	movlw	255
  5704  0FBF  0026               	movlb	6	; select bank6
  5705  0FC0  008C               	movwf	12	;volatile
  5706                           
  5707                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xFF;
  5708  0FC1  30FF               	movlw	255
  5709  0FC2  008D               	movwf	13	;volatile
  5710                           
  5711                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  5712  0FC3  30FF               	movlw	255
  5713  0FC4  008E               	movwf	14	;volatile
  5714                           
  5715                           ;mcc_generated_files/pin_manager.c: 105:     INLVLA = 0xFF;
  5716  0FC5  30FF               	movlw	255
  5717  0FC6  0027               	movlb	7	; select bank7
  5718  0FC7  008C               	movwf	12	;volatile
  5719                           
  5720                           ;mcc_generated_files/pin_manager.c: 106:     INLVLB = 0xFF;
  5721  0FC8  30FF               	movlw	255
  5722  0FC9  008D               	movwf	13	;volatile
  5723                           
  5724                           ;mcc_generated_files/pin_manager.c: 107:     INLVLC = 0xFF;
  5725  0FCA  30FF               	movlw	255
  5726  0FCB  008E               	movwf	14	;volatile
  5727                           
  5728                           ;mcc_generated_files/pin_manager.c: 108:     INLVLE = 0x08;
  5729  0FCC  3008               	movlw	8
  5730  0FCD  0090               	movwf	16	;volatile
  5731  0FCE                     l109:
  5732  0FCE  0008               	return
  5733  0FCF                     __end_of_PIN_MANAGER_Initialize:
  5734                           
  5735                           	psect	text20
  5736  0E30                     __ptext20:	
  5737 ;; *************** function _OSCILLATOR_Initialize *****************
  5738 ;; Defined at:
  5739 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5740 ;; Parameters:    Size  Location     Type
  5741 ;;		None
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;		None
  5744 ;; Return value:  Size  Location     Type
  5745 ;;                  1    wreg      void 
  5746 ;; Registers used:
  5747 ;;		wreg, status,2
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5757 ;;Total ram usage:        0 bytes
  5758 ;; Hardware stack levels used:    1
  5759 ;; This function calls:
  5760 ;;		Nothing
  5761 ;; This function is called by:
  5762 ;;		_SYSTEM_Initialize
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           
  5767                           ;psect for function _OSCILLATOR_Initialize
  5768  0E30                     _OSCILLATOR_Initialize:
  5769  0E30                     l1753:	
  5770                           ;incstack = 0
  5771                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5772                           
  5773                           
  5774                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x38;
  5775  0E30  3038               	movlw	56
  5776  0E31  0021               	movlb	1	; select bank1
  5777  0E32  0099               	movwf	25	;volatile
  5778  0E33                     l1755:
  5779                           
  5780                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  5781  0E33  0198               	clrf	24	;volatile
  5782  0E34                     l1757:
  5783                           
  5784                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  5785  0E34  0022               	movlb	2	; select bank2
  5786  0E35  0196               	clrf	22	;volatile
  5787  0E36                     l132:
  5788  0E36  0008               	return
  5789  0E37                     __end_of_OSCILLATOR_Initialize:
  5790                           
  5791                           	psect	text21
  5792  0F0A                     __ptext21:	
  5793 ;; *************** function _LCD_Initialize *****************
  5794 ;; Defined at:
  5795 ;;		line 46 in file "lcd.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;		None
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;		None
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  1    wreg      void 
  5802 ;; Registers used:
  5803 ;;		wreg, status,2, status,0, pclath, cstack
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5813 ;;Total ram usage:        1 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:    2
  5816 ;; This function calls:
  5817 ;;		_LCDPutCmd
  5818 ;; This function is called by:
  5819 ;;		_main
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           
  5824                           ;psect for function _LCD_Initialize
  5825  0F0A                     _LCD_Initialize:
  5826  0F0A                     l1871:	
  5827                           ;incstack = 0
  5828                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5829                           
  5830                           
  5831                           ;lcd.c: 49:   PORTB = 0;
  5832  0F0A  0020               	movlb	0	; select bank0
  5833  0F0B  018D               	clrf	13	;volatile
  5834                           
  5835                           ;lcd.c: 51:   TRISB = 0x00;
  5836  0F0C  0021               	movlb	1	; select bank1
  5837  0F0D  018D               	clrf	13	;volatile
  5838  0F0E                     l1873:
  5839                           
  5840                           ;lcd.c: 54:   PORTBbits.RB7 = 1;
  5841  0F0E  0020               	movlb	0	; select bank0
  5842  0F0F  178D               	bsf	13,7	;volatile
  5843  0F10                     l1875:
  5844                           
  5845                           ;lcd.c: 57:   _delay((unsigned long)((15)*(500000/4000.0)));
  5846  0F10  3003               	movlw	3
  5847  0F11  00F7               	movwf	??_LCD_Initialize
  5848  0F12  306E               	movlw	110
  5849  0F13                     u1857:
  5850  0F13  0B89               	decfsz	9,f
  5851  0F14  2F13               	goto	u1857
  5852  0F15  0BF7               	decfsz	??_LCD_Initialize,f
  5853  0F16  2F13               	goto	u1857
  5854  0F17  0000               	nop
  5855  0F18                     l1877:
  5856                           
  5857                           ;lcd.c: 60:   LCDPutCmd(0x32);
  5858  0F18  3032               	movlw	50
  5859  0F19  318E  26AC  318F   	fcall	_LCDPutCmd
  5860  0F1C                     l1879:
  5861                           
  5862                           ;lcd.c: 63:   LCDPutCmd(0x28);
  5863  0F1C  3028               	movlw	40
  5864  0F1D  318E  26AC  318F   	fcall	_LCDPutCmd
  5865  0F20                     l1881:
  5866                           
  5867                           ;lcd.c: 66:   LCDPutCmd(0x0C);
  5868  0F20  300C               	movlw	12
  5869  0F21  318E  26AC  318F   	fcall	_LCDPutCmd
  5870  0F24                     l1883:
  5871                           
  5872                           ;lcd.c: 68:   LCDPutCmd(0x01);
  5873  0F24  3001               	movlw	1
  5874  0F25  318E  26AC  318F   	fcall	_LCDPutCmd
  5875  0F28                     l1885:
  5876                           
  5877                           ;lcd.c: 71:   LCDPutCmd(0x06);
  5878  0F28  3006               	movlw	6
  5879  0F29  318E  26AC  318F   	fcall	_LCDPutCmd
  5880  0F2C                     l148:
  5881  0F2C  0008               	return
  5882  0F2D                     __end_of_LCD_Initialize:
  5883                           
  5884                           	psect	text22
  5885  0E41                     __ptext22:	
  5886 ;; *************** function _LCDClear *****************
  5887 ;; Defined at:
  5888 ;;		line 159 in file "lcd.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;		None
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;		None
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  1    wreg      void 
  5895 ;; Registers used:
  5896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5906 ;;Total ram usage:        0 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; Hardware stack levels required when called:    3
  5909 ;; This function calls:
  5910 ;;		_LCDGoto
  5911 ;;		_LCDPutStr
  5912 ;; This function is called by:
  5913 ;;		_main
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           
  5918                           ;psect for function _LCDClear
  5919  0E41                     _LCDClear:
  5920  0E41                     l1887:	
  5921                           ;incstack = 0
  5922                           ; Regs used in _LCDClear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5923                           
  5924                           
  5925                           ;lcd.c: 161:   LCDGoto(0, 0);
  5926  0E41  01F7               	clrf	LCDGoto@ln
  5927  0E42  3000               	movlw	0
  5928  0E43  318F  2751  318E   	fcall	_LCDGoto
  5929  0E46                     l1889:
  5930                           
  5931                           ;lcd.c: 162:   LCDPutStr("                ");
  5932  0E46  3002               	movlw	low (STR_8| (0+32768))
  5933  0E47  00F7               	movwf	LCDPutStr@str
  5934  0E48  3090               	movlw	high (STR_8| (0+32768))
  5935  0E49  00F8               	movwf	LCDPutStr@str+1
  5936  0E4A  3180  2004  318E   	fcall	_LCDPutStr
  5937  0E4D                     l1891:
  5938                           
  5939                           ;lcd.c: 163:   LCDGoto(0, 1);
  5940  0E4D  01F7               	clrf	LCDGoto@ln
  5941  0E4E  0AF7               	incf	LCDGoto@ln,f
  5942  0E4F  3000               	movlw	0
  5943  0E50  318F  2751  318E   	fcall	_LCDGoto
  5944                           
  5945                           ;lcd.c: 164:   LCDPutStr("                ");
  5946  0E53  3002               	movlw	low (STR_8| (0+32768))
  5947  0E54  00F7               	movwf	LCDPutStr@str
  5948  0E55  3090               	movlw	high (STR_8| (0+32768))
  5949  0E56  00F8               	movwf	LCDPutStr@str+1
  5950  0E57  3180  2004  318E   	fcall	_LCDPutStr
  5951  0E5A                     l176:
  5952  0E5A  0008               	return
  5953  0E5B                     __end_of_LCDClear:
  5954                           
  5955                           	psect	text23
  5956  0004                     __ptext23:	
  5957 ;; *************** function _LCDPutStr *****************
  5958 ;; Defined at:
  5959 ;;		line 131 in file "lcd.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  str             2    7[COMMON] PTR const unsigned char 
  5962 ;;		 -> STR_9(17), STR_8(17), STR_6(8), STR_4(11), 
  5963 ;;		 -> main@printchar(10), STR_2(10), STR_1(14), 
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  i               1   12[COMMON] unsigned char 
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  1    wreg      void 
  5968 ;; Registers used:
  5969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5977 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5978 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5979 ;;Total ram usage:        6 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:    2
  5982 ;; This function calls:
  5983 ;;		_LCDPutChar
  5984 ;; This function is called by:
  5985 ;;		_main
  5986 ;;		_LCDClear
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           
  5991                           ;psect for function _LCDPutStr
  5992  0004                     _LCDPutStr:
  5993  0004                     l1717:	
  5994                           ;incstack = 0
  5995                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5996                           
  5997                           
  5998                           ;lcd.c: 131: void LCDPutStr(const char *str);lcd.c: 132: {;lcd.c: 133:   uint8_t i = 0;
  5999  0004  01FC               	clrf	LCDPutStr@i
  6000                           
  6001                           ;lcd.c: 136:   while (str[i])
  6002  0005  2819               	goto	l1723
  6003  0006                     l1719:
  6004                           
  6005                           ;lcd.c: 137:   {;lcd.c: 139:     LCDPutChar(str[i++]);
  6006  0006  0878               	movf	LCDPutStr@str+1,w
  6007  0007  00FA               	movwf	??_LCDPutStr+1
  6008  0008  0877               	movf	LCDPutStr@str,w
  6009  0009  00F9               	movwf	??_LCDPutStr
  6010  000A  087C               	movf	LCDPutStr@i,w
  6011  000B  0779               	addwf	??_LCDPutStr,w
  6012  000C  0084               	movwf	4
  6013  000D  087A               	movf	??_LCDPutStr+1,w
  6014  000E  1803               	skipnc
  6015  000F  0A7A               	incf	??_LCDPutStr+1,w
  6016  0010  0085               	movwf	5
  6017  0011  0800               	movf	0,w	;code access
  6018  0012  318E  268F  3180   	fcall	_LCDPutChar
  6019  0015                     l1721:
  6020  0015  3001               	movlw	1
  6021  0016  00F9               	movwf	??_LCDPutStr
  6022  0017  0879               	movf	??_LCDPutStr,w
  6023  0018  07FC               	addwf	LCDPutStr@i,f
  6024  0019                     l1723:
  6025                           
  6026                           ;lcd.c: 136:   while (str[i])
  6027  0019  0878               	movf	LCDPutStr@str+1,w
  6028  001A  00FA               	movwf	??_LCDPutStr+1
  6029  001B  0877               	movf	LCDPutStr@str,w
  6030  001C  00F9               	movwf	??_LCDPutStr
  6031  001D  087C               	movf	LCDPutStr@i,w
  6032  001E  0779               	addwf	??_LCDPutStr,w
  6033  001F  0084               	movwf	4
  6034  0020  087A               	movf	??_LCDPutStr+1,w
  6035  0021  1803               	skipnc
  6036  0022  0A7A               	incf	??_LCDPutStr+1,w
  6037  0023  0085               	movwf	5
  6038  0024  0012               	moviw fsr0++
  6039  0025  1D03               	btfss	3,2
  6040  0026  2828               	goto	u1501
  6041  0027  2829               	goto	u1500
  6042  0028                     u1501:
  6043  0028  2806               	goto	l1719
  6044  0029                     u1500:
  6045  0029                     l163:
  6046  0029  0008               	return
  6047  002A                     __end_of_LCDPutStr:
  6048                           
  6049                           	psect	text24
  6050  0E8F                     __ptext24:	
  6051 ;; *************** function _LCDPutChar *****************
  6052 ;; Defined at:
  6053 ;;		line 101 in file "lcd.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;  ch              1    wreg     unsigned char 
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  ch              1    6[COMMON] unsigned char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  1    wreg      void 
  6060 ;; Registers used:
  6061 ;;		wreg, status,2, status,0, pclath, cstack
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6069 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6070 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6071 ;;Total ram usage:        3 bytes
  6072 ;; Hardware stack levels used:    1
  6073 ;; Hardware stack levels required when called:    1
  6074 ;; This function calls:
  6075 ;;		_LCDWriteNibble
  6076 ;; This function is called by:
  6077 ;;		_LCDPutStr
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           
  6082                           ;psect for function _LCDPutChar
  6083  0E8F                     _LCDPutChar:
  6084                           
  6085                           ;incstack = 0
  6086                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  6087                           ;LCDPutChar@ch stored from wreg
  6088  0E8F  00F6               	movwf	LCDPutChar@ch
  6089  0E90                     l1651:
  6090                           
  6091                           ;lcd.c: 101: void LCDPutChar(uint8_t ch);lcd.c: 102: {;lcd.c: 103:   _delay((unsigned lo
      +                          ng)((5)*(500000/4000.0)));
  6092  0E90  30D0               	movlw	208
  6093  0E91                     u1867:
  6094  0E91  0B89               	decfsz	9,f
  6095  0E92  2E91               	goto	u1867
  6096  0E93  0000               	nop
  6097  0E94                     l1653:
  6098                           
  6099                           ;lcd.c: 106:   LCDWriteNibble(ch, 1);
  6100  0E94  01F0               	clrf	LCDWriteNibble@rs
  6101  0E95  0AF0               	incf	LCDWriteNibble@rs,f
  6102  0E96  0876               	movf	LCDPutChar@ch,w
  6103  0E97  318E  26EA  318E   	fcall	_LCDWriteNibble
  6104  0E9A                     l1655:
  6105                           
  6106                           ;lcd.c: 109:   ch = (uint8_t)(ch << 4);
  6107  0E9A  0876               	movf	LCDPutChar@ch,w
  6108  0E9B  00F4               	movwf	??_LCDPutChar
  6109  0E9C  3003               	movlw	3
  6110  0E9D                     u1425:
  6111  0E9D  35F4               	lslf	??_LCDPutChar,f
  6112  0E9E  3EFF               	addlw	-1
  6113  0E9F  1D03               	skipz
  6114  0EA0  2E9D               	goto	u1425
  6115  0EA1  3574               	lslf	??_LCDPutChar,w
  6116  0EA2  00F5               	movwf	??_LCDPutChar+1
  6117  0EA3  0875               	movf	??_LCDPutChar+1,w
  6118  0EA4  00F6               	movwf	LCDPutChar@ch
  6119  0EA5                     l1657:
  6120                           
  6121                           ;lcd.c: 112:   LCDWriteNibble(ch, 1);
  6122  0EA5  01F0               	clrf	LCDWriteNibble@rs
  6123  0EA6  0AF0               	incf	LCDWriteNibble@rs,f
  6124  0EA7  0876               	movf	LCDPutChar@ch,w
  6125  0EA8  318E  26EA  318E   	fcall	_LCDWriteNibble
  6126  0EAB                     l154:
  6127  0EAB  0008               	return
  6128  0EAC                     __end_of_LCDPutChar:
  6129                           
  6130                           	psect	text25
  6131  0F51                     __ptext25:	
  6132 ;; *************** function _LCDGoto *****************
  6133 ;; Defined at:
  6134 ;;		line 143 in file "lcd.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  pos             1    wreg     unsigned char 
  6137 ;;  ln              1    7[COMMON] unsigned char 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;  pos             1   10[COMMON] unsigned char 
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      void 
  6142 ;; Registers used:
  6143 ;;		wreg, status,2, status,0, pclath, cstack
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6149 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6150 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6152 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6153 ;;Total ram usage:        4 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:    2
  6156 ;; This function calls:
  6157 ;;		_LCDPutCmd
  6158 ;; This function is called by:
  6159 ;;		_main
  6160 ;;		_LCDClear
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           
  6165                           ;psect for function _LCDGoto
  6166  0F51                     _LCDGoto:
  6167                           
  6168                           ;incstack = 0
  6169                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  6170                           ;LCDGoto@pos stored from wreg
  6171  0F51  00FA               	movwf	LCDGoto@pos
  6172  0F52                     l1703:
  6173                           
  6174                           ;lcd.c: 143: void LCDGoto(uint8_t pos, uint8_t ln);lcd.c: 144: {;lcd.c: 146:   if ((ln >
      +                           (2 - 1)) || (pos > (16 - 1)))
  6175  0F52  3002               	movlw	2
  6176  0F53  0277               	subwf	LCDGoto@ln,w
  6177  0F54  1803               	skipnc
  6178  0F55  2F57               	goto	u1471
  6179  0F56  2F58               	goto	u1470
  6180  0F57                     u1471:
  6181  0F57  2F77               	goto	l169
  6182  0F58                     u1470:
  6183  0F58                     l1705:
  6184  0F58  3010               	movlw	16
  6185  0F59  027A               	subwf	LCDGoto@pos,w
  6186  0F5A  1C03               	skipc
  6187  0F5B  2F5D               	goto	u1481
  6188  0F5C  2F5E               	goto	u1480
  6189  0F5D                     u1481:
  6190  0F5D  2F5F               	goto	l1707
  6191  0F5E                     u1480:
  6192  0F5E  2F77               	goto	l169
  6193  0F5F                     l1707:
  6194                           
  6195                           ;lcd.c: 153:   LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  6196  0F5F  0377               	decf	LCDGoto@ln,w
  6197  0F60  1903               	btfsc	3,2
  6198  0F61  2F63               	goto	u1491
  6199  0F62  2F64               	goto	u1490
  6200  0F63                     u1491:
  6201  0F63  2F6A               	goto	l1711
  6202  0F64                     u1490:
  6203  0F64                     l1709:
  6204  0F64  3080               	movlw	128
  6205  0F65  047A               	iorwf	LCDGoto@pos,w
  6206  0F66  00F8               	movwf	_LCDGoto$226
  6207  0F67  3000               	movlw	0
  6208  0F68  00F9               	movwf	_LCDGoto$226+1
  6209  0F69  2F6F               	goto	l1713
  6210  0F6A                     l1711:
  6211  0F6A  30C0               	movlw	192
  6212  0F6B  047A               	iorwf	LCDGoto@pos,w
  6213  0F6C  00F8               	movwf	_LCDGoto$226
  6214  0F6D  3000               	movlw	0
  6215  0F6E  00F9               	movwf	_LCDGoto$226+1
  6216  0F6F                     l1713:
  6217  0F6F  0878               	movf	_LCDGoto$226,w
  6218  0F70  318E  26AC  318F   	fcall	_LCDPutCmd
  6219  0F73                     l1715:
  6220                           
  6221                           ;lcd.c: 156:   _delay((unsigned long)((5)*(500000/4000.0)));
  6222  0F73  30D0               	movlw	208
  6223  0F74                     u1877:
  6224  0F74  0B89               	decfsz	9,f
  6225  0F75  2F74               	goto	u1877
  6226  0F76  0000               	nop
  6227  0F77                     l169:
  6228  0F77  0008               	return
  6229  0F78                     __end_of_LCDGoto:
  6230                           
  6231                           	psect	text26
  6232  0EAC                     __ptext26:	
  6233 ;; *************** function _LCDPutCmd *****************
  6234 ;; Defined at:
  6235 ;;		line 115 in file "lcd.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  ch              1    wreg     unsigned char 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;  ch              1    6[COMMON] unsigned char 
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      void 
  6242 ;; Registers used:
  6243 ;;		wreg, status,2, status,0, pclath, cstack
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6252 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6253 ;;Total ram usage:        3 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; Hardware stack levels required when called:    1
  6256 ;; This function calls:
  6257 ;;		_LCDWriteNibble
  6258 ;; This function is called by:
  6259 ;;		_LCD_Initialize
  6260 ;;		_LCDGoto
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           
  6265                           ;psect for function _LCDPutCmd
  6266  0EAC                     _LCDPutCmd:
  6267                           
  6268                           ;incstack = 0
  6269                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  6270                           ;LCDPutCmd@ch stored from wreg
  6271  0EAC  00F6               	movwf	LCDPutCmd@ch
  6272  0EAD                     l1641:
  6273                           
  6274                           ;lcd.c: 115: void LCDPutCmd(uint8_t ch);lcd.c: 116: {;lcd.c: 117:   _delay((unsigned lon
      +                          g)((5)*(500000/4000.0)));
  6275  0EAD  30D0               	movlw	208
  6276  0EAE                     u1887:
  6277  0EAE  0B89               	decfsz	9,f
  6278  0EAF  2EAE               	goto	u1887
  6279  0EB0  0000               	nop
  6280  0EB1                     l1643:
  6281                           
  6282                           ;lcd.c: 120:   LCDWriteNibble(ch, 0);
  6283  0EB1  01F0               	clrf	LCDWriteNibble@rs
  6284  0EB2  0876               	movf	LCDPutCmd@ch,w
  6285  0EB3  318E  26EA  318E   	fcall	_LCDWriteNibble
  6286  0EB6                     l1645:
  6287                           
  6288                           ;lcd.c: 123:   ch = (uint8_t)(ch << 4);
  6289  0EB6  0876               	movf	LCDPutCmd@ch,w
  6290  0EB7  00F4               	movwf	??_LCDPutCmd
  6291  0EB8  3003               	movlw	3
  6292  0EB9                     u1415:
  6293  0EB9  35F4               	lslf	??_LCDPutCmd,f
  6294  0EBA  3EFF               	addlw	-1
  6295  0EBB  1D03               	skipz
  6296  0EBC  2EB9               	goto	u1415
  6297  0EBD  3574               	lslf	??_LCDPutCmd,w
  6298  0EBE  00F5               	movwf	??_LCDPutCmd+1
  6299  0EBF  0875               	movf	??_LCDPutCmd+1,w
  6300  0EC0  00F6               	movwf	LCDPutCmd@ch
  6301  0EC1                     l1647:
  6302                           
  6303                           ;lcd.c: 125:   _delay((unsigned long)((1)*(500000/4000.0)));
  6304  0EC1  3029               	movlw	41
  6305  0EC2                     u1897:
  6306  0EC2  0B89               	decfsz	9,f
  6307  0EC3  2EC2               	goto	u1897
  6308  0EC4  3200               	nop2
  6309  0EC5                     l1649:
  6310                           
  6311                           ;lcd.c: 128:   LCDWriteNibble(ch, 0);
  6312  0EC5  01F0               	clrf	LCDWriteNibble@rs
  6313  0EC6  0876               	movf	LCDPutCmd@ch,w
  6314  0EC7  318E  26EA  318E   	fcall	_LCDWriteNibble
  6315  0ECA                     l157:
  6316  0ECA  0008               	return
  6317  0ECB                     __end_of_LCDPutCmd:
  6318                           
  6319                           	psect	text27
  6320  0EEA                     __ptext27:	
  6321 ;; *************** function _LCDWriteNibble *****************
  6322 ;; Defined at:
  6323 ;;		line 74 in file "lcd.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  ch              1    wreg     unsigned char 
  6326 ;;  rs              1    0[COMMON] unsigned char 
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;  ch              1    3[COMMON] unsigned char 
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1    wreg      void 
  6331 ;; Registers used:
  6332 ;;		wreg, status,2, status,0
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6338 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6341 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6342 ;;Total ram usage:        4 bytes
  6343 ;; Hardware stack levels used:    1
  6344 ;; This function calls:
  6345 ;;		Nothing
  6346 ;; This function is called by:
  6347 ;;		_LCDPutChar
  6348 ;;		_LCDPutCmd
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351                           
  6352                           
  6353                           ;psect for function _LCDWriteNibble
  6354  0EEA                     _LCDWriteNibble:
  6355                           
  6356                           ;incstack = 0
  6357                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
  6358                           ;LCDWriteNibble@ch stored from wreg
  6359  0EEA  00F3               	movwf	LCDWriteNibble@ch
  6360  0EEB                     l1569:
  6361                           
  6362                           ;lcd.c: 74: void LCDWriteNibble(uint8_t ch, uint8_t rs);lcd.c: 75: {;lcd.c: 77:   ch = (
      +                          ch >> 4);
  6363  0EEB  0873               	movf	LCDWriteNibble@ch,w
  6364  0EEC  00F1               	movwf	??_LCDWriteNibble
  6365  0EED  3004               	movlw	4
  6366  0EEE                     u1245:
  6367  0EEE  36F1               	lsrf	??_LCDWriteNibble,f
  6368  0EEF  0B89               	decfsz	9,f
  6369  0EF0  2EEE               	goto	u1245
  6370  0EF1  0871               	movf	??_LCDWriteNibble,w
  6371  0EF2  00F2               	movwf	??_LCDWriteNibble+1
  6372  0EF3  0872               	movf	??_LCDWriteNibble+1,w
  6373  0EF4  00F3               	movwf	LCDWriteNibble@ch
  6374  0EF5                     l1571:
  6375                           
  6376                           ;lcd.c: 80:   ch = (ch & 0x0F);
  6377  0EF5  0873               	movf	LCDWriteNibble@ch,w
  6378  0EF6  390F               	andlw	15
  6379  0EF7  00F1               	movwf	??_LCDWriteNibble
  6380  0EF8  0871               	movf	??_LCDWriteNibble,w
  6381  0EF9  00F3               	movwf	LCDWriteNibble@ch
  6382  0EFA                     l1573:
  6383                           
  6384                           ;lcd.c: 83:   PORTB = (PORTB & 0xF0);
  6385  0EFA  0020               	movlb	0	; select bank0
  6386  0EFB  080D               	movf	13,w	;volatile
  6387  0EFC  39F0               	andlw	240
  6388  0EFD  008D               	movwf	13	;volatile
  6389                           
  6390                           ;lcd.c: 86:   PORTB = (PORTB | ch);
  6391  0EFE  080D               	movf	13,w	;volatile
  6392  0EFF  0473               	iorwf	LCDWriteNibble@ch,w
  6393  0F00  008D               	movwf	13	;volatile
  6394  0F01                     l1575:
  6395                           
  6396                           ;lcd.c: 89:   PORTBbits.RB5 = rs;
  6397  0F01  0C70               	rrf	LCDWriteNibble@rs,w
  6398  0F02  1C03               	skipc
  6399  0F03  128D               	bcf	13,5	;volatile
  6400  0F04  1803               	skipnc
  6401  0F05  168D               	bsf	13,5	;volatile
  6402  0F06                     l1577:
  6403                           
  6404                           ;lcd.c: 92:   PORTBbits.RB6 = 0;
  6405  0F06  130D               	bcf	13,6	;volatile
  6406  0F07                     l1579:
  6407                           
  6408                           ;lcd.c: 95:   PORTBbits.RB4 = 1;
  6409  0F07  160D               	bsf	13,4	;volatile
  6410  0F08                     l1581:
  6411                           
  6412                           ;lcd.c: 98:   PORTBbits.RB4 = 0;
  6413  0F08  120D               	bcf	13,4	;volatile
  6414  0F09                     l151:
  6415  0F09  0008               	return
  6416  0F0A                     __end_of_LCDWriteNibble:
  6417  007E                     btemp	set	126	;btemp
  6418  007E                     wtemp0	set	126
  6419                           
  6420                           	psect	config
  6421                           
  6422                           ;Config register CONFIG1 @ 0x8007
  6423                           ;	Oscillator Selection Bits
  6424                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6425                           ;	Watchdog Timer Enable
  6426                           ;	WDTE = OFF, WDT disabled
  6427                           ;	Power-up Timer Enable
  6428                           ;	PWRTE = OFF, PWRT disabled
  6429                           ;	MCLR Pin Function Select
  6430                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6431                           ;	Flash Program Memory Code Protection
  6432                           ;	CP = OFF, Program memory code protection is disabled
  6433                           ;	Brown-out Reset Enable
  6434                           ;	BOREN = ON, Brown-out Reset enabled
  6435                           ;	Clock Out Enable
  6436                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6437                           ;	Internal/External Switchover Mode
  6438                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  6439                           ;	Fail-Safe Clock Monitor Enable
  6440                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6441  8007                     	org	32775
  6442  8007  3FE4               	dw	16356
  6443                           
  6444                           ;Config register CONFIG2 @ 0x8008
  6445                           ;	Flash Memory Self-Write Protection
  6446                           ;	WRT = OFF, Write protection off
  6447                           ;	Peripheral Pin Select one-way control
  6448                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  6449                           ;	Zero-cross detect disable
  6450                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR and can be enabled with ZCDS
      +                          EN bit.
  6451                           ;	Phase Lock Loop enable
  6452                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  6453                           ;	Stack Overflow/Underflow Reset Enable
  6454                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6455                           ;	Brown-out Reset Voltage Selection
  6456                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6457                           ;	Low-Power Brown Out Reset
  6458                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6459                           ;	Low-Voltage Programming Enable
  6460                           ;	LVP = ON, Low-voltage programming enabled
  6461  8008                     	org	32776
  6462  8008  3EFF               	dw	16127

Data Sizes:
    Strings     63
    Constant    2
    Data        6
    BSS         48
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     57      75
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S542_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_6(CODE[8]), STR_4(CODE[11]), 
		 -> main@printchar(BANK1[10]), STR_2(CODE[10]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _sumdigits->___awdiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_Initialize->_LCDPutCmd
    _LCDClear->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   16097
                                              9 BANK1     48    48      0
                           _LCDClear
                            _LCDGoto
                          _LCDPutStr
                     _LCD_Initialize
                  _SYSTEM_Initialize
                            ___awdiv
                            ___awmod
                             ___wmul
                            _sprintf
                          _sumdigits
 ---------------------------------------------------------------------------------
 (1) _sumdigits                                            7     5      2    1568
                                              9 COMMON     3     1      2
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6330
                                             13 COMMON     1     1      0
                                             70 BANK0      6     0      6
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     461
                                              7 COMMON     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDClear                                             0     0      0    2514
                            _LCDGoto
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            6     4      2    1235
                                              7 COMMON     6     4      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              4     3      1    1279
                                              7 COMMON     4     3      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       4     3      1     394
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDClear
     _LCDGoto
       _LCDPutCmd
         _LCDWriteNibble
     _LCDPutStr
       _LCDPutChar
         _LCDWriteNibble
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
       _LCDWriteNibble
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   ___awdiv
   ___awmod
   ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   _sumdigits
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     39      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      C9      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      C9      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jun 02 15:31:59 2021

                 _LCD_Initialize 0F0A                               l26 0065                      ?_LCDPutChar 0070  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0072                              l132 0E36  
                            l109 0FCE                              l151 0F09                              l135 0E23  
                            l129 0E40                              l154 0EAB                              l410 0107  
                            l163 0029                              l148 0F2C                              l244 0ED5  
                            l157 0ECA                              l246 0EE9                              l176 0E5A  
                            l344 0471                              l169 0F77                              l345 0482  
                            l357 0370                              l358 0381                              l707 0F50  
                            l397 01BC                              l806 0FA0                              l734 0122  
                            l742 04CC                              l815 0E8E                              l751 0573  
                            l743 04D5                              l809 0E1F                              l737 0144  
                            l739 015D                              l747 04ED                              l748 0503  
                            l772 0297                              l765 05E7                              l783 0E74  
                            l786 0E74                              l779 0FFF                              l798 00B4  
                            u920 006B                              u921 006A                              u930 0070  
                            u931 006F                              u940 007F                              u941 007E  
                            u950 009C                              u951 009B                              u960 0FA0  
                            u961 0F9F                              u970 0E88                              u955 0098  
                            u971 0E87                              u980 038D                              u981 038C  
                            _abs 0E5B                              _pad 0108                     ___awmod@sign 0076  
                            wreg 0009                  __end_of_LCDGoto 0F78                             l2001 072C  
                           l2011 075D                             l2003 0737                             ?_abs 0073  
                           l2021 07CD                             l2013 0761                             l2005 0739  
                           l2023 07D4                             l2015 076E                             l2007 073E  
                           l2025 07D4                             l2017 07AE                             l2009 074D  
                           l2027 07D4                             l2019 07C7                             l1501 040D  
                           l1511 0453                             l1503 042F                             l1505 043F  
                           l1521 02CE                             l1513 0298                             l1441 0066  
                           l1601 04FF                             l2065 060C                             l1507 0440  
                           l1531 0309                             l1523 02ED                             l1515 0299  
                           l1451 009C                             l1443 006B                             l1611 0542  
                           l1603 0507                             l1509 044E                             l1541 0352  
                           l1533 030D                             l1525 02FA                             l1517 02A3  
                           l1453 00AC                             l1445 0070                             l1461 0F8B  
                           l1621 05A9                             l1613 0546                             l1605 050A  
                           l1711 0F6A                             l1703 0F52                             l1535 032F  
                           l1527 02FD                             l1519 02C4                             l1447 0075  
                           l1463 0F90                             l1471 0E88                             l1551 0120  
                           l1543 010A                             l1631 05C3                             l1615 0581  
                           l1623 05AE                             l1607 050F                             l1641 0EAD  
                           l1713 0F6F                             l1705 0F58                             l1721 0015  
                           l1481 03AE                             l1537 033F                             l1529 0305  
                           l1449 007F                             l1457 0F7A                             l1465 0E76  
                           l1561 0151                             l1553 0125                             l1545 010E  
                           l1633 05C8                             l1625 05B5                             l1617 058E  
                           l1609 053E                             l1801 01B8                             l1571 0EF5  
                           l1643 0EB1                             l1715 0F73                             l1707 0F5F  
                           l1651 0E90                             l1723 0019                             l1731 0FAB  
                           l1491 03F2                             l1483 03B8                             l1475 0382  
                           l1539 034D                             l1459 0F7D                             l1467 0E7B  
                           l1555 0131                             l1547 0116                             l1635 05CC  
                           l1627 05B9                             l1619 059B                             l1811 00BF  
                           l1581 0F08                             l1573 0EFA                             l1645 0EB6  
                           l1709 0F64                             l1653 0E94                             l1717 0004  
                           l1741 0FB6                             l1733 0FAD                             l1725 0FA1  
                           l1493 03F5                             l1485 03D7                             l1477 0383  
                           l1565 0E5B                             l1469 0E7F                             l1557 0136  
                           l1549 011B                             l1629 05BD                             l1637 05D5  
                           l1661 01D0                             l1901 0F48                             l1821 00D3  
                           l1813 00C1                             l1805 00B5                             l1575 0F01  
                           l1647 0EC1                             l1655 0E9A                             l1719 0006  
                           l1751 0FBD                             l1743 0FB7                             l1735 0FB1  
                           l1727 0FA5                             l1911 0EDA                             l1495 03FD  
                           l1487 03DB                             l1479 038D                             l1567 0E68  
                           l1559 0149                             l1591 04D1                             l1583 0485  
                           l1671 0204                             l1663 01D8                             l1831 00EE  
                           l1823 00D8                             l1815 00C5                             l1807 00B6  
                           l1577 0F06                             l1569 0EEB                             l1649 0EC5  
                           l1657 0EA5                             l1753 0E30                             l1745 0FB8  
                           l1737 0FB3                             l1729 0FA8                             l1913 0EDF  
                           l1905 0ECB                             l1497 0401                             l1489 03E5  
                           l1593 04E2                             l1585 0495                             l1681 0250  
                           l1673 020C                             l1665 01DE                             l1761 015E  
                           l1833 00F3                             l1825 00DC                             l1817 00CA  
                           l1809 00BA                             l1921 05EF                             l1579 0F07  
                           l1755 0E33                             l1747 0FBA                             l1739 0FB5  
                           l1915 0EE5                             l1907 0ECD                             l1499 0405  
                           l1595 04E8                             l1587 04A8                             l1691 0271  
                           l1683 0258                             l1675 0225                             l1667 01E2  
                           l1659 01BF                             l1851 0FF7                             l1843 0FD1  
                           l1771 016E                             l1763 015F                             l1827 00E0  
                           l1819 00D0                             l1835 00F9                             l1931 0616  
                           l1923 05F4                             l1757 0E34                             l1749 0FBC  
                           l1909 0ED1                             l1597 04F5                             l1589 04AE  
                           l1685 0263                             l1669 01F3                             l1845 0FD5  
                           l1781 0182                             l1773 0173                             l1765 0163  
                           l1837 00FE                             l1829 00EA                             l1861 0044  
                           l1941 0644                             l1933 061B                             l1925 05F9  
                           l1871 0F0A                             l1759 0E20                             l1599 04FB  
                           l1679 023F                             l1695 0274                             l1847 0FD9  
                           l1791 01A2                             l1783 0187                             l1775 0177  
                           l1767 0168                             l1839 0103                             l1863 0053  
                           l1855 002A                             l1951 0674                             l1943 0648  
                           l1935 0622                             l1927 05FE                             l1919 05E8  
                           l1881 0F20                             l1873 0F0E                             l1697 028D  
                           l1689 0269                             l1849 0FED                             l1793 01A3  
                           l1785 018B                             l1777 0179                             l1769 016A  
                           l1865 0060                             l1857 002E                             l1961 0695  
                           l1945 064D                             l1937 0628                             l1953 0678  
                           l1929 0614                             l1891 0E4D                             l1883 0F24  
                           l1875 0F10                             l1795 01A8                             l1787 018F  
                           l1779 017F                             l1859 003E                             l1971 06C3  
                           l1963 06A6                             l1955 0686                             l1947 0667  
                           l1939 0632                             l1885 0F28                             l1877 0F18  
                           l1869 0E37                             l1893 0F2F                             l1789 019E  
                           l1797 01AE                             l1981 06E1                             l1973 06C3  
                           l1965 06AC                             l1957 0689                             l1949 066E  
                           ?_pad 0024                             l1887 0E41                             l1879 0F1C  
                           l1895 0F37                             l1799 01B3                             l1991 0710  
                           l1983 06E5                             l1975 06C8                             l1967 06B3  
                           l1959 068E                             l1889 0E46                             l1897 0F39  
                           l1993 071D                             l1985 06F2                             l1977 06CF  
                           l1969 06C0                             l1899 0F3B                             l1995 0720  
                           l1987 0703                             l1979 06D4                             l1997 0725  
                           l1989 0709                             l1999 072C                             STR_1 1013  
                           STR_2 102C                             STR_3 103E                             STR_4 1021  
                           STR_5 103E                             STR_6 1036                             STR_7 103E  
                           STR_8 1002                             STR_9 1002                             u1000 03B8  
                           u1001 03B7                             u1020 03E2                             u1030 03F2  
                           u1110 02CE                             u1031 03F1                             u1111 02CD  
                           u1040 0405                             u1200 011B                             u1041 0404  
                           u1201 011A                             u1050 042F                             u1130 02FA  
                           u1210 0144                             u1051 042E                             u1131 02F9  
                           u1211 0143                             u1060 044E                             u1140 030D  
                           u1220 0149                             u1300 04E2                             u1061 044D  
                           u1141 030C                             u1221 0148                             u1301 04E1  
                           u1070 0453                             u1150 032F                             u1230 0E68  
                           u1310 04FB                             u1071 0452                             u1055 042B  
                           u1151 032E                             u1231 0E67                             u1215 0140  
                           u1311 04FA                             u1160 034D                             u1400 05C3  
                           u1320 04FF                             u1161 034C                             u1401 05C2  
                           u1321 04FE                             u1305 04DE                             u1170 0352  
                           u1090 02A3                             u1330 0581                             u1250 04A0  
                           u1171 0351                             u1155 032B                             u1091 02A2  
                           u1235 0E64                             u1331 0580                             u1251 049E  
                           u1500 0029                             u1340 058E                             u1260 04A1  
                           u1245 0EEE                             u1501 0028                             u1341 058D  
                           _LATA 010C                             u1190 010E                             u1350 059B  
                           u1270 04AE                             u1430 01D0                             u1510 0163  
                           _LATB 010D                             u1415 0EB9                             u1191 010D  
                           u1351 059A                             u1335 057D                             u1271 04AD  
                           u1431 01CF                             u1511 0162                             _LATC 010E  
                           u1360 05A9                             u1440 01F3                             u1600 01B3  
                           u1520 016E                             u1425 0E9D                             u1361 05A8  
                           u1441 01F2                             u1601 01B2                             u1521 016D  
                           u1370 05AE                             u1290 04D1                             u1450 0204  
                           u1530 017F                             u1610 00BA                             u1371 05AD  
                           u1355 0597                             u1291 04D0                             u1451 0203  
                           u1531 017E                             u1611 00B9                             u1380 05B5  
                           u1460 0250                             u1700 0FF7                             u1620 00C5  
                           u1381 05B4                             u1365 05A5                             u1461 024F  
                           u1701 0FF6                             u1621 00C4                             u1470 0F58  
                           u1390 05B9                             u1550 018F                             u1630 00D0  
                           u1710 0060                             u1471 0F57                             u1391 05B8  
                           u1551 018E                             u1631 00CF                             u1711 005F  
                           u1480 0F5E                             u1720 0ED1                             u1800 06F2  
                           u1481 0F5D                             u1721 0ED0                             u1545 0183  
                           u1801 06F1                             u1490 0F64                             u1570 019E  
                           u1650 00E0                             u1810 0734                             u1491 0F63  
                           u1571 019D                             u1651 00DF                             u1715 005C  
                           u1660 00EA                             u1820 076E                             u1565 0190  
                           u1661 00E9                             u1645 00D4                             u1821 076D  
                           u1805 06EE                             u1750 0EE5                             u1590 01AE  
                           u1751 0EE4                             u1735 0ED6                             u1591 01AD  
                           u1575 019A                             u1680 00F9                             u1760 0644  
                           u1745 0EDB                             u1585 01A4                             u1681 00F8  
                           u1665 00E6                             u1825 076A                             u1761 0643  
                           u1690 00FE                             u1770 0667                             u1691 00FD  
                           u1675 00EF                             u1771 0666                             u1780 066E  
                           u1837 06B9                             u1781 066D                             u1790 0686  
                           u1847 0716                             u1791 0685                             u1775 0663  
                           u1857 0F13                             u1867 0E91                             u1795 0682  
                           u1877 0F74                             u1887 0EAE                             u1897 0EC2  
                           _WPUA 020C                             _WPUB 020D                             _WPUC 020E  
                           _WPUE 0210                     main@SumPrime 00D3                             abs@a 0073  
                           _dbuf 0120                             _main 05E8                             _dtoa 0483  
                           _prec 006C                             _nout 00E1                             pad@i 0027  
                           pad@p 0025                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             pad@w 0029                             btemp 007E  
             __size_of_LCDPutCmd 001F                             start 0002               __size_of_LCDPutStr 0026  
         __end_of_LCD_Initialize 0F2D                 __end_of_LCDClear 0E5B                            ??_abs 0075  
                          ??_pad 007C                      LCDPutCmd@ch 0076   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 0E37                  __end_of___aodiv 0483                            ?_main 0070  
                          ?_dtoa 0030                  __end_of___aomod 0382                  __end_of___awdiv 01BD  
                __end_of___awmod 0108                  ___awdiv@divisor 0070                  ___awdiv@counter 0075  
                   vfpfcnvrt@fmt 004E                            _PORTB 000D                    main@SumDigits 00D5  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
                          _TRISE 0090                            u99lld 03AC                            _flags 006E  
                 _WDT_Initialize 0E20                            _fputc 0066                            _fputs 0F78  
                          pad@fp 002B                            _width 00E3                            _putch 0E1F  
                          main@i 00D1                            dtoa@d 0030                            dtoa@i 004C  
                          dtoa@n 0044                            dtoa@p 003E                            dtoa@s 0042  
                          dtoa@w 0040              __size_of_LCDPutChar 001D                            status 0003  
                          wtemp0 007E                  __end_of_sprintf 0F51                  ?_LCD_Initialize 0070  
                __initialization 07D7                     __end_of_main 07D7                     __end_of_dtoa 05E8  
                         ??_main 00A9                           ??_dtoa 0038                        ??_LCDGoto 0078  
              __end_of_LCDPutCmd 0ECB                     LCDPutChar@ch 0076                __end_of_LCDPutStr 002A  
         __end_of_WDT_Initialize 0E24                           ?_fputc 0070                           ?_fputs 0078  
               ___awdiv@dividend 0072                           _ANSELA 018C                           ?_putch 0070  
                         _ANSELB 018D                           _ANSELC 018E                           _BORCON 0116  
                         _ODCONA 028C                           _ODCONB 028D                           _ODCONC 028E  
                         _INLVLA 038C                           _INLVLB 038D                           _INLVLC 038E  
                         _INLVLE 0390                           u101lld 03D7                           u110lld 02C2  
                         _OSCCON 0099                           u112lld 02ED                           u108lld 0471  
                         u118lld 0370                           u128lld 04CC                           _WDTCON 0097  
                   LCDPutStr@str 0077                   _LCDWriteNibble 0EEA                     vfprintf@cfmt 0064  
                      ??___aodiv 0070                        ??___aomod 0070                           ___wmul 0ECB  
                      ??___awdiv 0074                        ??___awmod 0074                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075                           pad@buf 0024  
                         dtoa@fp 003D                           _strlen 0E75                           fputc@c 0070  
                         fputs@c 0020                           fputs@i 0021                           fputs@s 0023  
                  main@printchar 00B7                  ?_WDT_Initialize 0070                           putch@c 0070  
               __end_of_vfprintf 1000                        ??_sprintf 007D                        ?_LCDClear 0070  
              _SYSTEM_Initialize 0E37           __end_of_LCDWriteNibble 0F0A          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070                        LCDGoto@ln 0077               _last3digitsCarnet1 00E9  
             _last3digitsCarnet2 00E7               _last3digitsCarnet3 00E5                   __pcstackCOMMON 0070  
                   __pidataBANK1 0E2A              ??_SYSTEM_Initialize 0070                    __end_of_fputc 00B5  
                   ??_LCDPutChar 0074                    __end_of_fputs 0FA1                    __end_of_putch 0E20  
                 _OPTION_REGbits 0095                   sumdigits@digit 0020                          ??_fputc 0073  
      __end_of_SYSTEM_Initialize 0E41                          ??_fputs 0079                          ??_putch 0070  
                     __pbssBANK0 006C                       __pbssBANK1 00D9                       __pbssBANK2 0120  
                     ??_LCDClear 007D                  ?_LCDWriteNibble 0070               __end_of_LCDPutChar 0EAC  
                     __pmaintext 05E8                          ?___wmul 0070                          ?_strlen 0070  
                        _LCDGoto 0F51               __size_of_vfpfcnvrt 00DB                          _OSCTUNE 0098  
                        _SLRCONA 030C                          _SLRCONB 030D                          _SLRCONC 030E  
             __size_of_sumdigits 003C                 ??_LCD_Initialize 0077                          ___aodiv 0382  
                        ___aomod 0298                          ___awdiv 015E                          ___awmod 00B5  
                __size_of___wmul 001F                        ?_vfprintf 005E                          __ptext1 002A  
                        __ptext2 00B5                          __ptext3 015E                          __ptext4 0F2D  
                        __ptext5 0FCF                          __ptext6 01BD                          __ptext7 0483  
                        __ptext8 0108                          __ptext9 0E75                  __size_of_strlen 001A  
          _OSCILLATOR_Initialize 0E30                     __size_of_abs 001A                     __size_of_pad 0056  
               ___awmod@dividend 0072         ??_PIN_MANAGER_Initialize 0070                        _LCDPutCmd 0EAC  
                        main@bin 00C1       __size_of_SYSTEM_Initialize 000A                          _sprintf 0F2D  
                        clrloop0 0E25                        _LCDPutStr 0004             end_of_initialization 07FD  
                        fputc@fp 0072                          fputs@fp 0078                __end_of_vfpfcnvrt 0298  
                     ??_vfprintf 0061                __end_ofmain@label 1002                          strlen@a 0073  
                        strlen@s 0074                __end_of_sumdigits 0066                 ??_WDT_Initialize 0070  
                      _PORTBbits 000D                       main@Binary 00CD                       ?_LCDPutCmd 0070  
                     ?_LCDPutStr 0077                       main@carnet 00CB                       LCDGoto@pos 007A  
              __size_of_LCDClear 001A                       main@number 00D7                      vfpfcnvrt@ap 004F  
                    vfpfcnvrt@fp 005D                       LCDPutStr@i 007C                      vfpfcnvrt@ll 0055  
                 __end_of___wmul 0EEA           ?_OSCILLATOR_Initialize 0070                   __end_of_strlen 0E8F  
            start_initialization 07D7  __size_of_PIN_MANAGER_Initialize 002E                 ??_LCDWriteNibble 0071  
                    __end_of_abs 0E75                      __end_of_pad 015E                      vfprintf@fmt 005E  
                       ??___wmul 0074                      __pdataBANK1 00E5                  sumdigits@number 0079  
                       ??_strlen 0072                         ?_LCDGoto 0077                        ___latbits 0003  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0                 ___aodiv@dividend 0028  
                    ??_LCDPutCmd 0074                      ??_LCDPutStr 0079           _PIN_MANAGER_Initialize 0FA1  
                       ?___aodiv 0020                         ?___aomod 0020                         ?___awdiv 0070  
               ___aodiv@quotient 0073                         ?___awmod 0070                 LCDWriteNibble@ch 0073  
               LCDWriteNibble@rs 0070                __size_of_vfprintf 0031                         ?_sprintf 0066  
                 __size_of_fputc 004F                   __size_of_fputs 0029                   __size_of_putch 0001  
                       _LCDClear 0E41                   ___wmul@product 0074                        clear_ram0 0E24  
                    _LCDGoto$226 0078                        main@F5610 00D9                        _vfpfcnvrt 01BD  
              ___wmul@multiplier 0070                        main@label 1000                        _sumdigits 002A  
               __size_of_LCDGoto 0027                        main@prime 00C9                       vfprintf@ap 0060  
                     vfprintf@fp 0063          ??_OSCILLATOR_Initialize 0070          __size_of_LCD_Initialize 0023  
               __size_of___aodiv 0101                 __size_of___aomod 00EA                 __size_of___awdiv 005F  
               __size_of___awmod 0053                       ?_vfpfcnvrt 004E                  ___aodiv@divisor 0020  
                ___aodiv@counter 0071                       sprintf@fmt 0066               sumdigits@SumDigits 0022  
                     ?_sumdigits 0079                         _dtoa$615 003B                         __ptext10 0F78  
                       __ptext11 0066                         __ptext20 0E30                         __ptext12 0E1F  
                       __ptext21 0F0A                         __ptext13 0E5B                         __ptext22 0E41  
                       __ptext14 0298                         __ptext23 0004                         __ptext15 0382  
                       __ptext24 0E8F                         __ptext16 0ECB                         __ptext25 0F51  
                       __ptext17 0E37                         __ptext26 0EAC                         __ptext18 0E20  
                       __ptext27 0EEA                         __ptext19 0FA1                 __size_of_sprintf 0024  
                  __size_of_main 01EF                    __size_of_dtoa 0165                         _vfprintf 0FCF  
                     _LCDPutChar 0E8F                 ___aomod@dividend 0028          __size_of_WDT_Initialize 0004  
                      sprintf@ap 00A2          ?_PIN_MANAGER_Initialize 0070                  ___aomod@divisor 0020  
                    ??_vfpfcnvrt 0050                  ___aomod@counter 0071                    __pstringtext1 1000  
                  __pstringtext2 1013                    __pstringtext3 1021                    __pstringtext4 102C  
                  __pstringtext5 1036                    __pstringtext6 103E                    __pstringtext7 0000  
                       sprintf@f 00A4                         sprintf@s 00A3                      ??_sumdigits 007B  
                   ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 0FCF          __size_of_LCDWriteNibble 0020  
                   ___aomod@sign 0072  
