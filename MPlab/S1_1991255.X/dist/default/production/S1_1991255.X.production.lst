

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jun 02 15:04:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16LF1718
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16LF1718 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0118                     	;# 
   143  0119                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011C                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018E                     	;# 
   151  0191                     	;# 
   152  0191                     	;# 
   153  0192                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0194                     	;# 
   157  0195                     	;# 
   158  0196                     	;# 
   159  0199                     	;# 
   160  0199                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019A                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019D                     	;# 
   174  019D                     	;# 
   175  019D                     	;# 
   176  019E                     	;# 
   177  019E                     	;# 
   178  019E                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  020C                     	;# 
   185  020D                     	;# 
   186  020E                     	;# 
   187  0210                     	;# 
   188  0211                     	;# 
   189  0211                     	;# 
   190  0212                     	;# 
   191  0212                     	;# 
   192  0213                     	;# 
   193  0213                     	;# 
   194  0214                     	;# 
   195  0214                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0216                     	;# 
   201  0216                     	;# 
   202  0217                     	;# 
   203  0217                     	;# 
   204  028C                     	;# 
   205  028D                     	;# 
   206  028E                     	;# 
   207  0291                     	;# 
   208  0291                     	;# 
   209  0292                     	;# 
   210  0293                     	;# 
   211  0293                     	;# 
   212  0298                     	;# 
   213  0298                     	;# 
   214  0299                     	;# 
   215  029A                     	;# 
   216  029A                     	;# 
   217  029E                     	;# 
   218  030C                     	;# 
   219  030D                     	;# 
   220  030E                     	;# 
   221  038C                     	;# 
   222  038D                     	;# 
   223  038E                     	;# 
   224  0390                     	;# 
   225  0391                     	;# 
   226  0392                     	;# 
   227  0393                     	;# 
   228  0394                     	;# 
   229  0395                     	;# 
   230  0396                     	;# 
   231  0397                     	;# 
   232  0398                     	;# 
   233  0399                     	;# 
   234  039D                     	;# 
   235  039E                     	;# 
   236  039F                     	;# 
   237  0415                     	;# 
   238  0416                     	;# 
   239  0417                     	;# 
   240  041C                     	;# 
   241  041D                     	;# 
   242  041E                     	;# 
   243  0498                     	;# 
   244  0498                     	;# 
   245  0499                     	;# 
   246  049A                     	;# 
   247  049B                     	;# 
   248  049B                     	;# 
   249  049C                     	;# 
   250  049D                     	;# 
   251  049E                     	;# 
   252  049F                     	;# 
   253  0511                     	;# 
   254  0515                     	;# 
   255  0617                     	;# 
   256  0618                     	;# 
   257  0619                     	;# 
   258  0619                     	;# 
   259  061A                     	;# 
   260  061B                     	;# 
   261  061C                     	;# 
   262  061C                     	;# 
   263  0691                     	;# 
   264  0692                     	;# 
   265  0693                     	;# 
   266  0694                     	;# 
   267  0695                     	;# 
   268  0696                     	;# 
   269  0697                     	;# 
   270  0698                     	;# 
   271  0699                     	;# 
   272  069A                     	;# 
   273  069B                     	;# 
   274  069C                     	;# 
   275  069D                     	;# 
   276  069E                     	;# 
   277  069F                     	;# 
   278  0E0F                     	;# 
   279  0E10                     	;# 
   280  0E11                     	;# 
   281  0E12                     	;# 
   282  0E13                     	;# 
   283  0E14                     	;# 
   284  0E15                     	;# 
   285  0E17                     	;# 
   286  0E20                     	;# 
   287  0E21                     	;# 
   288  0E22                     	;# 
   289  0E24                     	;# 
   290  0E25                     	;# 
   291  0E28                     	;# 
   292  0E29                     	;# 
   293  0E2A                     	;# 
   294  0E2B                     	;# 
   295  0E90                     	;# 
   296  0E91                     	;# 
   297  0E92                     	;# 
   298  0E93                     	;# 
   299  0E94                     	;# 
   300  0E95                     	;# 
   301  0E96                     	;# 
   302  0E97                     	;# 
   303  0E98                     	;# 
   304  0E99                     	;# 
   305  0E9A                     	;# 
   306  0E9B                     	;# 
   307  0E9C                     	;# 
   308  0E9D                     	;# 
   309  0E9E                     	;# 
   310  0E9F                     	;# 
   311  0EA0                     	;# 
   312  0EA1                     	;# 
   313  0EA2                     	;# 
   314  0EA3                     	;# 
   315  0EA4                     	;# 
   316  0EA5                     	;# 
   317  0EA6                     	;# 
   318  0EA7                     	;# 
   319  0F0F                     	;# 
   320  0F10                     	;# 
   321  0F11                     	;# 
   322  0F12                     	;# 
   323  0F13                     	;# 
   324  0F14                     	;# 
   325  0F15                     	;# 
   326  0F16                     	;# 
   327  0F17                     	;# 
   328  0F18                     	;# 
   329  0F19                     	;# 
   330  0F1A                     	;# 
   331  0F1B                     	;# 
   332  0F1C                     	;# 
   333  0F1D                     	;# 
   334  0F1E                     	;# 
   335  0F1F                     	;# 
   336  0F20                     	;# 
   337  0F21                     	;# 
   338  0F22                     	;# 
   339  0F23                     	;# 
   340  0F24                     	;# 
   341  0F25                     	;# 
   342  0F26                     	;# 
   343  0F27                     	;# 
   344  0F28                     	;# 
   345  0F29                     	;# 
   346  0F2A                     	;# 
   347  0F2B                     	;# 
   348  0F2C                     	;# 
   349  0F2D                     	;# 
   350  0F2E                     	;# 
   351  0F2F                     	;# 
   352  0F30                     	;# 
   353  0F31                     	;# 
   354  0F32                     	;# 
   355  0F33                     	;# 
   356  0F34                     	;# 
   357  0F35                     	;# 
   358  0F36                     	;# 
   359  0F37                     	;# 
   360  0FE4                     	;# 
   361  0FE5                     	;# 
   362  0FE6                     	;# 
   363  0FE7                     	;# 
   364  0FE8                     	;# 
   365  0FE9                     	;# 
   366  0FEA                     	;# 
   367  0FEB                     	;# 
   368  0FED                     	;# 
   369  0FEE                     	;# 
   370  0FEF                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  000D                     	;# 
   385  000E                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  008C                     	;# 
   400  008D                     	;# 
   401  008E                     	;# 
   402  0090                     	;# 
   403  0091                     	;# 
   404  0092                     	;# 
   405  0093                     	;# 
   406  0095                     	;# 
   407  0096                     	;# 
   408  0097                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009A                     	;# 
   412  009B                     	;# 
   413  009B                     	;# 
   414  009C                     	;# 
   415  009D                     	;# 
   416  009E                     	;# 
   417  009F                     	;# 
   418  010C                     	;# 
   419  010D                     	;# 
   420  010E                     	;# 
   421  0111                     	;# 
   422  0112                     	;# 
   423  0113                     	;# 
   424  0114                     	;# 
   425  0115                     	;# 
   426  0116                     	;# 
   427  0117                     	;# 
   428  0118                     	;# 
   429  0119                     	;# 
   430  011A                     	;# 
   431  011B                     	;# 
   432  011B                     	;# 
   433  011C                     	;# 
   434  018C                     	;# 
   435  018D                     	;# 
   436  018E                     	;# 
   437  0191                     	;# 
   438  0191                     	;# 
   439  0192                     	;# 
   440  0193                     	;# 
   441  0193                     	;# 
   442  0194                     	;# 
   443  0195                     	;# 
   444  0196                     	;# 
   445  0199                     	;# 
   446  0199                     	;# 
   447  0199                     	;# 
   448  019A                     	;# 
   449  019A                     	;# 
   450  019A                     	;# 
   451  019B                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019C                     	;# 
   457  019C                     	;# 
   458  019C                     	;# 
   459  019D                     	;# 
   460  019D                     	;# 
   461  019D                     	;# 
   462  019E                     	;# 
   463  019E                     	;# 
   464  019E                     	;# 
   465  019F                     	;# 
   466  019F                     	;# 
   467  019F                     	;# 
   468  019F                     	;# 
   469  019F                     	;# 
   470  020C                     	;# 
   471  020D                     	;# 
   472  020E                     	;# 
   473  0210                     	;# 
   474  0211                     	;# 
   475  0211                     	;# 
   476  0212                     	;# 
   477  0212                     	;# 
   478  0213                     	;# 
   479  0213                     	;# 
   480  0214                     	;# 
   481  0214                     	;# 
   482  0215                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0216                     	;# 
   487  0216                     	;# 
   488  0217                     	;# 
   489  0217                     	;# 
   490  028C                     	;# 
   491  028D                     	;# 
   492  028E                     	;# 
   493  0291                     	;# 
   494  0291                     	;# 
   495  0292                     	;# 
   496  0293                     	;# 
   497  0293                     	;# 
   498  0298                     	;# 
   499  0298                     	;# 
   500  0299                     	;# 
   501  029A                     	;# 
   502  029A                     	;# 
   503  029E                     	;# 
   504  030C                     	;# 
   505  030D                     	;# 
   506  030E                     	;# 
   507  038C                     	;# 
   508  038D                     	;# 
   509  038E                     	;# 
   510  0390                     	;# 
   511  0391                     	;# 
   512  0392                     	;# 
   513  0393                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0397                     	;# 
   518  0398                     	;# 
   519  0399                     	;# 
   520  039D                     	;# 
   521  039E                     	;# 
   522  039F                     	;# 
   523  0415                     	;# 
   524  0416                     	;# 
   525  0417                     	;# 
   526  041C                     	;# 
   527  041D                     	;# 
   528  041E                     	;# 
   529  0498                     	;# 
   530  0498                     	;# 
   531  0499                     	;# 
   532  049A                     	;# 
   533  049B                     	;# 
   534  049B                     	;# 
   535  049C                     	;# 
   536  049D                     	;# 
   537  049E                     	;# 
   538  049F                     	;# 
   539  0511                     	;# 
   540  0515                     	;# 
   541  0617                     	;# 
   542  0618                     	;# 
   543  0619                     	;# 
   544  0619                     	;# 
   545  061A                     	;# 
   546  061B                     	;# 
   547  061C                     	;# 
   548  061C                     	;# 
   549  0691                     	;# 
   550  0692                     	;# 
   551  0693                     	;# 
   552  0694                     	;# 
   553  0695                     	;# 
   554  0696                     	;# 
   555  0697                     	;# 
   556  0698                     	;# 
   557  0699                     	;# 
   558  069A                     	;# 
   559  069B                     	;# 
   560  069C                     	;# 
   561  069D                     	;# 
   562  069E                     	;# 
   563  069F                     	;# 
   564  0E0F                     	;# 
   565  0E10                     	;# 
   566  0E11                     	;# 
   567  0E12                     	;# 
   568  0E13                     	;# 
   569  0E14                     	;# 
   570  0E15                     	;# 
   571  0E17                     	;# 
   572  0E20                     	;# 
   573  0E21                     	;# 
   574  0E22                     	;# 
   575  0E24                     	;# 
   576  0E25                     	;# 
   577  0E28                     	;# 
   578  0E29                     	;# 
   579  0E2A                     	;# 
   580  0E2B                     	;# 
   581  0E90                     	;# 
   582  0E91                     	;# 
   583  0E92                     	;# 
   584  0E93                     	;# 
   585  0E94                     	;# 
   586  0E95                     	;# 
   587  0E96                     	;# 
   588  0E97                     	;# 
   589  0E98                     	;# 
   590  0E99                     	;# 
   591  0E9A                     	;# 
   592  0E9B                     	;# 
   593  0E9C                     	;# 
   594  0E9D                     	;# 
   595  0E9E                     	;# 
   596  0E9F                     	;# 
   597  0EA0                     	;# 
   598  0EA1                     	;# 
   599  0EA2                     	;# 
   600  0EA3                     	;# 
   601  0EA4                     	;# 
   602  0EA5                     	;# 
   603  0EA6                     	;# 
   604  0EA7                     	;# 
   605  0F0F                     	;# 
   606  0F10                     	;# 
   607  0F11                     	;# 
   608  0F12                     	;# 
   609  0F13                     	;# 
   610  0F14                     	;# 
   611  0F15                     	;# 
   612  0F16                     	;# 
   613  0F17                     	;# 
   614  0F18                     	;# 
   615  0F19                     	;# 
   616  0F1A                     	;# 
   617  0F1B                     	;# 
   618  0F1C                     	;# 
   619  0F1D                     	;# 
   620  0F1E                     	;# 
   621  0F1F                     	;# 
   622  0F20                     	;# 
   623  0F21                     	;# 
   624  0F22                     	;# 
   625  0F23                     	;# 
   626  0F24                     	;# 
   627  0F25                     	;# 
   628  0F26                     	;# 
   629  0F27                     	;# 
   630  0F28                     	;# 
   631  0F29                     	;# 
   632  0F2A                     	;# 
   633  0F2B                     	;# 
   634  0F2C                     	;# 
   635  0F2D                     	;# 
   636  0F2E                     	;# 
   637  0F2F                     	;# 
   638  0F30                     	;# 
   639  0F31                     	;# 
   640  0F32                     	;# 
   641  0F33                     	;# 
   642  0F34                     	;# 
   643  0F35                     	;# 
   644  0F36                     	;# 
   645  0F37                     	;# 
   646  0FE4                     	;# 
   647  0FE5                     	;# 
   648  0FE6                     	;# 
   649  0FE7                     	;# 
   650  0FE8                     	;# 
   651  0FE9                     	;# 
   652  0FEA                     	;# 
   653  0FEB                     	;# 
   654  0FED                     	;# 
   655  0FEE                     	;# 
   656  0FEF                     	;# 
   657  0000                     	;# 
   658  0001                     	;# 
   659  0002                     	;# 
   660  0003                     	;# 
   661  0004                     	;# 
   662  0005                     	;# 
   663  0006                     	;# 
   664  0007                     	;# 
   665  0008                     	;# 
   666  0009                     	;# 
   667  000A                     	;# 
   668  000B                     	;# 
   669  000C                     	;# 
   670  000D                     	;# 
   671  000E                     	;# 
   672  0010                     	;# 
   673  0011                     	;# 
   674  0012                     	;# 
   675  0013                     	;# 
   676  0015                     	;# 
   677  0016                     	;# 
   678  0016                     	;# 
   679  0017                     	;# 
   680  0018                     	;# 
   681  0019                     	;# 
   682  001A                     	;# 
   683  001B                     	;# 
   684  001C                     	;# 
   685  008C                     	;# 
   686  008D                     	;# 
   687  008E                     	;# 
   688  0090                     	;# 
   689  0091                     	;# 
   690  0092                     	;# 
   691  0093                     	;# 
   692  0095                     	;# 
   693  0096                     	;# 
   694  0097                     	;# 
   695  0098                     	;# 
   696  0099                     	;# 
   697  009A                     	;# 
   698  009B                     	;# 
   699  009B                     	;# 
   700  009C                     	;# 
   701  009D                     	;# 
   702  009E                     	;# 
   703  009F                     	;# 
   704  010C                     	;# 
   705  010D                     	;# 
   706  010E                     	;# 
   707  0111                     	;# 
   708  0112                     	;# 
   709  0113                     	;# 
   710  0114                     	;# 
   711  0115                     	;# 
   712  0116                     	;# 
   713  0117                     	;# 
   714  0118                     	;# 
   715  0119                     	;# 
   716  011A                     	;# 
   717  011B                     	;# 
   718  011B                     	;# 
   719  011C                     	;# 
   720  018C                     	;# 
   721  018D                     	;# 
   722  018E                     	;# 
   723  0191                     	;# 
   724  0191                     	;# 
   725  0192                     	;# 
   726  0193                     	;# 
   727  0193                     	;# 
   728  0194                     	;# 
   729  0195                     	;# 
   730  0196                     	;# 
   731  0199                     	;# 
   732  0199                     	;# 
   733  0199                     	;# 
   734  019A                     	;# 
   735  019A                     	;# 
   736  019A                     	;# 
   737  019B                     	;# 
   738  019B                     	;# 
   739  019B                     	;# 
   740  019B                     	;# 
   741  019B                     	;# 
   742  019C                     	;# 
   743  019C                     	;# 
   744  019C                     	;# 
   745  019D                     	;# 
   746  019D                     	;# 
   747  019D                     	;# 
   748  019E                     	;# 
   749  019E                     	;# 
   750  019E                     	;# 
   751  019F                     	;# 
   752  019F                     	;# 
   753  019F                     	;# 
   754  019F                     	;# 
   755  019F                     	;# 
   756  020C                     	;# 
   757  020D                     	;# 
   758  020E                     	;# 
   759  0210                     	;# 
   760  0211                     	;# 
   761  0211                     	;# 
   762  0212                     	;# 
   763  0212                     	;# 
   764  0213                     	;# 
   765  0213                     	;# 
   766  0214                     	;# 
   767  0214                     	;# 
   768  0215                     	;# 
   769  0215                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0216                     	;# 
   773  0216                     	;# 
   774  0217                     	;# 
   775  0217                     	;# 
   776  028C                     	;# 
   777  028D                     	;# 
   778  028E                     	;# 
   779  0291                     	;# 
   780  0291                     	;# 
   781  0292                     	;# 
   782  0293                     	;# 
   783  0293                     	;# 
   784  0298                     	;# 
   785  0298                     	;# 
   786  0299                     	;# 
   787  029A                     	;# 
   788  029A                     	;# 
   789  029E                     	;# 
   790  030C                     	;# 
   791  030D                     	;# 
   792  030E                     	;# 
   793  038C                     	;# 
   794  038D                     	;# 
   795  038E                     	;# 
   796  0390                     	;# 
   797  0391                     	;# 
   798  0392                     	;# 
   799  0393                     	;# 
   800  0394                     	;# 
   801  0395                     	;# 
   802  0396                     	;# 
   803  0397                     	;# 
   804  0398                     	;# 
   805  0399                     	;# 
   806  039D                     	;# 
   807  039E                     	;# 
   808  039F                     	;# 
   809  0415                     	;# 
   810  0416                     	;# 
   811  0417                     	;# 
   812  041C                     	;# 
   813  041D                     	;# 
   814  041E                     	;# 
   815  0498                     	;# 
   816  0498                     	;# 
   817  0499                     	;# 
   818  049A                     	;# 
   819  049B                     	;# 
   820  049B                     	;# 
   821  049C                     	;# 
   822  049D                     	;# 
   823  049E                     	;# 
   824  049F                     	;# 
   825  0511                     	;# 
   826  0515                     	;# 
   827  0617                     	;# 
   828  0618                     	;# 
   829  0619                     	;# 
   830  0619                     	;# 
   831  061A                     	;# 
   832  061B                     	;# 
   833  061C                     	;# 
   834  061C                     	;# 
   835  0691                     	;# 
   836  0692                     	;# 
   837  0693                     	;# 
   838  0694                     	;# 
   839  0695                     	;# 
   840  0696                     	;# 
   841  0697                     	;# 
   842  0698                     	;# 
   843  0699                     	;# 
   844  069A                     	;# 
   845  069B                     	;# 
   846  069C                     	;# 
   847  069D                     	;# 
   848  069E                     	;# 
   849  069F                     	;# 
   850  0E0F                     	;# 
   851  0E10                     	;# 
   852  0E11                     	;# 
   853  0E12                     	;# 
   854  0E13                     	;# 
   855  0E14                     	;# 
   856  0E15                     	;# 
   857  0E17                     	;# 
   858  0E20                     	;# 
   859  0E21                     	;# 
   860  0E22                     	;# 
   861  0E24                     	;# 
   862  0E25                     	;# 
   863  0E28                     	;# 
   864  0E29                     	;# 
   865  0E2A                     	;# 
   866  0E2B                     	;# 
   867  0E90                     	;# 
   868  0E91                     	;# 
   869  0E92                     	;# 
   870  0E93                     	;# 
   871  0E94                     	;# 
   872  0E95                     	;# 
   873  0E96                     	;# 
   874  0E97                     	;# 
   875  0E98                     	;# 
   876  0E99                     	;# 
   877  0E9A                     	;# 
   878  0E9B                     	;# 
   879  0E9C                     	;# 
   880  0E9D                     	;# 
   881  0E9E                     	;# 
   882  0E9F                     	;# 
   883  0EA0                     	;# 
   884  0EA1                     	;# 
   885  0EA2                     	;# 
   886  0EA3                     	;# 
   887  0EA4                     	;# 
   888  0EA5                     	;# 
   889  0EA6                     	;# 
   890  0EA7                     	;# 
   891  0F0F                     	;# 
   892  0F10                     	;# 
   893  0F11                     	;# 
   894  0F12                     	;# 
   895  0F13                     	;# 
   896  0F14                     	;# 
   897  0F15                     	;# 
   898  0F16                     	;# 
   899  0F17                     	;# 
   900  0F18                     	;# 
   901  0F19                     	;# 
   902  0F1A                     	;# 
   903  0F1B                     	;# 
   904  0F1C                     	;# 
   905  0F1D                     	;# 
   906  0F1E                     	;# 
   907  0F1F                     	;# 
   908  0F20                     	;# 
   909  0F21                     	;# 
   910  0F22                     	;# 
   911  0F23                     	;# 
   912  0F24                     	;# 
   913  0F25                     	;# 
   914  0F26                     	;# 
   915  0F27                     	;# 
   916  0F28                     	;# 
   917  0F29                     	;# 
   918  0F2A                     	;# 
   919  0F2B                     	;# 
   920  0F2C                     	;# 
   921  0F2D                     	;# 
   922  0F2E                     	;# 
   923  0F2F                     	;# 
   924  0F30                     	;# 
   925  0F31                     	;# 
   926  0F32                     	;# 
   927  0F33                     	;# 
   928  0F34                     	;# 
   929  0F35                     	;# 
   930  0F36                     	;# 
   931  0F37                     	;# 
   932  0FE4                     	;# 
   933  0FE5                     	;# 
   934  0FE6                     	;# 
   935  0FE7                     	;# 
   936  0FE8                     	;# 
   937  0FE9                     	;# 
   938  0FEA                     	;# 
   939  0FEB                     	;# 
   940  0FED                     	;# 
   941  0FEE                     	;# 
   942  0FEF                     	;# 
   943  0000                     	;# 
   944  0001                     	;# 
   945  0002                     	;# 
   946  0003                     	;# 
   947  0004                     	;# 
   948  0005                     	;# 
   949  0006                     	;# 
   950  0007                     	;# 
   951  0008                     	;# 
   952  0009                     	;# 
   953  000A                     	;# 
   954  000B                     	;# 
   955  000C                     	;# 
   956  000D                     	;# 
   957  000E                     	;# 
   958  0010                     	;# 
   959  0011                     	;# 
   960  0012                     	;# 
   961  0013                     	;# 
   962  0015                     	;# 
   963  0016                     	;# 
   964  0016                     	;# 
   965  0017                     	;# 
   966  0018                     	;# 
   967  0019                     	;# 
   968  001A                     	;# 
   969  001B                     	;# 
   970  001C                     	;# 
   971  008C                     	;# 
   972  008D                     	;# 
   973  008E                     	;# 
   974  0090                     	;# 
   975  0091                     	;# 
   976  0092                     	;# 
   977  0093                     	;# 
   978  0095                     	;# 
   979  0096                     	;# 
   980  0097                     	;# 
   981  0098                     	;# 
   982  0099                     	;# 
   983  009A                     	;# 
   984  009B                     	;# 
   985  009B                     	;# 
   986  009C                     	;# 
   987  009D                     	;# 
   988  009E                     	;# 
   989  009F                     	;# 
   990  010C                     	;# 
   991  010D                     	;# 
   992  010E                     	;# 
   993  0111                     	;# 
   994  0112                     	;# 
   995  0113                     	;# 
   996  0114                     	;# 
   997  0115                     	;# 
   998  0116                     	;# 
   999  0117                     	;# 
  1000  0118                     	;# 
  1001  0119                     	;# 
  1002  011A                     	;# 
  1003  011B                     	;# 
  1004  011B                     	;# 
  1005  011C                     	;# 
  1006  018C                     	;# 
  1007  018D                     	;# 
  1008  018E                     	;# 
  1009  0191                     	;# 
  1010  0191                     	;# 
  1011  0192                     	;# 
  1012  0193                     	;# 
  1013  0193                     	;# 
  1014  0194                     	;# 
  1015  0195                     	;# 
  1016  0196                     	;# 
  1017  0199                     	;# 
  1018  0199                     	;# 
  1019  0199                     	;# 
  1020  019A                     	;# 
  1021  019A                     	;# 
  1022  019A                     	;# 
  1023  019B                     	;# 
  1024  019B                     	;# 
  1025  019B                     	;# 
  1026  019B                     	;# 
  1027  019B                     	;# 
  1028  019C                     	;# 
  1029  019C                     	;# 
  1030  019C                     	;# 
  1031  019D                     	;# 
  1032  019D                     	;# 
  1033  019D                     	;# 
  1034  019E                     	;# 
  1035  019E                     	;# 
  1036  019E                     	;# 
  1037  019F                     	;# 
  1038  019F                     	;# 
  1039  019F                     	;# 
  1040  019F                     	;# 
  1041  019F                     	;# 
  1042  020C                     	;# 
  1043  020D                     	;# 
  1044  020E                     	;# 
  1045  0210                     	;# 
  1046  0211                     	;# 
  1047  0211                     	;# 
  1048  0212                     	;# 
  1049  0212                     	;# 
  1050  0213                     	;# 
  1051  0213                     	;# 
  1052  0214                     	;# 
  1053  0214                     	;# 
  1054  0215                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0215                     	;# 
  1058  0216                     	;# 
  1059  0216                     	;# 
  1060  0217                     	;# 
  1061  0217                     	;# 
  1062  028C                     	;# 
  1063  028D                     	;# 
  1064  028E                     	;# 
  1065  0291                     	;# 
  1066  0291                     	;# 
  1067  0292                     	;# 
  1068  0293                     	;# 
  1069  0293                     	;# 
  1070  0298                     	;# 
  1071  0298                     	;# 
  1072  0299                     	;# 
  1073  029A                     	;# 
  1074  029A                     	;# 
  1075  029E                     	;# 
  1076  030C                     	;# 
  1077  030D                     	;# 
  1078  030E                     	;# 
  1079  038C                     	;# 
  1080  038D                     	;# 
  1081  038E                     	;# 
  1082  0390                     	;# 
  1083  0391                     	;# 
  1084  0392                     	;# 
  1085  0393                     	;# 
  1086  0394                     	;# 
  1087  0395                     	;# 
  1088  0396                     	;# 
  1089  0397                     	;# 
  1090  0398                     	;# 
  1091  0399                     	;# 
  1092  039D                     	;# 
  1093  039E                     	;# 
  1094  039F                     	;# 
  1095  0415                     	;# 
  1096  0416                     	;# 
  1097  0417                     	;# 
  1098  041C                     	;# 
  1099  041D                     	;# 
  1100  041E                     	;# 
  1101  0498                     	;# 
  1102  0498                     	;# 
  1103  0499                     	;# 
  1104  049A                     	;# 
  1105  049B                     	;# 
  1106  049B                     	;# 
  1107  049C                     	;# 
  1108  049D                     	;# 
  1109  049E                     	;# 
  1110  049F                     	;# 
  1111  0511                     	;# 
  1112  0515                     	;# 
  1113  0617                     	;# 
  1114  0618                     	;# 
  1115  0619                     	;# 
  1116  0619                     	;# 
  1117  061A                     	;# 
  1118  061B                     	;# 
  1119  061C                     	;# 
  1120  061C                     	;# 
  1121  0691                     	;# 
  1122  0692                     	;# 
  1123  0693                     	;# 
  1124  0694                     	;# 
  1125  0695                     	;# 
  1126  0696                     	;# 
  1127  0697                     	;# 
  1128  0698                     	;# 
  1129  0699                     	;# 
  1130  069A                     	;# 
  1131  069B                     	;# 
  1132  069C                     	;# 
  1133  069D                     	;# 
  1134  069E                     	;# 
  1135  069F                     	;# 
  1136  0E0F                     	;# 
  1137  0E10                     	;# 
  1138  0E11                     	;# 
  1139  0E12                     	;# 
  1140  0E13                     	;# 
  1141  0E14                     	;# 
  1142  0E15                     	;# 
  1143  0E17                     	;# 
  1144  0E20                     	;# 
  1145  0E21                     	;# 
  1146  0E22                     	;# 
  1147  0E24                     	;# 
  1148  0E25                     	;# 
  1149  0E28                     	;# 
  1150  0E29                     	;# 
  1151  0E2A                     	;# 
  1152  0E2B                     	;# 
  1153  0E90                     	;# 
  1154  0E91                     	;# 
  1155  0E92                     	;# 
  1156  0E93                     	;# 
  1157  0E94                     	;# 
  1158  0E95                     	;# 
  1159  0E96                     	;# 
  1160  0E97                     	;# 
  1161  0E98                     	;# 
  1162  0E99                     	;# 
  1163  0E9A                     	;# 
  1164  0E9B                     	;# 
  1165  0E9C                     	;# 
  1166  0E9D                     	;# 
  1167  0E9E                     	;# 
  1168  0E9F                     	;# 
  1169  0EA0                     	;# 
  1170  0EA1                     	;# 
  1171  0EA2                     	;# 
  1172  0EA3                     	;# 
  1173  0EA4                     	;# 
  1174  0EA5                     	;# 
  1175  0EA6                     	;# 
  1176  0EA7                     	;# 
  1177  0F0F                     	;# 
  1178  0F10                     	;# 
  1179  0F11                     	;# 
  1180  0F12                     	;# 
  1181  0F13                     	;# 
  1182  0F14                     	;# 
  1183  0F15                     	;# 
  1184  0F16                     	;# 
  1185  0F17                     	;# 
  1186  0F18                     	;# 
  1187  0F19                     	;# 
  1188  0F1A                     	;# 
  1189  0F1B                     	;# 
  1190  0F1C                     	;# 
  1191  0F1D                     	;# 
  1192  0F1E                     	;# 
  1193  0F1F                     	;# 
  1194  0F20                     	;# 
  1195  0F21                     	;# 
  1196  0F22                     	;# 
  1197  0F23                     	;# 
  1198  0F24                     	;# 
  1199  0F25                     	;# 
  1200  0F26                     	;# 
  1201  0F27                     	;# 
  1202  0F28                     	;# 
  1203  0F29                     	;# 
  1204  0F2A                     	;# 
  1205  0F2B                     	;# 
  1206  0F2C                     	;# 
  1207  0F2D                     	;# 
  1208  0F2E                     	;# 
  1209  0F2F                     	;# 
  1210  0F30                     	;# 
  1211  0F31                     	;# 
  1212  0F32                     	;# 
  1213  0F33                     	;# 
  1214  0F34                     	;# 
  1215  0F35                     	;# 
  1216  0F36                     	;# 
  1217  0F37                     	;# 
  1218  0FE4                     	;# 
  1219  0FE5                     	;# 
  1220  0FE6                     	;# 
  1221  0FE7                     	;# 
  1222  0FE8                     	;# 
  1223  0FE9                     	;# 
  1224  0FEA                     	;# 
  1225  0FEB                     	;# 
  1226  0FED                     	;# 
  1227  0FEE                     	;# 
  1228  0FEF                     	;# 
  1229                           
  1230                           	psect	idataBANK1
  1231  0E3C                     __pidataBANK1:
  1232                           
  1233                           ;initializer for _last3digitsCarnet3
  1234  0E3C  34A4               	retlw	164
  1235  0E3D  3401               	retlw	1
  1236                           
  1237                           ;initializer for _last3digitsCarnet2
  1238  0E3E  34ED               	retlw	237
  1239  0E3F  3401               	retlw	1
  1240                           
  1241                           ;initializer for _last3digitsCarnet1
  1242  0E40  34FF               	retlw	255
  1243  0E41  3400               	retlw	0
  1244                           
  1245                           	psect	stringtext1
  1246  1000                     __pstringtext1:
  1247  1000                     main@label:
  1248  1000  3401               	retlw	1
  1249  1001  3400               	retlw	0
  1250  1002                     __end_ofmain@label:
  1251  000D                     _PORTBbits	set	13
  1252  000D                     _PORTB	set	13
  1253  0097                     _WDTCON	set	151
  1254  0098                     _OSCTUNE	set	152
  1255  0099                     _OSCCON	set	153
  1256  0095                     _OPTION_REGbits	set	149
  1257  008E                     _TRISC	set	142
  1258  008D                     _TRISB	set	141
  1259  008C                     _TRISA	set	140
  1260  0090                     _TRISE	set	144
  1261  0116                     _BORCON	set	278
  1262  010E                     _LATC	set	270
  1263  010D                     _LATB	set	269
  1264  010C                     _LATA	set	268
  1265  018C                     _ANSELA	set	396
  1266  018D                     _ANSELB	set	397
  1267  018E                     _ANSELC	set	398
  1268  020E                     _WPUC	set	526
  1269  020C                     _WPUA	set	524
  1270  020D                     _WPUB	set	525
  1271  0210                     _WPUE	set	528
  1272  028E                     _ODCONC	set	654
  1273  028D                     _ODCONB	set	653
  1274  028C                     _ODCONA	set	652
  1275  030E                     _SLRCONC	set	782
  1276  030D                     _SLRCONB	set	781
  1277  030C                     _SLRCONA	set	780
  1278  0390                     _INLVLE	set	912
  1279  038E                     _INLVLC	set	910
  1280  038D                     _INLVLB	set	909
  1281  038C                     _INLVLA	set	908
  1282  1002                     STR_7:
  1283  1002  3420               	retlw	32	;' '
  1284  1003  3420               	retlw	32	;' '
  1285  1004  3420               	retlw	32	;' '
  1286  1005  3420               	retlw	32	;' '
  1287  1006  3420               	retlw	32	;' '
  1288  1007  3420               	retlw	32	;' '
  1289  1008  3420               	retlw	32	;' '
  1290  1009  3420               	retlw	32	;' '
  1291  100A  3420               	retlw	32	;' '
  1292  100B  3420               	retlw	32	;' '
  1293  100C  3420               	retlw	32	;' '
  1294  100D  3420               	retlw	32	;' '
  1295  100E  3420               	retlw	32	;' '
  1296  100F  3420               	retlw	32	;' '
  1297  1010  3420               	retlw	32	;' '
  1298  1011  3420               	retlw	32	;' '
  1299  1012  3400               	retlw	0
  1300                           
  1301                           	psect	stringtext2
  1302  1013                     __pstringtext2:
  1303  1013                     STR_3:
  1304  1013  3473               	retlw	115	;'s'
  1305  1014  3475               	retlw	117	;'u'
  1306  1015  346D               	retlw	109	;'m'
  1307  1016  3444               	retlw	68	;'D'
  1308  1017  3469               	retlw	105	;'i'
  1309  1018  3467               	retlw	103	;'g'
  1310  1019  3469               	retlw	105	;'i'
  1311  101A  3474               	retlw	116	;'t'
  1312  101B  3473               	retlw	115	;'s'
  1313  101C  343D               	retlw	61	;'='
  1314  101D  3400               	retlw	0
  1315                           
  1316                           	psect	stringtext3
  1317  101E                     __pstringtext3:
  1318  101E                     STR_1:
  1319  101E  3473               	retlw	115	;'s'
  1320  101F  3475               	retlw	117	;'u'
  1321  1020  346D               	retlw	109	;'m'
  1322  1021  3450               	retlw	80	;'P'
  1323  1022  3472               	retlw	114	;'r'
  1324  1023  3469               	retlw	105	;'i'
  1325  1024  346D               	retlw	109	;'m'
  1326  1025  3465               	retlw	101	;'e'
  1327  1026  343D               	retlw	61	;'='
  1328  1027  3400               	retlw	0
  1329                           
  1330                           	psect	stringtext4
  1331  1028                     __pstringtext4:
  1332  1028                     STR_5:
  1333  1028  3442               	retlw	66	;'B'
  1334  1029  3469               	retlw	105	;'i'
  1335  102A  346E               	retlw	110	;'n'
  1336  102B  3461               	retlw	97	;'a'
  1337  102C  3472               	retlw	114	;'r'
  1338  102D  3479               	retlw	121	;'y'
  1339  102E  343D               	retlw	61	;'='
  1340  102F  3400               	retlw	0
  1341                           
  1342                           	psect	stringtext5
  1343  1030                     __pstringtext5:
  1344  1030                     STR_2:
  1345  1030  3425               	retlw	37	;'%'
  1346  1031  3464               	retlw	100	;'d'
  1347  1032  3400               	retlw	0
  1348                           
  1349                           	psect	stringtext6
  1350  0000                     __pstringtext6:
  1351  1002                     
  1352                           	psect	cinit
  1353  07D7                     start_initialization:	
  1354                           ; #config settings
  1355                           
  1356  07D7                     __initialization:
  1357                           
  1358                           ; Initialize objects allocated to BANK1
  1359  07D7  303C               	movlw	low __pidataBANK1
  1360  07D8  0084               	movwf	4
  1361  07D9  308E               	movlw	(high __pidataBANK1)| (0+128)
  1362  07DA  0085               	movwf	5
  1363  07DB  0021               	movlb	1	; select bank1
  1364  07DC  0012               	moviw fsr0++
  1365  07DD  00DD               	movwf	__pdataBANK1& (0+127)
  1366  07DE  0012               	moviw fsr0++
  1367  07DF  00DE               	movwf	(__pdataBANK1+1)& (0+127)
  1368  07E0  0012               	moviw fsr0++
  1369  07E1  00DF               	movwf	(__pdataBANK1+2)& (0+127)
  1370  07E2  0012               	moviw fsr0++
  1371  07E3  00E0               	movwf	(__pdataBANK1+3)& (0+127)
  1372  07E4  0012               	moviw fsr0++
  1373  07E5  00E1               	movwf	(__pdataBANK1+4)& (0+127)
  1374  07E6  0012               	moviw fsr0++
  1375  07E7  00E2               	movwf	(__pdataBANK1+5)& (0+127)
  1376                           
  1377                           ; Clear objects allocated to BANK0
  1378  07E8  0020               	movlb	0	; select bank0
  1379  07E9  01EC               	clrf	__pbssBANK0& (0+127)
  1380  07EA  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  1381  07EB  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  1382  07EC  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  1383                           
  1384                           ; Clear objects allocated to BANK1
  1385  07ED  30D1               	movlw	low __pbssBANK1
  1386  07EE  0084               	movwf	4
  1387  07EF  3000               	movlw	high __pbssBANK1
  1388  07F0  0085               	movwf	5
  1389  07F1  300C               	movlw	12
  1390  07F2  318E  2636  3187   	fcall	clear_ram0
  1391                           
  1392                           ; Clear objects allocated to BANK2
  1393  07F5  3020               	movlw	low __pbssBANK2
  1394  07F6  0084               	movwf	4
  1395  07F7  3001               	movlw	high __pbssBANK2
  1396  07F8  0085               	movwf	5
  1397  07F9  3020               	movlw	32
  1398  07FA  318E  2636  3187   	fcall	clear_ram0
  1399  07FD                     end_of_initialization:	
  1400                           ;End of C runtime variable initialization code
  1401                           
  1402  07FD                     __end_of__initialization:
  1403  07FD  0020               	movlb	0
  1404  07FE  3185  2DFB         	ljmp	_main	;jump to C main() function
  1405                           
  1406                           	psect	bssBANK0
  1407  006C                     __pbssBANK0:
  1408  006C                     _prec:
  1409  006C                     	ds	2
  1410  006E                     _flags:
  1411  006E                     	ds	2
  1412                           
  1413                           	psect	bssBANK1
  1414  00D1                     __pbssBANK1:
  1415  00D1                     main@F5610:
  1416  00D1                     	ds	8
  1417  00D9                     _nout:
  1418  00D9                     	ds	2
  1419  00DB                     _width:
  1420  00DB                     	ds	2
  1421                           
  1422                           	psect	dataBANK1
  1423  00DD                     __pdataBANK1:
  1424  00DD                     _last3digitsCarnet3:
  1425  00DD                     	ds	2
  1426  00DF                     _last3digitsCarnet2:
  1427  00DF                     	ds	2
  1428  00E1                     _last3digitsCarnet1:
  1429  00E1                     	ds	2
  1430                           
  1431                           	psect	bssBANK2
  1432  0120                     __pbssBANK2:
  1433  0120                     _dbuf:
  1434  0120                     	ds	32
  1435                           
  1436                           	psect	clrtext
  1437  0E36                     clear_ram0:	
  1438                           ;	Called with FSR0 containing the base address, and
  1439                           ;	WREG with the size to clear
  1440                           
  1441  0E36  0064               	clrwdt	;clear the watchdog before getting into this loop
  1442  0E37                     clrloop0:
  1443  0E37  0180               	clrf	0	;clear RAM location pointed to by FSR
  1444  0E38  3101               	addfsr 0,1
  1445  0E39  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1446  0E3A  2E37               	goto	clrloop0	;have we reached the end yet?
  1447  0E3B  3400               	retlw	0	;all done for this memory range, return
  1448                           
  1449                           	psect	cstackBANK1
  1450  00A0                     __pcstackBANK1:
  1451  00A0                     	ds	2
  1452  00A2                     sprintf@ap:
  1453                           
  1454                           ; 1 bytes @ 0x2
  1455  00A2                     	ds	1
  1456  00A3                     sprintf@s:
  1457                           
  1458                           ; 1 bytes @ 0x3
  1459  00A3                     	ds	1
  1460  00A4                     sprintf@f:
  1461                           
  1462                           ; 5 bytes @ 0x4
  1463  00A4                     	ds	5
  1464  00A9                     ??_main:
  1465                           
  1466                           ; 1 bytes @ 0x9
  1467  00A9                     	ds	6
  1468  00AF                     main@printchar:
  1469                           
  1470                           ; 10 bytes @ 0xF
  1471  00AF                     	ds	10
  1472  00B9                     main@Binary:
  1473                           
  1474                           ; 4 bytes @ 0x19
  1475  00B9                     	ds	4
  1476  00BD                     main@bin:
  1477                           
  1478                           ; 8 bytes @ 0x1D
  1479  00BD                     	ds	8
  1480  00C5                     main@prime:
  1481                           
  1482                           ; 2 bytes @ 0x25
  1483  00C5                     	ds	2
  1484  00C7                     main@carnet:
  1485                           
  1486                           ; 2 bytes @ 0x27
  1487  00C7                     	ds	2
  1488  00C9                     main@SumPrime:
  1489                           
  1490                           ; 2 bytes @ 0x29
  1491  00C9                     	ds	2
  1492  00CB                     main@i:
  1493                           
  1494                           ; 2 bytes @ 0x2B
  1495  00CB                     	ds	2
  1496  00CD                     main@number:
  1497                           
  1498                           ; 2 bytes @ 0x2D
  1499  00CD                     	ds	2
  1500  00CF                     main@SumDigits:
  1501                           
  1502                           ; 2 bytes @ 0x2F
  1503  00CF                     	ds	2
  1504                           
  1505                           	psect	cstackCOMMON
  1506  0070                     __pcstackCOMMON:
  1507  0070                     ?_SYSTEM_Initialize:
  1508  0070                     ??_SYSTEM_Initialize:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ?_LCD_Initialize:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ?_LCDClear:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_OSCILLATOR_Initialize:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ??_OSCILLATOR_Initialize:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ?_WDT_Initialize:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ??_WDT_Initialize:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ?_LCDPutCmd:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_putch:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ??_putch:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ?_main:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_PIN_MANAGER_Initialize:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ??_PIN_MANAGER_Initialize:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_LCDWriteNibble:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_LCDPutChar:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ??___aodiv:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ??___aomod:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_fputc:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_strlen:	
  1563                           ; 2 bytes @ 0x0
  1564                           
  1565  0070                     ?___wmul:	
  1566                           ; 2 bytes @ 0x0
  1567                           
  1568  0070                     ?___awdiv:	
  1569                           ; 2 bytes @ 0x0
  1570                           
  1571  0070                     ?___awmod:	
  1572                           ; 2 bytes @ 0x0
  1573                           
  1574  0070                     LCDWriteNibble@rs:	
  1575                           ; 2 bytes @ 0x0
  1576                           
  1577  0070                     putch@c:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ___wmul@multiplier:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ___awdiv@divisor:	
  1584                           ; 2 bytes @ 0x0
  1585                           
  1586  0070                     ___awmod@divisor:	
  1587                           ; 2 bytes @ 0x0
  1588                           
  1589  0070                     fputc@c:	
  1590                           ; 2 bytes @ 0x0
  1591                           
  1592                           
  1593                           ; 2 bytes @ 0x0
  1594  0070                     	ds	1
  1595  0071                     ??_LCDWriteNibble:
  1596  0071                     ___aodiv@counter:	
  1597                           ; 1 bytes @ 0x1
  1598                           
  1599  0071                     ___aomod@counter:	
  1600                           ; 1 bytes @ 0x1
  1601                           
  1602                           
  1603                           ; 1 bytes @ 0x1
  1604  0071                     	ds	1
  1605  0072                     ??_strlen:
  1606  0072                     ___aodiv@sign:	
  1607                           ; 1 bytes @ 0x2
  1608                           
  1609  0072                     ___aomod@sign:	
  1610                           ; 1 bytes @ 0x2
  1611                           
  1612  0072                     fputc@fp:	
  1613                           ; 1 bytes @ 0x2
  1614                           
  1615  0072                     ___wmul@multiplicand:	
  1616                           ; 1 bytes @ 0x2
  1617                           
  1618  0072                     ___awdiv@dividend:	
  1619                           ; 2 bytes @ 0x2
  1620                           
  1621  0072                     ___awmod@dividend:	
  1622                           ; 2 bytes @ 0x2
  1623                           
  1624                           
  1625                           ; 2 bytes @ 0x2
  1626  0072                     	ds	1
  1627  0073                     ??_fputc:
  1628  0073                     ?_abs:	
  1629                           ; 1 bytes @ 0x3
  1630                           
  1631  0073                     LCDWriteNibble@ch:	
  1632                           ; 2 bytes @ 0x3
  1633                           
  1634  0073                     strlen@a:	
  1635                           ; 1 bytes @ 0x3
  1636                           
  1637  0073                     abs@a:	
  1638                           ; 1 bytes @ 0x3
  1639                           
  1640  0073                     ___aodiv@quotient:	
  1641                           ; 2 bytes @ 0x3
  1642                           
  1643                           
  1644                           ; 8 bytes @ 0x3
  1645  0073                     	ds	1
  1646  0074                     ??_LCDPutCmd:
  1647  0074                     ??_LCDPutChar:	
  1648                           ; 1 bytes @ 0x4
  1649                           
  1650  0074                     ??___wmul:	
  1651                           ; 1 bytes @ 0x4
  1652                           
  1653  0074                     ??___awdiv:	
  1654                           ; 1 bytes @ 0x4
  1655                           
  1656  0074                     ??___awmod:	
  1657                           ; 1 bytes @ 0x4
  1658                           
  1659  0074                     strlen@s:	
  1660                           ; 1 bytes @ 0x4
  1661                           
  1662  0074                     ___wmul@product:	
  1663                           ; 1 bytes @ 0x4
  1664                           
  1665                           
  1666                           ; 2 bytes @ 0x4
  1667  0074                     	ds	1
  1668  0075                     ??_abs:
  1669  0075                     ___awdiv@counter:	
  1670                           ; 1 bytes @ 0x5
  1671                           
  1672  0075                     ___awmod@counter:	
  1673                           ; 1 bytes @ 0x5
  1674                           
  1675                           
  1676                           ; 1 bytes @ 0x5
  1677  0075                     	ds	1
  1678  0076                     LCDPutChar@ch:
  1679  0076                     LCDPutCmd@ch:	
  1680                           ; 1 bytes @ 0x6
  1681                           
  1682  0076                     ___awdiv@sign:	
  1683                           ; 1 bytes @ 0x6
  1684                           
  1685  0076                     ___awmod@sign:	
  1686                           ; 1 bytes @ 0x6
  1687                           
  1688                           
  1689                           ; 1 bytes @ 0x6
  1690  0076                     	ds	1
  1691  0077                     ??_LCD_Initialize:
  1692  0077                     ?_LCDGoto:	
  1693                           ; 1 bytes @ 0x7
  1694                           
  1695  0077                     ?_LCDPutStr:	
  1696                           ; 1 bytes @ 0x7
  1697                           
  1698  0077                     LCDGoto@ln:	
  1699                           ; 1 bytes @ 0x7
  1700                           
  1701  0077                     LCDPutStr@str:	
  1702                           ; 1 bytes @ 0x7
  1703                           
  1704  0077                     ___awdiv@quotient:	
  1705                           ; 2 bytes @ 0x7
  1706                           
  1707                           
  1708                           ; 2 bytes @ 0x7
  1709  0077                     	ds	1
  1710  0078                     ??_LCDGoto:
  1711  0078                     ?_fputs:	
  1712                           ; 1 bytes @ 0x8
  1713                           
  1714  0078                     fputs@fp:	
  1715                           ; 2 bytes @ 0x8
  1716                           
  1717  0078                     _LCDGoto$222:	
  1718                           ; 1 bytes @ 0x8
  1719                           
  1720                           
  1721                           ; 2 bytes @ 0x8
  1722  0078                     	ds	1
  1723  0079                     ??_LCDPutStr:
  1724  0079                     ??_fputs:	
  1725                           ; 1 bytes @ 0x9
  1726                           
  1727  0079                     ?_sumdigits:	
  1728                           ; 1 bytes @ 0x9
  1729                           
  1730  0079                     sumdigits@number:	
  1731                           ; 2 bytes @ 0x9
  1732                           
  1733                           
  1734                           ; 2 bytes @ 0x9
  1735  0079                     	ds	1
  1736  007A                     LCDGoto@pos:
  1737                           
  1738                           ; 1 bytes @ 0xA
  1739  007A                     	ds	1
  1740  007B                     ??_sumdigits:
  1741                           
  1742                           ; 1 bytes @ 0xB
  1743  007B                     	ds	1
  1744  007C                     ??_pad:
  1745  007C                     LCDPutStr@i:	
  1746                           ; 1 bytes @ 0xC
  1747                           
  1748                           
  1749                           ; 1 bytes @ 0xC
  1750  007C                     	ds	1
  1751  007D                     ??_sprintf:
  1752  007D                     ??_LCDClear:	
  1753                           ; 1 bytes @ 0xD
  1754                           
  1755                           
  1756                           ; 1 bytes @ 0xD
  1757  007D                     	ds	1
  1758                           
  1759                           	psect	cstackBANK0
  1760  0020                     __pcstackBANK0:
  1761  0020                     ?___aodiv:
  1762  0020                     ?___aomod:	
  1763                           ; 8 bytes @ 0x0
  1764                           
  1765  0020                     fputs@c:	
  1766                           ; 8 bytes @ 0x0
  1767                           
  1768  0020                     sumdigits@digit:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771  0020                     ___aodiv@divisor:	
  1772                           ; 2 bytes @ 0x0
  1773                           
  1774  0020                     ___aomod@divisor:	
  1775                           ; 8 bytes @ 0x0
  1776                           
  1777                           
  1778                           ; 8 bytes @ 0x0
  1779  0020                     	ds	1
  1780  0021                     fputs@i:
  1781                           
  1782                           ; 2 bytes @ 0x1
  1783  0021                     	ds	1
  1784  0022                     sumdigits@SumDigits:
  1785                           
  1786                           ; 2 bytes @ 0x2
  1787  0022                     	ds	1
  1788  0023                     fputs@s:
  1789                           
  1790                           ; 1 bytes @ 0x3
  1791  0023                     	ds	1
  1792  0024                     ?_pad:
  1793  0024                     pad@buf:	
  1794                           ; 2 bytes @ 0x4
  1795                           
  1796                           
  1797                           ; 1 bytes @ 0x4
  1798  0024                     	ds	1
  1799  0025                     pad@p:
  1800                           
  1801                           ; 2 bytes @ 0x5
  1802  0025                     	ds	2
  1803  0027                     pad@i:
  1804                           
  1805                           ; 2 bytes @ 0x7
  1806  0027                     	ds	1
  1807  0028                     ___aodiv@dividend:
  1808  0028                     ___aomod@dividend:	
  1809                           ; 8 bytes @ 0x8
  1810                           
  1811                           
  1812                           ; 8 bytes @ 0x8
  1813  0028                     	ds	1
  1814  0029                     pad@w:
  1815                           
  1816                           ; 2 bytes @ 0x9
  1817  0029                     	ds	2
  1818  002B                     pad@fp:
  1819                           
  1820                           ; 1 bytes @ 0xB
  1821  002B                     	ds	5
  1822  0030                     ?_dtoa:
  1823  0030                     dtoa@d:	
  1824                           ; 2 bytes @ 0x10
  1825                           
  1826                           
  1827                           ; 8 bytes @ 0x10
  1828  0030                     	ds	8
  1829  0038                     ??_dtoa:
  1830                           
  1831                           ; 1 bytes @ 0x18
  1832  0038                     	ds	3
  1833  003B                     _dtoa$611:
  1834                           
  1835                           ; 2 bytes @ 0x1B
  1836  003B                     	ds	2
  1837  003D                     dtoa@fp:
  1838                           
  1839                           ; 1 bytes @ 0x1D
  1840  003D                     	ds	1
  1841  003E                     dtoa@p:
  1842                           
  1843                           ; 2 bytes @ 0x1E
  1844  003E                     	ds	2
  1845  0040                     dtoa@w:
  1846                           
  1847                           ; 2 bytes @ 0x20
  1848  0040                     	ds	2
  1849  0042                     dtoa@s:
  1850                           
  1851                           ; 2 bytes @ 0x22
  1852  0042                     	ds	2
  1853  0044                     dtoa@n:
  1854                           
  1855                           ; 8 bytes @ 0x24
  1856  0044                     	ds	8
  1857  004C                     dtoa@i:
  1858                           
  1859                           ; 2 bytes @ 0x2C
  1860  004C                     	ds	2
  1861  004E                     ?_vfpfcnvrt:
  1862  004E                     vfpfcnvrt@fmt:	
  1863                           ; 2 bytes @ 0x2E
  1864                           
  1865                           
  1866                           ; 1 bytes @ 0x2E
  1867  004E                     	ds	1
  1868  004F                     vfpfcnvrt@ap:
  1869                           
  1870                           ; 1 bytes @ 0x2F
  1871  004F                     	ds	1
  1872  0050                     ??_vfpfcnvrt:
  1873                           
  1874                           ; 1 bytes @ 0x30
  1875  0050                     	ds	5
  1876  0055                     vfpfcnvrt@ll:
  1877                           
  1878                           ; 8 bytes @ 0x35
  1879  0055                     	ds	8
  1880  005D                     vfpfcnvrt@fp:
  1881                           
  1882                           ; 1 bytes @ 0x3D
  1883  005D                     	ds	1
  1884  005E                     ?_vfprintf:
  1885  005E                     vfprintf@fmt:	
  1886                           ; 2 bytes @ 0x3E
  1887                           
  1888                           
  1889                           ; 2 bytes @ 0x3E
  1890  005E                     	ds	2
  1891  0060                     vfprintf@ap:
  1892                           
  1893                           ; 1 bytes @ 0x40
  1894  0060                     	ds	1
  1895  0061                     ??_vfprintf:
  1896                           
  1897                           ; 1 bytes @ 0x41
  1898  0061                     	ds	2
  1899  0063                     vfprintf@fp:
  1900                           
  1901                           ; 1 bytes @ 0x43
  1902  0063                     	ds	1
  1903  0064                     vfprintf@cfmt:
  1904                           
  1905                           ; 2 bytes @ 0x44
  1906  0064                     	ds	2
  1907  0066                     ?_sprintf:
  1908  0066                     sprintf@fmt:	
  1909                           ; 2 bytes @ 0x46
  1910                           
  1911                           
  1912                           ; 2 bytes @ 0x46
  1913  0066                     	ds	6
  1914                           
  1915                           	psect	maintext
  1916  05FB                     __pmaintext:	
  1917 ;;
  1918 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1919 ;;
  1920 ;; *************** function _main *****************
  1921 ;; Defined at:
  1922 ;;		line 32 in file "main.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  printchar      10   15[BANK1 ] unsigned char [10]
  1927 ;;  bin             8   29[BANK1 ] int [4]
  1928 ;;  Binary          4   25[BANK1 ] long 
  1929 ;;  SumDigits       2   47[BANK1 ] int 
  1930 ;;  number          2   45[BANK1 ] int 
  1931 ;;  i               2   43[BANK1 ] int 
  1932 ;;  SumPrime        2   41[BANK1 ] int 
  1933 ;;  carnet          2   39[BANK1 ] int 
  1934 ;;  prime           2   37[BANK1 ] int 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : B1F/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1945 ;;      Locals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1946 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1947 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1948 ;;Total ram usage:       40 bytes
  1949 ;; Hardware stack levels required when called:    8
  1950 ;; This function calls:
  1951 ;;		_LCDClear
  1952 ;;		_LCDGoto
  1953 ;;		_LCDPutStr
  1954 ;;		_LCD_Initialize
  1955 ;;		_SYSTEM_Initialize
  1956 ;;		___awdiv
  1957 ;;		___awmod
  1958 ;;		___wmul
  1959 ;;		_sprintf
  1960 ;;		_sumdigits
  1961 ;; This function is called by:
  1962 ;;		Startup code after reset
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           
  1967                           ;psect for function _main
  1968  05FB                     _main:
  1969  05FB                     l1905:	
  1970                           ;incstack = 0
  1971                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1972                           
  1973                           
  1974                           ;main.c: 36:     SYSTEM_Initialize();
  1975  05FB  318E  2642  3185   	fcall	_SYSTEM_Initialize
  1976                           
  1977                           ;main.c: 37:     LCD_Initialize();
  1978  05FE  318F  2715  3185   	fcall	_LCD_Initialize
  1979                           
  1980                           ;main.c: 41:     const int label =1;;main.c: 42:     int carnet;;main.c: 46:     switch 
      +                          (label)
  1981  0601  2E11               	goto	l1913
  1982  0602                     l1907:
  1983                           
  1984                           ;main.c: 49:         {;main.c: 50:             carnet = last3digitsCarnet1;
  1985  0602  30FF               	movlw	255
  1986  0603  00C7               	movwf	main@carnet^(0+128)
  1987  0604  3000               	movlw	0
  1988  0605  00C8               	movwf	(main@carnet^(0+128)+1)
  1989                           
  1990                           ;main.c: 51:             break;
  1991  0606  2E27               	goto	l1915
  1992  0607                     l1909:
  1993                           
  1994                           ;main.c: 54:         {;main.c: 55:             carnet = last3digitsCarnet2;
  1995  0607  30ED               	movlw	237
  1996  0608  00C7               	movwf	main@carnet^(0+128)
  1997  0609  3001               	movlw	1
  1998  060A  00C8               	movwf	(main@carnet^(0+128)+1)
  1999                           
  2000                           ;main.c: 56:             break;
  2001  060B  2E27               	goto	l1915
  2002  060C                     l1911:
  2003                           
  2004                           ;main.c: 59:         {;main.c: 60:             carnet = last3digitsCarnet3;
  2005  060C  30A4               	movlw	164
  2006  060D  00C7               	movwf	main@carnet^(0+128)
  2007  060E  3001               	movlw	1
  2008  060F  00C8               	movwf	(main@carnet^(0+128)+1)
  2009                           
  2010                           ;main.c: 61:         };main.c: 62:     }
  2011  0610  2E27               	goto	l1915
  2012  0611                     l1913:
  2013  0611  3000               	movlw	low (main@label| (0+32768))
  2014  0612  0084               	movwf	4
  2015  0613  3090               	movlw	high (main@label| (0+32768))
  2016  0614  0085               	movwf	5
  2017  0615  3F00               	moviw [0]fsr0
  2018  0616  0021               	movlb	1	; select bank1
  2019  0617  00A9               	movwf	??_main^(0+128)
  2020  0618  3F01               	moviw [1]fsr0
  2021  0619  00AA               	movwf	(??_main^(0+128)+1)
  2022                           
  2023                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2024                           ; Switch size 1, requested type "simple"
  2025                           ; Number of cases is 1, Range of values is 0 to 0
  2026                           ; switch strategies available:
  2027                           ; Name         Instructions Cycles
  2028                           ; simple_byte            4     3 (average)
  2029                           ; direct_byte            8     6 (fixed)
  2030                           ; jumptable            260     6 (fixed)
  2031                           ;	Chosen strategy is simple_byte
  2032  061A  082A               	movf	(??_main+1)^(0+128),w
  2033  061B  3A00               	xorlw	0	; case 0
  2034  061C  1903               	skipnz
  2035  061D  2E1F               	goto	l2037
  2036  061E  2E0C               	goto	l1911
  2037  061F                     l2037:
  2038                           
  2039                           ; Switch size 1, requested type "simple"
  2040                           ; Number of cases is 2, Range of values is 1 to 2
  2041                           ; switch strategies available:
  2042                           ; Name         Instructions Cycles
  2043                           ; simple_byte            7     4 (average)
  2044                           ; direct_byte           13     9 (fixed)
  2045                           ; jumptable            263     9 (fixed)
  2046                           ;	Chosen strategy is simple_byte
  2047  061F  0829               	movf	??_main^(0+128),w
  2048  0620  3A01               	xorlw	1	; case 1
  2049  0621  1903               	skipnz
  2050  0622  2E02               	goto	l1907
  2051  0623  3A03               	xorlw	3	; case 2
  2052  0624  1903               	skipnz
  2053  0625  2E07               	goto	l1909
  2054  0626  2E0C               	goto	l1911
  2055  0627                     l1915:
  2056                           
  2057                           ;main.c: 69:     int SumPrime = 0;
  2058  0627  01C9               	clrf	main@SumPrime^(0+128)
  2059  0628  01CA               	clrf	(main@SumPrime+1)^(0+128)
  2060  0629                     l1917:
  2061                           
  2062                           ;main.c: 73:     LCDGoto(0,0);
  2063  0629  01F7               	clrf	LCDGoto@ln
  2064  062A  3000               	movlw	0
  2065  062B  318F  2782  3185   	fcall	_LCDGoto
  2066  062E                     l1919:
  2067                           
  2068                           ;main.c: 74:     LCDPutStr("sumPrime=");
  2069  062E  301E               	movlw	low (STR_1| (0+32768))
  2070  062F  00F7               	movwf	LCDPutStr@str
  2071  0630  3090               	movlw	high (STR_1| (0+32768))
  2072  0631  00F8               	movwf	LCDPutStr@str+1
  2073  0632  318F  275C  3185   	fcall	_LCDPutStr
  2074  0635                     l1921:
  2075                           
  2076                           ;main.c: 78:     int i,number=2, prime;
  2077  0635  3002               	movlw	2
  2078  0636  0021               	movlb	1	; select bank1
  2079  0637  00CD               	movwf	main@number^(0+128)
  2080  0638  3000               	movlw	0
  2081  0639  00CE               	movwf	(main@number^(0+128)+1)
  2082                           
  2083                           ;main.c: 79:     char printchar[10];;main.c: 83:     while(number<=carnet)
  2084  063A  2E8B               	goto	l1939
  2085  063B                     l1923:
  2086                           
  2087                           ;main.c: 84:     {;main.c: 85:       prime = 1;
  2088  063B  3001               	movlw	1
  2089  063C  0021               	movlb	1	; select bank1
  2090  063D  00C5               	movwf	main@prime^(0+128)
  2091  063E  3000               	movlw	0
  2092  063F  00C6               	movwf	(main@prime^(0+128)+1)
  2093                           
  2094                           ;main.c: 86:       for(i=2;i<=number/2;i++)
  2095  0640  3002               	movlw	2
  2096  0641  00CB               	movwf	main@i^(0+128)
  2097  0642  3000               	movlw	0
  2098  0643  00CC               	movwf	(main@i^(0+128)+1)
  2099  0644  2E60               	goto	l1931
  2100  0645                     l1925:
  2101                           
  2102                           ;main.c: 87:       {;main.c: 88:         if(number%i==0)
  2103  0645  0021               	movlb	1	; select bank1
  2104  0646  084C               	movf	(main@i+1)^(0+128),w
  2105  0647  00F1               	movwf	___awmod@divisor+1
  2106  0648  084B               	movf	main@i^(0+128),w
  2107  0649  00F0               	movwf	___awmod@divisor
  2108  064A  084E               	movf	(main@number+1)^(0+128),w
  2109  064B  00F3               	movwf	___awmod@dividend+1
  2110  064C  084D               	movf	main@number^(0+128),w
  2111  064D  00F2               	movwf	___awmod@dividend
  2112  064E  3180  20C8  3185   	fcall	___awmod
  2113  0651  0870               	movf	?___awmod,w
  2114  0652  0471               	iorwf	?___awmod+1,w
  2115  0653  1D03               	btfss	3,2
  2116  0654  2E56               	goto	u1761
  2117  0655  2E57               	goto	u1760
  2118  0656                     u1761:
  2119  0656  2E5B               	goto	l1929
  2120  0657                     u1760:
  2121  0657                     l1927:
  2122                           
  2123                           ;main.c: 89:         {;main.c: 90:           prime = 0;
  2124  0657  0021               	movlb	1	; select bank1
  2125  0658  01C5               	clrf	main@prime^(0+128)
  2126  0659  01C6               	clrf	(main@prime+1)^(0+128)
  2127                           
  2128                           ;main.c: 91:           break;
  2129  065A  2E7A               	goto	l1933
  2130  065B                     l1929:
  2131                           
  2132                           ;main.c: 93:       }
  2133  065B  3001               	movlw	1
  2134  065C  0021               	movlb	1	; select bank1
  2135  065D  07CB               	addwf	main@i^(0+128),f
  2136  065E  3000               	movlw	0
  2137  065F  3DCC               	addwfc	(main@i+1)^(0+128),f
  2138  0660                     l1931:
  2139  0660  3002               	movlw	2
  2140  0661  00F0               	movwf	___awdiv@divisor
  2141  0662  3000               	movlw	0
  2142  0663  00F1               	movwf	___awdiv@divisor+1
  2143  0664  084E               	movf	(main@number+1)^(0+128),w
  2144  0665  00F3               	movwf	___awdiv@dividend+1
  2145  0666  084D               	movf	main@number^(0+128),w
  2146  0667  00F2               	movwf	___awdiv@dividend
  2147  0668  3181  2171  3185   	fcall	___awdiv
  2148  066B  0871               	movf	?___awdiv+1,w
  2149  066C  3A80               	xorlw	128
  2150  066D  0021               	movlb	1	; select bank1
  2151  066E  00A9               	movwf	??_main^(0+128)
  2152  066F  084C               	movf	(main@i+1)^(0+128),w
  2153  0670  3A80               	xorlw	128
  2154  0671  0229               	subwf	??_main^(0+128),w
  2155  0672  1D03               	skipz
  2156  0673  2E76               	goto	u1775
  2157  0674  084B               	movf	main@i^(0+128),w
  2158  0675  0270               	subwf	?___awdiv,w
  2159  0676                     u1775:
  2160  0676  1803               	skipnc
  2161  0677  2E79               	goto	u1771
  2162  0678  2E7A               	goto	u1770
  2163  0679                     u1771:
  2164  0679  2E45               	goto	l1925
  2165  067A                     u1770:
  2166  067A                     l1933:
  2167                           
  2168                           ;main.c: 94:       if(prime==1)
  2169  067A  0021               	movlb	1	; select bank1
  2170  067B  0345               	decf	main@prime^(0+128),w
  2171  067C  0446               	iorwf	(main@prime+1)^(0+128),w
  2172  067D  1D03               	btfss	3,2
  2173  067E  2E80               	goto	u1781
  2174  067F  2E81               	goto	u1780
  2175  0680                     u1781:
  2176  0680  2E87               	goto	l1937
  2177  0681                     u1780:
  2178  0681                     l1935:
  2179                           
  2180                           ;main.c: 95:       {;main.c: 96:         SumPrime= SumPrime+number;
  2181  0681  084D               	movf	main@number^(0+128),w
  2182  0682  0749               	addwf	main@SumPrime^(0+128),w
  2183  0683  00C9               	movwf	main@SumPrime^(0+128)
  2184  0684  084E               	movf	(main@number+1)^(0+128),w
  2185  0685  3D4A               	addwfc	(main@SumPrime+1)^(0+128),w
  2186  0686  00CA               	movwf	(main@SumPrime+1)^(0+128)
  2187  0687                     l1937:
  2188                           
  2189                           ;main.c: 98:       ++number;
  2190  0687  3001               	movlw	1
  2191  0688  07CD               	addwf	main@number^(0+128),f
  2192  0689  3000               	movlw	0
  2193  068A  3DCE               	addwfc	(main@number+1)^(0+128),f
  2194  068B                     l1939:
  2195                           
  2196                           ;main.c: 83:     while(number<=carnet)
  2197  068B  0848               	movf	(main@carnet+1)^(0+128),w
  2198  068C  3A80               	xorlw	128
  2199  068D  00A9               	movwf	??_main^(0+128)
  2200  068E  084E               	movf	(main@number+1)^(0+128),w
  2201  068F  3A80               	xorlw	128
  2202  0690  0229               	subwf	??_main^(0+128),w
  2203  0691  1D03               	skipz
  2204  0692  2E95               	goto	u1795
  2205  0693  084D               	movf	main@number^(0+128),w
  2206  0694  0247               	subwf	main@carnet^(0+128),w
  2207  0695                     u1795:
  2208  0695  1803               	skipnc
  2209  0696  2E98               	goto	u1791
  2210  0697  2E99               	goto	u1790
  2211  0698                     u1791:
  2212  0698  2E3B               	goto	l1923
  2213  0699                     u1790:
  2214  0699                     l1941:
  2215                           
  2216                           ;main.c: 103:     sprintf(printchar,"%d",SumPrime);
  2217  0699  3030               	movlw	low (STR_2| (0+32768))
  2218  069A  0020               	movlb	0	; select bank0
  2219  069B  00E6               	movwf	sprintf@fmt
  2220  069C  3090               	movlw	high (STR_2| (0+32768))
  2221  069D  00E7               	movwf	sprintf@fmt+1
  2222  069E  0021               	movlb	1	; select bank1
  2223  069F  084A               	movf	(main@SumPrime+1)^(0+128),w
  2224  06A0  0020               	movlb	0	; select bank0
  2225  06A1  00E9               	movwf	?_sprintf+3
  2226  06A2  0021               	movlb	1	; select bank1
  2227  06A3  0849               	movf	main@SumPrime^(0+128),w
  2228  06A4  0020               	movlb	0	; select bank0
  2229  06A5  00E8               	movwf	?_sprintf+2
  2230  06A6  30AF               	movlw	(low (main@printchar| 0))& (0+255)
  2231  06A7  318F  2738  3185   	fcall	_sprintf
  2232  06AA                     l1943:
  2233                           
  2234                           ;main.c: 104:     LCDGoto(0,1);
  2235  06AA  01F7               	clrf	LCDGoto@ln
  2236  06AB  0AF7               	incf	LCDGoto@ln,f
  2237  06AC  3000               	movlw	0
  2238  06AD  318F  2782  3185   	fcall	_LCDGoto
  2239  06B0                     l1945:
  2240                           
  2241                           ;main.c: 105:     LCDPutStr(printchar);
  2242  06B0  30AF               	movlw	low main@printchar
  2243  06B1  00F7               	movwf	LCDPutStr@str
  2244  06B2  3000               	movlw	high main@printchar
  2245  06B3  00F8               	movwf	LCDPutStr@str+1
  2246  06B4  318F  275C  3185   	fcall	_LCDPutStr
  2247  06B7                     l1947:
  2248                           
  2249                           ;main.c: 106:     _delay((unsigned long)((3000)*(500000/4000.0)));
  2250  06B7  3002               	movlw	2
  2251  06B8  0021               	movlb	1	; select bank1
  2252  06B9  00AA               	movwf	(??_main^(0+128)+1)
  2253  06BA  30E7               	movlw	231
  2254  06BB  00A9               	movwf	??_main^(0+128)
  2255  06BC  3000               	movlw	0
  2256  06BD                     u1837:
  2257  06BD  0B89               	decfsz	9,f
  2258  06BE  2EBD               	goto	u1837
  2259  06BF  0BA9               	decfsz	??_main^(0+128),f
  2260  06C0  2EBD               	goto	u1837
  2261  06C1  0BAA               	decfsz	(??_main^(0+128)+1),f
  2262  06C2  2EBD               	goto	u1837
  2263  06C3  0000               	nop
  2264  06C4                     l1949:
  2265                           
  2266                           ;main.c: 107:     LCDClear();
  2267  06C4  318E  264C  3185   	fcall	_LCDClear
  2268  06C7                     l1951:
  2269  06C7                     l1953:
  2270                           
  2271                           ;main.c: 118:     LCDGoto(0,0);
  2272  06C7  01F7               	clrf	LCDGoto@ln
  2273  06C8  3000               	movlw	0
  2274  06C9  318F  2782  3185   	fcall	_LCDGoto
  2275  06CC                     l1955:
  2276                           
  2277                           ;main.c: 119:     LCDPutStr("sumDigits=");
  2278  06CC  3013               	movlw	low (STR_3| (0+32768))
  2279  06CD  00F7               	movwf	LCDPutStr@str
  2280  06CE  3090               	movlw	high (STR_3| (0+32768))
  2281  06CF  00F8               	movwf	LCDPutStr@str+1
  2282  06D0  318F  275C  3185   	fcall	_LCDPutStr
  2283  06D3                     l1957:
  2284                           
  2285                           ;main.c: 123:     number=SumPrime;
  2286  06D3  0021               	movlb	1	; select bank1
  2287  06D4  084A               	movf	(main@SumPrime+1)^(0+128),w
  2288  06D5  00CE               	movwf	(main@number+1)^(0+128)
  2289  06D6  0849               	movf	main@SumPrime^(0+128),w
  2290  06D7  00CD               	movwf	main@number^(0+128)
  2291  06D8                     l1959:
  2292                           
  2293                           ;main.c: 125:     {;main.c: 126:       SumDigits = sumdigits(number);
  2294  06D8  0021               	movlb	1	; select bank1
  2295  06D9  084E               	movf	(main@number+1)^(0+128),w
  2296  06DA  00FA               	movwf	sumdigits@number+1
  2297  06DB  084D               	movf	main@number^(0+128),w
  2298  06DC  00F9               	movwf	sumdigits@number
  2299  06DD  3180  203D  3185   	fcall	_sumdigits
  2300  06E0  087A               	movf	?_sumdigits+1,w
  2301  06E1  0021               	movlb	1	; select bank1
  2302  06E2  00D0               	movwf	(main@SumDigits+1)^(0+128)
  2303  06E3  0879               	movf	?_sumdigits,w
  2304  06E4  00CF               	movwf	main@SumDigits^(0+128)
  2305  06E5                     l1961:
  2306                           
  2307                           ;main.c: 127:       number = SumDigits;
  2308  06E5  0850               	movf	(main@SumDigits+1)^(0+128),w
  2309  06E6  00CE               	movwf	(main@number+1)^(0+128)
  2310  06E7  084F               	movf	main@SumDigits^(0+128),w
  2311  06E8  00CD               	movwf	main@number^(0+128)
  2312  06E9                     l1963:
  2313                           
  2314                           ;main.c: 128:     } while (SumDigits>10);
  2315  06E9  0850               	movf	(main@SumDigits+1)^(0+128),w
  2316  06EA  3A80               	xorlw	128
  2317  06EB  00A9               	movwf	??_main^(0+128)
  2318  06EC  3080               	movlw	128
  2319  06ED  0229               	subwf	??_main^(0+128),w
  2320  06EE  1D03               	skipz
  2321  06EF  2EF2               	goto	u1805
  2322  06F0  300B               	movlw	11
  2323  06F1  024F               	subwf	main@SumDigits^(0+128),w
  2324  06F2                     u1805:
  2325  06F2  1803               	skipnc
  2326  06F3  2EF5               	goto	u1801
  2327  06F4  2EF6               	goto	u1800
  2328  06F5                     u1801:
  2329  06F5  2ED8               	goto	l1959
  2330  06F6                     u1800:
  2331  06F6                     l1965:
  2332                           
  2333                           ;main.c: 132:     sprintf(printchar,"%d",SumDigits);
  2334  06F6  3030               	movlw	low (STR_2| (0+32768))
  2335  06F7  0020               	movlb	0	; select bank0
  2336  06F8  00E6               	movwf	sprintf@fmt
  2337  06F9  3090               	movlw	high (STR_2| (0+32768))
  2338  06FA  00E7               	movwf	sprintf@fmt+1
  2339  06FB  0021               	movlb	1	; select bank1
  2340  06FC  0850               	movf	(main@SumDigits+1)^(0+128),w
  2341  06FD  0020               	movlb	0	; select bank0
  2342  06FE  00E9               	movwf	?_sprintf+3
  2343  06FF  0021               	movlb	1	; select bank1
  2344  0700  084F               	movf	main@SumDigits^(0+128),w
  2345  0701  0020               	movlb	0	; select bank0
  2346  0702  00E8               	movwf	?_sprintf+2
  2347  0703  30AF               	movlw	(low (main@printchar| 0))& (0+255)
  2348  0704  318F  2738  3185   	fcall	_sprintf
  2349  0707                     l1967:
  2350                           
  2351                           ;main.c: 133:     LCDGoto(0,1);
  2352  0707  01F7               	clrf	LCDGoto@ln
  2353  0708  0AF7               	incf	LCDGoto@ln,f
  2354  0709  3000               	movlw	0
  2355  070A  318F  2782  3185   	fcall	_LCDGoto
  2356  070D                     l1969:
  2357                           
  2358                           ;main.c: 134:     LCDPutStr(printchar);
  2359  070D  30AF               	movlw	low main@printchar
  2360  070E  00F7               	movwf	LCDPutStr@str
  2361  070F  3000               	movlw	high main@printchar
  2362  0710  00F8               	movwf	LCDPutStr@str+1
  2363  0711  318F  275C  3185   	fcall	_LCDPutStr
  2364  0714                     l1971:
  2365                           
  2366                           ;main.c: 135:     _delay((unsigned long)((3000)*(500000/4000.0)));
  2367  0714  3002               	movlw	2
  2368  0715  0021               	movlb	1	; select bank1
  2369  0716  00AA               	movwf	(??_main^(0+128)+1)
  2370  0717  30E7               	movlw	231
  2371  0718  00A9               	movwf	??_main^(0+128)
  2372  0719  3000               	movlw	0
  2373  071A                     u1847:
  2374  071A  0B89               	decfsz	9,f
  2375  071B  2F1A               	goto	u1847
  2376  071C  0BA9               	decfsz	??_main^(0+128),f
  2377  071D  2F1A               	goto	u1847
  2378  071E  0BAA               	decfsz	(??_main^(0+128)+1),f
  2379  071F  2F1A               	goto	u1847
  2380  0720  0000               	nop
  2381  0721                     l1973:
  2382                           
  2383                           ;main.c: 136:     LCDClear();
  2384  0721  318E  264C  3185   	fcall	_LCDClear
  2385  0724                     l1975:
  2386                           
  2387                           ;main.c: 148:     LCDGoto(0,0);
  2388  0724  01F7               	clrf	LCDGoto@ln
  2389  0725  3000               	movlw	0
  2390  0726  318F  2782  3185   	fcall	_LCDGoto
  2391  0729                     l1977:
  2392                           
  2393                           ;main.c: 149:     LCDPutStr("Binary=");
  2394  0729  3028               	movlw	low (STR_5| (0+32768))
  2395  072A  00F7               	movwf	LCDPutStr@str
  2396  072B  3090               	movlw	high (STR_5| (0+32768))
  2397  072C  00F8               	movwf	LCDPutStr@str+1
  2398  072D  318F  275C  3185   	fcall	_LCDPutStr
  2399  0730                     l1979:
  2400  0730                     l1981:
  2401                           
  2402                           ;main.c: 157:     int bin[4]={0,0,0,0};
  2403  0730  30BD               	movlw	low main@bin
  2404  0731  0086               	movwf	6
  2405  0732  3000               	movlw	high main@bin
  2406  0733  0087               	movwf	7
  2407  0734  3008               	movlw	8
  2408  0735  0021               	movlb	1	; select bank1
  2409  0736  00A9               	movwf	??_main^(0+128)
  2410  0737  3000               	movlw	0
  2411  0738                     u1810:
  2412  0738  001E               	movwi fsr1++
  2413  0739  0BA9               	decfsz	??_main^(0+128),f
  2414  073A  2F38               	goto	u1810
  2415  073B                     l1983:
  2416                           
  2417                           ;main.c: 158:     i=0;
  2418  073B  01CB               	clrf	main@i^(0+128)
  2419  073C  01CC               	clrf	(main@i+1)^(0+128)
  2420                           
  2421                           ;main.c: 159:       while (SumDigits>0)
  2422  073D  2F61               	goto	l1991
  2423  073E                     l1985:
  2424                           
  2425                           ;main.c: 160:       {;main.c: 161:         bin[i] = SumDigits%2;
  2426  073E  3001               	movlw	1
  2427  073F  0021               	movlb	1	; select bank1
  2428  0740  054F               	andwf	main@SumDigits^(0+128),w
  2429  0741  00A9               	movwf	??_main^(0+128)
  2430  0742  3000               	movlw	0
  2431  0743  0550               	andwf	(main@SumDigits+1)^(0+128),w
  2432  0744  00AA               	movwf	(??_main+1)^(0+128)
  2433  0745  354B               	lslf	main@i^(0+128),w
  2434  0746  3EBD               	addlw	(low (main@bin| 0))& (0+255)
  2435  0747  0086               	movwf	6
  2436  0748  0187               	clrf	7
  2437  0749  0829               	movf	??_main^(0+128),w
  2438  074A  3FC0               	movwi [0]fsr1
  2439  074B  082A               	movf	(??_main+1)^(0+128),w
  2440  074C  3FC1               	movwi [1]fsr1
  2441  074D                     l1987:
  2442                           
  2443                           ;main.c: 162:         SumDigits = SumDigits/2;
  2444  074D  3002               	movlw	2
  2445  074E  00F0               	movwf	___awdiv@divisor
  2446  074F  3000               	movlw	0
  2447  0750  00F1               	movwf	___awdiv@divisor+1
  2448  0751  0850               	movf	(main@SumDigits+1)^(0+128),w
  2449  0752  00F3               	movwf	___awdiv@dividend+1
  2450  0753  084F               	movf	main@SumDigits^(0+128),w
  2451  0754  00F2               	movwf	___awdiv@dividend
  2452  0755  3181  2171  3185   	fcall	___awdiv
  2453  0758  0871               	movf	?___awdiv+1,w
  2454  0759  0021               	movlb	1	; select bank1
  2455  075A  00D0               	movwf	(main@SumDigits+1)^(0+128)
  2456  075B  0870               	movf	?___awdiv,w
  2457  075C  00CF               	movwf	main@SumDigits^(0+128)
  2458  075D                     l1989:
  2459                           
  2460                           ;main.c: 163:         i++;
  2461  075D  3001               	movlw	1
  2462  075E  07CB               	addwf	main@i^(0+128),f
  2463  075F  3000               	movlw	0
  2464  0760  3DCC               	addwfc	(main@i+1)^(0+128),f
  2465  0761                     l1991:
  2466                           
  2467                           ;main.c: 159:       while (SumDigits>0)
  2468  0761  0850               	movf	(main@SumDigits+1)^(0+128),w
  2469  0762  3A80               	xorlw	128
  2470  0763  00A9               	movwf	??_main^(0+128)
  2471  0764  3080               	movlw	128
  2472  0765  0229               	subwf	??_main^(0+128),w
  2473  0766  1D03               	skipz
  2474  0767  2F6A               	goto	u1825
  2475  0768  3001               	movlw	1
  2476  0769  024F               	subwf	main@SumDigits^(0+128),w
  2477  076A                     u1825:
  2478  076A  1803               	skipnc
  2479  076B  2F6D               	goto	u1821
  2480  076C  2F6E               	goto	u1820
  2481  076D                     u1821:
  2482  076D  2F3E               	goto	l1985
  2483  076E                     u1820:
  2484  076E                     l1993:
  2485                           
  2486                           ;main.c: 165:     Binary= (1000*bin[3])+(100*bin[2])+(10*bin[1])+(1*bin[0]);
  2487  076E  0021               	movlb	1	; select bank1
  2488  076F  0844               	movf	((main@bin+1)^(0+128)+6),w
  2489  0770  00F1               	movwf	___wmul@multiplier+1
  2490  0771  0843               	movf	(main@bin^(0+128)+6),w
  2491  0772  00F0               	movwf	___wmul@multiplier
  2492  0773  30E8               	movlw	232
  2493  0774  00F2               	movwf	___wmul@multiplicand
  2494  0775  3003               	movlw	3
  2495  0776  00F3               	movwf	___wmul@multiplicand+1
  2496  0777  318E  26D6  3185   	fcall	___wmul
  2497  077A  0870               	movf	?___wmul,w
  2498  077B  0021               	movlb	1	; select bank1
  2499  077C  00A9               	movwf	??_main^(0+128)
  2500  077D  0871               	movf	?___wmul+1,w
  2501  077E  00AA               	movwf	(??_main^(0+128)+1)
  2502  077F  0842               	movf	((main@bin+1)^(0+128)+4),w
  2503  0780  00F1               	movwf	___wmul@multiplier+1
  2504  0781  0841               	movf	(main@bin^(0+128)+4),w
  2505  0782  00F0               	movwf	___wmul@multiplier
  2506  0783  3064               	movlw	100
  2507  0784  00F2               	movwf	___wmul@multiplicand
  2508  0785  3000               	movlw	0
  2509  0786  00F3               	movwf	___wmul@multiplicand+1
  2510  0787  318E  26D6  3185   	fcall	___wmul
  2511  078A  0870               	movf	?___wmul,w
  2512  078B  0021               	movlb	1	; select bank1
  2513  078C  0729               	addwf	??_main^(0+128),w
  2514  078D  00AB               	movwf	(??_main+2)^(0+128)
  2515  078E  0871               	movf	?___wmul+1,w
  2516  078F  3D2A               	addwfc	(??_main+1)^(0+128),w
  2517  0790  00AC               	movwf	(??_main+3)^(0+128)
  2518  0791  0840               	movf	((main@bin+1)^(0+128)+2),w
  2519  0792  00F1               	movwf	___wmul@multiplier+1
  2520  0793  083F               	movf	(main@bin^(0+128)+2),w
  2521  0794  00F0               	movwf	___wmul@multiplier
  2522  0795  300A               	movlw	10
  2523  0796  00F2               	movwf	___wmul@multiplicand
  2524  0797  3000               	movlw	0
  2525  0798  00F3               	movwf	___wmul@multiplicand+1
  2526  0799  318E  26D6  3185   	fcall	___wmul
  2527  079C  0870               	movf	?___wmul,w
  2528  079D  0021               	movlb	1	; select bank1
  2529  079E  072B               	addwf	(??_main+2)^(0+128),w
  2530  079F  00AD               	movwf	(??_main+4)^(0+128)
  2531  07A0  0871               	movf	?___wmul+1,w
  2532  07A1  3D2C               	addwfc	(??_main+3)^(0+128),w
  2533  07A2  00AE               	movwf	(??_main+5)^(0+128)
  2534  07A3  083D               	movf	main@bin^(0+128),w
  2535  07A4  072D               	addwf	(??_main+4)^(0+128),w
  2536  07A5  00B9               	movwf	main@Binary^(0+128)
  2537  07A6  083E               	movf	(main@bin+1)^(0+128),w
  2538  07A7  3D2E               	addwfc	(??_main+5)^(0+128),w
  2539  07A8  00BA               	movwf	(main@Binary+1)^(0+128)
  2540  07A9  01BB               	clrf	(main@Binary^(0+128)+2)
  2541  07AA  1BBA               	btfsc	(main@Binary^(0+128)+1),7
  2542  07AB  03BB               	decf	(main@Binary+2)^(0+128),f
  2543  07AC  083B               	movf	(main@Binary^(0+128)+2),w
  2544  07AD  00BC               	movwf	(main@Binary+3)^(0+128)
  2545  07AE                     l1995:
  2546                           
  2547                           ;main.c: 170:     sprintf(printchar,"%d",Binary);
  2548  07AE  3030               	movlw	low (STR_2| (0+32768))
  2549  07AF  0020               	movlb	0	; select bank0
  2550  07B0  00E6               	movwf	sprintf@fmt
  2551  07B1  3090               	movlw	high (STR_2| (0+32768))
  2552  07B2  00E7               	movwf	sprintf@fmt+1
  2553  07B3  0021               	movlb	1	; select bank1
  2554  07B4  083C               	movf	(main@Binary+3)^(0+128),w
  2555  07B5  0020               	movlb	0	; select bank0
  2556  07B6  00EB               	movwf	?_sprintf+5
  2557  07B7  0021               	movlb	1	; select bank1
  2558  07B8  083B               	movf	(main@Binary+2)^(0+128),w
  2559  07B9  0020               	movlb	0	; select bank0
  2560  07BA  00EA               	movwf	?_sprintf+4
  2561  07BB  0021               	movlb	1	; select bank1
  2562  07BC  083A               	movf	(main@Binary+1)^(0+128),w
  2563  07BD  0020               	movlb	0	; select bank0
  2564  07BE  00E9               	movwf	?_sprintf+3
  2565  07BF  0021               	movlb	1	; select bank1
  2566  07C0  0839               	movf	main@Binary^(0+128),w
  2567  07C1  0020               	movlb	0	; select bank0
  2568  07C2  00E8               	movwf	?_sprintf+2
  2569  07C3  30AF               	movlw	(low (main@printchar| 0))& (0+255)
  2570  07C4  318F  2738  3185   	fcall	_sprintf
  2571  07C7                     l1997:
  2572                           
  2573                           ;main.c: 171:     LCDGoto(0,1);
  2574  07C7  01F7               	clrf	LCDGoto@ln
  2575  07C8  0AF7               	incf	LCDGoto@ln,f
  2576  07C9  3000               	movlw	0
  2577  07CA  318F  2782  3185   	fcall	_LCDGoto
  2578  07CD                     l1999:
  2579                           
  2580                           ;main.c: 172:     LCDPutStr(printchar);
  2581  07CD  30AF               	movlw	low main@printchar
  2582  07CE  00F7               	movwf	LCDPutStr@str
  2583  07CF  3000               	movlw	high main@printchar
  2584  07D0  00F8               	movwf	LCDPutStr@str+1
  2585  07D1  318F  275C  3185   	fcall	_LCDPutStr
  2586  07D4                     l53:	
  2587                           ;main.c: 174:     while (1)
  2588                           
  2589  07D4                     l54:	
  2590                           ;main.c: 175:     {;main.c: 177:     }
  2591                           
  2592  07D4  2FD4               	goto	l53
  2593  07D5  3180  2802         	ljmp	start
  2594  07D7                     __end_of_main:
  2595                           
  2596                           	psect	text1
  2597  003D                     __ptext1:	
  2598 ;; *************** function _sumdigits *****************
  2599 ;; Defined at:
  2600 ;;		line 18 in file "main.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  number          2    9[COMMON] int 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  SumDigits       2    2[BANK0 ] int 
  2605 ;;  digit           2    0[BANK0 ] int 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  2    9[COMMON] int 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0, pclath, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2616 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2618 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2619 ;;Total ram usage:        7 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    1
  2622 ;; This function calls:
  2623 ;;		___awdiv
  2624 ;;		___awmod
  2625 ;; This function is called by:
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           
  2631                           ;psect for function _sumdigits
  2632  003D                     _sumdigits:
  2633  003D                     l1841:	
  2634                           ;incstack = 0
  2635                           ; Regs used in _sumdigits: [wreg+status,2+status,0+pclath+cstack]
  2636                           
  2637                           
  2638                           ;main.c: 18: int sumdigits(int number);main.c: 19: {;main.c: 20:   int SumDigits = 0,dig
      +                          it;
  2639  003D  0020               	movlb	0	; select bank0
  2640  003E  01A2               	clrf	sumdigits@SumDigits
  2641  003F  01A3               	clrf	sumdigits@SumDigits+1
  2642                           
  2643                           ;main.c: 21:   while (number>0)
  2644  0040  2866               	goto	l1849
  2645  0041                     l1843:
  2646                           
  2647                           ;main.c: 22:   {;main.c: 23:     digit = number%10;
  2648  0041  300A               	movlw	10
  2649  0042  00F0               	movwf	___awmod@divisor
  2650  0043  3000               	movlw	0
  2651  0044  00F1               	movwf	___awmod@divisor+1
  2652  0045  087A               	movf	sumdigits@number+1,w
  2653  0046  00F3               	movwf	___awmod@dividend+1
  2654  0047  0879               	movf	sumdigits@number,w
  2655  0048  00F2               	movwf	___awmod@dividend
  2656  0049  3180  20C8  3180   	fcall	___awmod
  2657  004C  0871               	movf	?___awmod+1,w
  2658  004D  0020               	movlb	0	; select bank0
  2659  004E  00A1               	movwf	sumdigits@digit+1
  2660  004F  0870               	movf	?___awmod,w
  2661  0050  00A0               	movwf	sumdigits@digit
  2662  0051                     l1845:
  2663                           
  2664                           ;main.c: 24:     SumDigits = SumDigits + digit;
  2665  0051  0820               	movf	sumdigits@digit,w
  2666  0052  0722               	addwf	sumdigits@SumDigits,w
  2667  0053  00A2               	movwf	sumdigits@SumDigits
  2668  0054  0821               	movf	sumdigits@digit+1,w
  2669  0055  3D23               	addwfc	sumdigits@SumDigits+1,w
  2670  0056  00A3               	movwf	sumdigits@SumDigits+1
  2671  0057                     l1847:
  2672                           
  2673                           ;main.c: 25:     number = number /10;
  2674  0057  300A               	movlw	10
  2675  0058  00F0               	movwf	___awdiv@divisor
  2676  0059  3000               	movlw	0
  2677  005A  00F1               	movwf	___awdiv@divisor+1
  2678  005B  087A               	movf	sumdigits@number+1,w
  2679  005C  00F3               	movwf	___awdiv@dividend+1
  2680  005D  0879               	movf	sumdigits@number,w
  2681  005E  00F2               	movwf	___awdiv@dividend
  2682  005F  3181  2171  3180   	fcall	___awdiv
  2683  0062  0871               	movf	?___awdiv+1,w
  2684  0063  00FA               	movwf	sumdigits@number+1
  2685  0064  0870               	movf	?___awdiv,w
  2686  0065  00F9               	movwf	sumdigits@number
  2687  0066                     l1849:
  2688                           
  2689                           ;main.c: 21:   while (number>0)
  2690  0066  087A               	movf	sumdigits@number+1,w
  2691  0067  3A80               	xorlw	128
  2692  0068  00FB               	movwf	??_sumdigits
  2693  0069  3080               	movlw	128
  2694  006A  027B               	subwf	??_sumdigits,w
  2695  006B  1D03               	skipz
  2696  006C  286F               	goto	u1715
  2697  006D  3001               	movlw	1
  2698  006E  0279               	subwf	sumdigits@number,w
  2699  006F                     u1715:
  2700  006F  1803               	skipnc
  2701  0070  2872               	goto	u1711
  2702  0071  2873               	goto	u1710
  2703  0072                     u1711:
  2704  0072  2841               	goto	l1843
  2705  0073                     u1710:
  2706  0073                     l1851:
  2707                           
  2708                           ;main.c: 27:   return SumDigits;
  2709  0073  0020               	movlb	0	; select bank0
  2710  0074  0823               	movf	sumdigits@SumDigits+1,w
  2711  0075  00FA               	movwf	?_sumdigits+1
  2712  0076  0822               	movf	sumdigits@SumDigits,w
  2713  0077  00F9               	movwf	?_sumdigits
  2714  0078                     l26:
  2715  0078  0008               	return
  2716  0079                     __end_of_sumdigits:
  2717                           
  2718                           	psect	text2
  2719  00C8                     __ptext2:	
  2720 ;; *************** function ___awmod *****************
  2721 ;; Defined at:
  2722 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  divisor         2    0[COMMON] int 
  2725 ;;  dividend        2    2[COMMON] int 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  sign            1    6[COMMON] unsigned char 
  2728 ;;  counter         1    5[COMMON] unsigned char 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  2    0[COMMON] int 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2738 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2739 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2741 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2742 ;;Total ram usage:        7 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_sumdigits
  2748 ;;		_main
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function ___awmod
  2754  00C8                     ___awmod:
  2755  00C8                     l1791:	
  2756                           ;incstack = 0
  2757                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2758                           
  2759  00C8  01F6               	clrf	___awmod@sign
  2760  00C9                     l1793:
  2761  00C9  1FF3               	btfss	___awmod@dividend+1,7
  2762  00CA  28CC               	goto	u1611
  2763  00CB  28CD               	goto	u1610
  2764  00CC                     u1611:
  2765  00CC  28D4               	goto	l1799
  2766  00CD                     u1610:
  2767  00CD                     l1795:
  2768  00CD  09F2               	comf	___awmod@dividend,f
  2769  00CE  09F3               	comf	___awmod@dividend+1,f
  2770  00CF  0AF2               	incf	___awmod@dividend,f
  2771  00D0  1903               	skipnz
  2772  00D1  0AF3               	incf	___awmod@dividend+1,f
  2773  00D2                     l1797:
  2774  00D2  01F6               	clrf	___awmod@sign
  2775  00D3  0AF6               	incf	___awmod@sign,f
  2776  00D4                     l1799:
  2777  00D4  1FF1               	btfss	___awmod@divisor+1,7
  2778  00D5  28D7               	goto	u1621
  2779  00D6  28D8               	goto	u1620
  2780  00D7                     u1621:
  2781  00D7  28DD               	goto	l1803
  2782  00D8                     u1620:
  2783  00D8                     l1801:
  2784  00D8  09F0               	comf	___awmod@divisor,f
  2785  00D9  09F1               	comf	___awmod@divisor+1,f
  2786  00DA  0AF0               	incf	___awmod@divisor,f
  2787  00DB  1903               	skipnz
  2788  00DC  0AF1               	incf	___awmod@divisor+1,f
  2789  00DD                     l1803:
  2790  00DD  0870               	movf	___awmod@divisor,w
  2791  00DE  0471               	iorwf	___awmod@divisor+1,w
  2792  00DF  1903               	btfsc	3,2
  2793  00E0  28E2               	goto	u1631
  2794  00E1  28E3               	goto	u1630
  2795  00E2                     u1631:
  2796  00E2  290C               	goto	l1821
  2797  00E3                     u1630:
  2798  00E3                     l1805:
  2799  00E3  01F5               	clrf	___awmod@counter
  2800  00E4  0AF5               	incf	___awmod@counter,f
  2801  00E5  28EF               	goto	l1811
  2802  00E6                     l1807:
  2803  00E6  3001               	movlw	1
  2804  00E7                     u1645:
  2805  00E7  35F0               	lslf	___awmod@divisor,f
  2806  00E8  0DF1               	rlf	___awmod@divisor+1,f
  2807  00E9  0B89               	decfsz	9,f
  2808  00EA  28E7               	goto	u1645
  2809  00EB                     l1809:
  2810  00EB  3001               	movlw	1
  2811  00EC  00F4               	movwf	??___awmod
  2812  00ED  0874               	movf	??___awmod,w
  2813  00EE  07F5               	addwf	___awmod@counter,f
  2814  00EF                     l1811:
  2815  00EF  1FF1               	btfss	___awmod@divisor+1,7
  2816  00F0  28F2               	goto	u1651
  2817  00F1  28F3               	goto	u1650
  2818  00F2                     u1651:
  2819  00F2  28E6               	goto	l1807
  2820  00F3                     u1650:
  2821  00F3                     l1813:
  2822  00F3  0871               	movf	___awmod@divisor+1,w
  2823  00F4  0273               	subwf	___awmod@dividend+1,w
  2824  00F5  1D03               	skipz
  2825  00F6  28F9               	goto	u1665
  2826  00F7  0870               	movf	___awmod@divisor,w
  2827  00F8  0272               	subwf	___awmod@dividend,w
  2828  00F9                     u1665:
  2829  00F9  1C03               	skipc
  2830  00FA  28FC               	goto	u1661
  2831  00FB  28FD               	goto	u1660
  2832  00FC                     u1661:
  2833  00FC  2901               	goto	l1817
  2834  00FD                     u1660:
  2835  00FD                     l1815:
  2836  00FD  0870               	movf	___awmod@divisor,w
  2837  00FE  02F2               	subwf	___awmod@dividend,f
  2838  00FF  0871               	movf	___awmod@divisor+1,w
  2839  0100  3BF3               	subwfb	___awmod@dividend+1,f
  2840  0101                     l1817:
  2841  0101  3001               	movlw	1
  2842  0102                     u1675:
  2843  0102  36F1               	lsrf	___awmod@divisor+1,f
  2844  0103  0CF0               	rrf	___awmod@divisor,f
  2845  0104  0B89               	decfsz	9,f
  2846  0105  2902               	goto	u1675
  2847  0106                     l1819:
  2848  0106  3001               	movlw	1
  2849  0107  02F5               	subwf	___awmod@counter,f
  2850  0108  1D03               	btfss	3,2
  2851  0109  290B               	goto	u1681
  2852  010A  290C               	goto	u1680
  2853  010B                     u1681:
  2854  010B  28F3               	goto	l1813
  2855  010C                     u1680:
  2856  010C                     l1821:
  2857  010C  0876               	movf	___awmod@sign,w
  2858  010D  1903               	btfsc	3,2
  2859  010E  2910               	goto	u1691
  2860  010F  2911               	goto	u1690
  2861  0110                     u1691:
  2862  0110  2916               	goto	l1825
  2863  0111                     u1690:
  2864  0111                     l1823:
  2865  0111  09F2               	comf	___awmod@dividend,f
  2866  0112  09F3               	comf	___awmod@dividend+1,f
  2867  0113  0AF2               	incf	___awmod@dividend,f
  2868  0114  1903               	skipnz
  2869  0115  0AF3               	incf	___awmod@dividend+1,f
  2870  0116                     l1825:
  2871  0116  0873               	movf	___awmod@dividend+1,w
  2872  0117  00F1               	movwf	?___awmod+1
  2873  0118  0872               	movf	___awmod@dividend,w
  2874  0119  00F0               	movwf	?___awmod
  2875  011A                     l410:
  2876  011A  0008               	return
  2877  011B                     __end_of___awmod:
  2878                           
  2879                           	psect	text3
  2880  0171                     __ptext3:	
  2881 ;; *************** function ___awdiv *****************
  2882 ;; Defined at:
  2883 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  divisor         2    0[COMMON] int 
  2886 ;;  dividend        2    2[COMMON] int 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  quotient        2    7[COMMON] int 
  2889 ;;  sign            1    6[COMMON] unsigned char 
  2890 ;;  counter         1    5[COMMON] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  2    0[COMMON] int 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2901 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2903 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2904 ;;Total ram usage:        9 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_sumdigits
  2910 ;;		_main
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           
  2915                           ;psect for function ___awdiv
  2916  0171                     ___awdiv:
  2917  0171                     l1747:	
  2918                           ;incstack = 0
  2919                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2920                           
  2921  0171  01F6               	clrf	___awdiv@sign
  2922  0172                     l1749:
  2923  0172  1FF1               	btfss	___awdiv@divisor+1,7
  2924  0173  2975               	goto	u1511
  2925  0174  2976               	goto	u1510
  2926  0175                     u1511:
  2927  0175  297D               	goto	l1755
  2928  0176                     u1510:
  2929  0176                     l1751:
  2930  0176  09F0               	comf	___awdiv@divisor,f
  2931  0177  09F1               	comf	___awdiv@divisor+1,f
  2932  0178  0AF0               	incf	___awdiv@divisor,f
  2933  0179  1903               	skipnz
  2934  017A  0AF1               	incf	___awdiv@divisor+1,f
  2935  017B                     l1753:
  2936  017B  01F6               	clrf	___awdiv@sign
  2937  017C  0AF6               	incf	___awdiv@sign,f
  2938  017D                     l1755:
  2939  017D  1FF3               	btfss	___awdiv@dividend+1,7
  2940  017E  2980               	goto	u1521
  2941  017F  2981               	goto	u1520
  2942  0180                     u1521:
  2943  0180  298A               	goto	l1761
  2944  0181                     u1520:
  2945  0181                     l1757:
  2946  0181  09F2               	comf	___awdiv@dividend,f
  2947  0182  09F3               	comf	___awdiv@dividend+1,f
  2948  0183  0AF2               	incf	___awdiv@dividend,f
  2949  0184  1903               	skipnz
  2950  0185  0AF3               	incf	___awdiv@dividend+1,f
  2951  0186                     l1759:
  2952  0186  3001               	movlw	1
  2953  0187  00F4               	movwf	??___awdiv
  2954  0188  0874               	movf	??___awdiv,w
  2955  0189  06F6               	xorwf	___awdiv@sign,f
  2956  018A                     l1761:
  2957  018A  01F7               	clrf	___awdiv@quotient
  2958  018B  01F8               	clrf	___awdiv@quotient+1
  2959  018C                     l1763:
  2960  018C  0870               	movf	___awdiv@divisor,w
  2961  018D  0471               	iorwf	___awdiv@divisor+1,w
  2962  018E  1903               	btfsc	3,2
  2963  018F  2991               	goto	u1531
  2964  0190  2992               	goto	u1530
  2965  0191                     u1531:
  2966  0191  29C1               	goto	l1783
  2967  0192                     u1530:
  2968  0192                     l1765:
  2969  0192  01F5               	clrf	___awdiv@counter
  2970  0193  0AF5               	incf	___awdiv@counter,f
  2971  0194  299E               	goto	l1771
  2972  0195                     l1767:
  2973  0195  3001               	movlw	1
  2974  0196                     u1545:
  2975  0196  35F0               	lslf	___awdiv@divisor,f
  2976  0197  0DF1               	rlf	___awdiv@divisor+1,f
  2977  0198  0B89               	decfsz	9,f
  2978  0199  2996               	goto	u1545
  2979  019A                     l1769:
  2980  019A  3001               	movlw	1
  2981  019B  00F4               	movwf	??___awdiv
  2982  019C  0874               	movf	??___awdiv,w
  2983  019D  07F5               	addwf	___awdiv@counter,f
  2984  019E                     l1771:
  2985  019E  1FF1               	btfss	___awdiv@divisor+1,7
  2986  019F  29A1               	goto	u1551
  2987  01A0  29A2               	goto	u1550
  2988  01A1                     u1551:
  2989  01A1  2995               	goto	l1767
  2990  01A2                     u1550:
  2991  01A2                     l1773:
  2992  01A2  3001               	movlw	1
  2993  01A3                     u1565:
  2994  01A3  35F7               	lslf	___awdiv@quotient,f
  2995  01A4  0DF8               	rlf	___awdiv@quotient+1,f
  2996  01A5  0B89               	decfsz	9,f
  2997  01A6  29A3               	goto	u1565
  2998  01A7  0871               	movf	___awdiv@divisor+1,w
  2999  01A8  0273               	subwf	___awdiv@dividend+1,w
  3000  01A9  1D03               	skipz
  3001  01AA  29AD               	goto	u1575
  3002  01AB  0870               	movf	___awdiv@divisor,w
  3003  01AC  0272               	subwf	___awdiv@dividend,w
  3004  01AD                     u1575:
  3005  01AD  1C03               	skipc
  3006  01AE  29B0               	goto	u1571
  3007  01AF  29B1               	goto	u1570
  3008  01B0                     u1571:
  3009  01B0  29B6               	goto	l1779
  3010  01B1                     u1570:
  3011  01B1                     l1775:
  3012  01B1  0870               	movf	___awdiv@divisor,w
  3013  01B2  02F2               	subwf	___awdiv@dividend,f
  3014  01B3  0871               	movf	___awdiv@divisor+1,w
  3015  01B4  3BF3               	subwfb	___awdiv@dividend+1,f
  3016  01B5                     l1777:
  3017  01B5  1477               	bsf	___awdiv@quotient,0
  3018  01B6                     l1779:
  3019  01B6  3001               	movlw	1
  3020  01B7                     u1585:
  3021  01B7  36F1               	lsrf	___awdiv@divisor+1,f
  3022  01B8  0CF0               	rrf	___awdiv@divisor,f
  3023  01B9  0B89               	decfsz	9,f
  3024  01BA  29B7               	goto	u1585
  3025  01BB                     l1781:
  3026  01BB  3001               	movlw	1
  3027  01BC  02F5               	subwf	___awdiv@counter,f
  3028  01BD  1D03               	btfss	3,2
  3029  01BE  29C0               	goto	u1591
  3030  01BF  29C1               	goto	u1590
  3031  01C0                     u1591:
  3032  01C0  29A2               	goto	l1773
  3033  01C1                     u1590:
  3034  01C1                     l1783:
  3035  01C1  0876               	movf	___awdiv@sign,w
  3036  01C2  1903               	btfsc	3,2
  3037  01C3  29C5               	goto	u1601
  3038  01C4  29C6               	goto	u1600
  3039  01C5                     u1601:
  3040  01C5  29CB               	goto	l1787
  3041  01C6                     u1600:
  3042  01C6                     l1785:
  3043  01C6  09F7               	comf	___awdiv@quotient,f
  3044  01C7  09F8               	comf	___awdiv@quotient+1,f
  3045  01C8  0AF7               	incf	___awdiv@quotient,f
  3046  01C9  1903               	skipnz
  3047  01CA  0AF8               	incf	___awdiv@quotient+1,f
  3048  01CB                     l1787:
  3049  01CB  0878               	movf	___awdiv@quotient+1,w
  3050  01CC  00F1               	movwf	?___awdiv+1
  3051  01CD  0877               	movf	___awdiv@quotient,w
  3052  01CE  00F0               	movwf	?___awdiv
  3053  01CF                     l397:
  3054  01CF  0008               	return
  3055  01D0                     __end_of___awdiv:
  3056                           
  3057                           	psect	text4
  3058  0F38                     __ptext4:	
  3059 ;; *************** function _sprintf *****************
  3060 ;; Defined at:
  3061 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  s               1    wreg     PTR unsigned char 
  3064 ;;		 -> main@printchar(10), 
  3065 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  3066 ;;		 -> STR_6(3), STR_4(3), STR_2(3), 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  s               1    3[BANK1 ] PTR unsigned char 
  3069 ;;		 -> main@printchar(10), 
  3070 ;;  f               5    4[BANK1 ] struct _IO_FILE
  3071 ;;  ret             2    0        int 
  3072 ;;  ap              1    2[BANK1 ] PTR void [1]
  3073 ;;		 -> ?_sprintf(2), 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  2   70[BANK0 ] int 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3083 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3084 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3086 ;;      Totals:         1       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3087 ;;Total ram usage:       16 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    7
  3090 ;; This function calls:
  3091 ;;		_vfprintf
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function _sprintf
  3099  0F38                     _sprintf:
  3100                           
  3101                           ;incstack = 0
  3102                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3103                           ;sprintf@s stored from wreg
  3104  0F38  0021               	movlb	1	; select bank1
  3105  0F39  00A3               	movwf	sprintf@s^(0+128)
  3106  0F3A                     l1873:
  3107  0F3A  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3108  0F3B  00FD               	movwf	??_sprintf
  3109  0F3C  087D               	movf	??_sprintf,w
  3110  0F3D  00A2               	movwf	sprintf@ap^(0+128)
  3111  0F3E  0823               	movf	sprintf@s^(0+128),w
  3112  0F3F  00FD               	movwf	??_sprintf
  3113  0F40  087D               	movf	??_sprintf,w
  3114  0F41  00A4               	movwf	sprintf@f^(0+128)
  3115  0F42                     l1875:
  3116  0F42  01A5               	clrf	(sprintf@f^(0+128)+1)
  3117  0F43  01A6               	clrf	((sprintf@f+1)^(0+128)+1)
  3118  0F44                     l1877:
  3119  0F44  01A7               	clrf	(sprintf@f^(0+128)+3)
  3120  0F45  01A8               	clrf	((sprintf@f+1)^(0+128)+3)
  3121  0F46                     l1879:
  3122  0F46  0020               	movlb	0	; select bank0
  3123  0F47  0867               	movf	sprintf@fmt+1,w
  3124  0F48  00DF               	movwf	vfprintf@fmt+1
  3125  0F49  0866               	movf	sprintf@fmt,w
  3126  0F4A  00DE               	movwf	vfprintf@fmt
  3127  0F4B  30A2               	movlw	(low (sprintf@ap| 0))& (0+255)
  3128  0F4C  00FD               	movwf	??_sprintf
  3129  0F4D  087D               	movf	??_sprintf,w
  3130  0F4E  00E0               	movwf	vfprintf@ap
  3131  0F4F  30A4               	movlw	(low (sprintf@f| 0))& (0+255)
  3132  0F50  3180  200C  318F   	fcall	_vfprintf
  3133  0F53                     l1881:
  3134  0F53  0021               	movlb	1	; select bank1
  3135  0F54  0825               	movf	(sprintf@f^(0+128)+1),w
  3136  0F55  0723               	addwf	sprintf@s^(0+128),w
  3137  0F56  00FD               	movwf	??_sprintf
  3138  0F57  087D               	movf	??_sprintf,w
  3139  0F58  0086               	movwf	6
  3140  0F59  0187               	clrf	7
  3141  0F5A  0181               	clrf	1
  3142  0F5B                     l707:
  3143  0F5B  0008               	return
  3144  0F5C                     __end_of_sprintf:
  3145                           
  3146                           	psect	text5
  3147  000C                     __ptext5:	
  3148 ;; *************** function _vfprintf *****************
  3149 ;; Defined at:
  3150 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  fp              1    wreg     PTR struct _IO_FILE
  3153 ;;		 -> sprintf@f(5), 
  3154 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  3155 ;;		 -> STR_6(3), STR_4(3), STR_2(3), 
  3156 ;;  ap              1   64[BANK0 ] PTR PTR void 
  3157 ;;		 -> sprintf@ap(1), 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  3160 ;;		 -> sprintf@f(5), 
  3161 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  3162 ;;		 -> STR_6(3), STR_4(3), STR_2(3), 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  2   62[BANK0 ] int 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3172 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3173 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3174 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3175 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3176 ;;Total ram usage:        8 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    6
  3179 ;; This function calls:
  3180 ;;		_vfpfcnvrt
  3181 ;; This function is called by:
  3182 ;;		_sprintf
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           
  3187                           ;psect for function _vfprintf
  3188  000C                     _vfprintf:
  3189                           
  3190                           ;incstack = 0
  3191                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3192                           ;vfprintf@fp stored from wreg
  3193  000C  0020               	movlb	0	; select bank0
  3194  000D  00E3               	movwf	vfprintf@fp
  3195  000E                     l1829:
  3196                           
  3197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3198  000E  085F               	movf	vfprintf@fmt+1,w
  3199  000F  00E5               	movwf	vfprintf@cfmt+1
  3200  0010  085E               	movf	vfprintf@fmt,w
  3201  0011  00E4               	movwf	vfprintf@cfmt
  3202  0012                     l1831:
  3203                           
  3204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3205  0012  0021               	movlb	1	; select bank1
  3206  0013  01D9               	clrf	_nout^(0+128)
  3207  0014  01DA               	clrf	(_nout+1)^(0+128)
  3208                           
  3209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3210  0015  282A               	goto	l1835
  3211  0016                     l1833:
  3212                           
  3213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3214  0016  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3215  0017  00E1               	movwf	??_vfprintf
  3216  0018  0861               	movf	??_vfprintf,w
  3217  0019  00CE               	movwf	vfpfcnvrt@fmt
  3218  001A  0860               	movf	vfprintf@ap,w
  3219  001B  00E2               	movwf	??_vfprintf+1
  3220  001C  0862               	movf	??_vfprintf+1,w
  3221  001D  00CF               	movwf	vfpfcnvrt@ap
  3222  001E  0863               	movf	vfprintf@fp,w
  3223  001F  3181  21D0  3180   	fcall	_vfpfcnvrt
  3224  0022  0020               	movlb	0	; select bank0
  3225  0023  084E               	movf	?_vfpfcnvrt,w
  3226  0024  0021               	movlb	1	; select bank1
  3227  0025  07D9               	addwf	_nout^(0+128),f
  3228  0026  0020               	movlb	0	; select bank0
  3229  0027  084F               	movf	?_vfpfcnvrt+1,w
  3230  0028  0021               	movlb	1	; select bank1
  3231  0029  3DDA               	addwfc	(_nout+1)^(0+128),f
  3232  002A                     l1835:
  3233                           
  3234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3235  002A  0020               	movlb	0	; select bank0
  3236  002B  0864               	movf	vfprintf@cfmt,w
  3237  002C  0084               	movwf	4
  3238  002D  0865               	movf	vfprintf@cfmt+1,w
  3239  002E  0085               	movwf	5
  3240  002F  0012               	moviw fsr0++
  3241  0030  1D03               	btfss	3,2
  3242  0031  2833               	goto	u1701
  3243  0032  2834               	goto	u1700
  3244  0033                     u1701:
  3245  0033  2816               	goto	l1833
  3246  0034                     u1700:
  3247  0034                     l1837:
  3248                           
  3249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3250  0034  0021               	movlb	1	; select bank1
  3251  0035  085A               	movf	(_nout+1)^(0+128),w
  3252  0036  0020               	movlb	0	; select bank0
  3253  0037  00DF               	movwf	?_vfprintf+1
  3254  0038  0021               	movlb	1	; select bank1
  3255  0039  0859               	movf	_nout^(0+128),w
  3256  003A  0020               	movlb	0	; select bank0
  3257  003B  00DE               	movwf	?_vfprintf
  3258  003C                     l779:
  3259  003C  0008               	return
  3260  003D                     __end_of_vfprintf:
  3261                           
  3262                           	psect	text6
  3263  01D0                     __ptext6:	
  3264 ;; *************** function _vfpfcnvrt *****************
  3265 ;; Defined at:
  3266 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  fp              1    wreg     PTR struct _IO_FILE
  3269 ;;		 -> sprintf@f(5), 
  3270 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3271 ;;		 -> vfprintf@cfmt(2), 
  3272 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3273 ;;		 -> sprintf@ap(1), 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  3276 ;;		 -> sprintf@f(5), 
  3277 ;;  ll              8   53[BANK0 ] long long 
  3278 ;;  llu             8    0        unsigned long long 
  3279 ;;  f               4    0        unsigned long long 
  3280 ;;  ct              3    0        unsigned char [3]
  3281 ;;  vp              2    0        PTR void 
  3282 ;;  i               2    0        int 
  3283 ;;  done            2    0        int 
  3284 ;;  cp              2    0        PTR unsigned char 
  3285 ;;  c               1    0        unsigned char 
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  2   46[BANK0 ] int 
  3288 ;; Registers used:
  3289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3295 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3296 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3297 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3298 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3299 ;;Total ram usage:       16 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    5
  3302 ;; This function calls:
  3303 ;;		_dtoa
  3304 ;;		_fputc
  3305 ;; This function is called by:
  3306 ;;		_vfprintf
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           
  3311                           ;psect for function _vfpfcnvrt
  3312  01D0                     _vfpfcnvrt:
  3313                           
  3314                           ;incstack = 0
  3315                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3316                           ;vfpfcnvrt@fp stored from wreg
  3317  01D0  0020               	movlb	0	; select bank0
  3318  01D1  00DD               	movwf	vfpfcnvrt@fp
  3319  01D2                     l1645:
  3320                           
  3321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3322  01D2  084E               	movf	vfpfcnvrt@fmt,w
  3323  01D3  0086               	movwf	6
  3324  01D4  0187               	clrf	7
  3325  01D5  3F40               	moviw [0]fsr1
  3326  01D6  00D0               	movwf	??_vfpfcnvrt
  3327  01D7  3F41               	moviw [1]fsr1
  3328  01D8  00D1               	movwf	??_vfpfcnvrt+1
  3329  01D9  0850               	movf	??_vfpfcnvrt,w
  3330  01DA  0084               	movwf	4
  3331  01DB  0851               	movf	??_vfpfcnvrt+1,w
  3332  01DC  0085               	movwf	5
  3333  01DD  0012               	moviw fsr0++
  3334  01DE  3A25               	xorlw	37
  3335  01DF  1D03               	btfss	3,2
  3336  01E0  29E2               	goto	u1431
  3337  01E1  29E3               	goto	u1430
  3338  01E2                     u1431:
  3339  01E2  2A87               	goto	l1681
  3340  01E3                     u1430:
  3341  01E3                     l1647:
  3342                           
  3343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3344  01E3  084E               	movf	vfpfcnvrt@fmt,w
  3345  01E4  0086               	movwf	6
  3346  01E5  0187               	clrf	7
  3347  01E6  3001               	movlw	1
  3348  01E7  0781               	addwf	1,f
  3349  01E8  3141               	addfsr 1,1
  3350  01E9  1803               	skipnc
  3351  01EA  0A81               	incf	1,f
  3352  01EB                     l1649:
  3353                           
  3354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3355  01EB  0021               	movlb	1	; select bank1
  3356  01EC  01DB               	clrf	_width^(0+128)
  3357  01ED  01DC               	clrf	(_width+1)^(0+128)
  3358  01EE  0020               	movlb	0	; select bank0
  3359  01EF  01EE               	clrf	_flags
  3360  01F0  01EF               	clrf	_flags+1
  3361  01F1                     l1651:
  3362                           
  3363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3364  01F1  30FF               	movlw	255
  3365  01F2  00EC               	movwf	_prec
  3366  01F3  30FF               	movlw	255
  3367  01F4  00ED               	movwf	_prec+1
  3368  01F5                     l1653:
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3371  01F5  084E               	movf	vfpfcnvrt@fmt,w
  3372  01F6  0086               	movwf	6
  3373  01F7  0187               	clrf	7
  3374  01F8  3F40               	moviw [0]fsr1
  3375  01F9  00D0               	movwf	??_vfpfcnvrt
  3376  01FA  3F41               	moviw [1]fsr1
  3377  01FB  00D1               	movwf	??_vfpfcnvrt+1
  3378  01FC  0850               	movf	??_vfpfcnvrt,w
  3379  01FD  0084               	movwf	4
  3380  01FE  0851               	movf	??_vfpfcnvrt+1,w
  3381  01FF  0085               	movwf	5
  3382  0200  0012               	moviw fsr0++
  3383  0201  3A64               	xorlw	100
  3384  0202  1903               	btfsc	3,2
  3385  0203  2A05               	goto	u1441
  3386  0204  2A06               	goto	u1440
  3387  0205                     u1441:
  3388  0205  2A17               	goto	l1657
  3389  0206                     u1440:
  3390  0206                     l1655:
  3391  0206  084E               	movf	vfpfcnvrt@fmt,w
  3392  0207  0086               	movwf	6
  3393  0208  0187               	clrf	7
  3394  0209  3F40               	moviw [0]fsr1
  3395  020A  00D0               	movwf	??_vfpfcnvrt
  3396  020B  3F41               	moviw [1]fsr1
  3397  020C  00D1               	movwf	??_vfpfcnvrt+1
  3398  020D  0850               	movf	??_vfpfcnvrt,w
  3399  020E  0084               	movwf	4
  3400  020F  0851               	movf	??_vfpfcnvrt+1,w
  3401  0210  0085               	movwf	5
  3402  0211  0012               	moviw fsr0++
  3403  0212  3A69               	xorlw	105
  3404  0213  1D03               	btfss	3,2
  3405  0214  2A16               	goto	u1451
  3406  0215  2A17               	goto	u1450
  3407  0216                     u1451:
  3408  0216  2A52               	goto	l1665
  3409  0217                     u1450:
  3410  0217                     l1657:
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3413  0217  084E               	movf	vfpfcnvrt@fmt,w
  3414  0218  0086               	movwf	6
  3415  0219  0187               	clrf	7
  3416  021A  3001               	movlw	1
  3417  021B  0781               	addwf	1,f
  3418  021C  3141               	addfsr 1,1
  3419  021D  1803               	skipnc
  3420  021E  0A81               	incf	1,f
  3421  021F                     l1659:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3424  021F  084F               	movf	vfpfcnvrt@ap,w
  3425  0220  0086               	movwf	6
  3426  0221  0187               	clrf	7
  3427  0222  0801               	movf	1,w
  3428  0223  0084               	movwf	4
  3429  0224  0185               	clrf	5
  3430  0225  3002               	movlw	2
  3431  0226  0781               	addwf	1,f
  3432  0227  3F00               	moviw [0]fsr0
  3433  0228  00D0               	movwf	??_vfpfcnvrt
  3434  0229  3F01               	moviw [1]fsr0
  3435  022A  00D1               	movwf	??_vfpfcnvrt+1
  3436  022B  0850               	movf	??_vfpfcnvrt,w
  3437  022C  00D5               	movwf	vfpfcnvrt@ll
  3438  022D  0851               	movf	??_vfpfcnvrt+1,w
  3439  022E  00D6               	movwf	vfpfcnvrt@ll+1
  3440  022F  0D89               	rlf	9,f
  3441  0230  3B89               	subwfb	9,f
  3442  0231  0989               	comf	9,f
  3443  0232  00D7               	movwf	vfpfcnvrt@ll+2
  3444  0233  00D8               	movwf	vfpfcnvrt@ll+3
  3445  0234  00D9               	movwf	vfpfcnvrt@ll+4
  3446  0235  00DA               	movwf	vfpfcnvrt@ll+5
  3447  0236  00DB               	movwf	vfpfcnvrt@ll+6
  3448  0237  00DC               	movwf	vfpfcnvrt@ll+7
  3449  0238                     l1661:
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3452  0238  0855               	movf	vfpfcnvrt@ll,w
  3453  0239  00B0               	movwf	dtoa@d
  3454  023A  0856               	movf	vfpfcnvrt@ll+1,w
  3455  023B  00B1               	movwf	dtoa@d+1
  3456  023C  0857               	movf	vfpfcnvrt@ll+2,w
  3457  023D  00B2               	movwf	dtoa@d+2
  3458  023E  0858               	movf	vfpfcnvrt@ll+3,w
  3459  023F  00B3               	movwf	dtoa@d+3
  3460  0240  0859               	movf	vfpfcnvrt@ll+4,w
  3461  0241  00B4               	movwf	dtoa@d+4
  3462  0242  085A               	movf	vfpfcnvrt@ll+5,w
  3463  0243  00B5               	movwf	dtoa@d+5
  3464  0244  085B               	movf	vfpfcnvrt@ll+6,w
  3465  0245  00B6               	movwf	dtoa@d+6
  3466  0246  085C               	movf	vfpfcnvrt@ll+7,w
  3467  0247  00B7               	movwf	dtoa@d+7
  3468  0248  085D               	movf	vfpfcnvrt@fp,w
  3469  0249  3184  2496  3181   	fcall	_dtoa
  3470  024C  0020               	movlb	0	; select bank0
  3471  024D  0831               	movf	?_dtoa+1,w
  3472  024E  00CF               	movwf	?_vfpfcnvrt+1
  3473  024F  0830               	movf	?_dtoa,w
  3474  0250  00CE               	movwf	?_vfpfcnvrt
  3475  0251  2AAA               	goto	l772
  3476  0252                     l1665:
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3479  0252  084E               	movf	vfpfcnvrt@fmt,w
  3480  0253  0086               	movwf	6
  3481  0254  0187               	clrf	7
  3482  0255  3F40               	moviw [0]fsr1
  3483  0256  00D0               	movwf	??_vfpfcnvrt
  3484  0257  3F41               	moviw [1]fsr1
  3485  0258  00D1               	movwf	??_vfpfcnvrt+1
  3486  0259  0850               	movf	??_vfpfcnvrt,w
  3487  025A  0084               	movwf	4
  3488  025B  0851               	movf	??_vfpfcnvrt+1,w
  3489  025C  0085               	movwf	5
  3490  025D  0012               	moviw fsr0++
  3491  025E  3A25               	xorlw	37
  3492  025F  1D03               	btfss	3,2
  3493  0260  2A62               	goto	u1461
  3494  0261  2A63               	goto	u1460
  3495  0262                     u1461:
  3496  0262  2A7C               	goto	l1675
  3497  0263                     u1460:
  3498  0263                     l1667:
  3499                           
  3500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3501  0263  084E               	movf	vfpfcnvrt@fmt,w
  3502  0264  0086               	movwf	6
  3503  0265  0187               	clrf	7
  3504  0266  3001               	movlw	1
  3505  0267  0781               	addwf	1,f
  3506  0268  3141               	addfsr 1,1
  3507  0269  1803               	skipnc
  3508  026A  0A81               	incf	1,f
  3509  026B                     l1669:
  3510                           
  3511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3512  026B  3025               	movlw	37
  3513  026C  00F0               	movwf	fputc@c
  3514  026D  3000               	movlw	0
  3515  026E  00F1               	movwf	fputc@c+1
  3516  026F  085D               	movf	vfpfcnvrt@fp,w
  3517  0270  00D0               	movwf	??_vfpfcnvrt
  3518  0271  0850               	movf	??_vfpfcnvrt,w
  3519  0272  00F2               	movwf	fputc@fp
  3520  0273  3180  2079  3181   	fcall	_fputc
  3521  0276                     l1671:
  3522                           
  3523                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3524  0276  3001               	movlw	1
  3525  0277  0020               	movlb	0	; select bank0
  3526  0278  00CE               	movwf	?_vfpfcnvrt
  3527  0279  3000               	movlw	0
  3528  027A  00CF               	movwf	?_vfpfcnvrt+1
  3529  027B  2AAA               	goto	l772
  3530  027C                     l1675:
  3531                           
  3532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3533  027C  084E               	movf	vfpfcnvrt@fmt,w
  3534  027D  0086               	movwf	6
  3535  027E  0187               	clrf	7
  3536  027F  3001               	movlw	1
  3537  0280  0781               	addwf	1,f
  3538  0281  3141               	addfsr 1,1
  3539  0282  1803               	skipnc
  3540  0283  0A81               	incf	1,f
  3541  0284                     l1677:
  3542                           
  3543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3544  0284  01CE               	clrf	?_vfpfcnvrt
  3545  0285  01CF               	clrf	?_vfpfcnvrt+1
  3546  0286  2AAA               	goto	l772
  3547  0287                     l1681:
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3550  0287  084E               	movf	vfpfcnvrt@fmt,w
  3551  0288  0086               	movwf	6
  3552  0289  0187               	clrf	7
  3553  028A  3F40               	moviw [0]fsr1
  3554  028B  00D0               	movwf	??_vfpfcnvrt
  3555  028C  3F41               	moviw [1]fsr1
  3556  028D  00D1               	movwf	??_vfpfcnvrt+1
  3557  028E  0850               	movf	??_vfpfcnvrt,w
  3558  028F  0084               	movwf	4
  3559  0290  0851               	movf	??_vfpfcnvrt+1,w
  3560  0291  0085               	movwf	5
  3561  0292  0800               	movf	0,w	;code access
  3562  0293  00D2               	movwf	??_vfpfcnvrt+2
  3563  0294  01D3               	clrf	??_vfpfcnvrt+3
  3564  0295  0852               	movf	??_vfpfcnvrt+2,w
  3565  0296  00F0               	movwf	fputc@c
  3566  0297  0853               	movf	??_vfpfcnvrt+3,w
  3567  0298  00F1               	movwf	fputc@c+1
  3568  0299  085D               	movf	vfpfcnvrt@fp,w
  3569  029A  00D4               	movwf	??_vfpfcnvrt+4
  3570  029B  0854               	movf	??_vfpfcnvrt+4,w
  3571  029C  00F2               	movwf	fputc@fp
  3572  029D  3180  2079  3181   	fcall	_fputc
  3573  02A0                     l1683:
  3574                           
  3575                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3576  02A0  0020               	movlb	0	; select bank0
  3577  02A1  084E               	movf	vfpfcnvrt@fmt,w
  3578  02A2  0086               	movwf	6
  3579  02A3  0187               	clrf	7
  3580  02A4  3001               	movlw	1
  3581  02A5  0781               	addwf	1,f
  3582  02A6  3141               	addfsr 1,1
  3583  02A7  1803               	skipnc
  3584  02A8  0A81               	incf	1,f
  3585  02A9  2A76               	goto	l1671
  3586  02AA                     l772:
  3587  02AA  0008               	return
  3588  02AB                     __end_of_vfpfcnvrt:
  3589                           
  3590                           	psect	text7
  3591  0496                     __ptext7:	
  3592 ;; *************** function _dtoa *****************
  3593 ;; Defined at:
  3594 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  fp              1    wreg     PTR struct _IO_FILE
  3597 ;;		 -> sprintf@f(5), 
  3598 ;;  d               8   16[BANK0 ] long long 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  3601 ;;		 -> sprintf@f(5), 
  3602 ;;  n               8   36[BANK0 ] long long 
  3603 ;;  i               2   44[BANK0 ] int 
  3604 ;;  s               2   34[BANK0 ] int 
  3605 ;;  w               2   32[BANK0 ] int 
  3606 ;;  p               2   30[BANK0 ] int 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  2   16[BANK0 ] int 
  3609 ;; Registers used:
  3610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3616 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3617 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3618 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3619 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3620 ;;Total ram usage:       30 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; Hardware stack levels required when called:    4
  3623 ;; This function calls:
  3624 ;;		___aodiv
  3625 ;;		___aomod
  3626 ;;		_abs
  3627 ;;		_pad
  3628 ;; This function is called by:
  3629 ;;		_vfpfcnvrt
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           
  3634                           ;psect for function _dtoa
  3635  0496                     _dtoa:
  3636                           
  3637                           ;incstack = 0
  3638                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3639                           ;dtoa@fp stored from wreg
  3640  0496  0020               	movlb	0	; select bank0
  3641  0497  00BD               	movwf	dtoa@fp
  3642  0498                     l1569:
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3645  0498  0830               	movf	dtoa@d,w
  3646  0499  00C4               	movwf	dtoa@n
  3647  049A  0831               	movf	dtoa@d+1,w
  3648  049B  00C5               	movwf	dtoa@n+1
  3649  049C  0832               	movf	dtoa@d+2,w
  3650  049D  00C6               	movwf	dtoa@n+2
  3651  049E  0833               	movf	dtoa@d+3,w
  3652  049F  00C7               	movwf	dtoa@n+3
  3653  04A0  0834               	movf	dtoa@d+4,w
  3654  04A1  00C8               	movwf	dtoa@n+4
  3655  04A2  0835               	movf	dtoa@d+5,w
  3656  04A3  00C9               	movwf	dtoa@n+5
  3657  04A4  0836               	movf	dtoa@d+6,w
  3658  04A5  00CA               	movwf	dtoa@n+6
  3659  04A6  0837               	movf	dtoa@d+7,w
  3660  04A7  00CB               	movwf	dtoa@n+7
  3661  04A8                     l1571:
  3662                           
  3663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3664  04A8  3044               	movlw	low dtoa@n
  3665  04A9  0086               	movwf	6
  3666  04AA  3000               	movlw	high dtoa@n
  3667  04AB  0087               	movwf	7
  3668  04AC  3F47               	moviw [7]fsr1
  3669  04AD  00B8               	movwf	??_dtoa
  3670  04AE  1BB8               	btfsc	??_dtoa,7
  3671  04AF  2CB1               	goto	u1251
  3672  04B0  2CB3               	goto	u1250
  3673  04B1                     u1251:
  3674  04B1  3001               	movlw	1
  3675  04B2  2CB4               	goto	u1260
  3676  04B3                     u1250:
  3677  04B3  3000               	movlw	0
  3678  04B4                     u1260:
  3679  04B4  0020               	movlb	0	; select bank0
  3680  04B5  00B9               	movwf	??_dtoa+1
  3681  04B6  01BA               	clrf	??_dtoa+2
  3682  04B7  0839               	movf	??_dtoa+1,w
  3683  04B8  00C2               	movwf	dtoa@s
  3684  04B9  083A               	movf	??_dtoa+2,w
  3685  04BA  00C3               	movwf	dtoa@s+1
  3686  04BB                     l1573:
  3687                           
  3688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3689  04BB  0842               	movf	dtoa@s,w
  3690  04BC  0443               	iorwf	dtoa@s+1,w
  3691  04BD  1903               	btfsc	3,2
  3692  04BE  2CC0               	goto	u1271
  3693  04BF  2CC1               	goto	u1270
  3694  04C0                     u1271:
  3695  04C0  2CDF               	goto	l742
  3696  04C1                     u1270:
  3697  04C1                     l1575:
  3698                           
  3699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3700  04C1  09C4               	comf	dtoa@n,f
  3701  04C2  09C5               	comf	dtoa@n+1,f
  3702  04C3  09C6               	comf	dtoa@n+2,f
  3703  04C4  09C7               	comf	dtoa@n+3,f
  3704  04C5  09C8               	comf	dtoa@n+4,f
  3705  04C6  09C9               	comf	dtoa@n+5,f
  3706  04C7  09CA               	comf	dtoa@n+6,f
  3707  04C8  09CB               	comf	dtoa@n+7,f
  3708  04C9  0AC4               	incf	dtoa@n,f
  3709  04CA  1D03               	skipz
  3710  04CB  2CDF               	goto	u128lld
  3711  04CC  0AC5               	incf	dtoa@n+1,f
  3712  04CD  1D03               	skipz
  3713  04CE  2CDF               	goto	u128lld
  3714  04CF  0AC6               	incf	dtoa@n+2,f
  3715  04D0  1D03               	skipz
  3716  04D1  2CDF               	goto	u128lld
  3717  04D2  0AC7               	incf	dtoa@n+3,f
  3718  04D3  1D03               	skipz
  3719  04D4  2CDF               	goto	u128lld
  3720  04D5  0AC8               	incf	dtoa@n+4,f
  3721  04D6  1D03               	skipz
  3722  04D7  2CDF               	goto	u128lld
  3723  04D8  0AC9               	incf	dtoa@n+5,f
  3724  04D9  1D03               	skipz
  3725  04DA  2CDF               	goto	u128lld
  3726  04DB  0ACA               	incf	dtoa@n+6,f
  3727  04DC  1D03               	skipz
  3728  04DD  2CDF               	goto	u128lld
  3729  04DE  0ACB               	incf	dtoa@n+7,f
  3730  04DF                     u128lld:
  3731  04DF                     l742:	
  3732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
  3733                           
  3734                           
  3735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3736  04DF  0020               	movlb	0	; select bank0
  3737  04E0  1BED               	btfsc	_prec+1,7
  3738  04E1  2CE3               	goto	u1291
  3739  04E2  2CE4               	goto	u1290
  3740  04E3                     u1291:
  3741  04E3  2CE8               	goto	l743
  3742  04E4                     u1290:
  3743  04E4                     l1577:
  3744                           
  3745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3746  04E4  30FD               	movlw	253
  3747  04E5  05EE               	andwf	_flags,f
  3748  04E6  30FF               	movlw	255
  3749  04E7  05EF               	andwf	_flags+1,f
  3750  04E8                     l743:	
  3751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
  3752                           
  3753                           
  3754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3755  04E8  086D               	movf	_prec+1,w
  3756  04E9  3A80               	xorlw	128
  3757  04EA  00B8               	movwf	??_dtoa
  3758  04EB  3080               	movlw	128
  3759  04EC  0238               	subwf	??_dtoa,w
  3760  04ED  1D03               	skipz
  3761  04EE  2CF1               	goto	u1305
  3762  04EF  3001               	movlw	1
  3763  04F0  026C               	subwf	_prec,w
  3764  04F1                     u1305:
  3765  04F1  1803               	skipnc
  3766  04F2  2CF4               	goto	u1301
  3767  04F3  2CF5               	goto	u1300
  3768  04F4                     u1301:
  3769  04F4  2CFB               	goto	l1581
  3770  04F5                     u1300:
  3771  04F5                     l1579:
  3772  04F5  3001               	movlw	1
  3773  04F6  0020               	movlb	0	; select bank0
  3774  04F7  00BE               	movwf	dtoa@p
  3775  04F8  3000               	movlw	0
  3776  04F9  00BF               	movwf	dtoa@p+1
  3777  04FA  2D00               	goto	l747
  3778  04FB                     l1581:
  3779  04FB  0020               	movlb	0	; select bank0
  3780  04FC  086D               	movf	_prec+1,w
  3781  04FD  00BF               	movwf	dtoa@p+1
  3782  04FE  086C               	movf	_prec,w
  3783  04FF  00BE               	movwf	dtoa@p
  3784  0500                     l747:
  3785                           
  3786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3787  0500  0021               	movlb	1	; select bank1
  3788  0501  085C               	movf	(_width+1)^(0+128),w
  3789  0502  0020               	movlb	0	; select bank0
  3790  0503  00C1               	movwf	dtoa@w+1
  3791  0504  0021               	movlb	1	; select bank1
  3792  0505  085B               	movf	_width^(0+128),w
  3793  0506  0020               	movlb	0	; select bank0
  3794  0507  00C0               	movwf	dtoa@w
  3795  0508                     l1583:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3798  0508  0842               	movf	dtoa@s,w
  3799  0509  0443               	iorwf	dtoa@s+1,w
  3800  050A  1D03               	btfss	3,2
  3801  050B  2D0D               	goto	u1311
  3802  050C  2D0E               	goto	u1310
  3803  050D                     u1311:
  3804  050D  2D12               	goto	l1587
  3805  050E                     u1310:
  3806  050E                     l1585:
  3807  050E  1D6E               	btfss	_flags,2
  3808  050F  2D11               	goto	u1321
  3809  0510  2D12               	goto	u1320
  3810  0511                     u1321:
  3811  0511  2D16               	goto	l748
  3812  0512                     u1320:
  3813  0512                     l1587:
  3814                           
  3815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  3816  0512  30FF               	movlw	255
  3817  0513  07C0               	addwf	dtoa@w,f
  3818  0514  30FF               	movlw	255
  3819  0515  3DC1               	addwfc	dtoa@w+1,f
  3820  0516                     l748:	
  3821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
  3822                           
  3823                           
  3824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3825  0516  301F               	movlw	31
  3826  0517  00CC               	movwf	dtoa@i
  3827  0518  3000               	movlw	0
  3828  0519  00CD               	movwf	dtoa@i+1
  3829  051A                     l1589:
  3830                           
  3831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3832  051A  0022               	movlb	2	; select bank2
  3833  051B  01BF               	clrf	(_dbuf^(0+256)+31)
  3834                           
  3835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3836  051C  2D86               	goto	l751
  3837  051D                     l1591:
  3838                           
  3839                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  3840  051D  30FF               	movlw	255
  3841  051E  0020               	movlb	0	; select bank0
  3842  051F  07CC               	addwf	dtoa@i,f
  3843  0520  30FF               	movlw	255
  3844  0521  3DCD               	addwfc	dtoa@i+1,f
  3845  0522                     l1593:
  3846                           
  3847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3848  0522  300A               	movlw	10
  3849  0523  00A0               	movwf	___aomod@divisor
  3850  0524  01A1               	clrf	___aomod@divisor+1
  3851  0525  01A2               	clrf	___aomod@divisor+2
  3852  0526  01A3               	clrf	___aomod@divisor+3
  3853  0527  01A4               	clrf	___aomod@divisor+4
  3854  0528  01A5               	clrf	___aomod@divisor+5
  3855  0529  01A6               	clrf	___aomod@divisor+6
  3856  052A  01A7               	clrf	___aomod@divisor+7
  3857  052B  0844               	movf	dtoa@n,w
  3858  052C  00A8               	movwf	___aomod@dividend
  3859  052D  0845               	movf	dtoa@n+1,w
  3860  052E  00A9               	movwf	___aomod@dividend+1
  3861  052F  0846               	movf	dtoa@n+2,w
  3862  0530  00AA               	movwf	___aomod@dividend+2
  3863  0531  0847               	movf	dtoa@n+3,w
  3864  0532  00AB               	movwf	___aomod@dividend+3
  3865  0533  0848               	movf	dtoa@n+4,w
  3866  0534  00AC               	movwf	___aomod@dividend+4
  3867  0535  0849               	movf	dtoa@n+5,w
  3868  0536  00AD               	movwf	___aomod@dividend+5
  3869  0537  084A               	movf	dtoa@n+6,w
  3870  0538  00AE               	movwf	___aomod@dividend+6
  3871  0539  084B               	movf	dtoa@n+7,w
  3872  053A  00AF               	movwf	___aomod@dividend+7
  3873  053B  3182  22AB  3184   	fcall	___aomod
  3874  053E  0020               	movlb	0	; select bank0
  3875  053F  0821               	movf	?___aomod+1,w
  3876  0540  00F4               	movwf	abs@a+1
  3877  0541  0820               	movf	?___aomod,w
  3878  0542  00F3               	movwf	abs@a
  3879  0543  318E  2666  3184   	fcall	_abs
  3880  0546  0873               	movf	?_abs,w
  3881  0547  3E30               	addlw	48
  3882  0548  0020               	movlb	0	; select bank0
  3883  0549  00B8               	movwf	??_dtoa
  3884  054A  084C               	movf	dtoa@i,w
  3885  054B  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3886  054C  0086               	movwf	6
  3887  054D  3001               	movlw	1	; select bank2/3
  3888  054E  0087               	movwf	7
  3889  054F  0838               	movf	??_dtoa,w
  3890  0550  0081               	movwf	1
  3891  0551                     l1595:
  3892                           
  3893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  3894  0551  30FF               	movlw	255
  3895  0552  07BE               	addwf	dtoa@p,f
  3896  0553  30FF               	movlw	255
  3897  0554  3DBF               	addwfc	dtoa@p+1,f
  3898  0555                     l1597:
  3899                           
  3900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  3901  0555  30FF               	movlw	255
  3902  0556  07C0               	addwf	dtoa@w,f
  3903  0557  30FF               	movlw	255
  3904  0558  3DC1               	addwfc	dtoa@w+1,f
  3905  0559                     l1599:
  3906                           
  3907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3908  0559  300A               	movlw	10
  3909  055A  00A0               	movwf	___aodiv@divisor
  3910  055B  01A1               	clrf	___aodiv@divisor+1
  3911  055C  01A2               	clrf	___aodiv@divisor+2
  3912  055D  01A3               	clrf	___aodiv@divisor+3
  3913  055E  01A4               	clrf	___aodiv@divisor+4
  3914  055F  01A5               	clrf	___aodiv@divisor+5
  3915  0560  01A6               	clrf	___aodiv@divisor+6
  3916  0561  01A7               	clrf	___aodiv@divisor+7
  3917  0562  0844               	movf	dtoa@n,w
  3918  0563  00A8               	movwf	___aodiv@dividend
  3919  0564  0845               	movf	dtoa@n+1,w
  3920  0565  00A9               	movwf	___aodiv@dividend+1
  3921  0566  0846               	movf	dtoa@n+2,w
  3922  0567  00AA               	movwf	___aodiv@dividend+2
  3923  0568  0847               	movf	dtoa@n+3,w
  3924  0569  00AB               	movwf	___aodiv@dividend+3
  3925  056A  0848               	movf	dtoa@n+4,w
  3926  056B  00AC               	movwf	___aodiv@dividend+4
  3927  056C  0849               	movf	dtoa@n+5,w
  3928  056D  00AD               	movwf	___aodiv@dividend+5
  3929  056E  084A               	movf	dtoa@n+6,w
  3930  056F  00AE               	movwf	___aodiv@dividend+6
  3931  0570  084B               	movf	dtoa@n+7,w
  3932  0571  00AF               	movwf	___aodiv@dividend+7
  3933  0572  3183  2395  3184   	fcall	___aodiv
  3934  0575  0020               	movlb	0	; select bank0
  3935  0576  0820               	movf	?___aodiv,w
  3936  0577  00C4               	movwf	dtoa@n
  3937  0578  0821               	movf	?___aodiv+1,w
  3938  0579  00C5               	movwf	dtoa@n+1
  3939  057A  0822               	movf	?___aodiv+2,w
  3940  057B  00C6               	movwf	dtoa@n+2
  3941  057C  0823               	movf	?___aodiv+3,w
  3942  057D  00C7               	movwf	dtoa@n+3
  3943  057E  0824               	movf	?___aodiv+4,w
  3944  057F  00C8               	movwf	dtoa@n+4
  3945  0580  0825               	movf	?___aodiv+5,w
  3946  0581  00C9               	movwf	dtoa@n+5
  3947  0582  0826               	movf	?___aodiv+6,w
  3948  0583  00CA               	movwf	dtoa@n+6
  3949  0584  0827               	movf	?___aodiv+7,w
  3950  0585  00CB               	movwf	dtoa@n+7
  3951  0586                     l751:	
  3952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
  3953                           
  3954                           
  3955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3956  0586  0020               	movlb	0	; select bank0
  3957  0587  084D               	movf	dtoa@i+1,w
  3958  0588  3A80               	xorlw	128
  3959  0589  00B8               	movwf	??_dtoa
  3960  058A  3080               	movlw	128
  3961  058B  0238               	subwf	??_dtoa,w
  3962  058C  1D03               	skipz
  3963  058D  2D90               	goto	u1335
  3964  058E  3001               	movlw	1
  3965  058F  024C               	subwf	dtoa@i,w
  3966  0590                     u1335:
  3967  0590  1C03               	skipc
  3968  0591  2D93               	goto	u1331
  3969  0592  2D94               	goto	u1330
  3970  0593                     u1331:
  3971  0593  2DC1               	goto	l1609
  3972  0594                     u1330:
  3973  0594                     l1601:
  3974  0594  0020               	movlb	0	; select bank0
  3975  0595  0844               	movf	dtoa@n,w
  3976  0596  0445               	iorwf	dtoa@n+1,w
  3977  0597  0446               	iorwf	dtoa@n+2,w
  3978  0598  0447               	iorwf	dtoa@n+3,w
  3979  0599  0448               	iorwf	dtoa@n+4,w
  3980  059A  0449               	iorwf	dtoa@n+5,w
  3981  059B  044A               	iorwf	dtoa@n+6,w
  3982  059C  044B               	iorwf	dtoa@n+7,w
  3983  059D  1D03               	skipz
  3984  059E  2DA0               	goto	u1341
  3985  059F  2DA1               	goto	u1340
  3986  05A0                     u1341:
  3987  05A0  2D1D               	goto	l1591
  3988  05A1                     u1340:
  3989  05A1                     l1603:
  3990  05A1  083F               	movf	dtoa@p+1,w
  3991  05A2  3A80               	xorlw	128
  3992  05A3  00B8               	movwf	??_dtoa
  3993  05A4  3080               	movlw	128
  3994  05A5  0238               	subwf	??_dtoa,w
  3995  05A6  1D03               	skipz
  3996  05A7  2DAA               	goto	u1355
  3997  05A8  3001               	movlw	1
  3998  05A9  023E               	subwf	dtoa@p,w
  3999  05AA                     u1355:
  4000  05AA  1803               	skipnc
  4001  05AB  2DAD               	goto	u1351
  4002  05AC  2DAE               	goto	u1350
  4003  05AD                     u1351:
  4004  05AD  2D1D               	goto	l1591
  4005  05AE                     u1350:
  4006  05AE                     l1605:
  4007  05AE  0020               	movlb	0	; select bank0
  4008  05AF  0841               	movf	dtoa@w+1,w
  4009  05B0  3A80               	xorlw	128
  4010  05B1  00B8               	movwf	??_dtoa
  4011  05B2  3080               	movlw	128
  4012  05B3  0238               	subwf	??_dtoa,w
  4013  05B4  1D03               	skipz
  4014  05B5  2DB8               	goto	u1365
  4015  05B6  3001               	movlw	1
  4016  05B7  0240               	subwf	dtoa@w,w
  4017  05B8                     u1365:
  4018  05B8  1C03               	skipc
  4019  05B9  2DBB               	goto	u1361
  4020  05BA  2DBC               	goto	u1360
  4021  05BB                     u1361:
  4022  05BB  2DC1               	goto	l1609
  4023  05BC                     u1360:
  4024  05BC                     l1607:
  4025  05BC  0020               	movlb	0	; select bank0
  4026  05BD  18EE               	btfsc	_flags,1
  4027  05BE  2DC0               	goto	u1371
  4028  05BF  2DC1               	goto	u1370
  4029  05C0                     u1371:
  4030  05C0  2D1D               	goto	l1591
  4031  05C1                     u1370:
  4032  05C1                     l1609:
  4033                           
  4034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4035  05C1  0020               	movlb	0	; select bank0
  4036  05C2  0842               	movf	dtoa@s,w
  4037  05C3  0443               	iorwf	dtoa@s+1,w
  4038  05C4  1D03               	btfss	3,2
  4039  05C5  2DC7               	goto	u1381
  4040  05C6  2DC8               	goto	u1380
  4041  05C7                     u1381:
  4042  05C7  2DCC               	goto	l1613
  4043  05C8                     u1380:
  4044  05C8                     l1611:
  4045  05C8  1D6E               	btfss	_flags,2
  4046  05C9  2DCB               	goto	u1391
  4047  05CA  2DCC               	goto	u1390
  4048  05CB                     u1391:
  4049  05CB  2DE8               	goto	l1623
  4050  05CC                     u1390:
  4051  05CC                     l1613:
  4052                           
  4053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  4054  05CC  30FF               	movlw	255
  4055  05CD  07CC               	addwf	dtoa@i,f
  4056  05CE  30FF               	movlw	255
  4057  05CF  3DCD               	addwfc	dtoa@i+1,f
  4058  05D0                     l1615:
  4059                           
  4060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4061  05D0  0842               	movf	dtoa@s,w
  4062  05D1  0443               	iorwf	dtoa@s+1,w
  4063  05D2  1D03               	btfss	3,2
  4064  05D3  2DD5               	goto	u1401
  4065  05D4  2DD6               	goto	u1400
  4066  05D5                     u1401:
  4067  05D5  2DDB               	goto	l1619
  4068  05D6                     u1400:
  4069  05D6                     l1617:
  4070  05D6  302B               	movlw	43
  4071  05D7  00BB               	movwf	_dtoa$611
  4072  05D8  3000               	movlw	0
  4073  05D9  00BC               	movwf	_dtoa$611+1
  4074  05DA  2DDF               	goto	l1621
  4075  05DB                     l1619:
  4076  05DB  302D               	movlw	45
  4077  05DC  00BB               	movwf	_dtoa$611
  4078  05DD  3000               	movlw	0
  4079  05DE  00BC               	movwf	_dtoa$611+1
  4080  05DF                     l1621:
  4081  05DF  083B               	movf	_dtoa$611,w
  4082  05E0  00B8               	movwf	??_dtoa
  4083  05E1  084C               	movf	dtoa@i,w
  4084  05E2  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4085  05E3  0086               	movwf	6
  4086  05E4  3001               	movlw	1	; select bank2/3
  4087  05E5  0087               	movwf	7
  4088  05E6  0838               	movf	??_dtoa,w
  4089  05E7  0081               	movwf	1
  4090  05E8                     l1623:
  4091                           
  4092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4093  05E8  084C               	movf	dtoa@i,w
  4094  05E9  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4095  05EA  00B8               	movwf	??_dtoa
  4096  05EB  0838               	movf	??_dtoa,w
  4097  05EC  00A4               	movwf	pad@buf
  4098  05ED  0841               	movf	dtoa@w+1,w
  4099  05EE  00A6               	movwf	pad@p+1
  4100  05EF  0840               	movf	dtoa@w,w
  4101  05F0  00A5               	movwf	pad@p
  4102  05F1  083D               	movf	dtoa@fp,w
  4103  05F2  3181  211B  3184   	fcall	_pad
  4104  05F5  0020               	movlb	0	; select bank0
  4105  05F6  0825               	movf	?_pad+1,w
  4106  05F7  00B1               	movwf	?_dtoa+1
  4107  05F8  0824               	movf	?_pad,w
  4108  05F9  00B0               	movwf	?_dtoa
  4109  05FA                     l765:
  4110  05FA  0008               	return
  4111  05FB                     __end_of_dtoa:
  4112                           
  4113                           	psect	text8
  4114  011B                     __ptext8:	
  4115 ;; *************** function _pad *****************
  4116 ;; Defined at:
  4117 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  fp              1    wreg     PTR struct _IO_FILE
  4120 ;;		 -> sprintf@f(5), 
  4121 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  4122 ;;		 -> dbuf(32), 
  4123 ;;  p               2    5[BANK0 ] int 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  4126 ;;		 -> sprintf@f(5), 
  4127 ;;  w               2    9[BANK0 ] int 
  4128 ;;  i               2    7[BANK0 ] int 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  2    4[BANK0 ] int 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4138 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4139 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4140 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4141 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4142 ;;Total ram usage:        9 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    3
  4145 ;; This function calls:
  4146 ;;		_fputc
  4147 ;;		_fputs
  4148 ;;		_strlen
  4149 ;; This function is called by:
  4150 ;;		_dtoa
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           
  4155                           ;psect for function _pad
  4156  011B                     _pad:
  4157                           
  4158                           ;incstack = 0
  4159                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4160                           ;pad@fp stored from wreg
  4161  011B  0020               	movlb	0	; select bank0
  4162  011C  00AB               	movwf	pad@fp
  4163  011D                     l1529:
  4164                           
  4165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4166  011D  1C6E               	btfss	_flags,0
  4167  011E  2920               	goto	u1191
  4168  011F  2921               	goto	u1190
  4169  0120                     u1191:
  4170  0120  2929               	goto	l1533
  4171  0121                     u1190:
  4172  0121                     l1531:
  4173                           
  4174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4175  0121  082B               	movf	pad@fp,w
  4176  0122  00FC               	movwf	??_pad
  4177  0123  087C               	movf	??_pad,w
  4178  0124  00F8               	movwf	fputs@fp
  4179  0125  0824               	movf	pad@buf,w
  4180  0126  318F  27A9  3181   	fcall	_fputs
  4181  0129                     l1533:
  4182                           
  4183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4184  0129  0020               	movlb	0	; select bank0
  4185  012A  1BA6               	btfsc	pad@p+1,7
  4186  012B  292D               	goto	u1201
  4187  012C  292E               	goto	u1200
  4188  012D                     u1201:
  4189  012D  2933               	goto	l1537
  4190  012E                     u1200:
  4191  012E                     l1535:
  4192  012E  0826               	movf	pad@p+1,w
  4193  012F  00AA               	movwf	pad@w+1
  4194  0130  0825               	movf	pad@p,w
  4195  0131  00A9               	movwf	pad@w
  4196  0132  2935               	goto	l734
  4197  0133                     l1537:
  4198  0133  01A9               	clrf	pad@w
  4199  0134  01AA               	clrf	pad@w+1
  4200  0135                     l734:
  4201                           
  4202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4203  0135  01A7               	clrf	pad@i
  4204  0136  01A8               	clrf	pad@i+1
  4205                           
  4206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4207  0137  2949               	goto	l1543
  4208  0138                     l1539:
  4209                           
  4210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4211  0138  3020               	movlw	32
  4212  0139  00F0               	movwf	fputc@c
  4213  013A  3000               	movlw	0
  4214  013B  00F1               	movwf	fputc@c+1
  4215  013C  0020               	movlb	0	; select bank0
  4216  013D  082B               	movf	pad@fp,w
  4217  013E  00FC               	movwf	??_pad
  4218  013F  087C               	movf	??_pad,w
  4219  0140  00F2               	movwf	fputc@fp
  4220  0141  3180  2079  3181   	fcall	_fputc
  4221  0144                     l1541:
  4222                           
  4223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4224  0144  3001               	movlw	1
  4225  0145  0020               	movlb	0	; select bank0
  4226  0146  07A7               	addwf	pad@i,f
  4227  0147  3000               	movlw	0
  4228  0148  3DA8               	addwfc	pad@i+1,f
  4229  0149                     l1543:
  4230                           
  4231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4232  0149  0828               	movf	pad@i+1,w
  4233  014A  3A80               	xorlw	128
  4234  014B  00FC               	movwf	??_pad
  4235  014C  082A               	movf	pad@w+1,w
  4236  014D  3A80               	xorlw	128
  4237  014E  027C               	subwf	??_pad,w
  4238  014F  1D03               	skipz
  4239  0150  2953               	goto	u1215
  4240  0151  0829               	movf	pad@w,w
  4241  0152  0227               	subwf	pad@i,w
  4242  0153                     u1215:
  4243  0153  1C03               	skipc
  4244  0154  2956               	goto	u1211
  4245  0155  2957               	goto	u1210
  4246  0156                     u1211:
  4247  0156  2938               	goto	l1539
  4248  0157                     u1210:
  4249  0157                     l737:
  4250                           
  4251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4252  0157  0020               	movlb	0	; select bank0
  4253  0158  186E               	btfsc	_flags,0
  4254  0159  295B               	goto	u1221
  4255  015A  295C               	goto	u1220
  4256  015B                     u1221:
  4257  015B  2964               	goto	l1547
  4258  015C                     u1220:
  4259  015C                     l1545:
  4260                           
  4261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4262  015C  082B               	movf	pad@fp,w
  4263  015D  00FC               	movwf	??_pad
  4264  015E  087C               	movf	??_pad,w
  4265  015F  00F8               	movwf	fputs@fp
  4266  0160  0824               	movf	pad@buf,w
  4267  0161  318F  27A9  3181   	fcall	_fputs
  4268  0164                     l1547:
  4269                           
  4270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4271  0164  0020               	movlb	0	; select bank0
  4272  0165  0824               	movf	pad@buf,w
  4273  0166  318E  2680  3181   	fcall	_strlen
  4274  0169  0020               	movlb	0	; select bank0
  4275  016A  0829               	movf	pad@w,w
  4276  016B  0770               	addwf	?_strlen,w
  4277  016C  00A4               	movwf	?_pad
  4278  016D  082A               	movf	pad@w+1,w
  4279  016E  3D71               	addwfc	?_strlen+1,w
  4280  016F  00A5               	movwf	?_pad+1
  4281  0170                     l739:
  4282  0170  0008               	return
  4283  0171                     __end_of_pad:
  4284                           
  4285                           	psect	text9
  4286  0E80                     __ptext9:	
  4287 ;; *************** function _strlen *****************
  4288 ;; Defined at:
  4289 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  s               1    wreg     PTR const unsigned char 
  4292 ;;		 -> dbuf(32), 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  s               1    4[COMMON] PTR const unsigned char 
  4295 ;;		 -> dbuf(32), 
  4296 ;;  a               1    3[COMMON] PTR const unsigned char 
  4297 ;;		 -> dbuf(32), 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  2    0[COMMON] unsigned int 
  4300 ;; Registers used:
  4301 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4307 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4308 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4309 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4310 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4311 ;;Total ram usage:        5 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_pad
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           
  4321                           ;psect for function _strlen
  4322  0E80                     _strlen:
  4323                           
  4324                           ;incstack = 0
  4325                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4326                           ;strlen@s stored from wreg
  4327  0E80  00F4               	movwf	strlen@s
  4328  0E81                     l1451:
  4329  0E81  0874               	movf	strlen@s,w
  4330  0E82  00F2               	movwf	??_strlen
  4331  0E83  0872               	movf	??_strlen,w
  4332  0E84  00F3               	movwf	strlen@a
  4333  0E85  2E8A               	goto	l1455
  4334  0E86                     l1453:
  4335  0E86  3001               	movlw	1
  4336  0E87  00F2               	movwf	??_strlen
  4337  0E88  0872               	movf	??_strlen,w
  4338  0E89  07F4               	addwf	strlen@s,f
  4339  0E8A                     l1455:
  4340  0E8A  0874               	movf	strlen@s,w
  4341  0E8B  0086               	movwf	6
  4342  0E8C  3001               	movlw	1	; select bank2/3
  4343  0E8D  0087               	movwf	7
  4344  0E8E  0801               	movf	1,w
  4345  0E8F  1D03               	btfss	3,2
  4346  0E90  2E92               	goto	u971
  4347  0E91  2E93               	goto	u970
  4348  0E92                     u971:
  4349  0E92  2E86               	goto	l1453
  4350  0E93                     u970:
  4351  0E93                     l1457:
  4352  0E93  0873               	movf	strlen@a,w
  4353  0E94  0274               	subwf	strlen@s,w
  4354  0E95  00F0               	movwf	?_strlen
  4355  0E96  01F1               	clrf	?_strlen+1
  4356  0E97  1BF0               	btfsc	?_strlen,7
  4357  0E98  03F1               	decf	?_strlen+1,f
  4358  0E99                     l815:
  4359  0E99  0008               	return
  4360  0E9A                     __end_of_strlen:
  4361                           
  4362                           	psect	text10
  4363  0FA9                     __ptext10:	
  4364 ;; *************** function _fputs *****************
  4365 ;; Defined at:
  4366 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;  s               1    wreg     PTR const unsigned char 
  4369 ;;		 -> dbuf(32), 
  4370 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  4371 ;;		 -> sprintf@f(5), 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4374 ;;		 -> dbuf(32), 
  4375 ;;  i               2    1[BANK0 ] int 
  4376 ;;  c               1    0[BANK0 ] unsigned char 
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  2    8[COMMON] int 
  4379 ;; Registers used:
  4380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4386 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4387 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4388 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4389 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4390 ;;Total ram usage:        8 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    2
  4393 ;; This function calls:
  4394 ;;		_fputc
  4395 ;; This function is called by:
  4396 ;;		_pad
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           
  4401                           ;psect for function _fputs
  4402  0FA9                     _fputs:
  4403                           
  4404                           ;incstack = 0
  4405                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4406                           ;fputs@s stored from wreg
  4407  0FA9  0020               	movlb	0	; select bank0
  4408  0FAA  00A3               	movwf	fputs@s
  4409  0FAB                     l1443:
  4410  0FAB  01A1               	clrf	fputs@i
  4411  0FAC  01A2               	clrf	fputs@i+1
  4412  0FAD  2FC1               	goto	l1449
  4413  0FAE                     l1445:
  4414  0FAE  0820               	movf	fputs@c,w
  4415  0FAF  00F9               	movwf	??_fputs
  4416  0FB0  01FA               	clrf	??_fputs+1
  4417  0FB1  0879               	movf	??_fputs,w
  4418  0FB2  00F0               	movwf	fputc@c
  4419  0FB3  087A               	movf	??_fputs+1,w
  4420  0FB4  00F1               	movwf	fputc@c+1
  4421  0FB5  0878               	movf	fputs@fp,w
  4422  0FB6  00FB               	movwf	??_fputs+2
  4423  0FB7  087B               	movf	??_fputs+2,w
  4424  0FB8  00F2               	movwf	fputc@fp
  4425  0FB9  3180  2079  318F   	fcall	_fputc
  4426  0FBC                     l1447:
  4427  0FBC  3001               	movlw	1
  4428  0FBD  0020               	movlb	0	; select bank0
  4429  0FBE  07A1               	addwf	fputs@i,f
  4430  0FBF  3000               	movlw	0
  4431  0FC0  3DA2               	addwfc	fputs@i+1,f
  4432  0FC1                     l1449:
  4433  0FC1  0821               	movf	fputs@i,w
  4434  0FC2  0723               	addwf	fputs@s,w
  4435  0FC3  00F9               	movwf	??_fputs
  4436  0FC4  0879               	movf	??_fputs,w
  4437  0FC5  0086               	movwf	6
  4438  0FC6  3001               	movlw	1	; select bank2/3
  4439  0FC7  0087               	movwf	7
  4440  0FC8  0801               	movf	1,w
  4441  0FC9  00FA               	movwf	??_fputs+1
  4442  0FCA  087A               	movf	??_fputs+1,w
  4443  0FCB  00A0               	movwf	fputs@c
  4444  0FCC  0820               	movf	fputs@c,w
  4445  0FCD  1D03               	btfss	3,2
  4446  0FCE  2FD0               	goto	u961
  4447  0FCF  2FD1               	goto	u960
  4448  0FD0                     u961:
  4449  0FD0  2FAE               	goto	l1445
  4450  0FD1                     u960:
  4451  0FD1                     l806:
  4452  0FD1  0008               	return
  4453  0FD2                     __end_of_fputs:
  4454                           
  4455                           	psect	text11
  4456  0079                     __ptext11:	
  4457 ;; *************** function _fputc *****************
  4458 ;; Defined at:
  4459 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  c               2    0[COMMON] int 
  4462 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  4463 ;;		 -> sprintf@f(5), 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;		None
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  2    0[COMMON] int 
  4468 ;; Registers used:
  4469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4475 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4477 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4478 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4479 ;;Total ram usage:        8 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    1
  4482 ;; This function calls:
  4483 ;;		_putch
  4484 ;; This function is called by:
  4485 ;;		_pad
  4486 ;;		_vfpfcnvrt
  4487 ;;		_fputs
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           
  4492                           ;psect for function _fputc
  4493  0079                     _fputc:
  4494  0079                     l1427:	
  4495                           ;incstack = 0
  4496                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4497                           
  4498  0079  0872               	movf	fputc@fp,w
  4499  007A  1903               	btfsc	3,2
  4500  007B  287D               	goto	u921
  4501  007C  287E               	goto	u920
  4502  007D                     u921:
  4503  007D  2883               	goto	l1431
  4504  007E                     u920:
  4505  007E                     l1429:
  4506  007E  0872               	movf	fputc@fp,w
  4507  007F  1D03               	btfss	3,2
  4508  0080  2882               	goto	u931
  4509  0081  2883               	goto	u930
  4510  0082                     u931:
  4511  0082  2888               	goto	l1433
  4512  0083                     u930:
  4513  0083                     l1431:
  4514  0083  0870               	movf	fputc@c,w
  4515  0084  3180  2004  3180   	fcall	_putch
  4516  0087  28C7               	goto	l798
  4517  0088                     l1433:
  4518  0088  0872               	movf	fputc@fp,w
  4519  0089  3E03               	addlw	3
  4520  008A  0086               	movwf	6
  4521  008B  0187               	clrf	7
  4522  008C  0016               	moviw fsr1++
  4523  008D  0401               	iorwf	1,w
  4524  008E  1903               	btfsc	3,2
  4525  008F  2891               	goto	u941
  4526  0090  2892               	goto	u940
  4527  0091                     u941:
  4528  0091  28AF               	goto	l1437
  4529  0092                     u940:
  4530  0092                     l1435:
  4531  0092  0872               	movf	fputc@fp,w
  4532  0093  3E03               	addlw	3
  4533  0094  0086               	movwf	6
  4534  0095  0187               	clrf	7
  4535  0096  3F40               	moviw [0]fsr1
  4536  0097  00F3               	movwf	??_fputc
  4537  0098  3F41               	moviw [1]fsr1
  4538  0099  00F4               	movwf	??_fputc+1
  4539  009A  0A72               	incf	fputc@fp,w
  4540  009B  0086               	movwf	6
  4541  009C  0187               	clrf	7
  4542  009D  3F40               	moviw [0]fsr1
  4543  009E  00F5               	movwf	??_fputc+2
  4544  009F  3F41               	moviw [1]fsr1
  4545  00A0  00F6               	movwf	??_fputc+3
  4546  00A1  0876               	movf	??_fputc+3,w
  4547  00A2  3A80               	xorlw	128
  4548  00A3  00F7               	movwf	??_fputc+4
  4549  00A4  0874               	movf	??_fputc+1,w
  4550  00A5  3A80               	xorlw	128
  4551  00A6  0277               	subwf	??_fputc+4,w
  4552  00A7  1D03               	skipz
  4553  00A8  28AB               	goto	u955
  4554  00A9  0873               	movf	??_fputc,w
  4555  00AA  0275               	subwf	??_fputc+2,w
  4556  00AB                     u955:
  4557  00AB  1803               	skipnc
  4558  00AC  28AE               	goto	u951
  4559  00AD  28AF               	goto	u950
  4560  00AE                     u951:
  4561  00AE  28C7               	goto	l798
  4562  00AF                     u950:
  4563  00AF                     l1437:
  4564  00AF  0870               	movf	fputc@c,w
  4565  00B0  00F3               	movwf	??_fputc
  4566  00B1  0872               	movf	fputc@fp,w
  4567  00B2  0086               	movwf	6
  4568  00B3  0187               	clrf	7
  4569  00B4  0A72               	incf	fputc@fp,w
  4570  00B5  0084               	movwf	4
  4571  00B6  0185               	clrf	5
  4572  00B7  0800               	movf	0,w
  4573  00B8  0701               	addwf	1,w
  4574  00B9  00F4               	movwf	??_fputc+1
  4575  00BA  0874               	movf	??_fputc+1,w
  4576  00BB  0086               	movwf	6
  4577  00BC  0187               	clrf	7
  4578  00BD  0873               	movf	??_fputc,w
  4579  00BE  0081               	movwf	1
  4580  00BF                     l1439:
  4581  00BF  0A72               	incf	fputc@fp,w
  4582  00C0  0086               	movwf	6
  4583  00C1  0187               	clrf	7
  4584  00C2  3001               	movlw	1
  4585  00C3  0781               	addwf	1,f
  4586  00C4  3141               	addfsr 1,1
  4587  00C5  1803               	skipnc
  4588  00C6  0A81               	incf	1,f
  4589  00C7                     l798:
  4590  00C7  0008               	return
  4591  00C8                     __end_of_fputc:
  4592                           
  4593                           	psect	text12
  4594  0004                     __ptext12:	
  4595 ;; *************** function _putch *****************
  4596 ;; Defined at:
  4597 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;  c               1    wreg     unsigned char 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;  c               1    0[COMMON] unsigned char 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      void 
  4604 ;; Registers used:
  4605 ;;		wreg
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4615 ;;Total ram usage:        0 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_fputc
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           
  4625                           ;psect for function _putch
  4626  0004                     _putch:
  4627  0004                     l809:	
  4628                           ;incstack = 0
  4629                           ; Regs used in _putch: [wreg]
  4630                           
  4631  0004  0008               	return
  4632  0005                     __end_of_putch:
  4633                           
  4634                           	psect	text13
  4635  0E66                     __ptext13:	
  4636 ;; *************** function _abs *****************
  4637 ;; Defined at:
  4638 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  a               2    3[COMMON] int 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;		None
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  2    3[COMMON] int 
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4655 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4656 ;;Total ram usage:        4 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; This function calls:
  4659 ;;		Nothing
  4660 ;; This function is called by:
  4661 ;;		_dtoa
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           
  4666                           ;psect for function _abs
  4667  0E66                     _abs:
  4668  0E66                     l1551:	
  4669                           ;incstack = 0
  4670                           ; Regs used in _abs: [wreg+status,2+status,0]
  4671                           
  4672  0E66  0874               	movf	abs@a+1,w
  4673  0E67  3A80               	xorlw	128
  4674  0E68  00F5               	movwf	??_abs
  4675  0E69  3080               	movlw	128
  4676  0E6A  0275               	subwf	??_abs,w
  4677  0E6B  1D03               	skipz
  4678  0E6C  2E6F               	goto	u1235
  4679  0E6D  3001               	movlw	1
  4680  0E6E  0273               	subwf	abs@a,w
  4681  0E6F                     u1235:
  4682  0E6F  1803               	skipnc
  4683  0E70  2E72               	goto	u1231
  4684  0E71  2E73               	goto	u1230
  4685  0E72                     u1231:
  4686  0E72  2E7F               	goto	l783
  4687  0E73                     u1230:
  4688  0E73                     l1553:
  4689  0E73  0973               	comf	abs@a,w
  4690  0E74  00F5               	movwf	??_abs
  4691  0E75  0974               	comf	abs@a+1,w
  4692  0E76  00F6               	movwf	??_abs+1
  4693  0E77  0AF5               	incf	??_abs,f
  4694  0E78  1903               	skipnz
  4695  0E79  0AF6               	incf	??_abs+1,f
  4696  0E7A  0875               	movf	??_abs,w
  4697  0E7B  00F3               	movwf	?_abs
  4698  0E7C  0876               	movf	??_abs+1,w
  4699  0E7D  00F4               	movwf	?_abs+1
  4700  0E7E  2E7F               	goto	l786
  4701  0E7F                     l783:
  4702  0E7F                     l786:
  4703  0E7F  0008               	return
  4704  0E80                     __end_of_abs:
  4705                           
  4706                           	psect	text14
  4707  02AB                     __ptext14:	
  4708 ;; *************** function ___aomod *****************
  4709 ;; Defined at:
  4710 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  divisor         8    0[BANK0 ] long long 
  4713 ;;  dividend        8    8[BANK0 ] long long 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;  sign            1    2[COMMON] unsigned char 
  4716 ;;  counter         1    1[COMMON] unsigned char 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  8    0[BANK0 ] long long 
  4719 ;; Registers used:
  4720 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4726 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4727 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4728 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4729 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4730 ;;Total ram usage:       19 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_dtoa
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           
  4740                           ;psect for function ___aomod
  4741  02AB                     ___aomod:
  4742  02AB                     l1499:	
  4743                           ;incstack = 0
  4744                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4745                           
  4746  02AB  01F2               	clrf	___aomod@sign
  4747  02AC                     l1501:
  4748  02AC  3028               	movlw	low ___aomod@dividend
  4749  02AD  0086               	movwf	6
  4750  02AE  3000               	movlw	high ___aomod@dividend
  4751  02AF  0087               	movwf	7
  4752  02B0  3F47               	moviw [7]fsr1
  4753  02B1  00F0               	movwf	??___aomod
  4754  02B2  1FF0               	btfss	??___aomod,7
  4755  02B3  2AB5               	goto	u1091
  4756  02B4  2AB6               	goto	u1090
  4757  02B5                     u1091:
  4758  02B5  2AD7               	goto	l1505
  4759  02B6                     u1090:
  4760  02B6                     l1503:
  4761  02B6  0020               	movlb	0	; select bank0
  4762  02B7  09A8               	comf	___aomod@dividend,f
  4763  02B8  09A9               	comf	___aomod@dividend+1,f
  4764  02B9  09AA               	comf	___aomod@dividend+2,f
  4765  02BA  09AB               	comf	___aomod@dividend+3,f
  4766  02BB  09AC               	comf	___aomod@dividend+4,f
  4767  02BC  09AD               	comf	___aomod@dividend+5,f
  4768  02BD  09AE               	comf	___aomod@dividend+6,f
  4769  02BE  09AF               	comf	___aomod@dividend+7,f
  4770  02BF  0AA8               	incf	___aomod@dividend,f
  4771  02C0  1D03               	skipz
  4772  02C1  2AD5               	goto	u110lld
  4773  02C2  0AA9               	incf	___aomod@dividend+1,f
  4774  02C3  1D03               	skipz
  4775  02C4  2AD5               	goto	u110lld
  4776  02C5  0AAA               	incf	___aomod@dividend+2,f
  4777  02C6  1D03               	skipz
  4778  02C7  2AD5               	goto	u110lld
  4779  02C8  0AAB               	incf	___aomod@dividend+3,f
  4780  02C9  1D03               	skipz
  4781  02CA  2AD5               	goto	u110lld
  4782  02CB  0AAC               	incf	___aomod@dividend+4,f
  4783  02CC  1D03               	skipz
  4784  02CD  2AD5               	goto	u110lld
  4785  02CE  0AAD               	incf	___aomod@dividend+5,f
  4786  02CF  1D03               	skipz
  4787  02D0  2AD5               	goto	u110lld
  4788  02D1  0AAE               	incf	___aomod@dividend+6,f
  4789  02D2  1D03               	skipz
  4790  02D3  2AD5               	goto	u110lld
  4791  02D4  0AAF               	incf	___aomod@dividend+7,f
  4792  02D5                     u110lld:
  4793  02D5  01F2               	clrf	___aomod@sign
  4794  02D6  0AF2               	incf	___aomod@sign,f
  4795  02D7                     l1505:
  4796  02D7  3020               	movlw	low ___aomod@divisor
  4797  02D8  0086               	movwf	6
  4798  02D9  3000               	movlw	high ___aomod@divisor
  4799  02DA  0087               	movwf	7
  4800  02DB  3F47               	moviw [7]fsr1
  4801  02DC  00F0               	movwf	??___aomod
  4802  02DD  1FF0               	btfss	??___aomod,7
  4803  02DE  2AE0               	goto	u1111
  4804  02DF  2AE1               	goto	u1110
  4805  02E0                     u1111:
  4806  02E0  2B00               	goto	l1509
  4807  02E1                     u1110:
  4808  02E1                     l1507:
  4809  02E1  0020               	movlb	0	; select bank0
  4810  02E2  09A0               	comf	___aomod@divisor,f
  4811  02E3  09A1               	comf	___aomod@divisor+1,f
  4812  02E4  09A2               	comf	___aomod@divisor+2,f
  4813  02E5  09A3               	comf	___aomod@divisor+3,f
  4814  02E6  09A4               	comf	___aomod@divisor+4,f
  4815  02E7  09A5               	comf	___aomod@divisor+5,f
  4816  02E8  09A6               	comf	___aomod@divisor+6,f
  4817  02E9  09A7               	comf	___aomod@divisor+7,f
  4818  02EA  0AA0               	incf	___aomod@divisor,f
  4819  02EB  1D03               	skipz
  4820  02EC  2B00               	goto	u112lld
  4821  02ED  0AA1               	incf	___aomod@divisor+1,f
  4822  02EE  1D03               	skipz
  4823  02EF  2B00               	goto	u112lld
  4824  02F0  0AA2               	incf	___aomod@divisor+2,f
  4825  02F1  1D03               	skipz
  4826  02F2  2B00               	goto	u112lld
  4827  02F3  0AA3               	incf	___aomod@divisor+3,f
  4828  02F4  1D03               	skipz
  4829  02F5  2B00               	goto	u112lld
  4830  02F6  0AA4               	incf	___aomod@divisor+4,f
  4831  02F7  1D03               	skipz
  4832  02F8  2B00               	goto	u112lld
  4833  02F9  0AA5               	incf	___aomod@divisor+5,f
  4834  02FA  1D03               	skipz
  4835  02FB  2B00               	goto	u112lld
  4836  02FC  0AA6               	incf	___aomod@divisor+6,f
  4837  02FD  1D03               	skipz
  4838  02FE  2B00               	goto	u112lld
  4839  02FF  0AA7               	incf	___aomod@divisor+7,f
  4840  0300                     u112lld:
  4841  0300                     l1509:
  4842  0300  0020               	movlb	0	; select bank0
  4843  0301  0820               	movf	___aomod@divisor,w
  4844  0302  0421               	iorwf	___aomod@divisor+1,w
  4845  0303  0422               	iorwf	___aomod@divisor+2,w
  4846  0304  0423               	iorwf	___aomod@divisor+3,w
  4847  0305  0424               	iorwf	___aomod@divisor+4,w
  4848  0306  0425               	iorwf	___aomod@divisor+5,w
  4849  0307  0426               	iorwf	___aomod@divisor+6,w
  4850  0308  0427               	iorwf	___aomod@divisor+7,w
  4851  0309  1903               	skipnz
  4852  030A  2B0C               	goto	u1131
  4853  030B  2B0D               	goto	u1130
  4854  030C                     u1131:
  4855  030C  2B60               	goto	l1525
  4856  030D                     u1130:
  4857  030D                     l1511:
  4858  030D  01F1               	clrf	___aomod@counter
  4859  030E  0AF1               	incf	___aomod@counter,f
  4860  030F  2B1C               	goto	l1517
  4861  0310                     l1513:
  4862  0310  35A0               	lslf	___aomod@divisor,f
  4863  0311  0DA1               	rlf	___aomod@divisor+1,f
  4864  0312  0DA2               	rlf	___aomod@divisor+2,f
  4865  0313  0DA3               	rlf	___aomod@divisor+3,f
  4866  0314  0DA4               	rlf	___aomod@divisor+4,f
  4867  0315  0DA5               	rlf	___aomod@divisor+5,f
  4868  0316  0DA6               	rlf	___aomod@divisor+6,f
  4869  0317  0DA7               	rlf	___aomod@divisor+7,f
  4870  0318                     l1515:
  4871  0318  3001               	movlw	1
  4872  0319  00F0               	movwf	??___aomod
  4873  031A  0870               	movf	??___aomod,w
  4874  031B  07F1               	addwf	___aomod@counter,f
  4875  031C                     l1517:
  4876  031C  1FA7               	btfss	___aomod@divisor+7,7
  4877  031D  2B1F               	goto	u1141
  4878  031E  2B20               	goto	u1140
  4879  031F                     u1141:
  4880  031F  2B10               	goto	l1513
  4881  0320                     u1140:
  4882  0320                     l1519:
  4883  0320  0827               	movf	___aomod@divisor+7,w
  4884  0321  022F               	subwf	___aomod@dividend+7,w
  4885  0322  1D03               	skipz
  4886  0323  2B3E               	goto	u1155
  4887  0324  0826               	movf	___aomod@divisor+6,w
  4888  0325  022E               	subwf	___aomod@dividend+6,w
  4889  0326  1D03               	skipz
  4890  0327  2B3E               	goto	u1155
  4891  0328  0825               	movf	___aomod@divisor+5,w
  4892  0329  022D               	subwf	___aomod@dividend+5,w
  4893  032A  1D03               	skipz
  4894  032B  2B3E               	goto	u1155
  4895  032C  0824               	movf	___aomod@divisor+4,w
  4896  032D  022C               	subwf	___aomod@dividend+4,w
  4897  032E  1D03               	skipz
  4898  032F  2B3E               	goto	u1155
  4899  0330  0823               	movf	___aomod@divisor+3,w
  4900  0331  022B               	subwf	___aomod@dividend+3,w
  4901  0332  1D03               	skipz
  4902  0333  2B3E               	goto	u1155
  4903  0334  0822               	movf	___aomod@divisor+2,w
  4904  0335  022A               	subwf	___aomod@dividend+2,w
  4905  0336  1D03               	skipz
  4906  0337  2B3E               	goto	u1155
  4907  0338  0821               	movf	___aomod@divisor+1,w
  4908  0339  0229               	subwf	___aomod@dividend+1,w
  4909  033A  1D03               	skipz
  4910  033B  2B3E               	goto	u1155
  4911  033C  0820               	movf	___aomod@divisor,w
  4912  033D  0228               	subwf	___aomod@dividend,w
  4913  033E                     u1155:
  4914  033E  1C03               	skipc
  4915  033F  2B41               	goto	u1151
  4916  0340  2B42               	goto	u1150
  4917  0341                     u1151:
  4918  0341  2B52               	goto	l1523
  4919  0342                     u1150:
  4920  0342                     l1521:
  4921  0342  0820               	movf	___aomod@divisor,w
  4922  0343  02A8               	subwf	___aomod@dividend,f
  4923  0344  0821               	movf	___aomod@divisor+1,w
  4924  0345  3BA9               	subwfb	___aomod@dividend+1,f
  4925  0346  0822               	movf	___aomod@divisor+2,w
  4926  0347  3BAA               	subwfb	___aomod@dividend+2,f
  4927  0348  0823               	movf	___aomod@divisor+3,w
  4928  0349  3BAB               	subwfb	___aomod@dividend+3,f
  4929  034A  0824               	movf	___aomod@divisor+4,w
  4930  034B  3BAC               	subwfb	___aomod@dividend+4,f
  4931  034C  0825               	movf	___aomod@divisor+5,w
  4932  034D  3BAD               	subwfb	___aomod@dividend+5,f
  4933  034E  0826               	movf	___aomod@divisor+6,w
  4934  034F  3BAE               	subwfb	___aomod@dividend+6,f
  4935  0350  0827               	movf	___aomod@divisor+7,w
  4936  0351  3BAF               	subwfb	___aomod@dividend+7,f
  4937  0352                     l1523:
  4938  0352  36A7               	lsrf	___aomod@divisor+7,f
  4939  0353  0CA6               	rrf	___aomod@divisor+6,f
  4940  0354  0CA5               	rrf	___aomod@divisor+5,f
  4941  0355  0CA4               	rrf	___aomod@divisor+4,f
  4942  0356  0CA3               	rrf	___aomod@divisor+3,f
  4943  0357  0CA2               	rrf	___aomod@divisor+2,f
  4944  0358  0CA1               	rrf	___aomod@divisor+1,f
  4945  0359  0CA0               	rrf	___aomod@divisor,f
  4946  035A  3001               	movlw	1
  4947  035B  02F1               	subwf	___aomod@counter,f
  4948  035C  1D03               	btfss	3,2
  4949  035D  2B5F               	goto	u1161
  4950  035E  2B60               	goto	u1160
  4951  035F                     u1161:
  4952  035F  2B20               	goto	l1519
  4953  0360                     u1160:
  4954  0360                     l1525:
  4955  0360  0872               	movf	___aomod@sign,w
  4956  0361  1903               	btfsc	3,2
  4957  0362  2B64               	goto	u1171
  4958  0363  2B65               	goto	u1170
  4959  0364                     u1171:
  4960  0364  2B83               	goto	l357
  4961  0365                     u1170:
  4962  0365                     l1527:
  4963  0365  09A8               	comf	___aomod@dividend,f
  4964  0366  09A9               	comf	___aomod@dividend+1,f
  4965  0367  09AA               	comf	___aomod@dividend+2,f
  4966  0368  09AB               	comf	___aomod@dividend+3,f
  4967  0369  09AC               	comf	___aomod@dividend+4,f
  4968  036A  09AD               	comf	___aomod@dividend+5,f
  4969  036B  09AE               	comf	___aomod@dividend+6,f
  4970  036C  09AF               	comf	___aomod@dividend+7,f
  4971  036D  0AA8               	incf	___aomod@dividend,f
  4972  036E  1D03               	skipz
  4973  036F  2B83               	goto	u118lld
  4974  0370  0AA9               	incf	___aomod@dividend+1,f
  4975  0371  1D03               	skipz
  4976  0372  2B83               	goto	u118lld
  4977  0373  0AAA               	incf	___aomod@dividend+2,f
  4978  0374  1D03               	skipz
  4979  0375  2B83               	goto	u118lld
  4980  0376  0AAB               	incf	___aomod@dividend+3,f
  4981  0377  1D03               	skipz
  4982  0378  2B83               	goto	u118lld
  4983  0379  0AAC               	incf	___aomod@dividend+4,f
  4984  037A  1D03               	skipz
  4985  037B  2B83               	goto	u118lld
  4986  037C  0AAD               	incf	___aomod@dividend+5,f
  4987  037D  1D03               	skipz
  4988  037E  2B83               	goto	u118lld
  4989  037F  0AAE               	incf	___aomod@dividend+6,f
  4990  0380  1D03               	skipz
  4991  0381  2B83               	goto	u118lld
  4992  0382  0AAF               	incf	___aomod@dividend+7,f
  4993  0383                     u118lld:
  4994  0383                     l357:
  4995  0383  0020               	movlb	0	; select bank0
  4996  0384  0828               	movf	___aomod@dividend,w
  4997  0385  00A0               	movwf	?___aomod
  4998  0386  0829               	movf	___aomod@dividend+1,w
  4999  0387  00A1               	movwf	?___aomod+1
  5000  0388  082A               	movf	___aomod@dividend+2,w
  5001  0389  00A2               	movwf	?___aomod+2
  5002  038A  082B               	movf	___aomod@dividend+3,w
  5003  038B  00A3               	movwf	?___aomod+3
  5004  038C  082C               	movf	___aomod@dividend+4,w
  5005  038D  00A4               	movwf	?___aomod+4
  5006  038E  082D               	movf	___aomod@dividend+5,w
  5007  038F  00A5               	movwf	?___aomod+5
  5008  0390  082E               	movf	___aomod@dividend+6,w
  5009  0391  00A6               	movwf	?___aomod+6
  5010  0392  082F               	movf	___aomod@dividend+7,w
  5011  0393  00A7               	movwf	?___aomod+7
  5012  0394                     l358:
  5013  0394  0008               	return
  5014  0395                     __end_of___aomod:
  5015                           
  5016                           	psect	text15
  5017  0395                     __ptext15:	
  5018 ;; *************** function ___aodiv *****************
  5019 ;; Defined at:
  5020 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  divisor         8    0[BANK0 ] long long 
  5023 ;;  dividend        8    8[BANK0 ] long long 
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;  quotient        8    3[COMMON] long long 
  5026 ;;  sign            1    2[COMMON] unsigned char 
  5027 ;;  counter         1    1[COMMON] unsigned char 
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  8    0[BANK0 ] long long 
  5030 ;; Registers used:
  5031 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5037 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5038 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5039 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5040 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5041 ;;Total ram usage:       27 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_dtoa
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           
  5051                           ;psect for function ___aodiv
  5052  0395                     ___aodiv:
  5053  0395                     l1461:	
  5054                           ;incstack = 0
  5055                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  5056                           
  5057  0395  01F2               	clrf	___aodiv@sign
  5058  0396                     l1463:
  5059  0396  3020               	movlw	low ___aodiv@divisor
  5060  0397  0086               	movwf	6
  5061  0398  3000               	movlw	high ___aodiv@divisor
  5062  0399  0087               	movwf	7
  5063  039A  3F47               	moviw [7]fsr1
  5064  039B  00F0               	movwf	??___aodiv
  5065  039C  1FF0               	btfss	??___aodiv,7
  5066  039D  2B9F               	goto	u981
  5067  039E  2BA0               	goto	u980
  5068  039F                     u981:
  5069  039F  2BC1               	goto	l1467
  5070  03A0                     u980:
  5071  03A0                     l1465:
  5072  03A0  0020               	movlb	0	; select bank0
  5073  03A1  09A0               	comf	___aodiv@divisor,f
  5074  03A2  09A1               	comf	___aodiv@divisor+1,f
  5075  03A3  09A2               	comf	___aodiv@divisor+2,f
  5076  03A4  09A3               	comf	___aodiv@divisor+3,f
  5077  03A5  09A4               	comf	___aodiv@divisor+4,f
  5078  03A6  09A5               	comf	___aodiv@divisor+5,f
  5079  03A7  09A6               	comf	___aodiv@divisor+6,f
  5080  03A8  09A7               	comf	___aodiv@divisor+7,f
  5081  03A9  0AA0               	incf	___aodiv@divisor,f
  5082  03AA  1D03               	skipz
  5083  03AB  2BBF               	goto	u99lld
  5084  03AC  0AA1               	incf	___aodiv@divisor+1,f
  5085  03AD  1D03               	skipz
  5086  03AE  2BBF               	goto	u99lld
  5087  03AF  0AA2               	incf	___aodiv@divisor+2,f
  5088  03B0  1D03               	skipz
  5089  03B1  2BBF               	goto	u99lld
  5090  03B2  0AA3               	incf	___aodiv@divisor+3,f
  5091  03B3  1D03               	skipz
  5092  03B4  2BBF               	goto	u99lld
  5093  03B5  0AA4               	incf	___aodiv@divisor+4,f
  5094  03B6  1D03               	skipz
  5095  03B7  2BBF               	goto	u99lld
  5096  03B8  0AA5               	incf	___aodiv@divisor+5,f
  5097  03B9  1D03               	skipz
  5098  03BA  2BBF               	goto	u99lld
  5099  03BB  0AA6               	incf	___aodiv@divisor+6,f
  5100  03BC  1D03               	skipz
  5101  03BD  2BBF               	goto	u99lld
  5102  03BE  0AA7               	incf	___aodiv@divisor+7,f
  5103  03BF                     u99lld:
  5104  03BF  01F2               	clrf	___aodiv@sign
  5105  03C0  0AF2               	incf	___aodiv@sign,f
  5106  03C1                     l1467:
  5107  03C1  3028               	movlw	low ___aodiv@dividend
  5108  03C2  0086               	movwf	6
  5109  03C3  3000               	movlw	high ___aodiv@dividend
  5110  03C4  0087               	movwf	7
  5111  03C5  3F47               	moviw [7]fsr1
  5112  03C6  00F0               	movwf	??___aodiv
  5113  03C7  1FF0               	btfss	??___aodiv,7
  5114  03C8  2BCA               	goto	u1001
  5115  03C9  2BCB               	goto	u1000
  5116  03CA                     u1001:
  5117  03CA  2BEE               	goto	l1473
  5118  03CB                     u1000:
  5119  03CB                     l1469:
  5120  03CB  0020               	movlb	0	; select bank0
  5121  03CC  09A8               	comf	___aodiv@dividend,f
  5122  03CD  09A9               	comf	___aodiv@dividend+1,f
  5123  03CE  09AA               	comf	___aodiv@dividend+2,f
  5124  03CF  09AB               	comf	___aodiv@dividend+3,f
  5125  03D0  09AC               	comf	___aodiv@dividend+4,f
  5126  03D1  09AD               	comf	___aodiv@dividend+5,f
  5127  03D2  09AE               	comf	___aodiv@dividend+6,f
  5128  03D3  09AF               	comf	___aodiv@dividend+7,f
  5129  03D4  0AA8               	incf	___aodiv@dividend,f
  5130  03D5  1D03               	skipz
  5131  03D6  2BEA               	goto	u101lld
  5132  03D7  0AA9               	incf	___aodiv@dividend+1,f
  5133  03D8  1D03               	skipz
  5134  03D9  2BEA               	goto	u101lld
  5135  03DA  0AAA               	incf	___aodiv@dividend+2,f
  5136  03DB  1D03               	skipz
  5137  03DC  2BEA               	goto	u101lld
  5138  03DD  0AAB               	incf	___aodiv@dividend+3,f
  5139  03DE  1D03               	skipz
  5140  03DF  2BEA               	goto	u101lld
  5141  03E0  0AAC               	incf	___aodiv@dividend+4,f
  5142  03E1  1D03               	skipz
  5143  03E2  2BEA               	goto	u101lld
  5144  03E3  0AAD               	incf	___aodiv@dividend+5,f
  5145  03E4  1D03               	skipz
  5146  03E5  2BEA               	goto	u101lld
  5147  03E6  0AAE               	incf	___aodiv@dividend+6,f
  5148  03E7  1D03               	skipz
  5149  03E8  2BEA               	goto	u101lld
  5150  03E9  0AAF               	incf	___aodiv@dividend+7,f
  5151  03EA                     u101lld:
  5152  03EA                     l1471:
  5153  03EA  3001               	movlw	1
  5154  03EB  00F0               	movwf	??___aodiv
  5155  03EC  0870               	movf	??___aodiv,w
  5156  03ED  06F2               	xorwf	___aodiv@sign,f
  5157  03EE                     l1473:
  5158  03EE  3073               	movlw	low ___aodiv@quotient
  5159  03EF  0086               	movwf	6
  5160  03F0  3000               	movlw	high ___aodiv@quotient
  5161  03F1  0087               	movwf	7
  5162  03F2  3008               	movlw	8
  5163  03F3  00F0               	movwf	??___aodiv
  5164  03F4  3000               	movlw	0
  5165  03F5                     u1020:
  5166  03F5  001E               	movwi fsr1++
  5167  03F6  0BF0               	decfsz	??___aodiv,f
  5168  03F7  2BF5               	goto	u1020
  5169  03F8                     l1475:
  5170  03F8  0020               	movlb	0	; select bank0
  5171  03F9  0820               	movf	___aodiv@divisor,w
  5172  03FA  0421               	iorwf	___aodiv@divisor+1,w
  5173  03FB  0422               	iorwf	___aodiv@divisor+2,w
  5174  03FC  0423               	iorwf	___aodiv@divisor+3,w
  5175  03FD  0424               	iorwf	___aodiv@divisor+4,w
  5176  03FE  0425               	iorwf	___aodiv@divisor+5,w
  5177  03FF  0426               	iorwf	___aodiv@divisor+6,w
  5178  0400  0427               	iorwf	___aodiv@divisor+7,w
  5179  0401  1903               	skipnz
  5180  0402  2C04               	goto	u1031
  5181  0403  2C05               	goto	u1030
  5182  0404                     u1031:
  5183  0404  2C61               	goto	l1495
  5184  0405                     u1030:
  5185  0405                     l1477:
  5186  0405  01F1               	clrf	___aodiv@counter
  5187  0406  0AF1               	incf	___aodiv@counter,f
  5188  0407  2C14               	goto	l1483
  5189  0408                     l1479:
  5190  0408  35A0               	lslf	___aodiv@divisor,f
  5191  0409  0DA1               	rlf	___aodiv@divisor+1,f
  5192  040A  0DA2               	rlf	___aodiv@divisor+2,f
  5193  040B  0DA3               	rlf	___aodiv@divisor+3,f
  5194  040C  0DA4               	rlf	___aodiv@divisor+4,f
  5195  040D  0DA5               	rlf	___aodiv@divisor+5,f
  5196  040E  0DA6               	rlf	___aodiv@divisor+6,f
  5197  040F  0DA7               	rlf	___aodiv@divisor+7,f
  5198  0410                     l1481:
  5199  0410  3001               	movlw	1
  5200  0411  00F0               	movwf	??___aodiv
  5201  0412  0870               	movf	??___aodiv,w
  5202  0413  07F1               	addwf	___aodiv@counter,f
  5203  0414                     l1483:
  5204  0414  1FA7               	btfss	___aodiv@divisor+7,7
  5205  0415  2C17               	goto	u1041
  5206  0416  2C18               	goto	u1040
  5207  0417                     u1041:
  5208  0417  2C08               	goto	l1479
  5209  0418                     u1040:
  5210  0418                     l1485:
  5211  0418  35F3               	lslf	___aodiv@quotient,f
  5212  0419  0DF4               	rlf	___aodiv@quotient+1,f
  5213  041A  0DF5               	rlf	___aodiv@quotient+2,f
  5214  041B  0DF6               	rlf	___aodiv@quotient+3,f
  5215  041C  0DF7               	rlf	___aodiv@quotient+4,f
  5216  041D  0DF8               	rlf	___aodiv@quotient+5,f
  5217  041E  0DF9               	rlf	___aodiv@quotient+6,f
  5218  041F  0DFA               	rlf	___aodiv@quotient+7,f
  5219  0420                     l1487:
  5220  0420  0827               	movf	___aodiv@divisor+7,w
  5221  0421  022F               	subwf	___aodiv@dividend+7,w
  5222  0422  1D03               	skipz
  5223  0423  2C3E               	goto	u1055
  5224  0424  0826               	movf	___aodiv@divisor+6,w
  5225  0425  022E               	subwf	___aodiv@dividend+6,w
  5226  0426  1D03               	skipz
  5227  0427  2C3E               	goto	u1055
  5228  0428  0825               	movf	___aodiv@divisor+5,w
  5229  0429  022D               	subwf	___aodiv@dividend+5,w
  5230  042A  1D03               	skipz
  5231  042B  2C3E               	goto	u1055
  5232  042C  0824               	movf	___aodiv@divisor+4,w
  5233  042D  022C               	subwf	___aodiv@dividend+4,w
  5234  042E  1D03               	skipz
  5235  042F  2C3E               	goto	u1055
  5236  0430  0823               	movf	___aodiv@divisor+3,w
  5237  0431  022B               	subwf	___aodiv@dividend+3,w
  5238  0432  1D03               	skipz
  5239  0433  2C3E               	goto	u1055
  5240  0434  0822               	movf	___aodiv@divisor+2,w
  5241  0435  022A               	subwf	___aodiv@dividend+2,w
  5242  0436  1D03               	skipz
  5243  0437  2C3E               	goto	u1055
  5244  0438  0821               	movf	___aodiv@divisor+1,w
  5245  0439  0229               	subwf	___aodiv@dividend+1,w
  5246  043A  1D03               	skipz
  5247  043B  2C3E               	goto	u1055
  5248  043C  0820               	movf	___aodiv@divisor,w
  5249  043D  0228               	subwf	___aodiv@dividend,w
  5250  043E                     u1055:
  5251  043E  1C03               	skipc
  5252  043F  2C41               	goto	u1051
  5253  0440  2C42               	goto	u1050
  5254  0441                     u1051:
  5255  0441  2C53               	goto	l1493
  5256  0442                     u1050:
  5257  0442                     l1489:
  5258  0442  0820               	movf	___aodiv@divisor,w
  5259  0443  02A8               	subwf	___aodiv@dividend,f
  5260  0444  0821               	movf	___aodiv@divisor+1,w
  5261  0445  3BA9               	subwfb	___aodiv@dividend+1,f
  5262  0446  0822               	movf	___aodiv@divisor+2,w
  5263  0447  3BAA               	subwfb	___aodiv@dividend+2,f
  5264  0448  0823               	movf	___aodiv@divisor+3,w
  5265  0449  3BAB               	subwfb	___aodiv@dividend+3,f
  5266  044A  0824               	movf	___aodiv@divisor+4,w
  5267  044B  3BAC               	subwfb	___aodiv@dividend+4,f
  5268  044C  0825               	movf	___aodiv@divisor+5,w
  5269  044D  3BAD               	subwfb	___aodiv@dividend+5,f
  5270  044E  0826               	movf	___aodiv@divisor+6,w
  5271  044F  3BAE               	subwfb	___aodiv@dividend+6,f
  5272  0450  0827               	movf	___aodiv@divisor+7,w
  5273  0451  3BAF               	subwfb	___aodiv@dividend+7,f
  5274  0452                     l1491:
  5275  0452  1473               	bsf	___aodiv@quotient,0
  5276  0453                     l1493:
  5277  0453  36A7               	lsrf	___aodiv@divisor+7,f
  5278  0454  0CA6               	rrf	___aodiv@divisor+6,f
  5279  0455  0CA5               	rrf	___aodiv@divisor+5,f
  5280  0456  0CA4               	rrf	___aodiv@divisor+4,f
  5281  0457  0CA3               	rrf	___aodiv@divisor+3,f
  5282  0458  0CA2               	rrf	___aodiv@divisor+2,f
  5283  0459  0CA1               	rrf	___aodiv@divisor+1,f
  5284  045A  0CA0               	rrf	___aodiv@divisor,f
  5285  045B  3001               	movlw	1
  5286  045C  02F1               	subwf	___aodiv@counter,f
  5287  045D  1D03               	btfss	3,2
  5288  045E  2C60               	goto	u1061
  5289  045F  2C61               	goto	u1060
  5290  0460                     u1061:
  5291  0460  2C18               	goto	l1485
  5292  0461                     u1060:
  5293  0461                     l1495:
  5294  0461  0872               	movf	___aodiv@sign,w
  5295  0462  1903               	btfsc	3,2
  5296  0463  2C65               	goto	u1071
  5297  0464  2C66               	goto	u1070
  5298  0465                     u1071:
  5299  0465  2C84               	goto	l344
  5300  0466                     u1070:
  5301  0466                     l1497:
  5302  0466  09F3               	comf	___aodiv@quotient,f
  5303  0467  09F4               	comf	___aodiv@quotient+1,f
  5304  0468  09F5               	comf	___aodiv@quotient+2,f
  5305  0469  09F6               	comf	___aodiv@quotient+3,f
  5306  046A  09F7               	comf	___aodiv@quotient+4,f
  5307  046B  09F8               	comf	___aodiv@quotient+5,f
  5308  046C  09F9               	comf	___aodiv@quotient+6,f
  5309  046D  09FA               	comf	___aodiv@quotient+7,f
  5310  046E  0AF3               	incf	___aodiv@quotient,f
  5311  046F  1D03               	skipz
  5312  0470  2C84               	goto	u108lld
  5313  0471  0AF4               	incf	___aodiv@quotient+1,f
  5314  0472  1D03               	skipz
  5315  0473  2C84               	goto	u108lld
  5316  0474  0AF5               	incf	___aodiv@quotient+2,f
  5317  0475  1D03               	skipz
  5318  0476  2C84               	goto	u108lld
  5319  0477  0AF6               	incf	___aodiv@quotient+3,f
  5320  0478  1D03               	skipz
  5321  0479  2C84               	goto	u108lld
  5322  047A  0AF7               	incf	___aodiv@quotient+4,f
  5323  047B  1D03               	skipz
  5324  047C  2C84               	goto	u108lld
  5325  047D  0AF8               	incf	___aodiv@quotient+5,f
  5326  047E  1D03               	skipz
  5327  047F  2C84               	goto	u108lld
  5328  0480  0AF9               	incf	___aodiv@quotient+6,f
  5329  0481  1D03               	skipz
  5330  0482  2C84               	goto	u108lld
  5331  0483  0AFA               	incf	___aodiv@quotient+7,f
  5332  0484                     u108lld:
  5333  0484                     l344:
  5334  0484  0873               	movf	___aodiv@quotient,w
  5335  0485  0020               	movlb	0	; select bank0
  5336  0486  00A0               	movwf	?___aodiv
  5337  0487  0874               	movf	___aodiv@quotient+1,w
  5338  0488  00A1               	movwf	?___aodiv+1
  5339  0489  0875               	movf	___aodiv@quotient+2,w
  5340  048A  00A2               	movwf	?___aodiv+2
  5341  048B  0876               	movf	___aodiv@quotient+3,w
  5342  048C  00A3               	movwf	?___aodiv+3
  5343  048D  0877               	movf	___aodiv@quotient+4,w
  5344  048E  00A4               	movwf	?___aodiv+4
  5345  048F  0878               	movf	___aodiv@quotient+5,w
  5346  0490  00A5               	movwf	?___aodiv+5
  5347  0491  0879               	movf	___aodiv@quotient+6,w
  5348  0492  00A6               	movwf	?___aodiv+6
  5349  0493  087A               	movf	___aodiv@quotient+7,w
  5350  0494  00A7               	movwf	?___aodiv+7
  5351  0495                     l345:
  5352  0495  0008               	return
  5353  0496                     __end_of___aodiv:
  5354                           
  5355                           	psect	text16
  5356  0ED6                     __ptext16:	
  5357 ;; *************** function ___wmul *****************
  5358 ;; Defined at:
  5359 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  multiplier      2    0[COMMON] unsigned int 
  5362 ;;  multiplicand    2    2[COMMON] unsigned int 
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  product         2    4[COMMON] unsigned int 
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  2    0[COMMON] unsigned int 
  5367 ;; Registers used:
  5368 ;;		wreg, status,2, status,0
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5375 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5377 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5378 ;;Total ram usage:        6 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		_main
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           
  5388                           ;psect for function ___wmul
  5389  0ED6                     ___wmul:
  5390  0ED6                     l1891:	
  5391                           ;incstack = 0
  5392                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5393                           
  5394  0ED6  01F4               	clrf	___wmul@product
  5395  0ED7  01F5               	clrf	___wmul@product+1
  5396  0ED8                     l1893:
  5397  0ED8  1C70               	btfss	___wmul@multiplier,0
  5398  0ED9  2EDB               	goto	u1721
  5399  0EDA  2EDC               	goto	u1720
  5400  0EDB                     u1721:
  5401  0EDB  2EE0               	goto	l244
  5402  0EDC                     u1720:
  5403  0EDC                     l1895:
  5404  0EDC  0872               	movf	___wmul@multiplicand,w
  5405  0EDD  07F4               	addwf	___wmul@product,f
  5406  0EDE  0873               	movf	___wmul@multiplicand+1,w
  5407  0EDF  3DF5               	addwfc	___wmul@product+1,f
  5408  0EE0                     l244:
  5409  0EE0  3001               	movlw	1
  5410  0EE1                     u1735:
  5411  0EE1  35F2               	lslf	___wmul@multiplicand,f
  5412  0EE2  0DF3               	rlf	___wmul@multiplicand+1,f
  5413  0EE3  0B89               	decfsz	9,f
  5414  0EE4  2EE1               	goto	u1735
  5415  0EE5                     l1897:
  5416  0EE5  3001               	movlw	1
  5417  0EE6                     u1745:
  5418  0EE6  36F1               	lsrf	___wmul@multiplier+1,f
  5419  0EE7  0CF0               	rrf	___wmul@multiplier,f
  5420  0EE8  0B89               	decfsz	9,f
  5421  0EE9  2EE6               	goto	u1745
  5422  0EEA                     l1899:
  5423  0EEA  0870               	movf	___wmul@multiplier,w
  5424  0EEB  0471               	iorwf	___wmul@multiplier+1,w
  5425  0EEC  1D03               	btfss	3,2
  5426  0EED  2EEF               	goto	u1751
  5427  0EEE  2EF0               	goto	u1750
  5428  0EEF                     u1751:
  5429  0EEF  2ED8               	goto	l1893
  5430  0EF0                     u1750:
  5431  0EF0                     l1901:
  5432  0EF0  0875               	movf	___wmul@product+1,w
  5433  0EF1  00F1               	movwf	?___wmul+1
  5434  0EF2  0874               	movf	___wmul@product,w
  5435  0EF3  00F0               	movwf	?___wmul
  5436  0EF4                     l246:
  5437  0EF4  0008               	return
  5438  0EF5                     __end_of___wmul:
  5439                           
  5440                           	psect	text17
  5441  0E42                     __ptext17:	
  5442 ;; *************** function _SYSTEM_Initialize *****************
  5443 ;; Defined at:
  5444 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;		None
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;		None
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      void 
  5451 ;; Registers used:
  5452 ;;		wreg, status,2, status,0, pclath, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5462 ;;Total ram usage:        0 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    1
  5465 ;; This function calls:
  5466 ;;		_OSCILLATOR_Initialize
  5467 ;;		_PIN_MANAGER_Initialize
  5468 ;;		_WDT_Initialize
  5469 ;; This function is called by:
  5470 ;;		_main
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           
  5475                           ;psect for function _SYSTEM_Initialize
  5476  0E42                     _SYSTEM_Initialize:
  5477  0E42                     l1855:	
  5478                           ;incstack = 0
  5479                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5480                           
  5481                           
  5482                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5483  0E42  318F  27D2  318E   	fcall	_PIN_MANAGER_Initialize
  5484                           
  5485                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5486  0E45  3180  2005  318E   	fcall	_OSCILLATOR_Initialize
  5487                           
  5488                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  5489  0E48  318E  2632  318E   	fcall	_WDT_Initialize
  5490  0E4B                     l129:
  5491  0E4B  0008               	return
  5492  0E4C                     __end_of_SYSTEM_Initialize:
  5493                           
  5494                           	psect	text18
  5495  0E32                     __ptext18:	
  5496 ;; *************** function _WDT_Initialize *****************
  5497 ;; Defined at:
  5498 ;;		line 68 in file "mcc_generated_files/mcc.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		wreg
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5516 ;;Total ram usage:        0 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; This function calls:
  5519 ;;		Nothing
  5520 ;; This function is called by:
  5521 ;;		_SYSTEM_Initialize
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           
  5526                           ;psect for function _WDT_Initialize
  5527  0E32                     _WDT_Initialize:
  5528  0E32                     l1745:	
  5529                           ;incstack = 0
  5530                           ; Regs used in _WDT_Initialize: [wreg]
  5531                           
  5532                           
  5533                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  5534  0E32  3016               	movlw	22
  5535  0E33  0021               	movlb	1	; select bank1
  5536  0E34  0097               	movwf	23	;volatile
  5537  0E35                     l135:
  5538  0E35  0008               	return
  5539  0E36                     __end_of_WDT_Initialize:
  5540                           
  5541                           	psect	text19
  5542  0FD2                     __ptext19:	
  5543 ;; *************** function _PIN_MANAGER_Initialize *****************
  5544 ;; Defined at:
  5545 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;		None
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;		None
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1    wreg      void 
  5552 ;; Registers used:
  5553 ;;		wreg, status,2
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5563 ;;Total ram usage:        0 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; This function calls:
  5566 ;;		Nothing
  5567 ;; This function is called by:
  5568 ;;		_SYSTEM_Initialize
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           
  5573                           ;psect for function _PIN_MANAGER_Initialize
  5574  0FD2                     _PIN_MANAGER_Initialize:
  5575  0FD2                     l1711:	
  5576                           ;incstack = 0
  5577                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5578                           
  5579                           
  5580                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5581  0FD2  0022               	movlb	2	; select bank2
  5582  0FD3  018C               	clrf	12	;volatile
  5583                           
  5584                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5585  0FD4  018D               	clrf	13	;volatile
  5586                           
  5587                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5588  0FD5  018E               	clrf	14	;volatile
  5589  0FD6                     l1713:
  5590                           
  5591                           ;mcc_generated_files/pin_manager.c: 67:     TRISE = 0x08;
  5592  0FD6  3008               	movlw	8
  5593  0FD7  0021               	movlb	1	; select bank1
  5594  0FD8  0090               	movwf	16	;volatile
  5595  0FD9                     l1715:
  5596                           
  5597                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0xFF;
  5598  0FD9  30FF               	movlw	255
  5599  0FDA  008C               	movwf	12	;volatile
  5600                           
  5601                           ;mcc_generated_files/pin_manager.c: 69:     TRISB = 0x00;
  5602  0FDB  018D               	clrf	13	;volatile
  5603  0FDC                     l1717:
  5604                           
  5605                           ;mcc_generated_files/pin_manager.c: 70:     TRISC = 0xFF;
  5606  0FDC  30FF               	movlw	255
  5607  0FDD  008E               	movwf	14	;volatile
  5608  0FDE                     l1719:
  5609                           
  5610                           ;mcc_generated_files/pin_manager.c: 75:     ANSELC = 0xFC;
  5611  0FDE  30FC               	movlw	252
  5612  0FDF  0023               	movlb	3	; select bank3
  5613  0FE0  008E               	movwf	14	;volatile
  5614                           
  5615                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x00;
  5616  0FE1  018D               	clrf	13	;volatile
  5617  0FE2                     l1721:
  5618                           
  5619                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x3F;
  5620  0FE2  303F               	movlw	63
  5621  0FE3  008C               	movwf	12	;volatile
  5622  0FE4                     l1723:
  5623                           
  5624                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  5625  0FE4  0024               	movlb	4	; select bank4
  5626  0FE5  0190               	clrf	16	;volatile
  5627  0FE6                     l1725:
  5628                           
  5629                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  5630  0FE6  018D               	clrf	13	;volatile
  5631  0FE7                     l1727:
  5632                           
  5633                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  5634  0FE7  018C               	clrf	12	;volatile
  5635  0FE8                     l1729:
  5636                           
  5637                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  5638  0FE8  018E               	clrf	14	;volatile
  5639  0FE9                     l1731:
  5640                           
  5641                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  5642  0FE9  0021               	movlb	1	; select bank1
  5643  0FEA  1795               	bsf	21,7	;volatile
  5644  0FEB                     l1733:
  5645                           
  5646                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  5647  0FEB  0025               	movlb	5	; select bank5
  5648  0FEC  018C               	clrf	12	;volatile
  5649  0FED                     l1735:
  5650                           
  5651                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  5652  0FED  018D               	clrf	13	;volatile
  5653  0FEE                     l1737:
  5654                           
  5655                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  5656  0FEE  018E               	clrf	14	;volatile
  5657                           
  5658                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0xFF;
  5659  0FEF  30FF               	movlw	255
  5660  0FF0  0026               	movlb	6	; select bank6
  5661  0FF1  008C               	movwf	12	;volatile
  5662                           
  5663                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xFF;
  5664  0FF2  30FF               	movlw	255
  5665  0FF3  008D               	movwf	13	;volatile
  5666                           
  5667                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  5668  0FF4  30FF               	movlw	255
  5669  0FF5  008E               	movwf	14	;volatile
  5670                           
  5671                           ;mcc_generated_files/pin_manager.c: 105:     INLVLA = 0xFF;
  5672  0FF6  30FF               	movlw	255
  5673  0FF7  0027               	movlb	7	; select bank7
  5674  0FF8  008C               	movwf	12	;volatile
  5675                           
  5676                           ;mcc_generated_files/pin_manager.c: 106:     INLVLB = 0xFF;
  5677  0FF9  30FF               	movlw	255
  5678  0FFA  008D               	movwf	13	;volatile
  5679                           
  5680                           ;mcc_generated_files/pin_manager.c: 107:     INLVLC = 0xFF;
  5681  0FFB  30FF               	movlw	255
  5682  0FFC  008E               	movwf	14	;volatile
  5683                           
  5684                           ;mcc_generated_files/pin_manager.c: 108:     INLVLE = 0x08;
  5685  0FFD  3008               	movlw	8
  5686  0FFE  0090               	movwf	16	;volatile
  5687  0FFF                     l109:
  5688  0FFF  0008               	return
  5689  1000                     __end_of_PIN_MANAGER_Initialize:
  5690                           
  5691                           	psect	text20
  5692  0005                     __ptext20:	
  5693 ;; *************** function _OSCILLATOR_Initialize *****************
  5694 ;; Defined at:
  5695 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;		None
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;		None
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      void 
  5702 ;; Registers used:
  5703 ;;		wreg, status,2
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5713 ;;Total ram usage:        0 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; This function calls:
  5716 ;;		Nothing
  5717 ;; This function is called by:
  5718 ;;		_SYSTEM_Initialize
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           
  5723                           ;psect for function _OSCILLATOR_Initialize
  5724  0005                     _OSCILLATOR_Initialize:
  5725  0005                     l1739:	
  5726                           ;incstack = 0
  5727                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5728                           
  5729                           
  5730                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x38;
  5731  0005  3038               	movlw	56
  5732  0006  0021               	movlb	1	; select bank1
  5733  0007  0099               	movwf	25	;volatile
  5734  0008                     l1741:
  5735                           
  5736                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  5737  0008  0198               	clrf	24	;volatile
  5738  0009                     l1743:
  5739                           
  5740                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  5741  0009  0022               	movlb	2	; select bank2
  5742  000A  0196               	clrf	22	;volatile
  5743  000B                     l132:
  5744  000B  0008               	return
  5745  000C                     __end_of_OSCILLATOR_Initialize:
  5746                           
  5747                           	psect	text21
  5748  0F15                     __ptext21:	
  5749 ;; *************** function _LCD_Initialize *****************
  5750 ;; Defined at:
  5751 ;;		line 46 in file "lcd.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;		None
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;		None
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      void 
  5758 ;; Registers used:
  5759 ;;		wreg, status,2, status,0, pclath, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5769 ;;Total ram usage:        1 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:    2
  5772 ;; This function calls:
  5773 ;;		_LCDPutCmd
  5774 ;; This function is called by:
  5775 ;;		_main
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           
  5780                           ;psect for function _LCD_Initialize
  5781  0F15                     _LCD_Initialize:
  5782  0F15                     l1857:	
  5783                           ;incstack = 0
  5784                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5785                           
  5786                           
  5787                           ;lcd.c: 49:   PORTB = 0;
  5788  0F15  0020               	movlb	0	; select bank0
  5789  0F16  018D               	clrf	13	;volatile
  5790                           
  5791                           ;lcd.c: 51:   TRISB = 0x00;
  5792  0F17  0021               	movlb	1	; select bank1
  5793  0F18  018D               	clrf	13	;volatile
  5794  0F19                     l1859:
  5795                           
  5796                           ;lcd.c: 54:   PORTBbits.RB7 = 1;
  5797  0F19  0020               	movlb	0	; select bank0
  5798  0F1A  178D               	bsf	13,7	;volatile
  5799  0F1B                     l1861:
  5800                           
  5801                           ;lcd.c: 57:   _delay((unsigned long)((15)*(500000/4000.0)));
  5802  0F1B  3003               	movlw	3
  5803  0F1C  00F7               	movwf	??_LCD_Initialize
  5804  0F1D  306E               	movlw	110
  5805  0F1E                     u1857:
  5806  0F1E  0B89               	decfsz	9,f
  5807  0F1F  2F1E               	goto	u1857
  5808  0F20  0BF7               	decfsz	??_LCD_Initialize,f
  5809  0F21  2F1E               	goto	u1857
  5810  0F22  0000               	nop
  5811  0F23                     l1863:
  5812                           
  5813                           ;lcd.c: 60:   LCDPutCmd(0x32);
  5814  0F23  3032               	movlw	50
  5815  0F24  318E  26B7  318F   	fcall	_LCDPutCmd
  5816  0F27                     l1865:
  5817                           
  5818                           ;lcd.c: 63:   LCDPutCmd(0x28);
  5819  0F27  3028               	movlw	40
  5820  0F28  318E  26B7  318F   	fcall	_LCDPutCmd
  5821  0F2B                     l1867:
  5822                           
  5823                           ;lcd.c: 66:   LCDPutCmd(0x0C);
  5824  0F2B  300C               	movlw	12
  5825  0F2C  318E  26B7  318F   	fcall	_LCDPutCmd
  5826  0F2F                     l1869:
  5827                           
  5828                           ;lcd.c: 68:   LCDPutCmd(0x01);
  5829  0F2F  3001               	movlw	1
  5830  0F30  318E  26B7  318F   	fcall	_LCDPutCmd
  5831  0F33                     l1871:
  5832                           
  5833                           ;lcd.c: 71:   LCDPutCmd(0x06);
  5834  0F33  3006               	movlw	6
  5835  0F34  318E  26B7  318F   	fcall	_LCDPutCmd
  5836  0F37                     l148:
  5837  0F37  0008               	return
  5838  0F38                     __end_of_LCD_Initialize:
  5839                           
  5840                           	psect	text22
  5841  0E4C                     __ptext22:	
  5842 ;; *************** function _LCDClear *****************
  5843 ;; Defined at:
  5844 ;;		line 159 in file "lcd.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;		None
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;		None
  5849 ;; Return value:  Size  Location     Type
  5850 ;;                  1    wreg      void 
  5851 ;; Registers used:
  5852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5862 ;;Total ram usage:        0 bytes
  5863 ;; Hardware stack levels used:    1
  5864 ;; Hardware stack levels required when called:    3
  5865 ;; This function calls:
  5866 ;;		_LCDGoto
  5867 ;;		_LCDPutStr
  5868 ;; This function is called by:
  5869 ;;		_main
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           
  5874                           ;psect for function _LCDClear
  5875  0E4C                     _LCDClear:
  5876  0E4C                     l1885:	
  5877                           ;incstack = 0
  5878                           ; Regs used in _LCDClear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5879                           
  5880                           
  5881                           ;lcd.c: 161:   LCDGoto(0, 0);
  5882  0E4C  01F7               	clrf	LCDGoto@ln
  5883  0E4D  3000               	movlw	0
  5884  0E4E  318F  2782  318E   	fcall	_LCDGoto
  5885  0E51                     l1887:
  5886                           
  5887                           ;lcd.c: 162:   LCDPutStr("                ");
  5888  0E51  3002               	movlw	low (STR_7| (0+32768))
  5889  0E52  00F7               	movwf	LCDPutStr@str
  5890  0E53  3090               	movlw	high (STR_7| (0+32768))
  5891  0E54  00F8               	movwf	LCDPutStr@str+1
  5892  0E55  318F  275C  318E   	fcall	_LCDPutStr
  5893  0E58                     l1889:
  5894                           
  5895                           ;lcd.c: 163:   LCDGoto(0, 1);
  5896  0E58  01F7               	clrf	LCDGoto@ln
  5897  0E59  0AF7               	incf	LCDGoto@ln,f
  5898  0E5A  3000               	movlw	0
  5899  0E5B  318F  2782  318E   	fcall	_LCDGoto
  5900                           
  5901                           ;lcd.c: 164:   LCDPutStr("                ");
  5902  0E5E  3002               	movlw	low (STR_7| (0+32768))
  5903  0E5F  00F7               	movwf	LCDPutStr@str
  5904  0E60  3090               	movlw	high (STR_7| (0+32768))
  5905  0E61  00F8               	movwf	LCDPutStr@str+1
  5906  0E62  318F  275C  318E   	fcall	_LCDPutStr
  5907  0E65                     l176:
  5908  0E65  0008               	return
  5909  0E66                     __end_of_LCDClear:
  5910                           
  5911                           	psect	text23
  5912  0F5C                     __ptext23:	
  5913 ;; *************** function _LCDPutStr *****************
  5914 ;; Defined at:
  5915 ;;		line 131 in file "lcd.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  str             2    7[COMMON] PTR const unsigned char 
  5918 ;;		 -> STR_8(17), STR_7(17), STR_5(8), STR_3(11), 
  5919 ;;		 -> main@printchar(10), STR_1(10), 
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  i               1   12[COMMON] unsigned char 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  1    wreg      void 
  5924 ;; Registers used:
  5925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5933 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5934 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5935 ;;Total ram usage:        6 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    2
  5938 ;; This function calls:
  5939 ;;		_LCDPutChar
  5940 ;; This function is called by:
  5941 ;;		_main
  5942 ;;		_LCDClear
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           
  5947                           ;psect for function _LCDPutStr
  5948  0F5C                     _LCDPutStr:
  5949  0F5C                     l1703:	
  5950                           ;incstack = 0
  5951                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5952                           
  5953                           
  5954                           ;lcd.c: 131: void LCDPutStr(const char *str);lcd.c: 132: {;lcd.c: 133:   uint8_t i = 0;
  5955  0F5C  01FC               	clrf	LCDPutStr@i
  5956                           
  5957                           ;lcd.c: 136:   while (str[i])
  5958  0F5D  2F71               	goto	l1709
  5959  0F5E                     l1705:
  5960                           
  5961                           ;lcd.c: 137:   {;lcd.c: 139:     LCDPutChar(str[i++]);
  5962  0F5E  0878               	movf	LCDPutStr@str+1,w
  5963  0F5F  00FA               	movwf	??_LCDPutStr+1
  5964  0F60  0877               	movf	LCDPutStr@str,w
  5965  0F61  00F9               	movwf	??_LCDPutStr
  5966  0F62  087C               	movf	LCDPutStr@i,w
  5967  0F63  0779               	addwf	??_LCDPutStr,w
  5968  0F64  0084               	movwf	4
  5969  0F65  087A               	movf	??_LCDPutStr+1,w
  5970  0F66  1803               	skipnc
  5971  0F67  0A7A               	incf	??_LCDPutStr+1,w
  5972  0F68  0085               	movwf	5
  5973  0F69  0800               	movf	0,w	;code access
  5974  0F6A  318E  269A  318F   	fcall	_LCDPutChar
  5975  0F6D                     l1707:
  5976  0F6D  3001               	movlw	1
  5977  0F6E  00F9               	movwf	??_LCDPutStr
  5978  0F6F  0879               	movf	??_LCDPutStr,w
  5979  0F70  07FC               	addwf	LCDPutStr@i,f
  5980  0F71                     l1709:
  5981                           
  5982                           ;lcd.c: 136:   while (str[i])
  5983  0F71  0878               	movf	LCDPutStr@str+1,w
  5984  0F72  00FA               	movwf	??_LCDPutStr+1
  5985  0F73  0877               	movf	LCDPutStr@str,w
  5986  0F74  00F9               	movwf	??_LCDPutStr
  5987  0F75  087C               	movf	LCDPutStr@i,w
  5988  0F76  0779               	addwf	??_LCDPutStr,w
  5989  0F77  0084               	movwf	4
  5990  0F78  087A               	movf	??_LCDPutStr+1,w
  5991  0F79  1803               	skipnc
  5992  0F7A  0A7A               	incf	??_LCDPutStr+1,w
  5993  0F7B  0085               	movwf	5
  5994  0F7C  0012               	moviw fsr0++
  5995  0F7D  1D03               	btfss	3,2
  5996  0F7E  2F80               	goto	u1501
  5997  0F7F  2F81               	goto	u1500
  5998  0F80                     u1501:
  5999  0F80  2F5E               	goto	l1705
  6000  0F81                     u1500:
  6001  0F81                     l163:
  6002  0F81  0008               	return
  6003  0F82                     __end_of_LCDPutStr:
  6004                           
  6005                           	psect	text24
  6006  0E9A                     __ptext24:	
  6007 ;; *************** function _LCDPutChar *****************
  6008 ;; Defined at:
  6009 ;;		line 101 in file "lcd.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  ch              1    wreg     unsigned char 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  ch              1    6[COMMON] unsigned char 
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		wreg, status,2, status,0, pclath, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6025 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6026 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6027 ;;Total ram usage:        3 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    1
  6030 ;; This function calls:
  6031 ;;		_LCDWriteNibble
  6032 ;; This function is called by:
  6033 ;;		_LCDPutStr
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           
  6038                           ;psect for function _LCDPutChar
  6039  0E9A                     _LCDPutChar:
  6040                           
  6041                           ;incstack = 0
  6042                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  6043                           ;LCDPutChar@ch stored from wreg
  6044  0E9A  00F6               	movwf	LCDPutChar@ch
  6045  0E9B                     l1637:
  6046                           
  6047                           ;lcd.c: 101: void LCDPutChar(uint8_t ch);lcd.c: 102: {;lcd.c: 103:   _delay((unsigned lo
      +                          ng)((5)*(500000/4000.0)));
  6048  0E9B  30D0               	movlw	208
  6049  0E9C                     u1867:
  6050  0E9C  0B89               	decfsz	9,f
  6051  0E9D  2E9C               	goto	u1867
  6052  0E9E  0000               	nop
  6053  0E9F                     l1639:
  6054                           
  6055                           ;lcd.c: 106:   LCDWriteNibble(ch, 1);
  6056  0E9F  01F0               	clrf	LCDWriteNibble@rs
  6057  0EA0  0AF0               	incf	LCDWriteNibble@rs,f
  6058  0EA1  0876               	movf	LCDPutChar@ch,w
  6059  0EA2  318E  26F5  318E   	fcall	_LCDWriteNibble
  6060  0EA5                     l1641:
  6061                           
  6062                           ;lcd.c: 109:   ch = (uint8_t)(ch << 4);
  6063  0EA5  0876               	movf	LCDPutChar@ch,w
  6064  0EA6  00F4               	movwf	??_LCDPutChar
  6065  0EA7  3003               	movlw	3
  6066  0EA8                     u1425:
  6067  0EA8  35F4               	lslf	??_LCDPutChar,f
  6068  0EA9  3EFF               	addlw	-1
  6069  0EAA  1D03               	skipz
  6070  0EAB  2EA8               	goto	u1425
  6071  0EAC  3574               	lslf	??_LCDPutChar,w
  6072  0EAD  00F5               	movwf	??_LCDPutChar+1
  6073  0EAE  0875               	movf	??_LCDPutChar+1,w
  6074  0EAF  00F6               	movwf	LCDPutChar@ch
  6075  0EB0                     l1643:
  6076                           
  6077                           ;lcd.c: 112:   LCDWriteNibble(ch, 1);
  6078  0EB0  01F0               	clrf	LCDWriteNibble@rs
  6079  0EB1  0AF0               	incf	LCDWriteNibble@rs,f
  6080  0EB2  0876               	movf	LCDPutChar@ch,w
  6081  0EB3  318E  26F5  318E   	fcall	_LCDWriteNibble
  6082  0EB6                     l154:
  6083  0EB6  0008               	return
  6084  0EB7                     __end_of_LCDPutChar:
  6085                           
  6086                           	psect	text25
  6087  0F82                     __ptext25:	
  6088 ;; *************** function _LCDGoto *****************
  6089 ;; Defined at:
  6090 ;;		line 143 in file "lcd.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;  pos             1    wreg     unsigned char 
  6093 ;;  ln              1    7[COMMON] unsigned char 
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;  pos             1   10[COMMON] unsigned char 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      void 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2, status,0, pclath, cstack
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6105 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6106 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6109 ;;Total ram usage:        4 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:    2
  6112 ;; This function calls:
  6113 ;;		_LCDPutCmd
  6114 ;; This function is called by:
  6115 ;;		_main
  6116 ;;		_LCDClear
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120                           
  6121                           ;psect for function _LCDGoto
  6122  0F82                     _LCDGoto:
  6123                           
  6124                           ;incstack = 0
  6125                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  6126                           ;LCDGoto@pos stored from wreg
  6127  0F82  00FA               	movwf	LCDGoto@pos
  6128  0F83                     l1689:
  6129                           
  6130                           ;lcd.c: 143: void LCDGoto(uint8_t pos, uint8_t ln);lcd.c: 144: {;lcd.c: 146:   if ((ln >
      +                           (2 - 1)) || (pos > (16 - 1)))
  6131  0F83  3002               	movlw	2
  6132  0F84  0277               	subwf	LCDGoto@ln,w
  6133  0F85  1803               	skipnc
  6134  0F86  2F88               	goto	u1471
  6135  0F87  2F89               	goto	u1470
  6136  0F88                     u1471:
  6137  0F88  2FA8               	goto	l169
  6138  0F89                     u1470:
  6139  0F89                     l1691:
  6140  0F89  3010               	movlw	16
  6141  0F8A  027A               	subwf	LCDGoto@pos,w
  6142  0F8B  1C03               	skipc
  6143  0F8C  2F8E               	goto	u1481
  6144  0F8D  2F8F               	goto	u1480
  6145  0F8E                     u1481:
  6146  0F8E  2F90               	goto	l1693
  6147  0F8F                     u1480:
  6148  0F8F  2FA8               	goto	l169
  6149  0F90                     l1693:
  6150                           
  6151                           ;lcd.c: 153:   LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  6152  0F90  0377               	decf	LCDGoto@ln,w
  6153  0F91  1903               	btfsc	3,2
  6154  0F92  2F94               	goto	u1491
  6155  0F93  2F95               	goto	u1490
  6156  0F94                     u1491:
  6157  0F94  2F9B               	goto	l1697
  6158  0F95                     u1490:
  6159  0F95                     l1695:
  6160  0F95  3080               	movlw	128
  6161  0F96  047A               	iorwf	LCDGoto@pos,w
  6162  0F97  00F8               	movwf	_LCDGoto$222
  6163  0F98  3000               	movlw	0
  6164  0F99  00F9               	movwf	_LCDGoto$222+1
  6165  0F9A  2FA0               	goto	l1699
  6166  0F9B                     l1697:
  6167  0F9B  30C0               	movlw	192
  6168  0F9C  047A               	iorwf	LCDGoto@pos,w
  6169  0F9D  00F8               	movwf	_LCDGoto$222
  6170  0F9E  3000               	movlw	0
  6171  0F9F  00F9               	movwf	_LCDGoto$222+1
  6172  0FA0                     l1699:
  6173  0FA0  0878               	movf	_LCDGoto$222,w
  6174  0FA1  318E  26B7  318F   	fcall	_LCDPutCmd
  6175  0FA4                     l1701:
  6176                           
  6177                           ;lcd.c: 156:   _delay((unsigned long)((5)*(500000/4000.0)));
  6178  0FA4  30D0               	movlw	208
  6179  0FA5                     u1877:
  6180  0FA5  0B89               	decfsz	9,f
  6181  0FA6  2FA5               	goto	u1877
  6182  0FA7  0000               	nop
  6183  0FA8                     l169:
  6184  0FA8  0008               	return
  6185  0FA9                     __end_of_LCDGoto:
  6186                           
  6187                           	psect	text26
  6188  0EB7                     __ptext26:	
  6189 ;; *************** function _LCDPutCmd *****************
  6190 ;; Defined at:
  6191 ;;		line 115 in file "lcd.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  ch              1    wreg     unsigned char 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  ch              1    6[COMMON] unsigned char 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      void 
  6198 ;; Registers used:
  6199 ;;		wreg, status,2, status,0, pclath, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6207 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6208 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6209 ;;Total ram usage:        3 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:    1
  6212 ;; This function calls:
  6213 ;;		_LCDWriteNibble
  6214 ;; This function is called by:
  6215 ;;		_LCD_Initialize
  6216 ;;		_LCDGoto
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           
  6221                           ;psect for function _LCDPutCmd
  6222  0EB7                     _LCDPutCmd:
  6223                           
  6224                           ;incstack = 0
  6225                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  6226                           ;LCDPutCmd@ch stored from wreg
  6227  0EB7  00F6               	movwf	LCDPutCmd@ch
  6228  0EB8                     l1627:
  6229                           
  6230                           ;lcd.c: 115: void LCDPutCmd(uint8_t ch);lcd.c: 116: {;lcd.c: 117:   _delay((unsigned lon
      +                          g)((5)*(500000/4000.0)));
  6231  0EB8  30D0               	movlw	208
  6232  0EB9                     u1887:
  6233  0EB9  0B89               	decfsz	9,f
  6234  0EBA  2EB9               	goto	u1887
  6235  0EBB  0000               	nop
  6236  0EBC                     l1629:
  6237                           
  6238                           ;lcd.c: 120:   LCDWriteNibble(ch, 0);
  6239  0EBC  01F0               	clrf	LCDWriteNibble@rs
  6240  0EBD  0876               	movf	LCDPutCmd@ch,w
  6241  0EBE  318E  26F5  318E   	fcall	_LCDWriteNibble
  6242  0EC1                     l1631:
  6243                           
  6244                           ;lcd.c: 123:   ch = (uint8_t)(ch << 4);
  6245  0EC1  0876               	movf	LCDPutCmd@ch,w
  6246  0EC2  00F4               	movwf	??_LCDPutCmd
  6247  0EC3  3003               	movlw	3
  6248  0EC4                     u1415:
  6249  0EC4  35F4               	lslf	??_LCDPutCmd,f
  6250  0EC5  3EFF               	addlw	-1
  6251  0EC6  1D03               	skipz
  6252  0EC7  2EC4               	goto	u1415
  6253  0EC8  3574               	lslf	??_LCDPutCmd,w
  6254  0EC9  00F5               	movwf	??_LCDPutCmd+1
  6255  0ECA  0875               	movf	??_LCDPutCmd+1,w
  6256  0ECB  00F6               	movwf	LCDPutCmd@ch
  6257  0ECC                     l1633:
  6258                           
  6259                           ;lcd.c: 125:   _delay((unsigned long)((1)*(500000/4000.0)));
  6260  0ECC  3029               	movlw	41
  6261  0ECD                     u1897:
  6262  0ECD  0B89               	decfsz	9,f
  6263  0ECE  2ECD               	goto	u1897
  6264  0ECF  3200               	nop2
  6265  0ED0                     l1635:
  6266                           
  6267                           ;lcd.c: 128:   LCDWriteNibble(ch, 0);
  6268  0ED0  01F0               	clrf	LCDWriteNibble@rs
  6269  0ED1  0876               	movf	LCDPutCmd@ch,w
  6270  0ED2  318E  26F5  318E   	fcall	_LCDWriteNibble
  6271  0ED5                     l157:
  6272  0ED5  0008               	return
  6273  0ED6                     __end_of_LCDPutCmd:
  6274                           
  6275                           	psect	text27
  6276  0EF5                     __ptext27:	
  6277 ;; *************** function _LCDWriteNibble *****************
  6278 ;; Defined at:
  6279 ;;		line 74 in file "lcd.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  ch              1    wreg     unsigned char 
  6282 ;;  rs              1    0[COMMON] unsigned char 
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;  ch              1    3[COMMON] unsigned char 
  6285 ;; Return value:  Size  Location     Type
  6286 ;;                  1    wreg      void 
  6287 ;; Registers used:
  6288 ;;		wreg, status,2, status,0
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/0
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6294 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6297 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6298 ;;Total ram usage:        4 bytes
  6299 ;; Hardware stack levels used:    1
  6300 ;; This function calls:
  6301 ;;		Nothing
  6302 ;; This function is called by:
  6303 ;;		_LCDPutChar
  6304 ;;		_LCDPutCmd
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           
  6309                           ;psect for function _LCDWriteNibble
  6310  0EF5                     _LCDWriteNibble:
  6311                           
  6312                           ;incstack = 0
  6313                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
  6314                           ;LCDWriteNibble@ch stored from wreg
  6315  0EF5  00F3               	movwf	LCDWriteNibble@ch
  6316  0EF6                     l1555:
  6317                           
  6318                           ;lcd.c: 74: void LCDWriteNibble(uint8_t ch, uint8_t rs);lcd.c: 75: {;lcd.c: 77:   ch = (
      +                          ch >> 4);
  6319  0EF6  0873               	movf	LCDWriteNibble@ch,w
  6320  0EF7  00F1               	movwf	??_LCDWriteNibble
  6321  0EF8  3004               	movlw	4
  6322  0EF9                     u1245:
  6323  0EF9  36F1               	lsrf	??_LCDWriteNibble,f
  6324  0EFA  0B89               	decfsz	9,f
  6325  0EFB  2EF9               	goto	u1245
  6326  0EFC  0871               	movf	??_LCDWriteNibble,w
  6327  0EFD  00F2               	movwf	??_LCDWriteNibble+1
  6328  0EFE  0872               	movf	??_LCDWriteNibble+1,w
  6329  0EFF  00F3               	movwf	LCDWriteNibble@ch
  6330  0F00                     l1557:
  6331                           
  6332                           ;lcd.c: 80:   ch = (ch & 0x0F);
  6333  0F00  0873               	movf	LCDWriteNibble@ch,w
  6334  0F01  390F               	andlw	15
  6335  0F02  00F1               	movwf	??_LCDWriteNibble
  6336  0F03  0871               	movf	??_LCDWriteNibble,w
  6337  0F04  00F3               	movwf	LCDWriteNibble@ch
  6338  0F05                     l1559:
  6339                           
  6340                           ;lcd.c: 83:   PORTB = (PORTB & 0xF0);
  6341  0F05  0020               	movlb	0	; select bank0
  6342  0F06  080D               	movf	13,w	;volatile
  6343  0F07  39F0               	andlw	240
  6344  0F08  008D               	movwf	13	;volatile
  6345                           
  6346                           ;lcd.c: 86:   PORTB = (PORTB | ch);
  6347  0F09  080D               	movf	13,w	;volatile
  6348  0F0A  0473               	iorwf	LCDWriteNibble@ch,w
  6349  0F0B  008D               	movwf	13	;volatile
  6350  0F0C                     l1561:
  6351                           
  6352                           ;lcd.c: 89:   PORTBbits.RB5 = rs;
  6353  0F0C  0C70               	rrf	LCDWriteNibble@rs,w
  6354  0F0D  1C03               	skipc
  6355  0F0E  128D               	bcf	13,5	;volatile
  6356  0F0F  1803               	skipnc
  6357  0F10  168D               	bsf	13,5	;volatile
  6358  0F11                     l1563:
  6359                           
  6360                           ;lcd.c: 92:   PORTBbits.RB6 = 0;
  6361  0F11  130D               	bcf	13,6	;volatile
  6362  0F12                     l1565:
  6363                           
  6364                           ;lcd.c: 95:   PORTBbits.RB4 = 1;
  6365  0F12  160D               	bsf	13,4	;volatile
  6366  0F13                     l1567:
  6367                           
  6368                           ;lcd.c: 98:   PORTBbits.RB4 = 0;
  6369  0F13  120D               	bcf	13,4	;volatile
  6370  0F14                     l151:
  6371  0F14  0008               	return
  6372  0F15                     __end_of_LCDWriteNibble:
  6373  007E                     btemp	set	126	;btemp
  6374  007E                     wtemp0	set	126
  6375                           
  6376                           	psect	config
  6377                           
  6378                           ;Config register CONFIG1 @ 0x8007
  6379                           ;	Oscillator Selection Bits
  6380                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6381                           ;	Watchdog Timer Enable
  6382                           ;	WDTE = OFF, WDT disabled
  6383                           ;	Power-up Timer Enable
  6384                           ;	PWRTE = OFF, PWRT disabled
  6385                           ;	MCLR Pin Function Select
  6386                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6387                           ;	Flash Program Memory Code Protection
  6388                           ;	CP = OFF, Program memory code protection is disabled
  6389                           ;	Brown-out Reset Enable
  6390                           ;	BOREN = ON, Brown-out Reset enabled
  6391                           ;	Clock Out Enable
  6392                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6393                           ;	Internal/External Switchover Mode
  6394                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  6395                           ;	Fail-Safe Clock Monitor Enable
  6396                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6397  8007                     	org	32775
  6398  8007  3FE4               	dw	16356
  6399                           
  6400                           ;Config register CONFIG2 @ 0x8008
  6401                           ;	Flash Memory Self-Write Protection
  6402                           ;	WRT = OFF, Write protection off
  6403                           ;	Peripheral Pin Select one-way control
  6404                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  6405                           ;	Zero-cross detect disable
  6406                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR and can be enabled with ZCDS
      +                          EN bit.
  6407                           ;	Phase Lock Loop enable
  6408                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  6409                           ;	Stack Overflow/Underflow Reset Enable
  6410                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6411                           ;	Brown-out Reset Voltage Selection
  6412                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6413                           ;	Low-Power Brown Out Reset
  6414                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6415                           ;	Low-Voltage Programming Enable
  6416                           ;	LVP = ON, Low-voltage programming enabled
  6417  8008                     	org	32776
  6418  8008  3EFF               	dw	16127

Data Sizes:
    Strings     49
    Constant    2
    Data        6
    BSS         48
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     49      67
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S538_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_5(CODE[8]), STR_3(CODE[11]), 
		 -> main@printchar(BANK1[10]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _sumdigits->___awdiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_Initialize->_LCDPutCmd
    _LCDClear->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   15701
                                              9 BANK1     40    40      0
                           _LCDClear
                            _LCDGoto
                          _LCDPutStr
                     _LCD_Initialize
                  _SYSTEM_Initialize
                            ___awdiv
                            ___awmod
                             ___wmul
                            _sprintf
                          _sumdigits
 ---------------------------------------------------------------------------------
 (1) _sumdigits                                            7     5      2    1568
                                              9 COMMON     3     1      2
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6330
                                             13 COMMON     1     1      0
                                             70 BANK0      6     0      6
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     461
                                              7 COMMON     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDClear                                             0     0      0    2362
                            _LCDGoto
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            6     4      2    1159
                                              7 COMMON     6     4      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              4     3      1    1203
                                              7 COMMON     4     3      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       4     3      1     394
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDClear
     _LCDGoto
       _LCDPutCmd
         _LCDWriteNibble
     _LCDPutStr
       _LCDPutChar
         _LCDWriteNibble
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
       _LCDWriteNibble
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   ___awdiv
   ___awmod
   ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   _sumdigits
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     31      43       7       83.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      C1      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      C1      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jun 02 15:04:45 2021

                 _LCD_Initialize 0F15                               l26 0078                      ?_LCDPutChar 0070  
                             l53 07D4                               l54 07D4                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072                              l132 000B                              l109 0FFF  
                            l151 0F14                              l135 0E35                              l129 0E4B  
                            l154 0EB6                              l410 011A                              l163 0F81  
                            l148 0F37                              l244 0EE0                              l157 0ED5  
                            l246 0EF4                              l176 0E65                              l344 0484  
                            l169 0FA8                              l345 0495                              l357 0383  
                            l358 0394                              l707 0F5B                              l397 01CF  
                            l806 0FD1                              l734 0135                              l742 04DF  
                            l815 0E99                              l751 0586                              l743 04E8  
                            l809 0004                              l737 0157                              l739 0170  
                            l747 0500                              l748 0516                              l772 02AA  
                            l765 05FA                              l783 0E7F                              l786 0E7F  
                            l779 003C                              l798 00C7                              u920 007E  
                            u921 007D                              u930 0083                              u931 0082  
                            u940 0092                              u941 0091                              u950 00AF  
                            u951 00AE                              u960 0FD1                              u961 0FD0  
                            u970 0E93                              u955 00AB                              u971 0E92  
                            u980 03A0                              u981 039F                              _abs 0E66  
                            _pad 011B                     ___awmod@sign 0076                              wreg 0009  
                __end_of_LCDGoto 0FA9                             ?_abs 0073                             l1501 02AC  
                           l2037 061F                             l1511 030D                             l1503 02B6  
                           l1431 0083                             l1521 0342                             l1513 0310  
                           l1505 02D7                             l1433 0088                             l1601 0594  
                           l1523 0352                             l1515 0318                             l1507 02E1  
                           l1435 0092                             l1427 0079                             l1443 0FAB  
                           l1451 0E81                             l1531 0121                             l1611 05C8  
                           l1603 05A1                             l1701 0FA4                             l1461 0395  
                           l1517 031C                             l1525 0360                             l1509 0300  
                           l1437 00AF                             l1429 007E                             l1445 0FAE  
                           l1453 0E86                             l1541 0144                             l1533 0129  
                           l1621 05DF                             l1613 05CC                             l1605 05AE  
                           l1631 0EC1                             l1703 0F5C                             l1711 0FD2  
                           l1471 03EA                             l1463 0396                             l1527 0365  
                           l1519 0320                             l1551 0E66                             l1439 00BF  
                           l1447 0FBC                             l1455 0E8A                             l1543 0149  
                           l1535 012E                             l1615 05D0                             l1623 05E8  
                           l1607 05BC                             l1561 0F0C                             l1633 0ECC  
                           l1641 0EA5                             l1705 0F5E                             l1721 0FE2  
                           l1713 0FD6                             l1481 0410                             l1473 03EE  
                           l1465 03A0                             l1553 0E73                             l1449 0FC1  
                           l1457 0E93                             l1545 015C                             l1537 0133  
                           l1529 011D                             l1617 05D6                             l1609 05C1  
                           l1801 00D8                             l1563 0F11                             l1555 0EF6  
                           l1635 0ED0                             l1627 0EB8                             l1643 0EB0  
                           l1707 0F6D                             l1731 0FE9                             l1723 0FE4  
                           l1715 0FD9                             l1491 0452                             l1483 0414  
                           l1475 03F8                             l1467 03C1                             l1547 0164  
                           l1539 0138                             l1619 05DB                             l1571 04A8  
                           l1651 01F1                             l1811 00EF                             l1803 00DD  
                           l1565 0F12                             l1557 0F00                             l1629 0EBC  
                           l1637 0E9B                             l1709 0F71                             l1741 0008  
                           l1733 0FEB                             l1725 0FE6                             l1717 0FDC  
                           l1901 0EF0                             l1493 0453                             l1485 0418  
                           l1477 0405                             l1469 03CB                             l1581 04FB  
                           l1573 04BB                             l1661 0238                             l1653 01F5  
                           l1645 01D2                             l1813 00F3                             l1805 00E3  
                           l1821 010C                             l1567 0F13                             l1559 0F05  
                           l1639 0E9F                             l1743 0009                             l1735 0FED  
                           l1727 0FE7                             l1719 0FDE                             l1487 0420  
                           l1479 0408                             l1495 0461                             l1591 051D  
                           l1583 0508                             l1575 04C1                             l1671 0276  
                           l1655 0206                             l1647 01E3                             l1831 0012  
                           l1751 0176                             l1823 0111                             l1815 00FD  
                           l1807 00E6                             l1911 060C                             l1737 0FEE  
                           l1729 0FE8                             l1745 0E32                             l1497 0466  
                           l1489 0442                             l1593 0522                             l1585 050E  
                           l1577 04E4                             l1569 0498                             l1665 0252  
                           l1657 0217                             l1649 01EB                             l1681 0287  
                           l1833 0016                             l1761 018A                             l1753 017B  
                           l1825 0116                             l1817 0101                             l1809 00EB  
                           l1841 003D                             l1921 0635                             l1913 0611  
                           l1905 05FB                             l1691 0F89                             l1739 0005  
                           l1499 02AB                             l1595 0551                             l1587 0512  
                           l1579 04F5                             l1683 02A0                             l1667 0263  
                           l1675 027C                             l1659 021F                             l1835 002A  
                           l1771 019E                             l1763 018C                             l1755 017D  
                           l1747 0171                             l1819 0106                             l1851 0073  
                           l1843 0041                             l1931 0660                             l1923 063B  
                           l1915 0627                             l1907 0602                             l1693 0F90  
                           l1861 0F1B                             l1597 0555                             l1589 051A  
                           l1677 0284                             l1669 026B                             l1837 0034  
                           l1829 000E                             l1781 01BB                             l1773 01A2  
                           l1765 0192                             l1757 0181                             l1749 0172  
                           l1845 0051                             l1941 0699                             l1933 067A  
                           l1925 0645                             l1917 0629                             l1909 0607  
                           l1695 0F95                             l1871 0F33                             l1863 0F23  
                           l1855 0E42                             l1599 0559                             l1775 01B1  
                           l1767 0195                             l1783 01C1                             l1759 0186  
                           l1791 00C8                             l1847 0057                             l1951 06C7  
                           l1943 06AA                             l1935 0681                             l1927 0657  
                           l1919 062E                             l1697 0F9B                             l1689 0F83  
                           l1865 0F27                             l1857 0F15                             l1881 0F53  
                           l1873 0F3A                             l1785 01C6                             l1777 01B5  
                           l1769 019A                             l1793 00C9                             l1849 0066  
                           l1961 06E5                             l1953 06C7                             l1945 06B0  
                           l1937 0687                             l1929 065B                             l1699 0FA0  
                           l1867 0F2B                             l1859 0F19                             l1891 0ED6  
                           l1875 0F42                             l1787 01CB                             l1779 01B6  
                           l1795 00CD                             l1971 0714                             l1963 06E9  
                           l1955 06CC                             l1947 06B7                             l1939 068B  
                           l1885 0E4C                             l1869 0F2F                             l1893 0ED8  
                           l1877 0F44                             l1797 00D2                             l1981 0730  
                           l1973 0721                             l1965 06F6                             l1957 06D3  
                           l1949 06C4                             ?_pad 0024                             l1887 0E51  
                           l1895 0EDC                             l1879 0F46                             l1799 00D4  
                           l1991 0761                             l1983 073B                             l1975 0724  
                           l1967 0707                             l1959 06D8                             l1889 0E58  
                           l1897 0EE5                             l1993 076E                             l1985 073E  
                           l1977 0729                             l1969 070D                             l1899 0EEA  
                           l1995 07AE                             l1987 074D                             l1979 0730  
                           l1997 07C7                             l1989 075D                             l1999 07CD  
                           STR_1 101E                             STR_2 1030                             STR_3 1013  
                           STR_4 1030                             STR_5 1028                             STR_6 1030  
                           STR_7 1002                             STR_8 1002                             u1000 03CB  
                           u1001 03CA                             u1020 03F5                             u1030 0405  
                           u1110 02E1                             u1031 0404                             u1111 02E0  
                           u1040 0418                             u1200 012E                             u1041 0417  
                           u1201 012D                             u1050 0442                             u1130 030D  
                           u1210 0157                             u1051 0441                             u1131 030C  
                           u1211 0156                             u1060 0461                             u1140 0320  
                           u1220 015C                             u1300 04F5                             u1061 0460  
                           u1141 031F                             u1221 015B                             u1301 04F4  
                           u1070 0466                             u1150 0342                             u1230 0E73  
                           u1310 050E                             u1071 0465                             u1055 043E  
                           u1151 0341                             u1231 0E72                             u1215 0153  
                           u1311 050D                             u1160 0360                             u1400 05D6  
                           u1320 0512                             u1161 035F                             u1401 05D5  
                           u1321 0511                             u1305 04F1                             u1170 0365  
                           u1090 02B6                             u1330 0594                             u1250 04B3  
                           u1171 0364                             u1155 033E                             u1091 02B5  
                           u1235 0E6F                             u1331 0593                             u1251 04B1  
                           u1500 0F81                             u1340 05A1                             u1260 04B4  
                           u1245 0EF9                             u1501 0F80                             u1341 05A0  
                           _LATA 010C                             u1190 0121                             u1350 05AE  
                           u1270 04C1                             u1430 01E3                             u1510 0176  
                           _LATB 010D                             u1415 0EC4                             u1191 0120  
                           u1351 05AD                             u1335 0590                             u1271 04C0  
                           u1431 01E2                             u1511 0175                             _LATC 010E  
                           u1360 05BC                             u1440 0206                             u1600 01C6  
                           u1520 0181                             u1425 0EA8                             u1361 05BB  
                           u1441 0205                             u1601 01C5                             u1521 0180  
                           u1370 05C1                             u1290 04E4                             u1450 0217  
                           u1530 0192                             u1610 00CD                             u1371 05C0  
                           u1355 05AA                             u1291 04E3                             u1451 0216  
                           u1531 0191                             u1611 00CC                             u1380 05C8  
                           u1460 0263                             u1700 0034                             u1620 00D8  
                           u1381 05C7                             u1365 05B8                             u1461 0262  
                           u1701 0033                             u1621 00D7                             u1470 0F89  
                           u1390 05CC                             u1550 01A2                             u1630 00E3  
                           u1710 0073                             u1471 0F88                             u1391 05CB  
                           u1551 01A1                             u1631 00E2                             u1711 0072  
                           u1480 0F8F                             u1720 0EDC                             u1800 06F6  
                           u1481 0F8E                             u1721 0EDB                             u1545 0196  
                           u1801 06F5                             u1490 0F95                             u1570 01B1  
                           u1650 00F3                             u1810 0738                             u1491 0F94  
                           u1571 01B0                             u1651 00F2                             u1715 006F  
                           u1660 00FD                             u1820 076E                             u1565 01A3  
                           u1661 00FC                             u1645 00E7                             u1821 076D  
                           u1805 06F2                             u1750 0EF0                             u1590 01C1  
                           u1751 0EEF                             u1735 0EE1                             u1591 01C0  
                           u1575 01AD                             u1680 010C                             u1760 0657  
                           u1745 0EE6                             u1585 01B7                             u1681 010B  
                           u1665 00F9                             u1825 076A                             u1761 0656  
                           u1690 0111                             u1770 067A                             u1691 0110  
                           u1675 0102                             u1771 0679                             u1780 0681  
                           u1837 06BD                             u1781 0680                             u1790 0699  
                           u1847 071A                             u1791 0698                             u1775 0676  
                           u1857 0F1E                             u1867 0E9C                             u1795 0695  
                           u1877 0FA5                             u1887 0EB9                             u1897 0ECD  
                           _WPUA 020C                             _WPUB 020D                             _WPUC 020E  
                           _WPUE 0210                     main@SumPrime 00C9                             abs@a 0073  
                           _dbuf 0120                             _main 05FB                             _dtoa 0496  
                           _prec 006C                             _nout 00D9                             pad@i 0027  
                           pad@p 0025                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             pad@w 0029                             btemp 007E  
             __size_of_LCDPutCmd 001F                             start 0002               __size_of_LCDPutStr 0026  
         __end_of_LCD_Initialize 0F38                 __end_of_LCDClear 0E66                            ??_abs 0075  
                          ??_pad 007C                      LCDPutCmd@ch 0076   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 000C                  __end_of___aodiv 0496                            ?_main 0070  
                          ?_dtoa 0030                  __end_of___aomod 0395                  __end_of___awdiv 01D0  
                __end_of___awmod 011B                  ___awdiv@divisor 0070                  ___awdiv@counter 0075  
                   vfpfcnvrt@fmt 004E                            _PORTB 000D                    main@SumDigits 00CF  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
                          _TRISE 0090                            u99lld 03BF                            _flags 006E  
                 _WDT_Initialize 0E32                            _fputc 0079                            _fputs 0FA9  
                          pad@fp 002B                            _width 00DB                            _putch 0004  
                          main@i 00CB                            dtoa@d 0030                            dtoa@i 004C  
                          dtoa@n 0044                            dtoa@p 003E                            dtoa@s 0042  
                          dtoa@w 0040              __size_of_LCDPutChar 001D                            status 0003  
                          wtemp0 007E                  __end_of_sprintf 0F5C                  ?_LCD_Initialize 0070  
                __initialization 07D7                     __end_of_main 07D7                     __end_of_dtoa 05FB  
                         ??_main 00A9                           ??_dtoa 0038                        ??_LCDGoto 0078  
              __end_of_LCDPutCmd 0ED6                     LCDPutChar@ch 0076                __end_of_LCDPutStr 0F82  
         __end_of_WDT_Initialize 0E36                           ?_fputc 0070                           ?_fputs 0078  
               ___awdiv@dividend 0072                           _ANSELA 018C                           ?_putch 0070  
                         _ANSELB 018D                           _ANSELC 018E                           _BORCON 0116  
                         _ODCONA 028C                           _ODCONB 028D                           _ODCONC 028E  
                         _INLVLA 038C                           _INLVLB 038D                           _INLVLC 038E  
                         _INLVLE 0390                           u101lld 03EA                           u110lld 02D5  
                         _OSCCON 0099                           u112lld 0300                           u108lld 0484  
                         u118lld 0383                           u128lld 04DF                           _WDTCON 0097  
                   LCDPutStr@str 0077                   _LCDWriteNibble 0EF5                     vfprintf@cfmt 0064  
                      ??___aodiv 0070                        ??___aomod 0070                           ___wmul 0ED6  
                      ??___awdiv 0074                        ??___awmod 0074                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075                           pad@buf 0024  
                         dtoa@fp 003D                           _strlen 0E80                           fputc@c 0070  
                         fputs@c 0020                           fputs@i 0021                           fputs@s 0023  
                  main@printchar 00AF                  ?_WDT_Initialize 0070                           putch@c 0070  
               __end_of_vfprintf 003D                        ??_sprintf 007D                        ?_LCDClear 0070  
              _SYSTEM_Initialize 0E42           __end_of_LCDWriteNibble 0F15          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070                        LCDGoto@ln 0077               _last3digitsCarnet1 00E1  
             _last3digitsCarnet2 00DF               _last3digitsCarnet3 00DD                   __pcstackCOMMON 0070  
                   __pidataBANK1 0E3C              ??_SYSTEM_Initialize 0070                    __end_of_fputc 00C8  
                   ??_LCDPutChar 0074                    __end_of_fputs 0FD2                    __end_of_putch 0005  
                 _OPTION_REGbits 0095                   sumdigits@digit 0020                          ??_fputc 0073  
      __end_of_SYSTEM_Initialize 0E4C                          ??_fputs 0079                          ??_putch 0070  
                     __pbssBANK0 006C                       __pbssBANK1 00D1                       __pbssBANK2 0120  
                     ??_LCDClear 007D                  ?_LCDWriteNibble 0070               __end_of_LCDPutChar 0EB7  
                     __pmaintext 05FB                          ?___wmul 0070                          ?_strlen 0070  
                        _LCDGoto 0F82               __size_of_vfpfcnvrt 00DB                          _OSCTUNE 0098  
                        _SLRCONA 030C                          _SLRCONB 030D                          _SLRCONC 030E  
             __size_of_sumdigits 003C                 ??_LCD_Initialize 0077                          ___aodiv 0395  
                        ___aomod 02AB                          ___awdiv 0171                          ___awmod 00C8  
                __size_of___wmul 001F                        ?_vfprintf 005E                          __ptext1 003D  
                        __ptext2 00C8                          __ptext3 0171                          __ptext4 0F38  
                        __ptext5 000C                          __ptext6 01D0                          __ptext7 0496  
                        __ptext8 011B                          __ptext9 0E80                  __size_of_strlen 001A  
          _OSCILLATOR_Initialize 0005                     __size_of_abs 001A                     __size_of_pad 0056  
               ___awmod@dividend 0072         ??_PIN_MANAGER_Initialize 0070                        _LCDPutCmd 0EB7  
                        main@bin 00BD       __size_of_SYSTEM_Initialize 000A                          _sprintf 0F38  
                        clrloop0 0E37                        _LCDPutStr 0F5C             end_of_initialization 07FD  
                        fputc@fp 0072                          fputs@fp 0078                __end_of_vfpfcnvrt 02AB  
                     ??_vfprintf 0061                __end_ofmain@label 1002                          strlen@a 0073  
                        strlen@s 0074                __end_of_sumdigits 0079                 ??_WDT_Initialize 0070  
                      _PORTBbits 000D                       main@Binary 00B9                       ?_LCDPutCmd 0070  
                     ?_LCDPutStr 0077                       main@carnet 00C7                       LCDGoto@pos 007A  
              __size_of_LCDClear 001A                       main@number 00CD                      vfpfcnvrt@ap 004F  
                    vfpfcnvrt@fp 005D                       LCDPutStr@i 007C                      vfpfcnvrt@ll 0055  
                 __end_of___wmul 0EF5           ?_OSCILLATOR_Initialize 0070                   __end_of_strlen 0E9A  
            start_initialization 07D7  __size_of_PIN_MANAGER_Initialize 002E                 ??_LCDWriteNibble 0071  
                    __end_of_abs 0E80                      __end_of_pad 0171                      vfprintf@fmt 005E  
                       ??___wmul 0074                      __pdataBANK1 00DD                  sumdigits@number 0079  
                       ??_strlen 0072                         ?_LCDGoto 0077                        ___latbits 0003  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0                 ___aodiv@dividend 0028  
                    ??_LCDPutCmd 0074                      ??_LCDPutStr 0079           _PIN_MANAGER_Initialize 0FD2  
                       ?___aodiv 0020                         ?___aomod 0020                         ?___awdiv 0070  
               ___aodiv@quotient 0073                         ?___awmod 0070                 LCDWriteNibble@ch 0073  
               LCDWriteNibble@rs 0070                __size_of_vfprintf 0031                         ?_sprintf 0066  
                 __size_of_fputc 004F                   __size_of_fputs 0029                   __size_of_putch 0001  
                       _LCDClear 0E4C                   ___wmul@product 0074                        clear_ram0 0E36  
                    _LCDGoto$222 0078                        main@F5610 00D1                        _vfpfcnvrt 01D0  
              ___wmul@multiplier 0070                        main@label 1000                        _sumdigits 003D  
               __size_of_LCDGoto 0027                        main@prime 00C5                       vfprintf@ap 0060  
                     vfprintf@fp 0063          ??_OSCILLATOR_Initialize 0070          __size_of_LCD_Initialize 0023  
               __size_of___aodiv 0101                 __size_of___aomod 00EA                 __size_of___awdiv 005F  
               __size_of___awmod 0053                       ?_vfpfcnvrt 004E                  ___aodiv@divisor 0020  
                ___aodiv@counter 0071                       sprintf@fmt 0066               sumdigits@SumDigits 0022  
                     ?_sumdigits 0079                         _dtoa$611 003B                         __ptext10 0FA9  
                       __ptext11 0079                         __ptext20 0005                         __ptext12 0004  
                       __ptext21 0F15                         __ptext13 0E66                         __ptext22 0E4C  
                       __ptext14 02AB                         __ptext23 0F5C                         __ptext15 0395  
                       __ptext24 0E9A                         __ptext16 0ED6                         __ptext25 0F82  
                       __ptext17 0E42                         __ptext26 0EB7                         __ptext18 0E32  
                       __ptext27 0EF5                         __ptext19 0FD2                 __size_of_sprintf 0024  
                  __size_of_main 01DC                    __size_of_dtoa 0165                         _vfprintf 000C  
                     _LCDPutChar 0E9A                 ___aomod@dividend 0028          __size_of_WDT_Initialize 0004  
                      sprintf@ap 00A2          ?_PIN_MANAGER_Initialize 0070                  ___aomod@divisor 0020  
                    ??_vfpfcnvrt 0050                  ___aomod@counter 0071                    __pstringtext1 1000  
                  __pstringtext2 1013                    __pstringtext3 101E                    __pstringtext4 1028  
                  __pstringtext5 1030                    __pstringtext6 0000                         sprintf@f 00A4  
                       sprintf@s 00A3                      ??_sumdigits 007B                     ___aodiv@sign 0072  
 __end_of_PIN_MANAGER_Initialize 1000          __size_of_LCDWriteNibble 0020                     ___aomod@sign 0072  
