

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jun 02 15:35:02 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16LF1718
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16LF1718 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  011A                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011C                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  018E                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0199                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019D                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019E                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  020C                     	;# 
   186  020D                     	;# 
   187  020E                     	;# 
   188  0210                     	;# 
   189  0211                     	;# 
   190  0211                     	;# 
   191  0212                     	;# 
   192  0212                     	;# 
   193  0213                     	;# 
   194  0213                     	;# 
   195  0214                     	;# 
   196  0214                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0216                     	;# 
   202  0216                     	;# 
   203  0217                     	;# 
   204  0217                     	;# 
   205  028C                     	;# 
   206  028D                     	;# 
   207  028E                     	;# 
   208  0291                     	;# 
   209  0291                     	;# 
   210  0292                     	;# 
   211  0293                     	;# 
   212  0293                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029A                     	;# 
   218  029E                     	;# 
   219  030C                     	;# 
   220  030D                     	;# 
   221  030E                     	;# 
   222  038C                     	;# 
   223  038D                     	;# 
   224  038E                     	;# 
   225  0390                     	;# 
   226  0391                     	;# 
   227  0392                     	;# 
   228  0393                     	;# 
   229  0394                     	;# 
   230  0395                     	;# 
   231  0396                     	;# 
   232  0397                     	;# 
   233  0398                     	;# 
   234  0399                     	;# 
   235  039D                     	;# 
   236  039E                     	;# 
   237  039F                     	;# 
   238  0415                     	;# 
   239  0416                     	;# 
   240  0417                     	;# 
   241  041C                     	;# 
   242  041D                     	;# 
   243  041E                     	;# 
   244  0498                     	;# 
   245  0498                     	;# 
   246  0499                     	;# 
   247  049A                     	;# 
   248  049B                     	;# 
   249  049B                     	;# 
   250  049C                     	;# 
   251  049D                     	;# 
   252  049E                     	;# 
   253  049F                     	;# 
   254  0511                     	;# 
   255  0515                     	;# 
   256  0617                     	;# 
   257  0618                     	;# 
   258  0619                     	;# 
   259  0619                     	;# 
   260  061A                     	;# 
   261  061B                     	;# 
   262  061C                     	;# 
   263  061C                     	;# 
   264  0691                     	;# 
   265  0692                     	;# 
   266  0693                     	;# 
   267  0694                     	;# 
   268  0695                     	;# 
   269  0696                     	;# 
   270  0697                     	;# 
   271  0698                     	;# 
   272  0699                     	;# 
   273  069A                     	;# 
   274  069B                     	;# 
   275  069C                     	;# 
   276  069D                     	;# 
   277  069E                     	;# 
   278  069F                     	;# 
   279  0E0F                     	;# 
   280  0E10                     	;# 
   281  0E11                     	;# 
   282  0E12                     	;# 
   283  0E13                     	;# 
   284  0E14                     	;# 
   285  0E15                     	;# 
   286  0E17                     	;# 
   287  0E20                     	;# 
   288  0E21                     	;# 
   289  0E22                     	;# 
   290  0E24                     	;# 
   291  0E25                     	;# 
   292  0E28                     	;# 
   293  0E29                     	;# 
   294  0E2A                     	;# 
   295  0E2B                     	;# 
   296  0E90                     	;# 
   297  0E91                     	;# 
   298  0E92                     	;# 
   299  0E93                     	;# 
   300  0E94                     	;# 
   301  0E95                     	;# 
   302  0E96                     	;# 
   303  0E97                     	;# 
   304  0E98                     	;# 
   305  0E99                     	;# 
   306  0E9A                     	;# 
   307  0E9B                     	;# 
   308  0E9C                     	;# 
   309  0E9D                     	;# 
   310  0E9E                     	;# 
   311  0E9F                     	;# 
   312  0EA0                     	;# 
   313  0EA1                     	;# 
   314  0EA2                     	;# 
   315  0EA3                     	;# 
   316  0EA4                     	;# 
   317  0EA5                     	;# 
   318  0EA6                     	;# 
   319  0EA7                     	;# 
   320  0F0F                     	;# 
   321  0F10                     	;# 
   322  0F11                     	;# 
   323  0F12                     	;# 
   324  0F13                     	;# 
   325  0F14                     	;# 
   326  0F15                     	;# 
   327  0F16                     	;# 
   328  0F17                     	;# 
   329  0F18                     	;# 
   330  0F19                     	;# 
   331  0F1A                     	;# 
   332  0F1B                     	;# 
   333  0F1C                     	;# 
   334  0F1D                     	;# 
   335  0F1E                     	;# 
   336  0F1F                     	;# 
   337  0F20                     	;# 
   338  0F21                     	;# 
   339  0F22                     	;# 
   340  0F23                     	;# 
   341  0F24                     	;# 
   342  0F25                     	;# 
   343  0F26                     	;# 
   344  0F27                     	;# 
   345  0F28                     	;# 
   346  0F29                     	;# 
   347  0F2A                     	;# 
   348  0F2B                     	;# 
   349  0F2C                     	;# 
   350  0F2D                     	;# 
   351  0F2E                     	;# 
   352  0F2F                     	;# 
   353  0F30                     	;# 
   354  0F31                     	;# 
   355  0F32                     	;# 
   356  0F33                     	;# 
   357  0F34                     	;# 
   358  0F35                     	;# 
   359  0F36                     	;# 
   360  0F37                     	;# 
   361  0FE4                     	;# 
   362  0FE5                     	;# 
   363  0FE6                     	;# 
   364  0FE7                     	;# 
   365  0FE8                     	;# 
   366  0FE9                     	;# 
   367  0FEA                     	;# 
   368  0FEB                     	;# 
   369  0FED                     	;# 
   370  0FEE                     	;# 
   371  0FEF                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  008C                     	;# 
   401  008D                     	;# 
   402  008E                     	;# 
   403  0090                     	;# 
   404  0091                     	;# 
   405  0092                     	;# 
   406  0093                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0097                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009A                     	;# 
   413  009B                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  010C                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  0111                     	;# 
   423  0112                     	;# 
   424  0113                     	;# 
   425  0114                     	;# 
   426  0115                     	;# 
   427  0116                     	;# 
   428  0117                     	;# 
   429  0118                     	;# 
   430  0119                     	;# 
   431  011A                     	;# 
   432  011B                     	;# 
   433  011B                     	;# 
   434  011C                     	;# 
   435  018C                     	;# 
   436  018D                     	;# 
   437  018E                     	;# 
   438  0191                     	;# 
   439  0191                     	;# 
   440  0192                     	;# 
   441  0193                     	;# 
   442  0193                     	;# 
   443  0194                     	;# 
   444  0195                     	;# 
   445  0196                     	;# 
   446  0199                     	;# 
   447  0199                     	;# 
   448  0199                     	;# 
   449  019A                     	;# 
   450  019A                     	;# 
   451  019A                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019C                     	;# 
   458  019C                     	;# 
   459  019C                     	;# 
   460  019D                     	;# 
   461  019D                     	;# 
   462  019D                     	;# 
   463  019E                     	;# 
   464  019E                     	;# 
   465  019E                     	;# 
   466  019F                     	;# 
   467  019F                     	;# 
   468  019F                     	;# 
   469  019F                     	;# 
   470  019F                     	;# 
   471  020C                     	;# 
   472  020D                     	;# 
   473  020E                     	;# 
   474  0210                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0212                     	;# 
   479  0213                     	;# 
   480  0213                     	;# 
   481  0214                     	;# 
   482  0214                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0216                     	;# 
   489  0217                     	;# 
   490  0217                     	;# 
   491  028C                     	;# 
   492  028D                     	;# 
   493  028E                     	;# 
   494  0291                     	;# 
   495  0291                     	;# 
   496  0292                     	;# 
   497  0293                     	;# 
   498  0293                     	;# 
   499  0298                     	;# 
   500  0298                     	;# 
   501  0299                     	;# 
   502  029A                     	;# 
   503  029A                     	;# 
   504  029E                     	;# 
   505  030C                     	;# 
   506  030D                     	;# 
   507  030E                     	;# 
   508  038C                     	;# 
   509  038D                     	;# 
   510  038E                     	;# 
   511  0390                     	;# 
   512  0391                     	;# 
   513  0392                     	;# 
   514  0393                     	;# 
   515  0394                     	;# 
   516  0395                     	;# 
   517  0396                     	;# 
   518  0397                     	;# 
   519  0398                     	;# 
   520  0399                     	;# 
   521  039D                     	;# 
   522  039E                     	;# 
   523  039F                     	;# 
   524  0415                     	;# 
   525  0416                     	;# 
   526  0417                     	;# 
   527  041C                     	;# 
   528  041D                     	;# 
   529  041E                     	;# 
   530  0498                     	;# 
   531  0498                     	;# 
   532  0499                     	;# 
   533  049A                     	;# 
   534  049B                     	;# 
   535  049B                     	;# 
   536  049C                     	;# 
   537  049D                     	;# 
   538  049E                     	;# 
   539  049F                     	;# 
   540  0511                     	;# 
   541  0515                     	;# 
   542  0617                     	;# 
   543  0618                     	;# 
   544  0619                     	;# 
   545  0619                     	;# 
   546  061A                     	;# 
   547  061B                     	;# 
   548  061C                     	;# 
   549  061C                     	;# 
   550  0691                     	;# 
   551  0692                     	;# 
   552  0693                     	;# 
   553  0694                     	;# 
   554  0695                     	;# 
   555  0696                     	;# 
   556  0697                     	;# 
   557  0698                     	;# 
   558  0699                     	;# 
   559  069A                     	;# 
   560  069B                     	;# 
   561  069C                     	;# 
   562  069D                     	;# 
   563  069E                     	;# 
   564  069F                     	;# 
   565  0E0F                     	;# 
   566  0E10                     	;# 
   567  0E11                     	;# 
   568  0E12                     	;# 
   569  0E13                     	;# 
   570  0E14                     	;# 
   571  0E15                     	;# 
   572  0E17                     	;# 
   573  0E20                     	;# 
   574  0E21                     	;# 
   575  0E22                     	;# 
   576  0E24                     	;# 
   577  0E25                     	;# 
   578  0E28                     	;# 
   579  0E29                     	;# 
   580  0E2A                     	;# 
   581  0E2B                     	;# 
   582  0E90                     	;# 
   583  0E91                     	;# 
   584  0E92                     	;# 
   585  0E93                     	;# 
   586  0E94                     	;# 
   587  0E95                     	;# 
   588  0E96                     	;# 
   589  0E97                     	;# 
   590  0E98                     	;# 
   591  0E99                     	;# 
   592  0E9A                     	;# 
   593  0E9B                     	;# 
   594  0E9C                     	;# 
   595  0E9D                     	;# 
   596  0E9E                     	;# 
   597  0E9F                     	;# 
   598  0EA0                     	;# 
   599  0EA1                     	;# 
   600  0EA2                     	;# 
   601  0EA3                     	;# 
   602  0EA4                     	;# 
   603  0EA5                     	;# 
   604  0EA6                     	;# 
   605  0EA7                     	;# 
   606  0F0F                     	;# 
   607  0F10                     	;# 
   608  0F11                     	;# 
   609  0F12                     	;# 
   610  0F13                     	;# 
   611  0F14                     	;# 
   612  0F15                     	;# 
   613  0F16                     	;# 
   614  0F17                     	;# 
   615  0F18                     	;# 
   616  0F19                     	;# 
   617  0F1A                     	;# 
   618  0F1B                     	;# 
   619  0F1C                     	;# 
   620  0F1D                     	;# 
   621  0F1E                     	;# 
   622  0F1F                     	;# 
   623  0F20                     	;# 
   624  0F21                     	;# 
   625  0F22                     	;# 
   626  0F23                     	;# 
   627  0F24                     	;# 
   628  0F25                     	;# 
   629  0F26                     	;# 
   630  0F27                     	;# 
   631  0F28                     	;# 
   632  0F29                     	;# 
   633  0F2A                     	;# 
   634  0F2B                     	;# 
   635  0F2C                     	;# 
   636  0F2D                     	;# 
   637  0F2E                     	;# 
   638  0F2F                     	;# 
   639  0F30                     	;# 
   640  0F31                     	;# 
   641  0F32                     	;# 
   642  0F33                     	;# 
   643  0F34                     	;# 
   644  0F35                     	;# 
   645  0F36                     	;# 
   646  0F37                     	;# 
   647  0FE4                     	;# 
   648  0FE5                     	;# 
   649  0FE6                     	;# 
   650  0FE7                     	;# 
   651  0FE8                     	;# 
   652  0FE9                     	;# 
   653  0FEA                     	;# 
   654  0FEB                     	;# 
   655  0FED                     	;# 
   656  0FEE                     	;# 
   657  0FEF                     	;# 
   658  0000                     	;# 
   659  0001                     	;# 
   660  0002                     	;# 
   661  0003                     	;# 
   662  0004                     	;# 
   663  0005                     	;# 
   664  0006                     	;# 
   665  0007                     	;# 
   666  0008                     	;# 
   667  0009                     	;# 
   668  000A                     	;# 
   669  000B                     	;# 
   670  000C                     	;# 
   671  000D                     	;# 
   672  000E                     	;# 
   673  0010                     	;# 
   674  0011                     	;# 
   675  0012                     	;# 
   676  0013                     	;# 
   677  0015                     	;# 
   678  0016                     	;# 
   679  0016                     	;# 
   680  0017                     	;# 
   681  0018                     	;# 
   682  0019                     	;# 
   683  001A                     	;# 
   684  001B                     	;# 
   685  001C                     	;# 
   686  008C                     	;# 
   687  008D                     	;# 
   688  008E                     	;# 
   689  0090                     	;# 
   690  0091                     	;# 
   691  0092                     	;# 
   692  0093                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0098                     	;# 
   697  0099                     	;# 
   698  009A                     	;# 
   699  009B                     	;# 
   700  009B                     	;# 
   701  009C                     	;# 
   702  009D                     	;# 
   703  009E                     	;# 
   704  009F                     	;# 
   705  010C                     	;# 
   706  010D                     	;# 
   707  010E                     	;# 
   708  0111                     	;# 
   709  0112                     	;# 
   710  0113                     	;# 
   711  0114                     	;# 
   712  0115                     	;# 
   713  0116                     	;# 
   714  0117                     	;# 
   715  0118                     	;# 
   716  0119                     	;# 
   717  011A                     	;# 
   718  011B                     	;# 
   719  011B                     	;# 
   720  011C                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  018E                     	;# 
   724  0191                     	;# 
   725  0191                     	;# 
   726  0192                     	;# 
   727  0193                     	;# 
   728  0193                     	;# 
   729  0194                     	;# 
   730  0195                     	;# 
   731  0196                     	;# 
   732  0199                     	;# 
   733  0199                     	;# 
   734  0199                     	;# 
   735  019A                     	;# 
   736  019A                     	;# 
   737  019A                     	;# 
   738  019B                     	;# 
   739  019B                     	;# 
   740  019B                     	;# 
   741  019B                     	;# 
   742  019B                     	;# 
   743  019C                     	;# 
   744  019C                     	;# 
   745  019C                     	;# 
   746  019D                     	;# 
   747  019D                     	;# 
   748  019D                     	;# 
   749  019E                     	;# 
   750  019E                     	;# 
   751  019E                     	;# 
   752  019F                     	;# 
   753  019F                     	;# 
   754  019F                     	;# 
   755  019F                     	;# 
   756  019F                     	;# 
   757  020C                     	;# 
   758  020D                     	;# 
   759  020E                     	;# 
   760  0210                     	;# 
   761  0211                     	;# 
   762  0211                     	;# 
   763  0212                     	;# 
   764  0212                     	;# 
   765  0213                     	;# 
   766  0213                     	;# 
   767  0214                     	;# 
   768  0214                     	;# 
   769  0215                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0215                     	;# 
   773  0216                     	;# 
   774  0216                     	;# 
   775  0217                     	;# 
   776  0217                     	;# 
   777  028C                     	;# 
   778  028D                     	;# 
   779  028E                     	;# 
   780  0291                     	;# 
   781  0291                     	;# 
   782  0292                     	;# 
   783  0293                     	;# 
   784  0293                     	;# 
   785  0298                     	;# 
   786  0298                     	;# 
   787  0299                     	;# 
   788  029A                     	;# 
   789  029A                     	;# 
   790  029E                     	;# 
   791  030C                     	;# 
   792  030D                     	;# 
   793  030E                     	;# 
   794  038C                     	;# 
   795  038D                     	;# 
   796  038E                     	;# 
   797  0390                     	;# 
   798  0391                     	;# 
   799  0392                     	;# 
   800  0393                     	;# 
   801  0394                     	;# 
   802  0395                     	;# 
   803  0396                     	;# 
   804  0397                     	;# 
   805  0398                     	;# 
   806  0399                     	;# 
   807  039D                     	;# 
   808  039E                     	;# 
   809  039F                     	;# 
   810  0415                     	;# 
   811  0416                     	;# 
   812  0417                     	;# 
   813  041C                     	;# 
   814  041D                     	;# 
   815  041E                     	;# 
   816  0498                     	;# 
   817  0498                     	;# 
   818  0499                     	;# 
   819  049A                     	;# 
   820  049B                     	;# 
   821  049B                     	;# 
   822  049C                     	;# 
   823  049D                     	;# 
   824  049E                     	;# 
   825  049F                     	;# 
   826  0511                     	;# 
   827  0515                     	;# 
   828  0617                     	;# 
   829  0618                     	;# 
   830  0619                     	;# 
   831  0619                     	;# 
   832  061A                     	;# 
   833  061B                     	;# 
   834  061C                     	;# 
   835  061C                     	;# 
   836  0691                     	;# 
   837  0692                     	;# 
   838  0693                     	;# 
   839  0694                     	;# 
   840  0695                     	;# 
   841  0696                     	;# 
   842  0697                     	;# 
   843  0698                     	;# 
   844  0699                     	;# 
   845  069A                     	;# 
   846  069B                     	;# 
   847  069C                     	;# 
   848  069D                     	;# 
   849  069E                     	;# 
   850  069F                     	;# 
   851  0E0F                     	;# 
   852  0E10                     	;# 
   853  0E11                     	;# 
   854  0E12                     	;# 
   855  0E13                     	;# 
   856  0E14                     	;# 
   857  0E15                     	;# 
   858  0E17                     	;# 
   859  0E20                     	;# 
   860  0E21                     	;# 
   861  0E22                     	;# 
   862  0E24                     	;# 
   863  0E25                     	;# 
   864  0E28                     	;# 
   865  0E29                     	;# 
   866  0E2A                     	;# 
   867  0E2B                     	;# 
   868  0E90                     	;# 
   869  0E91                     	;# 
   870  0E92                     	;# 
   871  0E93                     	;# 
   872  0E94                     	;# 
   873  0E95                     	;# 
   874  0E96                     	;# 
   875  0E97                     	;# 
   876  0E98                     	;# 
   877  0E99                     	;# 
   878  0E9A                     	;# 
   879  0E9B                     	;# 
   880  0E9C                     	;# 
   881  0E9D                     	;# 
   882  0E9E                     	;# 
   883  0E9F                     	;# 
   884  0EA0                     	;# 
   885  0EA1                     	;# 
   886  0EA2                     	;# 
   887  0EA3                     	;# 
   888  0EA4                     	;# 
   889  0EA5                     	;# 
   890  0EA6                     	;# 
   891  0EA7                     	;# 
   892  0F0F                     	;# 
   893  0F10                     	;# 
   894  0F11                     	;# 
   895  0F12                     	;# 
   896  0F13                     	;# 
   897  0F14                     	;# 
   898  0F15                     	;# 
   899  0F16                     	;# 
   900  0F17                     	;# 
   901  0F18                     	;# 
   902  0F19                     	;# 
   903  0F1A                     	;# 
   904  0F1B                     	;# 
   905  0F1C                     	;# 
   906  0F1D                     	;# 
   907  0F1E                     	;# 
   908  0F1F                     	;# 
   909  0F20                     	;# 
   910  0F21                     	;# 
   911  0F22                     	;# 
   912  0F23                     	;# 
   913  0F24                     	;# 
   914  0F25                     	;# 
   915  0F26                     	;# 
   916  0F27                     	;# 
   917  0F28                     	;# 
   918  0F29                     	;# 
   919  0F2A                     	;# 
   920  0F2B                     	;# 
   921  0F2C                     	;# 
   922  0F2D                     	;# 
   923  0F2E                     	;# 
   924  0F2F                     	;# 
   925  0F30                     	;# 
   926  0F31                     	;# 
   927  0F32                     	;# 
   928  0F33                     	;# 
   929  0F34                     	;# 
   930  0F35                     	;# 
   931  0F36                     	;# 
   932  0F37                     	;# 
   933  0FE4                     	;# 
   934  0FE5                     	;# 
   935  0FE6                     	;# 
   936  0FE7                     	;# 
   937  0FE8                     	;# 
   938  0FE9                     	;# 
   939  0FEA                     	;# 
   940  0FEB                     	;# 
   941  0FED                     	;# 
   942  0FEE                     	;# 
   943  0FEF                     	;# 
   944  0000                     	;# 
   945  0001                     	;# 
   946  0002                     	;# 
   947  0003                     	;# 
   948  0004                     	;# 
   949  0005                     	;# 
   950  0006                     	;# 
   951  0007                     	;# 
   952  0008                     	;# 
   953  0009                     	;# 
   954  000A                     	;# 
   955  000B                     	;# 
   956  000C                     	;# 
   957  000D                     	;# 
   958  000E                     	;# 
   959  0010                     	;# 
   960  0011                     	;# 
   961  0012                     	;# 
   962  0013                     	;# 
   963  0015                     	;# 
   964  0016                     	;# 
   965  0016                     	;# 
   966  0017                     	;# 
   967  0018                     	;# 
   968  0019                     	;# 
   969  001A                     	;# 
   970  001B                     	;# 
   971  001C                     	;# 
   972  008C                     	;# 
   973  008D                     	;# 
   974  008E                     	;# 
   975  0090                     	;# 
   976  0091                     	;# 
   977  0092                     	;# 
   978  0093                     	;# 
   979  0095                     	;# 
   980  0096                     	;# 
   981  0097                     	;# 
   982  0098                     	;# 
   983  0099                     	;# 
   984  009A                     	;# 
   985  009B                     	;# 
   986  009B                     	;# 
   987  009C                     	;# 
   988  009D                     	;# 
   989  009E                     	;# 
   990  009F                     	;# 
   991  010C                     	;# 
   992  010D                     	;# 
   993  010E                     	;# 
   994  0111                     	;# 
   995  0112                     	;# 
   996  0113                     	;# 
   997  0114                     	;# 
   998  0115                     	;# 
   999  0116                     	;# 
  1000  0117                     	;# 
  1001  0118                     	;# 
  1002  0119                     	;# 
  1003  011A                     	;# 
  1004  011B                     	;# 
  1005  011B                     	;# 
  1006  011C                     	;# 
  1007  018C                     	;# 
  1008  018D                     	;# 
  1009  018E                     	;# 
  1010  0191                     	;# 
  1011  0191                     	;# 
  1012  0192                     	;# 
  1013  0193                     	;# 
  1014  0193                     	;# 
  1015  0194                     	;# 
  1016  0195                     	;# 
  1017  0196                     	;# 
  1018  0199                     	;# 
  1019  0199                     	;# 
  1020  0199                     	;# 
  1021  019A                     	;# 
  1022  019A                     	;# 
  1023  019A                     	;# 
  1024  019B                     	;# 
  1025  019B                     	;# 
  1026  019B                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019C                     	;# 
  1030  019C                     	;# 
  1031  019C                     	;# 
  1032  019D                     	;# 
  1033  019D                     	;# 
  1034  019D                     	;# 
  1035  019E                     	;# 
  1036  019E                     	;# 
  1037  019E                     	;# 
  1038  019F                     	;# 
  1039  019F                     	;# 
  1040  019F                     	;# 
  1041  019F                     	;# 
  1042  019F                     	;# 
  1043  020C                     	;# 
  1044  020D                     	;# 
  1045  020E                     	;# 
  1046  0210                     	;# 
  1047  0211                     	;# 
  1048  0211                     	;# 
  1049  0212                     	;# 
  1050  0212                     	;# 
  1051  0213                     	;# 
  1052  0213                     	;# 
  1053  0214                     	;# 
  1054  0214                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0215                     	;# 
  1058  0215                     	;# 
  1059  0216                     	;# 
  1060  0216                     	;# 
  1061  0217                     	;# 
  1062  0217                     	;# 
  1063  028C                     	;# 
  1064  028D                     	;# 
  1065  028E                     	;# 
  1066  0291                     	;# 
  1067  0291                     	;# 
  1068  0292                     	;# 
  1069  0293                     	;# 
  1070  0293                     	;# 
  1071  0298                     	;# 
  1072  0298                     	;# 
  1073  0299                     	;# 
  1074  029A                     	;# 
  1075  029A                     	;# 
  1076  029E                     	;# 
  1077  030C                     	;# 
  1078  030D                     	;# 
  1079  030E                     	;# 
  1080  038C                     	;# 
  1081  038D                     	;# 
  1082  038E                     	;# 
  1083  0390                     	;# 
  1084  0391                     	;# 
  1085  0392                     	;# 
  1086  0393                     	;# 
  1087  0394                     	;# 
  1088  0395                     	;# 
  1089  0396                     	;# 
  1090  0397                     	;# 
  1091  0398                     	;# 
  1092  0399                     	;# 
  1093  039D                     	;# 
  1094  039E                     	;# 
  1095  039F                     	;# 
  1096  0415                     	;# 
  1097  0416                     	;# 
  1098  0417                     	;# 
  1099  041C                     	;# 
  1100  041D                     	;# 
  1101  041E                     	;# 
  1102  0498                     	;# 
  1103  0498                     	;# 
  1104  0499                     	;# 
  1105  049A                     	;# 
  1106  049B                     	;# 
  1107  049B                     	;# 
  1108  049C                     	;# 
  1109  049D                     	;# 
  1110  049E                     	;# 
  1111  049F                     	;# 
  1112  0511                     	;# 
  1113  0515                     	;# 
  1114  0617                     	;# 
  1115  0618                     	;# 
  1116  0619                     	;# 
  1117  0619                     	;# 
  1118  061A                     	;# 
  1119  061B                     	;# 
  1120  061C                     	;# 
  1121  061C                     	;# 
  1122  0691                     	;# 
  1123  0692                     	;# 
  1124  0693                     	;# 
  1125  0694                     	;# 
  1126  0695                     	;# 
  1127  0696                     	;# 
  1128  0697                     	;# 
  1129  0698                     	;# 
  1130  0699                     	;# 
  1131  069A                     	;# 
  1132  069B                     	;# 
  1133  069C                     	;# 
  1134  069D                     	;# 
  1135  069E                     	;# 
  1136  069F                     	;# 
  1137  0E0F                     	;# 
  1138  0E10                     	;# 
  1139  0E11                     	;# 
  1140  0E12                     	;# 
  1141  0E13                     	;# 
  1142  0E14                     	;# 
  1143  0E15                     	;# 
  1144  0E17                     	;# 
  1145  0E20                     	;# 
  1146  0E21                     	;# 
  1147  0E22                     	;# 
  1148  0E24                     	;# 
  1149  0E25                     	;# 
  1150  0E28                     	;# 
  1151  0E29                     	;# 
  1152  0E2A                     	;# 
  1153  0E2B                     	;# 
  1154  0E90                     	;# 
  1155  0E91                     	;# 
  1156  0E92                     	;# 
  1157  0E93                     	;# 
  1158  0E94                     	;# 
  1159  0E95                     	;# 
  1160  0E96                     	;# 
  1161  0E97                     	;# 
  1162  0E98                     	;# 
  1163  0E99                     	;# 
  1164  0E9A                     	;# 
  1165  0E9B                     	;# 
  1166  0E9C                     	;# 
  1167  0E9D                     	;# 
  1168  0E9E                     	;# 
  1169  0E9F                     	;# 
  1170  0EA0                     	;# 
  1171  0EA1                     	;# 
  1172  0EA2                     	;# 
  1173  0EA3                     	;# 
  1174  0EA4                     	;# 
  1175  0EA5                     	;# 
  1176  0EA6                     	;# 
  1177  0EA7                     	;# 
  1178  0F0F                     	;# 
  1179  0F10                     	;# 
  1180  0F11                     	;# 
  1181  0F12                     	;# 
  1182  0F13                     	;# 
  1183  0F14                     	;# 
  1184  0F15                     	;# 
  1185  0F16                     	;# 
  1186  0F17                     	;# 
  1187  0F18                     	;# 
  1188  0F19                     	;# 
  1189  0F1A                     	;# 
  1190  0F1B                     	;# 
  1191  0F1C                     	;# 
  1192  0F1D                     	;# 
  1193  0F1E                     	;# 
  1194  0F1F                     	;# 
  1195  0F20                     	;# 
  1196  0F21                     	;# 
  1197  0F22                     	;# 
  1198  0F23                     	;# 
  1199  0F24                     	;# 
  1200  0F25                     	;# 
  1201  0F26                     	;# 
  1202  0F27                     	;# 
  1203  0F28                     	;# 
  1204  0F29                     	;# 
  1205  0F2A                     	;# 
  1206  0F2B                     	;# 
  1207  0F2C                     	;# 
  1208  0F2D                     	;# 
  1209  0F2E                     	;# 
  1210  0F2F                     	;# 
  1211  0F30                     	;# 
  1212  0F31                     	;# 
  1213  0F32                     	;# 
  1214  0F33                     	;# 
  1215  0F34                     	;# 
  1216  0F35                     	;# 
  1217  0F36                     	;# 
  1218  0F37                     	;# 
  1219  0FE4                     	;# 
  1220  0FE5                     	;# 
  1221  0FE6                     	;# 
  1222  0FE7                     	;# 
  1223  0FE8                     	;# 
  1224  0FE9                     	;# 
  1225  0FEA                     	;# 
  1226  0FEB                     	;# 
  1227  0FED                     	;# 
  1228  0FEE                     	;# 
  1229  0FEF                     	;# 
  1230                           
  1231                           	psect	idataBANK1
  1232  0E0B                     __pidataBANK1:
  1233                           
  1234                           ;initializer for _last3digitsCarnet3
  1235  0E0B  34A4               	retlw	164
  1236  0E0C  3401               	retlw	1
  1237                           
  1238                           ;initializer for _last3digitsCarnet2
  1239  0E0D  34ED               	retlw	237
  1240  0E0E  3401               	retlw	1
  1241                           
  1242                           ;initializer for _last3digitsCarnet1
  1243  0E0F  34FF               	retlw	255
  1244  0E10  3400               	retlw	0
  1245                           
  1246                           	psect	stringtext1
  1247  1000                     __pstringtext1:
  1248  1000                     main@label:
  1249  1000  3401               	retlw	1
  1250  1001  3400               	retlw	0
  1251  1002                     __end_ofmain@label:
  1252  000D                     _PORTBbits	set	13
  1253  000D                     _PORTB	set	13
  1254  0097                     _WDTCON	set	151
  1255  0098                     _OSCTUNE	set	152
  1256  0099                     _OSCCON	set	153
  1257  0095                     _OPTION_REGbits	set	149
  1258  008E                     _TRISC	set	142
  1259  008D                     _TRISB	set	141
  1260  008C                     _TRISA	set	140
  1261  0090                     _TRISE	set	144
  1262  0116                     _BORCON	set	278
  1263  010E                     _LATC	set	270
  1264  010D                     _LATB	set	269
  1265  010C                     _LATA	set	268
  1266  018C                     _ANSELA	set	396
  1267  018D                     _ANSELB	set	397
  1268  018E                     _ANSELC	set	398
  1269  020E                     _WPUC	set	526
  1270  020C                     _WPUA	set	524
  1271  020D                     _WPUB	set	525
  1272  0210                     _WPUE	set	528
  1273  028E                     _ODCONC	set	654
  1274  028D                     _ODCONB	set	653
  1275  028C                     _ODCONA	set	652
  1276  030E                     _SLRCONC	set	782
  1277  030D                     _SLRCONB	set	781
  1278  030C                     _SLRCONA	set	780
  1279  0390                     _INLVLE	set	912
  1280  038E                     _INLVLC	set	910
  1281  038D                     _INLVLB	set	909
  1282  038C                     _INLVLA	set	908
  1283  1002                     STR_9:
  1284  1002  3420               	retlw	32	;' '
  1285  1003  3420               	retlw	32	;' '
  1286  1004  3420               	retlw	32	;' '
  1287  1005  3420               	retlw	32	;' '
  1288  1006  3420               	retlw	32	;' '
  1289  1007  3420               	retlw	32	;' '
  1290  1008  3420               	retlw	32	;' '
  1291  1009  3420               	retlw	32	;' '
  1292  100A  3420               	retlw	32	;' '
  1293  100B  3420               	retlw	32	;' '
  1294  100C  3420               	retlw	32	;' '
  1295  100D  3420               	retlw	32	;' '
  1296  100E  3420               	retlw	32	;' '
  1297  100F  3420               	retlw	32	;' '
  1298  1010  3420               	retlw	32	;' '
  1299  1011  3420               	retlw	32	;' '
  1300  1012  3400               	retlw	0
  1301                           
  1302                           	psect	stringtext2
  1303  1013                     __pstringtext2:
  1304  1013                     STR_5:
  1305  1013  3473               	retlw	115	;'s'
  1306  1014  3475               	retlw	117	;'u'
  1307  1015  346D               	retlw	109	;'m'
  1308  1016  3444               	retlw	68	;'D'
  1309  1017  3469               	retlw	105	;'i'
  1310  1018  3467               	retlw	103	;'g'
  1311  1019  3469               	retlw	105	;'i'
  1312  101A  3474               	retlw	116	;'t'
  1313  101B  3473               	retlw	115	;'s'
  1314  101C  343D               	retlw	61	;'='
  1315  101D  3400               	retlw	0
  1316                           
  1317                           	psect	stringtext3
  1318  101E                     __pstringtext3:
  1319  101E                     STR_3:
  1320  101E  3453               	retlw	83	;'S'
  1321  101F  3475               	retlw	117	;'u'
  1322  1020  346D               	retlw	109	;'m'
  1323  1021  3450               	retlw	80	;'P'
  1324  1022  3472               	retlw	114	;'r'
  1325  1023  3469               	retlw	105	;'i'
  1326  1024  346D               	retlw	109	;'m'
  1327  1025  3465               	retlw	101	;'e'
  1328  1026  343D               	retlw	61	;'='
  1329  1027  3400               	retlw	0
  1330                           
  1331                           	psect	stringtext4
  1332  1028                     __pstringtext4:
  1333  1028                     STR_2:
  1334  1028  3443               	retlw	67	;'C'
  1335  1029  3461               	retlw	97	;'a'
  1336  102A  3472               	retlw	114	;'r'
  1337  102B  346E               	retlw	110	;'n'
  1338  102C  3465               	retlw	101	;'e'
  1339  102D  3474               	retlw	116	;'t'
  1340  102E  343A               	retlw	58	;':'
  1341  102F  3400               	retlw	0
  1342                           
  1343                           	psect	stringtext5
  1344  1030                     __pstringtext5:
  1345  1030                     STR_7:
  1346  1030  3442               	retlw	66	;'B'
  1347  1031  3469               	retlw	105	;'i'
  1348  1032  346E               	retlw	110	;'n'
  1349  1033  3461               	retlw	97	;'a'
  1350  1034  3472               	retlw	114	;'r'
  1351  1035  3479               	retlw	121	;'y'
  1352  1036  343D               	retlw	61	;'='
  1353  1037  3400               	retlw	0
  1354                           
  1355                           	psect	stringtext6
  1356  1038                     __pstringtext6:
  1357  1038                     STR_1:
  1358  1038  3425               	retlw	37	;'%'
  1359  1039  3464               	retlw	100	;'d'
  1360  103A  3400               	retlw	0
  1361                           
  1362                           	psect	stringtext7
  1363  0000                     __pstringtext7:
  1364  1002                     
  1365                           	psect	cinit
  1366  07D7                     start_initialization:	
  1367                           ; #config settings
  1368                           
  1369  07D7                     __initialization:
  1370                           
  1371                           ; Initialize objects allocated to BANK1
  1372  07D7  300B               	movlw	low __pidataBANK1
  1373  07D8  0084               	movwf	4
  1374  07D9  308E               	movlw	(high __pidataBANK1)| (0+128)
  1375  07DA  0085               	movwf	5
  1376  07DB  0021               	movlb	1	; select bank1
  1377  07DC  0012               	moviw fsr0++
  1378  07DD  00E5               	movwf	__pdataBANK1& (0+127)
  1379  07DE  0012               	moviw fsr0++
  1380  07DF  00E6               	movwf	(__pdataBANK1+1)& (0+127)
  1381  07E0  0012               	moviw fsr0++
  1382  07E1  00E7               	movwf	(__pdataBANK1+2)& (0+127)
  1383  07E2  0012               	moviw fsr0++
  1384  07E3  00E8               	movwf	(__pdataBANK1+3)& (0+127)
  1385  07E4  0012               	moviw fsr0++
  1386  07E5  00E9               	movwf	(__pdataBANK1+4)& (0+127)
  1387  07E6  0012               	moviw fsr0++
  1388  07E7  00EA               	movwf	(__pdataBANK1+5)& (0+127)
  1389                           
  1390                           ; Clear objects allocated to BANK0
  1391  07E8  0020               	movlb	0	; select bank0
  1392  07E9  01EC               	clrf	__pbssBANK0& (0+127)
  1393  07EA  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  1394  07EB  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  1395  07EC  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  1396                           
  1397                           ; Clear objects allocated to BANK1
  1398  07ED  30D9               	movlw	low __pbssBANK1
  1399  07EE  0084               	movwf	4
  1400  07EF  3000               	movlw	high __pbssBANK1
  1401  07F0  0085               	movwf	5
  1402  07F1  300C               	movlw	12
  1403  07F2  318E  2605  3187   	fcall	clear_ram0
  1404                           
  1405                           ; Clear objects allocated to BANK2
  1406  07F5  3020               	movlw	low __pbssBANK2
  1407  07F6  0084               	movwf	4
  1408  07F7  3001               	movlw	high __pbssBANK2
  1409  07F8  0085               	movwf	5
  1410  07F9  3020               	movlw	32
  1411  07FA  318E  2605  3187   	fcall	clear_ram0
  1412  07FD                     end_of_initialization:	
  1413                           ;End of C runtime variable initialization code
  1414                           
  1415  07FD                     __end_of__initialization:
  1416  07FD  0020               	movlb	0
  1417  07FE  3185  2DCA         	ljmp	_main	;jump to C main() function
  1418                           
  1419                           	psect	bssBANK0
  1420  006C                     __pbssBANK0:
  1421  006C                     _prec:
  1422  006C                     	ds	2
  1423  006E                     _flags:
  1424  006E                     	ds	2
  1425                           
  1426                           	psect	bssBANK1
  1427  00D9                     __pbssBANK1:
  1428  00D9                     main@F5610:
  1429  00D9                     	ds	8
  1430  00E1                     _nout:
  1431  00E1                     	ds	2
  1432  00E3                     _width:
  1433  00E3                     	ds	2
  1434                           
  1435                           	psect	dataBANK1
  1436  00E5                     __pdataBANK1:
  1437  00E5                     _last3digitsCarnet3:
  1438  00E5                     	ds	2
  1439  00E7                     _last3digitsCarnet2:
  1440  00E7                     	ds	2
  1441  00E9                     _last3digitsCarnet1:
  1442  00E9                     	ds	2
  1443                           
  1444                           	psect	bssBANK2
  1445  0120                     __pbssBANK2:
  1446  0120                     _dbuf:
  1447  0120                     	ds	32
  1448                           
  1449                           	psect	clrtext
  1450  0E05                     clear_ram0:	
  1451                           ;	Called with FSR0 containing the base address, and
  1452                           ;	WREG with the size to clear
  1453                           
  1454  0E05  0064               	clrwdt	;clear the watchdog before getting into this loop
  1455  0E06                     clrloop0:
  1456  0E06  0180               	clrf	0	;clear RAM location pointed to by FSR
  1457  0E07  3101               	addfsr 0,1
  1458  0E08  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1459  0E09  2E06               	goto	clrloop0	;have we reached the end yet?
  1460  0E0A  3400               	retlw	0	;all done for this memory range, return
  1461                           
  1462                           	psect	cstackBANK1
  1463  00A0                     __pcstackBANK1:
  1464  00A0                     	ds	2
  1465  00A2                     sprintf@ap:
  1466                           
  1467                           ; 1 bytes @ 0x2
  1468  00A2                     	ds	1
  1469  00A3                     sprintf@s:
  1470                           
  1471                           ; 1 bytes @ 0x3
  1472  00A3                     	ds	1
  1473  00A4                     sprintf@f:
  1474                           
  1475                           ; 5 bytes @ 0x4
  1476  00A4                     	ds	5
  1477  00A9                     ??_main:
  1478                           
  1479                           ; 1 bytes @ 0x9
  1480  00A9                     	ds	14
  1481  00B7                     main@printchar:
  1482                           
  1483                           ; 10 bytes @ 0x17
  1484  00B7                     	ds	10
  1485  00C1                     main@bin:
  1486                           
  1487                           ; 8 bytes @ 0x21
  1488  00C1                     	ds	8
  1489  00C9                     main@prime:
  1490                           
  1491                           ; 2 bytes @ 0x29
  1492  00C9                     	ds	2
  1493  00CB                     main@Binary:
  1494                           
  1495                           ; 4 bytes @ 0x2B
  1496  00CB                     	ds	4
  1497  00CF                     main@carnet:
  1498                           
  1499                           ; 2 bytes @ 0x2F
  1500  00CF                     	ds	2
  1501  00D1                     main@i:
  1502                           
  1503                           ; 2 bytes @ 0x31
  1504  00D1                     	ds	2
  1505  00D3                     main@SumPrime:
  1506                           
  1507                           ; 2 bytes @ 0x33
  1508  00D3                     	ds	2
  1509  00D5                     main@SumDigits:
  1510                           
  1511                           ; 2 bytes @ 0x35
  1512  00D5                     	ds	2
  1513  00D7                     main@number:
  1514                           
  1515                           ; 2 bytes @ 0x37
  1516  00D7                     	ds	2
  1517                           
  1518                           	psect	cstackCOMMON
  1519  0070                     __pcstackCOMMON:
  1520  0070                     ?_SYSTEM_Initialize:
  1521  0070                     ??_SYSTEM_Initialize:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ?_LCD_Initialize:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_LCDClear:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_OSCILLATOR_Initialize:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ??_OSCILLATOR_Initialize:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_WDT_Initialize:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ??_WDT_Initialize:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_LCDPutCmd:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_putch:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ??_putch:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_main:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_PIN_MANAGER_Initialize:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ??_PIN_MANAGER_Initialize:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_LCDWriteNibble:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_LCDPutChar:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ??___aodiv:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ??___aomod:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_fputc:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ?_strlen:	
  1576                           ; 2 bytes @ 0x0
  1577                           
  1578  0070                     ?___wmul:	
  1579                           ; 2 bytes @ 0x0
  1580                           
  1581  0070                     ?___awdiv:	
  1582                           ; 2 bytes @ 0x0
  1583                           
  1584  0070                     ?___awmod:	
  1585                           ; 2 bytes @ 0x0
  1586                           
  1587  0070                     LCDWriteNibble@rs:	
  1588                           ; 2 bytes @ 0x0
  1589                           
  1590  0070                     putch@c:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0070                     ___wmul@multiplier:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0070                     ___awdiv@divisor:	
  1597                           ; 2 bytes @ 0x0
  1598                           
  1599  0070                     ___awmod@divisor:	
  1600                           ; 2 bytes @ 0x0
  1601                           
  1602  0070                     fputc@c:	
  1603                           ; 2 bytes @ 0x0
  1604                           
  1605                           
  1606                           ; 2 bytes @ 0x0
  1607  0070                     	ds	1
  1608  0071                     ??_LCDWriteNibble:
  1609  0071                     ___aodiv@counter:	
  1610                           ; 1 bytes @ 0x1
  1611                           
  1612  0071                     ___aomod@counter:	
  1613                           ; 1 bytes @ 0x1
  1614                           
  1615                           
  1616                           ; 1 bytes @ 0x1
  1617  0071                     	ds	1
  1618  0072                     ??_strlen:
  1619  0072                     ___aodiv@sign:	
  1620                           ; 1 bytes @ 0x2
  1621                           
  1622  0072                     ___aomod@sign:	
  1623                           ; 1 bytes @ 0x2
  1624                           
  1625  0072                     fputc@fp:	
  1626                           ; 1 bytes @ 0x2
  1627                           
  1628  0072                     ___wmul@multiplicand:	
  1629                           ; 1 bytes @ 0x2
  1630                           
  1631  0072                     ___awdiv@dividend:	
  1632                           ; 2 bytes @ 0x2
  1633                           
  1634  0072                     ___awmod@dividend:	
  1635                           ; 2 bytes @ 0x2
  1636                           
  1637                           
  1638                           ; 2 bytes @ 0x2
  1639  0072                     	ds	1
  1640  0073                     ??_fputc:
  1641  0073                     ?_abs:	
  1642                           ; 1 bytes @ 0x3
  1643                           
  1644  0073                     LCDWriteNibble@ch:	
  1645                           ; 2 bytes @ 0x3
  1646                           
  1647  0073                     strlen@a:	
  1648                           ; 1 bytes @ 0x3
  1649                           
  1650  0073                     abs@a:	
  1651                           ; 1 bytes @ 0x3
  1652                           
  1653  0073                     ___aodiv@quotient:	
  1654                           ; 2 bytes @ 0x3
  1655                           
  1656                           
  1657                           ; 8 bytes @ 0x3
  1658  0073                     	ds	1
  1659  0074                     ??_LCDPutCmd:
  1660  0074                     ??_LCDPutChar:	
  1661                           ; 1 bytes @ 0x4
  1662                           
  1663  0074                     ??___wmul:	
  1664                           ; 1 bytes @ 0x4
  1665                           
  1666  0074                     ??___awdiv:	
  1667                           ; 1 bytes @ 0x4
  1668                           
  1669  0074                     ??___awmod:	
  1670                           ; 1 bytes @ 0x4
  1671                           
  1672  0074                     strlen@s:	
  1673                           ; 1 bytes @ 0x4
  1674                           
  1675  0074                     ___wmul@product:	
  1676                           ; 1 bytes @ 0x4
  1677                           
  1678                           
  1679                           ; 2 bytes @ 0x4
  1680  0074                     	ds	1
  1681  0075                     ??_abs:
  1682  0075                     ___awdiv@counter:	
  1683                           ; 1 bytes @ 0x5
  1684                           
  1685  0075                     ___awmod@counter:	
  1686                           ; 1 bytes @ 0x5
  1687                           
  1688                           
  1689                           ; 1 bytes @ 0x5
  1690  0075                     	ds	1
  1691  0076                     LCDPutChar@ch:
  1692  0076                     LCDPutCmd@ch:	
  1693                           ; 1 bytes @ 0x6
  1694                           
  1695  0076                     ___awdiv@sign:	
  1696                           ; 1 bytes @ 0x6
  1697                           
  1698  0076                     ___awmod@sign:	
  1699                           ; 1 bytes @ 0x6
  1700                           
  1701                           
  1702                           ; 1 bytes @ 0x6
  1703  0076                     	ds	1
  1704  0077                     ??_LCD_Initialize:
  1705  0077                     ?_LCDGoto:	
  1706                           ; 1 bytes @ 0x7
  1707                           
  1708  0077                     ?_LCDPutStr:	
  1709                           ; 1 bytes @ 0x7
  1710                           
  1711  0077                     LCDGoto@ln:	
  1712                           ; 1 bytes @ 0x7
  1713                           
  1714  0077                     LCDPutStr@str:	
  1715                           ; 1 bytes @ 0x7
  1716                           
  1717  0077                     ___awdiv@quotient:	
  1718                           ; 2 bytes @ 0x7
  1719                           
  1720                           
  1721                           ; 2 bytes @ 0x7
  1722  0077                     	ds	1
  1723  0078                     ??_LCDGoto:
  1724  0078                     ?_fputs:	
  1725                           ; 1 bytes @ 0x8
  1726                           
  1727  0078                     fputs@fp:	
  1728                           ; 2 bytes @ 0x8
  1729                           
  1730  0078                     _LCDGoto$227:	
  1731                           ; 1 bytes @ 0x8
  1732                           
  1733                           
  1734                           ; 2 bytes @ 0x8
  1735  0078                     	ds	1
  1736  0079                     ??_LCDPutStr:
  1737  0079                     ??_fputs:	
  1738                           ; 1 bytes @ 0x9
  1739                           
  1740  0079                     ?_sumdigits:	
  1741                           ; 1 bytes @ 0x9
  1742                           
  1743  0079                     sumdigits@number:	
  1744                           ; 2 bytes @ 0x9
  1745                           
  1746                           
  1747                           ; 2 bytes @ 0x9
  1748  0079                     	ds	1
  1749  007A                     LCDGoto@pos:
  1750                           
  1751                           ; 1 bytes @ 0xA
  1752  007A                     	ds	1
  1753  007B                     ??_sumdigits:
  1754                           
  1755                           ; 1 bytes @ 0xB
  1756  007B                     	ds	1
  1757  007C                     ??_pad:
  1758  007C                     LCDPutStr@i:	
  1759                           ; 1 bytes @ 0xC
  1760                           
  1761                           
  1762                           ; 1 bytes @ 0xC
  1763  007C                     	ds	1
  1764  007D                     ??_sprintf:
  1765  007D                     ??_LCDClear:	
  1766                           ; 1 bytes @ 0xD
  1767                           
  1768                           
  1769                           ; 1 bytes @ 0xD
  1770  007D                     	ds	1
  1771                           
  1772                           	psect	cstackBANK0
  1773  0020                     __pcstackBANK0:
  1774  0020                     ?___aodiv:
  1775  0020                     ?___aomod:	
  1776                           ; 8 bytes @ 0x0
  1777                           
  1778  0020                     fputs@c:	
  1779                           ; 8 bytes @ 0x0
  1780                           
  1781  0020                     sumdigits@digit:	
  1782                           ; 1 bytes @ 0x0
  1783                           
  1784  0020                     ___aodiv@divisor:	
  1785                           ; 2 bytes @ 0x0
  1786                           
  1787  0020                     ___aomod@divisor:	
  1788                           ; 8 bytes @ 0x0
  1789                           
  1790                           
  1791                           ; 8 bytes @ 0x0
  1792  0020                     	ds	1
  1793  0021                     fputs@i:
  1794                           
  1795                           ; 2 bytes @ 0x1
  1796  0021                     	ds	1
  1797  0022                     sumdigits@SumDigits:
  1798                           
  1799                           ; 2 bytes @ 0x2
  1800  0022                     	ds	1
  1801  0023                     fputs@s:
  1802                           
  1803                           ; 1 bytes @ 0x3
  1804  0023                     	ds	1
  1805  0024                     ?_pad:
  1806  0024                     pad@buf:	
  1807                           ; 2 bytes @ 0x4
  1808                           
  1809                           
  1810                           ; 1 bytes @ 0x4
  1811  0024                     	ds	1
  1812  0025                     pad@p:
  1813                           
  1814                           ; 2 bytes @ 0x5
  1815  0025                     	ds	2
  1816  0027                     pad@i:
  1817                           
  1818                           ; 2 bytes @ 0x7
  1819  0027                     	ds	1
  1820  0028                     ___aodiv@dividend:
  1821  0028                     ___aomod@dividend:	
  1822                           ; 8 bytes @ 0x8
  1823                           
  1824                           
  1825                           ; 8 bytes @ 0x8
  1826  0028                     	ds	1
  1827  0029                     pad@w:
  1828                           
  1829                           ; 2 bytes @ 0x9
  1830  0029                     	ds	2
  1831  002B                     pad@fp:
  1832                           
  1833                           ; 1 bytes @ 0xB
  1834  002B                     	ds	5
  1835  0030                     ?_dtoa:
  1836  0030                     dtoa@d:	
  1837                           ; 2 bytes @ 0x10
  1838                           
  1839                           
  1840                           ; 8 bytes @ 0x10
  1841  0030                     	ds	8
  1842  0038                     ??_dtoa:
  1843                           
  1844                           ; 1 bytes @ 0x18
  1845  0038                     	ds	3
  1846  003B                     _dtoa$616:
  1847                           
  1848                           ; 2 bytes @ 0x1B
  1849  003B                     	ds	2
  1850  003D                     dtoa@fp:
  1851                           
  1852                           ; 1 bytes @ 0x1D
  1853  003D                     	ds	1
  1854  003E                     dtoa@p:
  1855                           
  1856                           ; 2 bytes @ 0x1E
  1857  003E                     	ds	2
  1858  0040                     dtoa@w:
  1859                           
  1860                           ; 2 bytes @ 0x20
  1861  0040                     	ds	2
  1862  0042                     dtoa@s:
  1863                           
  1864                           ; 2 bytes @ 0x22
  1865  0042                     	ds	2
  1866  0044                     dtoa@n:
  1867                           
  1868                           ; 8 bytes @ 0x24
  1869  0044                     	ds	8
  1870  004C                     dtoa@i:
  1871                           
  1872                           ; 2 bytes @ 0x2C
  1873  004C                     	ds	2
  1874  004E                     ?_vfpfcnvrt:
  1875  004E                     vfpfcnvrt@fmt:	
  1876                           ; 2 bytes @ 0x2E
  1877                           
  1878                           
  1879                           ; 1 bytes @ 0x2E
  1880  004E                     	ds	1
  1881  004F                     vfpfcnvrt@ap:
  1882                           
  1883                           ; 1 bytes @ 0x2F
  1884  004F                     	ds	1
  1885  0050                     ??_vfpfcnvrt:
  1886                           
  1887                           ; 1 bytes @ 0x30
  1888  0050                     	ds	5
  1889  0055                     vfpfcnvrt@ll:
  1890                           
  1891                           ; 8 bytes @ 0x35
  1892  0055                     	ds	8
  1893  005D                     vfpfcnvrt@fp:
  1894                           
  1895                           ; 1 bytes @ 0x3D
  1896  005D                     	ds	1
  1897  005E                     ?_vfprintf:
  1898  005E                     vfprintf@fmt:	
  1899                           ; 2 bytes @ 0x3E
  1900                           
  1901                           
  1902                           ; 2 bytes @ 0x3E
  1903  005E                     	ds	2
  1904  0060                     vfprintf@ap:
  1905                           
  1906                           ; 1 bytes @ 0x40
  1907  0060                     	ds	1
  1908  0061                     ??_vfprintf:
  1909                           
  1910                           ; 1 bytes @ 0x41
  1911  0061                     	ds	2
  1912  0063                     vfprintf@fp:
  1913                           
  1914                           ; 1 bytes @ 0x43
  1915  0063                     	ds	1
  1916  0064                     vfprintf@cfmt:
  1917                           
  1918                           ; 2 bytes @ 0x44
  1919  0064                     	ds	2
  1920  0066                     ?_sprintf:
  1921  0066                     sprintf@fmt:	
  1922                           ; 2 bytes @ 0x46
  1923                           
  1924                           
  1925                           ; 2 bytes @ 0x46
  1926  0066                     	ds	6
  1927                           
  1928                           	psect	maintext
  1929  05CA                     __pmaintext:	
  1930 ;;
  1931 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1932 ;;
  1933 ;; *************** function _main *****************
  1934 ;; Defined at:
  1935 ;;		line 32 in file "main.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  check3          4    0        long 
  1940 ;;  check2          2    0        int 
  1941 ;;  check1          2    0        int 
  1942 ;;  printchar      10   23[BANK1 ] unsigned char [10]
  1943 ;;  bin             8   33[BANK1 ] int [4]
  1944 ;;  Binary          4   43[BANK1 ] long 
  1945 ;;  number          2   55[BANK1 ] int 
  1946 ;;  SumDigits       2   53[BANK1 ] int 
  1947 ;;  SumPrime        2   51[BANK1 ] int 
  1948 ;;  i               2   49[BANK1 ] int 
  1949 ;;  carnet          2   47[BANK1 ] int 
  1950 ;;  prime           2   41[BANK1 ] int 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : B1F/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1961 ;;      Locals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1962 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1963 ;;      Totals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1964 ;;Total ram usage:       48 bytes
  1965 ;; Hardware stack levels required when called:    8
  1966 ;; This function calls:
  1967 ;;		_LCDClear
  1968 ;;		_LCDGoto
  1969 ;;		_LCDPutStr
  1970 ;;		_LCD_Initialize
  1971 ;;		_SYSTEM_Initialize
  1972 ;;		___awdiv
  1973 ;;		___awmod
  1974 ;;		___wmul
  1975 ;;		_sprintf
  1976 ;;		_sumdigits
  1977 ;; This function is called by:
  1978 ;;		Startup code after reset
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           
  1983                           ;psect for function _main
  1984  05CA                     _main:
  1985  05CA                     l1925:	
  1986                           ;incstack = 0
  1987                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1988                           
  1989                           
  1990                           ;main.c: 36:     SYSTEM_Initialize();
  1991  05CA  318E  2611  3185   	fcall	_SYSTEM_Initialize
  1992                           
  1993                           ;main.c: 37:     LCD_Initialize();
  1994  05CD  318E  26E4  3185   	fcall	_LCD_Initialize
  1995                           
  1996                           ;main.c: 41:     const int label =1;;main.c: 42:     int carnet;;main.c: 43:     char pr
      +                          intchar[10];;main.c: 47:     switch (label)
  1997  05D0  2DE0               	goto	l1933
  1998  05D1                     l1927:
  1999                           
  2000                           ;main.c: 50:         {;main.c: 51:             carnet = last3digitsCarnet1;
  2001  05D1  30FF               	movlw	255
  2002  05D2  00CF               	movwf	main@carnet^(0+128)
  2003  05D3  3000               	movlw	0
  2004  05D4  00D0               	movwf	(main@carnet^(0+128)+1)
  2005                           
  2006                           ;main.c: 52:             break;
  2007  05D5  2DF6               	goto	l1935
  2008  05D6                     l1929:
  2009                           
  2010                           ;main.c: 55:         {;main.c: 56:             carnet = last3digitsCarnet2;
  2011  05D6  30ED               	movlw	237
  2012  05D7  00CF               	movwf	main@carnet^(0+128)
  2013  05D8  3001               	movlw	1
  2014  05D9  00D0               	movwf	(main@carnet^(0+128)+1)
  2015                           
  2016                           ;main.c: 57:             break;
  2017  05DA  2DF6               	goto	l1935
  2018  05DB                     l1931:
  2019                           
  2020                           ;main.c: 60:         {;main.c: 61:             carnet = last3digitsCarnet3;
  2021  05DB  30A4               	movlw	164
  2022  05DC  00CF               	movwf	main@carnet^(0+128)
  2023  05DD  3001               	movlw	1
  2024  05DE  00D0               	movwf	(main@carnet^(0+128)+1)
  2025                           
  2026                           ;main.c: 62:         };main.c: 63:     }
  2027  05DF  2DF6               	goto	l1935
  2028  05E0                     l1933:
  2029  05E0  3000               	movlw	low (main@label| (0+32768))
  2030  05E1  0084               	movwf	4
  2031  05E2  3090               	movlw	high (main@label| (0+32768))
  2032  05E3  0085               	movwf	5
  2033  05E4  3F00               	moviw [0]fsr0
  2034  05E5  0021               	movlb	1	; select bank1
  2035  05E6  00A9               	movwf	??_main^(0+128)
  2036  05E7  3F01               	moviw [1]fsr0
  2037  05E8  00AA               	movwf	(??_main^(0+128)+1)
  2038                           
  2039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2040                           ; Switch size 1, requested type "simple"
  2041                           ; Number of cases is 1, Range of values is 0 to 0
  2042                           ; switch strategies available:
  2043                           ; Name         Instructions Cycles
  2044                           ; simple_byte            4     3 (average)
  2045                           ; direct_byte            8     6 (fixed)
  2046                           ; jumptable            260     6 (fixed)
  2047                           ;	Chosen strategy is simple_byte
  2048  05E9  082A               	movf	(??_main+1)^(0+128),w
  2049  05EA  3A00               	xorlw	0	; case 0
  2050  05EB  1903               	skipnz
  2051  05EC  2DEE               	goto	l2077
  2052  05ED  2DDB               	goto	l1931
  2053  05EE                     l2077:
  2054                           
  2055                           ; Switch size 1, requested type "simple"
  2056                           ; Number of cases is 2, Range of values is 1 to 2
  2057                           ; switch strategies available:
  2058                           ; Name         Instructions Cycles
  2059                           ; simple_byte            7     4 (average)
  2060                           ; direct_byte           13     9 (fixed)
  2061                           ; jumptable            263     9 (fixed)
  2062                           ;	Chosen strategy is simple_byte
  2063  05EE  0829               	movf	??_main^(0+128),w
  2064  05EF  3A01               	xorlw	1	; case 1
  2065  05F0  1903               	skipnz
  2066  05F1  2DD1               	goto	l1927
  2067  05F2  3A03               	xorlw	3	; case 2
  2068  05F3  1903               	skipnz
  2069  05F4  2DD6               	goto	l1929
  2070  05F5  2DDB               	goto	l1931
  2071  05F6                     l1935:
  2072                           
  2073                           ;main.c: 70:     int SumPrime = 0;
  2074  05F6  01D3               	clrf	main@SumPrime^(0+128)
  2075  05F7  01D4               	clrf	(main@SumPrime+1)^(0+128)
  2076  05F8                     l1937:
  2077                           
  2078                           ;main.c: 73:     sprintf(printchar,"%d",carnet);
  2079  05F8  3038               	movlw	low (STR_1| (0+32768))
  2080  05F9  0020               	movlb	0	; select bank0
  2081  05FA  00E6               	movwf	sprintf@fmt
  2082  05FB  3090               	movlw	high (STR_1| (0+32768))
  2083  05FC  00E7               	movwf	sprintf@fmt+1
  2084  05FD  0021               	movlb	1	; select bank1
  2085  05FE  0850               	movf	(main@carnet+1)^(0+128),w
  2086  05FF  0020               	movlb	0	; select bank0
  2087  0600  00E9               	movwf	?_sprintf+3
  2088  0601  0021               	movlb	1	; select bank1
  2089  0602  084F               	movf	main@carnet^(0+128),w
  2090  0603  0020               	movlb	0	; select bank0
  2091  0604  00E8               	movwf	?_sprintf+2
  2092  0605  30B7               	movlw	(low (main@printchar| 0))& (0+255)
  2093  0606  318F  2707  3185   	fcall	_sprintf
  2094  0609                     l1939:
  2095                           
  2096                           ;main.c: 74:     LCDGoto(0,0);
  2097  0609  01F7               	clrf	LCDGoto@ln
  2098  060A  3000               	movlw	0
  2099  060B  318F  2751  3185   	fcall	_LCDGoto
  2100  060E                     l1941:
  2101                           
  2102                           ;main.c: 75:     LCDPutStr("Carnet:");
  2103  060E  3028               	movlw	low (STR_2| (0+32768))
  2104  060F  00F7               	movwf	LCDPutStr@str
  2105  0610  3090               	movlw	high (STR_2| (0+32768))
  2106  0611  00F8               	movwf	LCDPutStr@str+1
  2107  0612  318F  272B  3185   	fcall	_LCDPutStr
  2108  0615                     l1943:
  2109                           
  2110                           ;main.c: 76:     LCDGoto(0,1);
  2111  0615  01F7               	clrf	LCDGoto@ln
  2112  0616  0AF7               	incf	LCDGoto@ln,f
  2113  0617  3000               	movlw	0
  2114  0618  318F  2751  3185   	fcall	_LCDGoto
  2115  061B                     l1945:
  2116                           
  2117                           ;main.c: 77:     LCDPutStr(printchar);
  2118  061B  30B7               	movlw	low main@printchar
  2119  061C  00F7               	movwf	LCDPutStr@str
  2120  061D  3000               	movlw	high main@printchar
  2121  061E  00F8               	movwf	LCDPutStr@str+1
  2122  061F  318F  272B  3185   	fcall	_LCDPutStr
  2123  0622                     l1947:
  2124                           
  2125                           ;main.c: 81:     int i,number=2, prime;
  2126  0622  3002               	movlw	2
  2127  0623  0021               	movlb	1	; select bank1
  2128  0624  00D7               	movwf	main@number^(0+128)
  2129  0625  3000               	movlw	0
  2130  0626  00D8               	movwf	(main@number^(0+128)+1)
  2131                           
  2132                           ;main.c: 85:     while(number<=carnet)
  2133  0627  2E78               	goto	l1965
  2134  0628                     l1949:
  2135                           
  2136                           ;main.c: 86:     {;main.c: 87:       prime = 1;
  2137  0628  3001               	movlw	1
  2138  0629  0021               	movlb	1	; select bank1
  2139  062A  00C9               	movwf	main@prime^(0+128)
  2140  062B  3000               	movlw	0
  2141  062C  00CA               	movwf	(main@prime^(0+128)+1)
  2142                           
  2143                           ;main.c: 88:       for(i=2;i<=number/2;i++)
  2144  062D  3002               	movlw	2
  2145  062E  00D1               	movwf	main@i^(0+128)
  2146  062F  3000               	movlw	0
  2147  0630  00D2               	movwf	(main@i^(0+128)+1)
  2148  0631  2E4D               	goto	l1957
  2149  0632                     l1951:
  2150                           
  2151                           ;main.c: 89:       {;main.c: 90:         if(number%i==0)
  2152  0632  0021               	movlb	1	; select bank1
  2153  0633  0852               	movf	(main@i+1)^(0+128),w
  2154  0634  00F1               	movwf	___awmod@divisor+1
  2155  0635  0851               	movf	main@i^(0+128),w
  2156  0636  00F0               	movwf	___awmod@divisor
  2157  0637  0858               	movf	(main@number+1)^(0+128),w
  2158  0638  00F3               	movwf	___awmod@dividend+1
  2159  0639  0857               	movf	main@number^(0+128),w
  2160  063A  00F2               	movwf	___awmod@dividend
  2161  063B  3180  2097  3185   	fcall	___awmod
  2162  063E  0870               	movf	?___awmod,w
  2163  063F  0471               	iorwf	?___awmod+1,w
  2164  0640  1D03               	btfss	3,2
  2165  0641  2E43               	goto	u1761
  2166  0642  2E44               	goto	u1760
  2167  0643                     u1761:
  2168  0643  2E48               	goto	l1955
  2169  0644                     u1760:
  2170  0644                     l1953:
  2171                           
  2172                           ;main.c: 91:         {;main.c: 92:           prime = 0;
  2173  0644  0021               	movlb	1	; select bank1
  2174  0645  01C9               	clrf	main@prime^(0+128)
  2175  0646  01CA               	clrf	(main@prime+1)^(0+128)
  2176                           
  2177                           ;main.c: 93:           break;
  2178  0647  2E67               	goto	l1959
  2179  0648                     l1955:
  2180                           
  2181                           ;main.c: 95:       }
  2182  0648  3001               	movlw	1
  2183  0649  0021               	movlb	1	; select bank1
  2184  064A  07D1               	addwf	main@i^(0+128),f
  2185  064B  3000               	movlw	0
  2186  064C  3DD2               	addwfc	(main@i+1)^(0+128),f
  2187  064D                     l1957:
  2188  064D  3002               	movlw	2
  2189  064E  00F0               	movwf	___awdiv@divisor
  2190  064F  3000               	movlw	0
  2191  0650  00F1               	movwf	___awdiv@divisor+1
  2192  0651  0858               	movf	(main@number+1)^(0+128),w
  2193  0652  00F3               	movwf	___awdiv@dividend+1
  2194  0653  0857               	movf	main@number^(0+128),w
  2195  0654  00F2               	movwf	___awdiv@dividend
  2196  0655  3181  2140  3185   	fcall	___awdiv
  2197  0658  0871               	movf	?___awdiv+1,w
  2198  0659  3A80               	xorlw	128
  2199  065A  0021               	movlb	1	; select bank1
  2200  065B  00A9               	movwf	??_main^(0+128)
  2201  065C  0852               	movf	(main@i+1)^(0+128),w
  2202  065D  3A80               	xorlw	128
  2203  065E  0229               	subwf	??_main^(0+128),w
  2204  065F  1D03               	skipz
  2205  0660  2E63               	goto	u1775
  2206  0661  0851               	movf	main@i^(0+128),w
  2207  0662  0270               	subwf	?___awdiv,w
  2208  0663                     u1775:
  2209  0663  1803               	skipnc
  2210  0664  2E66               	goto	u1771
  2211  0665  2E67               	goto	u1770
  2212  0666                     u1771:
  2213  0666  2E32               	goto	l1951
  2214  0667                     u1770:
  2215  0667                     l1959:
  2216                           
  2217                           ;main.c: 96:       if(prime==1)
  2218  0667  0021               	movlb	1	; select bank1
  2219  0668  0349               	decf	main@prime^(0+128),w
  2220  0669  044A               	iorwf	(main@prime+1)^(0+128),w
  2221  066A  1D03               	btfss	3,2
  2222  066B  2E6D               	goto	u1781
  2223  066C  2E6E               	goto	u1780
  2224  066D                     u1781:
  2225  066D  2E74               	goto	l1963
  2226  066E                     u1780:
  2227  066E                     l1961:
  2228                           
  2229                           ;main.c: 97:       {;main.c: 98:         SumPrime = SumPrime+number;
  2230  066E  0857               	movf	main@number^(0+128),w
  2231  066F  0753               	addwf	main@SumPrime^(0+128),w
  2232  0670  00D3               	movwf	main@SumPrime^(0+128)
  2233  0671  0858               	movf	(main@number+1)^(0+128),w
  2234  0672  3D54               	addwfc	(main@SumPrime+1)^(0+128),w
  2235  0673  00D4               	movwf	(main@SumPrime+1)^(0+128)
  2236  0674                     l1963:
  2237                           
  2238                           ;main.c: 100:       ++number;
  2239  0674  3001               	movlw	1
  2240  0675  07D7               	addwf	main@number^(0+128),f
  2241  0676  3000               	movlw	0
  2242  0677  3DD8               	addwfc	(main@number+1)^(0+128),f
  2243  0678                     l1965:
  2244                           
  2245                           ;main.c: 85:     while(number<=carnet)
  2246  0678  0850               	movf	(main@carnet+1)^(0+128),w
  2247  0679  3A80               	xorlw	128
  2248  067A  00A9               	movwf	??_main^(0+128)
  2249  067B  0858               	movf	(main@number+1)^(0+128),w
  2250  067C  3A80               	xorlw	128
  2251  067D  0229               	subwf	??_main^(0+128),w
  2252  067E  1D03               	skipz
  2253  067F  2E82               	goto	u1795
  2254  0680  0857               	movf	main@number^(0+128),w
  2255  0681  024F               	subwf	main@carnet^(0+128),w
  2256  0682                     u1795:
  2257  0682  1803               	skipnc
  2258  0683  2E85               	goto	u1791
  2259  0684  2E86               	goto	u1790
  2260  0685                     u1791:
  2261  0685  2E28               	goto	l1949
  2262  0686                     u1790:
  2263  0686                     l1967:
  2264                           
  2265                           ;main.c: 104:     LCDClear();
  2266  0686  318E  261B  3185   	fcall	_LCDClear
  2267  0689                     l1969:
  2268                           
  2269                           ;main.c: 105:     LCDGoto(0,0);
  2270  0689  01F7               	clrf	LCDGoto@ln
  2271  068A  3000               	movlw	0
  2272  068B  318F  2751  3185   	fcall	_LCDGoto
  2273  068E                     l1971:
  2274                           
  2275                           ;main.c: 106:     LCDPutStr("SumPrime=");
  2276  068E  301E               	movlw	low (STR_3| (0+32768))
  2277  068F  00F7               	movwf	LCDPutStr@str
  2278  0690  3090               	movlw	high (STR_3| (0+32768))
  2279  0691  00F8               	movwf	LCDPutStr@str+1
  2280  0692  318F  272B  3185   	fcall	_LCDPutStr
  2281  0695                     l1973:
  2282                           
  2283                           ;main.c: 107:     sprintf(printchar,"%d",SumPrime);
  2284  0695  3038               	movlw	low (STR_1| (0+32768))
  2285  0696  0020               	movlb	0	; select bank0
  2286  0697  00E6               	movwf	sprintf@fmt
  2287  0698  3090               	movlw	high (STR_1| (0+32768))
  2288  0699  00E7               	movwf	sprintf@fmt+1
  2289  069A  0021               	movlb	1	; select bank1
  2290  069B  0854               	movf	(main@SumPrime+1)^(0+128),w
  2291  069C  0020               	movlb	0	; select bank0
  2292  069D  00E9               	movwf	?_sprintf+3
  2293  069E  0021               	movlb	1	; select bank1
  2294  069F  0853               	movf	main@SumPrime^(0+128),w
  2295  06A0  0020               	movlb	0	; select bank0
  2296  06A1  00E8               	movwf	?_sprintf+2
  2297  06A2  30B7               	movlw	(low (main@printchar| 0))& (0+255)
  2298  06A3  318F  2707  3185   	fcall	_sprintf
  2299  06A6                     l1975:
  2300                           
  2301                           ;main.c: 108:     LCDGoto(0,1);
  2302  06A6  01F7               	clrf	LCDGoto@ln
  2303  06A7  0AF7               	incf	LCDGoto@ln,f
  2304  06A8  3000               	movlw	0
  2305  06A9  318F  2751  3185   	fcall	_LCDGoto
  2306  06AC                     l1977:
  2307                           
  2308                           ;main.c: 109:     LCDPutStr(printchar);
  2309  06AC  30B7               	movlw	low main@printchar
  2310  06AD  00F7               	movwf	LCDPutStr@str
  2311  06AE  3000               	movlw	high main@printchar
  2312  06AF  00F8               	movwf	LCDPutStr@str+1
  2313  06B0  318F  272B  3185   	fcall	_LCDPutStr
  2314  06B3                     l1979:
  2315                           
  2316                           ;main.c: 110:     _delay((unsigned long)((5000)*(500000/4000.0)));
  2317  06B3  3004               	movlw	4
  2318  06B4  0021               	movlb	1	; select bank1
  2319  06B5  00AA               	movwf	(??_main^(0+128)+1)
  2320  06B6  302C               	movlw	44
  2321  06B7  00A9               	movwf	??_main^(0+128)
  2322  06B8  30AB               	movlw	171
  2323  06B9                     u1837:
  2324  06B9  0B89               	decfsz	9,f
  2325  06BA  2EB9               	goto	u1837
  2326  06BB  0BA9               	decfsz	??_main^(0+128),f
  2327  06BC  2EB9               	goto	u1837
  2328  06BD  0BAA               	decfsz	(??_main^(0+128)+1),f
  2329  06BE  2EB9               	goto	u1837
  2330  06BF  3200               	nop2
  2331  06C0                     l1981:
  2332                           
  2333                           ;main.c: 111:     LCDClear();
  2334  06C0  318E  261B  3185   	fcall	_LCDClear
  2335  06C3                     l1983:
  2336  06C3                     l1985:
  2337                           
  2338                           ;main.c: 122:     LCDGoto(0,0);
  2339  06C3  01F7               	clrf	LCDGoto@ln
  2340  06C4  3000               	movlw	0
  2341  06C5  318F  2751  3185   	fcall	_LCDGoto
  2342  06C8                     l1987:
  2343                           
  2344                           ;main.c: 123:     LCDPutStr("sumDigits=");
  2345  06C8  3013               	movlw	low (STR_5| (0+32768))
  2346  06C9  00F7               	movwf	LCDPutStr@str
  2347  06CA  3090               	movlw	high (STR_5| (0+32768))
  2348  06CB  00F8               	movwf	LCDPutStr@str+1
  2349  06CC  318F  272B  3185   	fcall	_LCDPutStr
  2350  06CF                     l1989:
  2351                           
  2352                           ;main.c: 127:     number=SumPrime;
  2353  06CF  0021               	movlb	1	; select bank1
  2354  06D0  0854               	movf	(main@SumPrime+1)^(0+128),w
  2355  06D1  00D8               	movwf	(main@number+1)^(0+128)
  2356  06D2  0853               	movf	main@SumPrime^(0+128),w
  2357  06D3  00D7               	movwf	main@number^(0+128)
  2358  06D4                     l1991:
  2359                           
  2360                           ;main.c: 129:     {;main.c: 130:       SumDigits = sumdigits(number);
  2361  06D4  0021               	movlb	1	; select bank1
  2362  06D5  0858               	movf	(main@number+1)^(0+128),w
  2363  06D6  00FA               	movwf	sumdigits@number+1
  2364  06D7  0857               	movf	main@number^(0+128),w
  2365  06D8  00F9               	movwf	sumdigits@number
  2366  06D9  3180  200C  3185   	fcall	_sumdigits
  2367  06DC  087A               	movf	?_sumdigits+1,w
  2368  06DD  0021               	movlb	1	; select bank1
  2369  06DE  00D6               	movwf	(main@SumDigits+1)^(0+128)
  2370  06DF  0879               	movf	?_sumdigits,w
  2371  06E0  00D5               	movwf	main@SumDigits^(0+128)
  2372  06E1                     l1993:
  2373                           
  2374                           ;main.c: 131:       number = SumDigits;
  2375  06E1  0856               	movf	(main@SumDigits+1)^(0+128),w
  2376  06E2  00D8               	movwf	(main@number+1)^(0+128)
  2377  06E3  0855               	movf	main@SumDigits^(0+128),w
  2378  06E4  00D7               	movwf	main@number^(0+128)
  2379  06E5                     l1995:
  2380                           
  2381                           ;main.c: 132:     } while (SumDigits>10);
  2382  06E5  0856               	movf	(main@SumDigits+1)^(0+128),w
  2383  06E6  3A80               	xorlw	128
  2384  06E7  00A9               	movwf	??_main^(0+128)
  2385  06E8  3080               	movlw	128
  2386  06E9  0229               	subwf	??_main^(0+128),w
  2387  06EA  1D03               	skipz
  2388  06EB  2EEE               	goto	u1805
  2389  06EC  300B               	movlw	11
  2390  06ED  0255               	subwf	main@SumDigits^(0+128),w
  2391  06EE                     u1805:
  2392  06EE  1803               	skipnc
  2393  06EF  2EF1               	goto	u1801
  2394  06F0  2EF2               	goto	u1800
  2395  06F1                     u1801:
  2396  06F1  2ED4               	goto	l1991
  2397  06F2                     u1800:
  2398  06F2                     l1997:
  2399                           
  2400                           ;main.c: 136:     sprintf(printchar,"%d",SumDigits);
  2401  06F2  3038               	movlw	low (STR_1| (0+32768))
  2402  06F3  0020               	movlb	0	; select bank0
  2403  06F4  00E6               	movwf	sprintf@fmt
  2404  06F5  3090               	movlw	high (STR_1| (0+32768))
  2405  06F6  00E7               	movwf	sprintf@fmt+1
  2406  06F7  0021               	movlb	1	; select bank1
  2407  06F8  0856               	movf	(main@SumDigits+1)^(0+128),w
  2408  06F9  0020               	movlb	0	; select bank0
  2409  06FA  00E9               	movwf	?_sprintf+3
  2410  06FB  0021               	movlb	1	; select bank1
  2411  06FC  0855               	movf	main@SumDigits^(0+128),w
  2412  06FD  0020               	movlb	0	; select bank0
  2413  06FE  00E8               	movwf	?_sprintf+2
  2414  06FF  30B7               	movlw	(low (main@printchar| 0))& (0+255)
  2415  0700  318F  2707  3185   	fcall	_sprintf
  2416  0703                     l1999:
  2417                           
  2418                           ;main.c: 137:     LCDGoto(0,1);
  2419  0703  01F7               	clrf	LCDGoto@ln
  2420  0704  0AF7               	incf	LCDGoto@ln,f
  2421  0705  3000               	movlw	0
  2422  0706  318F  2751  3185   	fcall	_LCDGoto
  2423  0709                     l2001:
  2424                           
  2425                           ;main.c: 138:     LCDPutStr(printchar);
  2426  0709  30B7               	movlw	low main@printchar
  2427  070A  00F7               	movwf	LCDPutStr@str
  2428  070B  3000               	movlw	high main@printchar
  2429  070C  00F8               	movwf	LCDPutStr@str+1
  2430  070D  318F  272B  3185   	fcall	_LCDPutStr
  2431  0710                     l2003:
  2432                           
  2433                           ;main.c: 139:     _delay((unsigned long)((5000)*(500000/4000.0)));
  2434  0710  3004               	movlw	4
  2435  0711  0021               	movlb	1	; select bank1
  2436  0712  00AA               	movwf	(??_main^(0+128)+1)
  2437  0713  302C               	movlw	44
  2438  0714  00A9               	movwf	??_main^(0+128)
  2439  0715  30AB               	movlw	171
  2440  0716                     u1847:
  2441  0716  0B89               	decfsz	9,f
  2442  0717  2F16               	goto	u1847
  2443  0718  0BA9               	decfsz	??_main^(0+128),f
  2444  0719  2F16               	goto	u1847
  2445  071A  0BAA               	decfsz	(??_main^(0+128)+1),f
  2446  071B  2F16               	goto	u1847
  2447  071C  3200               	nop2
  2448  071D                     l2005:
  2449                           
  2450                           ;main.c: 140:     LCDClear();
  2451  071D  318E  261B  3185   	fcall	_LCDClear
  2452  0720                     l2007:
  2453                           
  2454                           ;main.c: 152:     LCDGoto(0,0);
  2455  0720  01F7               	clrf	LCDGoto@ln
  2456  0721  3000               	movlw	0
  2457  0722  318F  2751  3185   	fcall	_LCDGoto
  2458  0725                     l2009:
  2459                           
  2460                           ;main.c: 153:     LCDPutStr("Binary=");
  2461  0725  3030               	movlw	low (STR_7| (0+32768))
  2462  0726  00F7               	movwf	LCDPutStr@str
  2463  0727  3090               	movlw	high (STR_7| (0+32768))
  2464  0728  00F8               	movwf	LCDPutStr@str+1
  2465  0729  318F  272B  3185   	fcall	_LCDPutStr
  2466  072C                     l2011:
  2467  072C                     l2013:
  2468                           
  2469                           ;main.c: 161:     int bin[4]={0,0,0,0};
  2470  072C  30C1               	movlw	low main@bin
  2471  072D  0086               	movwf	6
  2472  072E  3000               	movlw	high main@bin
  2473  072F  0087               	movwf	7
  2474  0730  3008               	movlw	8
  2475  0731  0021               	movlb	1	; select bank1
  2476  0732  00A9               	movwf	??_main^(0+128)
  2477  0733  3000               	movlw	0
  2478  0734                     u1810:
  2479  0734  001E               	movwi fsr1++
  2480  0735  0BA9               	decfsz	??_main^(0+128),f
  2481  0736  2F34               	goto	u1810
  2482  0737                     l2015:
  2483                           
  2484                           ;main.c: 162:     i=0;
  2485  0737  01D1               	clrf	main@i^(0+128)
  2486  0738  01D2               	clrf	(main@i+1)^(0+128)
  2487  0739                     l2017:
  2488                           
  2489                           ;main.c: 163:     number=SumDigits;
  2490  0739  0856               	movf	(main@SumDigits+1)^(0+128),w
  2491  073A  00D8               	movwf	(main@number+1)^(0+128)
  2492  073B  0855               	movf	main@SumDigits^(0+128),w
  2493  073C  00D7               	movwf	main@number^(0+128)
  2494                           
  2495                           ;main.c: 165:       while (number>0)
  2496  073D  2F61               	goto	l2025
  2497  073E                     l2019:
  2498                           
  2499                           ;main.c: 166:       {;main.c: 167:         bin[i] = number%2;
  2500  073E  3001               	movlw	1
  2501  073F  0021               	movlb	1	; select bank1
  2502  0740  0557               	andwf	main@number^(0+128),w
  2503  0741  00A9               	movwf	??_main^(0+128)
  2504  0742  3000               	movlw	0
  2505  0743  0558               	andwf	(main@number+1)^(0+128),w
  2506  0744  00AA               	movwf	(??_main+1)^(0+128)
  2507  0745  3551               	lslf	main@i^(0+128),w
  2508  0746  3EC1               	addlw	(low (main@bin| 0))& (0+255)
  2509  0747  0086               	movwf	6
  2510  0748  0187               	clrf	7
  2511  0749  0829               	movf	??_main^(0+128),w
  2512  074A  3FC0               	movwi [0]fsr1
  2513  074B  082A               	movf	(??_main+1)^(0+128),w
  2514  074C  3FC1               	movwi [1]fsr1
  2515  074D                     l2021:
  2516                           
  2517                           ;main.c: 168:         number = number/2;
  2518  074D  3002               	movlw	2
  2519  074E  00F0               	movwf	___awdiv@divisor
  2520  074F  3000               	movlw	0
  2521  0750  00F1               	movwf	___awdiv@divisor+1
  2522  0751  0858               	movf	(main@number+1)^(0+128),w
  2523  0752  00F3               	movwf	___awdiv@dividend+1
  2524  0753  0857               	movf	main@number^(0+128),w
  2525  0754  00F2               	movwf	___awdiv@dividend
  2526  0755  3181  2140  3185   	fcall	___awdiv
  2527  0758  0871               	movf	?___awdiv+1,w
  2528  0759  0021               	movlb	1	; select bank1
  2529  075A  00D8               	movwf	(main@number+1)^(0+128)
  2530  075B  0870               	movf	?___awdiv,w
  2531  075C  00D7               	movwf	main@number^(0+128)
  2532  075D                     l2023:
  2533                           
  2534                           ;main.c: 169:         i++;
  2535  075D  3001               	movlw	1
  2536  075E  07D1               	addwf	main@i^(0+128),f
  2537  075F  3000               	movlw	0
  2538  0760  3DD2               	addwfc	(main@i+1)^(0+128),f
  2539  0761                     l2025:
  2540                           
  2541                           ;main.c: 165:       while (number>0)
  2542  0761  0858               	movf	(main@number+1)^(0+128),w
  2543  0762  3A80               	xorlw	128
  2544  0763  00A9               	movwf	??_main^(0+128)
  2545  0764  3080               	movlw	128
  2546  0765  0229               	subwf	??_main^(0+128),w
  2547  0766  1D03               	skipz
  2548  0767  2F6A               	goto	u1825
  2549  0768  3001               	movlw	1
  2550  0769  0257               	subwf	main@number^(0+128),w
  2551  076A                     u1825:
  2552  076A  1803               	skipnc
  2553  076B  2F6D               	goto	u1821
  2554  076C  2F6E               	goto	u1820
  2555  076D                     u1821:
  2556  076D  2F3E               	goto	l2019
  2557  076E                     u1820:
  2558  076E                     l2027:
  2559                           
  2560                           ;main.c: 171:     Binary= (1000*bin[3])+(100*bin[2])+(10*bin[1])+(1*bin[0]);
  2561  076E  0021               	movlb	1	; select bank1
  2562  076F  0848               	movf	((main@bin+1)^(0+128)+6),w
  2563  0770  00F1               	movwf	___wmul@multiplier+1
  2564  0771  0847               	movf	(main@bin^(0+128)+6),w
  2565  0772  00F0               	movwf	___wmul@multiplier
  2566  0773  30E8               	movlw	232
  2567  0774  00F2               	movwf	___wmul@multiplicand
  2568  0775  3003               	movlw	3
  2569  0776  00F3               	movwf	___wmul@multiplicand+1
  2570  0777  318E  26A5  3185   	fcall	___wmul
  2571  077A  0870               	movf	?___wmul,w
  2572  077B  0021               	movlb	1	; select bank1
  2573  077C  00A9               	movwf	??_main^(0+128)
  2574  077D  0871               	movf	?___wmul+1,w
  2575  077E  00AA               	movwf	(??_main^(0+128)+1)
  2576  077F  0846               	movf	((main@bin+1)^(0+128)+4),w
  2577  0780  00F1               	movwf	___wmul@multiplier+1
  2578  0781  0845               	movf	(main@bin^(0+128)+4),w
  2579  0782  00F0               	movwf	___wmul@multiplier
  2580  0783  3064               	movlw	100
  2581  0784  00F2               	movwf	___wmul@multiplicand
  2582  0785  3000               	movlw	0
  2583  0786  00F3               	movwf	___wmul@multiplicand+1
  2584  0787  318E  26A5  3185   	fcall	___wmul
  2585  078A  0870               	movf	?___wmul,w
  2586  078B  0021               	movlb	1	; select bank1
  2587  078C  0729               	addwf	??_main^(0+128),w
  2588  078D  00AB               	movwf	(??_main+2)^(0+128)
  2589  078E  0871               	movf	?___wmul+1,w
  2590  078F  3D2A               	addwfc	(??_main+1)^(0+128),w
  2591  0790  00AC               	movwf	(??_main+3)^(0+128)
  2592  0791  0844               	movf	((main@bin+1)^(0+128)+2),w
  2593  0792  00F1               	movwf	___wmul@multiplier+1
  2594  0793  0843               	movf	(main@bin^(0+128)+2),w
  2595  0794  00F0               	movwf	___wmul@multiplier
  2596  0795  300A               	movlw	10
  2597  0796  00F2               	movwf	___wmul@multiplicand
  2598  0797  3000               	movlw	0
  2599  0798  00F3               	movwf	___wmul@multiplicand+1
  2600  0799  318E  26A5  3185   	fcall	___wmul
  2601  079C  0870               	movf	?___wmul,w
  2602  079D  0021               	movlb	1	; select bank1
  2603  079E  072B               	addwf	(??_main+2)^(0+128),w
  2604  079F  00AD               	movwf	(??_main+4)^(0+128)
  2605  07A0  0871               	movf	?___wmul+1,w
  2606  07A1  3D2C               	addwfc	(??_main+3)^(0+128),w
  2607  07A2  00AE               	movwf	(??_main+5)^(0+128)
  2608  07A3  0841               	movf	main@bin^(0+128),w
  2609  07A4  072D               	addwf	(??_main+4)^(0+128),w
  2610  07A5  00CB               	movwf	main@Binary^(0+128)
  2611  07A6  0842               	movf	(main@bin+1)^(0+128),w
  2612  07A7  3D2E               	addwfc	(??_main+5)^(0+128),w
  2613  07A8  00CC               	movwf	(main@Binary+1)^(0+128)
  2614  07A9  01CD               	clrf	(main@Binary^(0+128)+2)
  2615  07AA  1BCC               	btfsc	(main@Binary^(0+128)+1),7
  2616  07AB  03CD               	decf	(main@Binary+2)^(0+128),f
  2617  07AC  084D               	movf	(main@Binary^(0+128)+2),w
  2618  07AD  00CE               	movwf	(main@Binary+3)^(0+128)
  2619  07AE                     l2029:
  2620                           
  2621                           ;main.c: 176:     sprintf(printchar,"%d",Binary);
  2622  07AE  3038               	movlw	low (STR_1| (0+32768))
  2623  07AF  0020               	movlb	0	; select bank0
  2624  07B0  00E6               	movwf	sprintf@fmt
  2625  07B1  3090               	movlw	high (STR_1| (0+32768))
  2626  07B2  00E7               	movwf	sprintf@fmt+1
  2627  07B3  0021               	movlb	1	; select bank1
  2628  07B4  084E               	movf	(main@Binary+3)^(0+128),w
  2629  07B5  0020               	movlb	0	; select bank0
  2630  07B6  00EB               	movwf	?_sprintf+5
  2631  07B7  0021               	movlb	1	; select bank1
  2632  07B8  084D               	movf	(main@Binary+2)^(0+128),w
  2633  07B9  0020               	movlb	0	; select bank0
  2634  07BA  00EA               	movwf	?_sprintf+4
  2635  07BB  0021               	movlb	1	; select bank1
  2636  07BC  084C               	movf	(main@Binary+1)^(0+128),w
  2637  07BD  0020               	movlb	0	; select bank0
  2638  07BE  00E9               	movwf	?_sprintf+3
  2639  07BF  0021               	movlb	1	; select bank1
  2640  07C0  084B               	movf	main@Binary^(0+128),w
  2641  07C1  0020               	movlb	0	; select bank0
  2642  07C2  00E8               	movwf	?_sprintf+2
  2643  07C3  30B7               	movlw	(low (main@printchar| 0))& (0+255)
  2644  07C4  318F  2707  3185   	fcall	_sprintf
  2645  07C7                     l2031:
  2646                           
  2647                           ;main.c: 177:     LCDGoto(0,1);
  2648  07C7  01F7               	clrf	LCDGoto@ln
  2649  07C8  0AF7               	incf	LCDGoto@ln,f
  2650  07C9  3000               	movlw	0
  2651  07CA  318F  2751  3185   	fcall	_LCDGoto
  2652  07CD                     l2033:
  2653                           
  2654                           ;main.c: 178:     LCDPutStr(printchar);
  2655  07CD  30B7               	movlw	low main@printchar
  2656  07CE  00F7               	movwf	LCDPutStr@str
  2657  07CF  3000               	movlw	high main@printchar
  2658  07D0  00F8               	movwf	LCDPutStr@str+1
  2659  07D1  318F  272B  3185   	fcall	_LCDPutStr
  2660  07D4                     l2035:
  2661  07D4                     l2037:
  2662  07D4                     l2039:
  2663  07D4  2FD4               	goto	l2035
  2664  07D5  3180  2802         	ljmp	start
  2665  07D7                     __end_of_main:
  2666                           
  2667                           	psect	text1
  2668  000C                     __ptext1:	
  2669 ;; *************** function _sumdigits *****************
  2670 ;; Defined at:
  2671 ;;		line 18 in file "main.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  number          2    9[COMMON] int 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  SumDigits       2    2[BANK0 ] int 
  2676 ;;  digit           2    0[BANK0 ] int 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  2    9[COMMON] int 
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0, pclath, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2687 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2688 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2689 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2690 ;;Total ram usage:        7 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    1
  2693 ;; This function calls:
  2694 ;;		___awdiv
  2695 ;;		___awmod
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           
  2702                           ;psect for function _sumdigits
  2703  000C                     _sumdigits:
  2704  000C                     l1861:	
  2705                           ;incstack = 0
  2706                           ; Regs used in _sumdigits: [wreg+status,2+status,0+pclath+cstack]
  2707                           
  2708                           
  2709                           ;main.c: 18: int sumdigits(int number);main.c: 19: {;main.c: 20:   int SumDigits = 0,dig
      +                          it;
  2710  000C  0020               	movlb	0	; select bank0
  2711  000D  01A2               	clrf	sumdigits@SumDigits
  2712  000E  01A3               	clrf	sumdigits@SumDigits+1
  2713                           
  2714                           ;main.c: 21:   while (number>0)
  2715  000F  2835               	goto	l1869
  2716  0010                     l1863:
  2717                           
  2718                           ;main.c: 22:   {;main.c: 23:     digit = number%10;
  2719  0010  300A               	movlw	10
  2720  0011  00F0               	movwf	___awmod@divisor
  2721  0012  3000               	movlw	0
  2722  0013  00F1               	movwf	___awmod@divisor+1
  2723  0014  087A               	movf	sumdigits@number+1,w
  2724  0015  00F3               	movwf	___awmod@dividend+1
  2725  0016  0879               	movf	sumdigits@number,w
  2726  0017  00F2               	movwf	___awmod@dividend
  2727  0018  3180  2097  3180   	fcall	___awmod
  2728  001B  0871               	movf	?___awmod+1,w
  2729  001C  0020               	movlb	0	; select bank0
  2730  001D  00A1               	movwf	sumdigits@digit+1
  2731  001E  0870               	movf	?___awmod,w
  2732  001F  00A0               	movwf	sumdigits@digit
  2733  0020                     l1865:
  2734                           
  2735                           ;main.c: 24:     SumDigits = SumDigits + digit;
  2736  0020  0820               	movf	sumdigits@digit,w
  2737  0021  0722               	addwf	sumdigits@SumDigits,w
  2738  0022  00A2               	movwf	sumdigits@SumDigits
  2739  0023  0821               	movf	sumdigits@digit+1,w
  2740  0024  3D23               	addwfc	sumdigits@SumDigits+1,w
  2741  0025  00A3               	movwf	sumdigits@SumDigits+1
  2742  0026                     l1867:
  2743                           
  2744                           ;main.c: 25:     number = number /10;
  2745  0026  300A               	movlw	10
  2746  0027  00F0               	movwf	___awdiv@divisor
  2747  0028  3000               	movlw	0
  2748  0029  00F1               	movwf	___awdiv@divisor+1
  2749  002A  087A               	movf	sumdigits@number+1,w
  2750  002B  00F3               	movwf	___awdiv@dividend+1
  2751  002C  0879               	movf	sumdigits@number,w
  2752  002D  00F2               	movwf	___awdiv@dividend
  2753  002E  3181  2140  3180   	fcall	___awdiv
  2754  0031  0871               	movf	?___awdiv+1,w
  2755  0032  00FA               	movwf	sumdigits@number+1
  2756  0033  0870               	movf	?___awdiv,w
  2757  0034  00F9               	movwf	sumdigits@number
  2758  0035                     l1869:
  2759                           
  2760                           ;main.c: 21:   while (number>0)
  2761  0035  087A               	movf	sumdigits@number+1,w
  2762  0036  3A80               	xorlw	128
  2763  0037  00FB               	movwf	??_sumdigits
  2764  0038  3080               	movlw	128
  2765  0039  027B               	subwf	??_sumdigits,w
  2766  003A  1D03               	skipz
  2767  003B  283E               	goto	u1715
  2768  003C  3001               	movlw	1
  2769  003D  0279               	subwf	sumdigits@number,w
  2770  003E                     u1715:
  2771  003E  1803               	skipnc
  2772  003F  2841               	goto	u1711
  2773  0040  2842               	goto	u1710
  2774  0041                     u1711:
  2775  0041  2810               	goto	l1863
  2776  0042                     u1710:
  2777  0042                     l1871:
  2778                           
  2779                           ;main.c: 27:   return SumDigits;
  2780  0042  0020               	movlb	0	; select bank0
  2781  0043  0823               	movf	sumdigits@SumDigits+1,w
  2782  0044  00FA               	movwf	?_sumdigits+1
  2783  0045  0822               	movf	sumdigits@SumDigits,w
  2784  0046  00F9               	movwf	?_sumdigits
  2785  0047                     l26:
  2786  0047  0008               	return
  2787  0048                     __end_of_sumdigits:
  2788                           
  2789                           	psect	text2
  2790  0097                     __ptext2:	
  2791 ;; *************** function ___awmod *****************
  2792 ;; Defined at:
  2793 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  divisor         2    0[COMMON] int 
  2796 ;;  dividend        2    2[COMMON] int 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;  sign            1    6[COMMON] unsigned char 
  2799 ;;  counter         1    5[COMMON] unsigned char 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  2    0[COMMON] int 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2809 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2810 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2812 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2813 ;;Total ram usage:        7 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_sumdigits
  2819 ;;		_main
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           
  2824                           ;psect for function ___awmod
  2825  0097                     ___awmod:
  2826  0097                     l1811:	
  2827                           ;incstack = 0
  2828                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2829                           
  2830  0097  01F6               	clrf	___awmod@sign
  2831  0098                     l1813:
  2832  0098  1FF3               	btfss	___awmod@dividend+1,7
  2833  0099  289B               	goto	u1611
  2834  009A  289C               	goto	u1610
  2835  009B                     u1611:
  2836  009B  28A3               	goto	l1819
  2837  009C                     u1610:
  2838  009C                     l1815:
  2839  009C  09F2               	comf	___awmod@dividend,f
  2840  009D  09F3               	comf	___awmod@dividend+1,f
  2841  009E  0AF2               	incf	___awmod@dividend,f
  2842  009F  1903               	skipnz
  2843  00A0  0AF3               	incf	___awmod@dividend+1,f
  2844  00A1                     l1817:
  2845  00A1  01F6               	clrf	___awmod@sign
  2846  00A2  0AF6               	incf	___awmod@sign,f
  2847  00A3                     l1819:
  2848  00A3  1FF1               	btfss	___awmod@divisor+1,7
  2849  00A4  28A6               	goto	u1621
  2850  00A5  28A7               	goto	u1620
  2851  00A6                     u1621:
  2852  00A6  28AC               	goto	l1823
  2853  00A7                     u1620:
  2854  00A7                     l1821:
  2855  00A7  09F0               	comf	___awmod@divisor,f
  2856  00A8  09F1               	comf	___awmod@divisor+1,f
  2857  00A9  0AF0               	incf	___awmod@divisor,f
  2858  00AA  1903               	skipnz
  2859  00AB  0AF1               	incf	___awmod@divisor+1,f
  2860  00AC                     l1823:
  2861  00AC  0870               	movf	___awmod@divisor,w
  2862  00AD  0471               	iorwf	___awmod@divisor+1,w
  2863  00AE  1903               	btfsc	3,2
  2864  00AF  28B1               	goto	u1631
  2865  00B0  28B2               	goto	u1630
  2866  00B1                     u1631:
  2867  00B1  28DB               	goto	l1841
  2868  00B2                     u1630:
  2869  00B2                     l1825:
  2870  00B2  01F5               	clrf	___awmod@counter
  2871  00B3  0AF5               	incf	___awmod@counter,f
  2872  00B4  28BE               	goto	l1831
  2873  00B5                     l1827:
  2874  00B5  3001               	movlw	1
  2875  00B6                     u1645:
  2876  00B6  35F0               	lslf	___awmod@divisor,f
  2877  00B7  0DF1               	rlf	___awmod@divisor+1,f
  2878  00B8  0B89               	decfsz	9,f
  2879  00B9  28B6               	goto	u1645
  2880  00BA                     l1829:
  2881  00BA  3001               	movlw	1
  2882  00BB  00F4               	movwf	??___awmod
  2883  00BC  0874               	movf	??___awmod,w
  2884  00BD  07F5               	addwf	___awmod@counter,f
  2885  00BE                     l1831:
  2886  00BE  1FF1               	btfss	___awmod@divisor+1,7
  2887  00BF  28C1               	goto	u1651
  2888  00C0  28C2               	goto	u1650
  2889  00C1                     u1651:
  2890  00C1  28B5               	goto	l1827
  2891  00C2                     u1650:
  2892  00C2                     l1833:
  2893  00C2  0871               	movf	___awmod@divisor+1,w
  2894  00C3  0273               	subwf	___awmod@dividend+1,w
  2895  00C4  1D03               	skipz
  2896  00C5  28C8               	goto	u1665
  2897  00C6  0870               	movf	___awmod@divisor,w
  2898  00C7  0272               	subwf	___awmod@dividend,w
  2899  00C8                     u1665:
  2900  00C8  1C03               	skipc
  2901  00C9  28CB               	goto	u1661
  2902  00CA  28CC               	goto	u1660
  2903  00CB                     u1661:
  2904  00CB  28D0               	goto	l1837
  2905  00CC                     u1660:
  2906  00CC                     l1835:
  2907  00CC  0870               	movf	___awmod@divisor,w
  2908  00CD  02F2               	subwf	___awmod@dividend,f
  2909  00CE  0871               	movf	___awmod@divisor+1,w
  2910  00CF  3BF3               	subwfb	___awmod@dividend+1,f
  2911  00D0                     l1837:
  2912  00D0  3001               	movlw	1
  2913  00D1                     u1675:
  2914  00D1  36F1               	lsrf	___awmod@divisor+1,f
  2915  00D2  0CF0               	rrf	___awmod@divisor,f
  2916  00D3  0B89               	decfsz	9,f
  2917  00D4  28D1               	goto	u1675
  2918  00D5                     l1839:
  2919  00D5  3001               	movlw	1
  2920  00D6  02F5               	subwf	___awmod@counter,f
  2921  00D7  1D03               	btfss	3,2
  2922  00D8  28DA               	goto	u1681
  2923  00D9  28DB               	goto	u1680
  2924  00DA                     u1681:
  2925  00DA  28C2               	goto	l1833
  2926  00DB                     u1680:
  2927  00DB                     l1841:
  2928  00DB  0876               	movf	___awmod@sign,w
  2929  00DC  1903               	btfsc	3,2
  2930  00DD  28DF               	goto	u1691
  2931  00DE  28E0               	goto	u1690
  2932  00DF                     u1691:
  2933  00DF  28E5               	goto	l1845
  2934  00E0                     u1690:
  2935  00E0                     l1843:
  2936  00E0  09F2               	comf	___awmod@dividend,f
  2937  00E1  09F3               	comf	___awmod@dividend+1,f
  2938  00E2  0AF2               	incf	___awmod@dividend,f
  2939  00E3  1903               	skipnz
  2940  00E4  0AF3               	incf	___awmod@dividend+1,f
  2941  00E5                     l1845:
  2942  00E5  0873               	movf	___awmod@dividend+1,w
  2943  00E6  00F1               	movwf	?___awmod+1
  2944  00E7  0872               	movf	___awmod@dividend,w
  2945  00E8  00F0               	movwf	?___awmod
  2946  00E9                     l410:
  2947  00E9  0008               	return
  2948  00EA                     __end_of___awmod:
  2949                           
  2950                           	psect	text3
  2951  0140                     __ptext3:	
  2952 ;; *************** function ___awdiv *****************
  2953 ;; Defined at:
  2954 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  divisor         2    0[COMMON] int 
  2957 ;;  dividend        2    2[COMMON] int 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  quotient        2    7[COMMON] int 
  2960 ;;  sign            1    6[COMMON] unsigned char 
  2961 ;;  counter         1    5[COMMON] unsigned char 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  2    0[COMMON] int 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2, status,0
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2971 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2972 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2974 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2975 ;;Total ram usage:        9 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_sumdigits
  2981 ;;		_main
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           
  2986                           ;psect for function ___awdiv
  2987  0140                     ___awdiv:
  2988  0140                     l1767:	
  2989                           ;incstack = 0
  2990                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2991                           
  2992  0140  01F6               	clrf	___awdiv@sign
  2993  0141                     l1769:
  2994  0141  1FF1               	btfss	___awdiv@divisor+1,7
  2995  0142  2944               	goto	u1511
  2996  0143  2945               	goto	u1510
  2997  0144                     u1511:
  2998  0144  294C               	goto	l1775
  2999  0145                     u1510:
  3000  0145                     l1771:
  3001  0145  09F0               	comf	___awdiv@divisor,f
  3002  0146  09F1               	comf	___awdiv@divisor+1,f
  3003  0147  0AF0               	incf	___awdiv@divisor,f
  3004  0148  1903               	skipnz
  3005  0149  0AF1               	incf	___awdiv@divisor+1,f
  3006  014A                     l1773:
  3007  014A  01F6               	clrf	___awdiv@sign
  3008  014B  0AF6               	incf	___awdiv@sign,f
  3009  014C                     l1775:
  3010  014C  1FF3               	btfss	___awdiv@dividend+1,7
  3011  014D  294F               	goto	u1521
  3012  014E  2950               	goto	u1520
  3013  014F                     u1521:
  3014  014F  2959               	goto	l1781
  3015  0150                     u1520:
  3016  0150                     l1777:
  3017  0150  09F2               	comf	___awdiv@dividend,f
  3018  0151  09F3               	comf	___awdiv@dividend+1,f
  3019  0152  0AF2               	incf	___awdiv@dividend,f
  3020  0153  1903               	skipnz
  3021  0154  0AF3               	incf	___awdiv@dividend+1,f
  3022  0155                     l1779:
  3023  0155  3001               	movlw	1
  3024  0156  00F4               	movwf	??___awdiv
  3025  0157  0874               	movf	??___awdiv,w
  3026  0158  06F6               	xorwf	___awdiv@sign,f
  3027  0159                     l1781:
  3028  0159  01F7               	clrf	___awdiv@quotient
  3029  015A  01F8               	clrf	___awdiv@quotient+1
  3030  015B                     l1783:
  3031  015B  0870               	movf	___awdiv@divisor,w
  3032  015C  0471               	iorwf	___awdiv@divisor+1,w
  3033  015D  1903               	btfsc	3,2
  3034  015E  2960               	goto	u1531
  3035  015F  2961               	goto	u1530
  3036  0160                     u1531:
  3037  0160  2990               	goto	l1803
  3038  0161                     u1530:
  3039  0161                     l1785:
  3040  0161  01F5               	clrf	___awdiv@counter
  3041  0162  0AF5               	incf	___awdiv@counter,f
  3042  0163  296D               	goto	l1791
  3043  0164                     l1787:
  3044  0164  3001               	movlw	1
  3045  0165                     u1545:
  3046  0165  35F0               	lslf	___awdiv@divisor,f
  3047  0166  0DF1               	rlf	___awdiv@divisor+1,f
  3048  0167  0B89               	decfsz	9,f
  3049  0168  2965               	goto	u1545
  3050  0169                     l1789:
  3051  0169  3001               	movlw	1
  3052  016A  00F4               	movwf	??___awdiv
  3053  016B  0874               	movf	??___awdiv,w
  3054  016C  07F5               	addwf	___awdiv@counter,f
  3055  016D                     l1791:
  3056  016D  1FF1               	btfss	___awdiv@divisor+1,7
  3057  016E  2970               	goto	u1551
  3058  016F  2971               	goto	u1550
  3059  0170                     u1551:
  3060  0170  2964               	goto	l1787
  3061  0171                     u1550:
  3062  0171                     l1793:
  3063  0171  3001               	movlw	1
  3064  0172                     u1565:
  3065  0172  35F7               	lslf	___awdiv@quotient,f
  3066  0173  0DF8               	rlf	___awdiv@quotient+1,f
  3067  0174  0B89               	decfsz	9,f
  3068  0175  2972               	goto	u1565
  3069  0176  0871               	movf	___awdiv@divisor+1,w
  3070  0177  0273               	subwf	___awdiv@dividend+1,w
  3071  0178  1D03               	skipz
  3072  0179  297C               	goto	u1575
  3073  017A  0870               	movf	___awdiv@divisor,w
  3074  017B  0272               	subwf	___awdiv@dividend,w
  3075  017C                     u1575:
  3076  017C  1C03               	skipc
  3077  017D  297F               	goto	u1571
  3078  017E  2980               	goto	u1570
  3079  017F                     u1571:
  3080  017F  2985               	goto	l1799
  3081  0180                     u1570:
  3082  0180                     l1795:
  3083  0180  0870               	movf	___awdiv@divisor,w
  3084  0181  02F2               	subwf	___awdiv@dividend,f
  3085  0182  0871               	movf	___awdiv@divisor+1,w
  3086  0183  3BF3               	subwfb	___awdiv@dividend+1,f
  3087  0184                     l1797:
  3088  0184  1477               	bsf	___awdiv@quotient,0
  3089  0185                     l1799:
  3090  0185  3001               	movlw	1
  3091  0186                     u1585:
  3092  0186  36F1               	lsrf	___awdiv@divisor+1,f
  3093  0187  0CF0               	rrf	___awdiv@divisor,f
  3094  0188  0B89               	decfsz	9,f
  3095  0189  2986               	goto	u1585
  3096  018A                     l1801:
  3097  018A  3001               	movlw	1
  3098  018B  02F5               	subwf	___awdiv@counter,f
  3099  018C  1D03               	btfss	3,2
  3100  018D  298F               	goto	u1591
  3101  018E  2990               	goto	u1590
  3102  018F                     u1591:
  3103  018F  2971               	goto	l1793
  3104  0190                     u1590:
  3105  0190                     l1803:
  3106  0190  0876               	movf	___awdiv@sign,w
  3107  0191  1903               	btfsc	3,2
  3108  0192  2994               	goto	u1601
  3109  0193  2995               	goto	u1600
  3110  0194                     u1601:
  3111  0194  299A               	goto	l1807
  3112  0195                     u1600:
  3113  0195                     l1805:
  3114  0195  09F7               	comf	___awdiv@quotient,f
  3115  0196  09F8               	comf	___awdiv@quotient+1,f
  3116  0197  0AF7               	incf	___awdiv@quotient,f
  3117  0198  1903               	skipnz
  3118  0199  0AF8               	incf	___awdiv@quotient+1,f
  3119  019A                     l1807:
  3120  019A  0878               	movf	___awdiv@quotient+1,w
  3121  019B  00F1               	movwf	?___awdiv+1
  3122  019C  0877               	movf	___awdiv@quotient,w
  3123  019D  00F0               	movwf	?___awdiv
  3124  019E                     l397:
  3125  019E  0008               	return
  3126  019F                     __end_of___awdiv:
  3127                           
  3128                           	psect	text4
  3129  0F07                     __ptext4:	
  3130 ;; *************** function _sprintf *****************
  3131 ;; Defined at:
  3132 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  s               1    wreg     PTR unsigned char 
  3135 ;;		 -> main@printchar(10), 
  3136 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  3137 ;;		 -> STR_8(3), STR_6(3), STR_4(3), STR_1(3), 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  s               1    3[BANK1 ] PTR unsigned char 
  3140 ;;		 -> main@printchar(10), 
  3141 ;;  f               5    4[BANK1 ] struct _IO_FILE
  3142 ;;  ret             2    0        int 
  3143 ;;  ap              1    2[BANK1 ] PTR void [1]
  3144 ;;		 -> ?_sprintf(2), 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  2   70[BANK0 ] int 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3154 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3155 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3157 ;;      Totals:         1       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3158 ;;Total ram usage:       16 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    7
  3161 ;; This function calls:
  3162 ;;		_vfprintf
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _sprintf
  3170  0F07                     _sprintf:
  3171                           
  3172                           ;incstack = 0
  3173                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3174                           ;sprintf@s stored from wreg
  3175  0F07  0021               	movlb	1	; select bank1
  3176  0F08  00A3               	movwf	sprintf@s^(0+128)
  3177  0F09                     l1893:
  3178  0F09  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3179  0F0A  00FD               	movwf	??_sprintf
  3180  0F0B  087D               	movf	??_sprintf,w
  3181  0F0C  00A2               	movwf	sprintf@ap^(0+128)
  3182  0F0D  0823               	movf	sprintf@s^(0+128),w
  3183  0F0E  00FD               	movwf	??_sprintf
  3184  0F0F  087D               	movf	??_sprintf,w
  3185  0F10  00A4               	movwf	sprintf@f^(0+128)
  3186  0F11                     l1895:
  3187  0F11  01A5               	clrf	(sprintf@f^(0+128)+1)
  3188  0F12  01A6               	clrf	((sprintf@f+1)^(0+128)+1)
  3189  0F13                     l1897:
  3190  0F13  01A7               	clrf	(sprintf@f^(0+128)+3)
  3191  0F14  01A8               	clrf	((sprintf@f+1)^(0+128)+3)
  3192  0F15                     l1899:
  3193  0F15  0020               	movlb	0	; select bank0
  3194  0F16  0867               	movf	sprintf@fmt+1,w
  3195  0F17  00DF               	movwf	vfprintf@fmt+1
  3196  0F18  0866               	movf	sprintf@fmt,w
  3197  0F19  00DE               	movwf	vfprintf@fmt
  3198  0F1A  30A2               	movlw	(low (sprintf@ap| 0))& (0+255)
  3199  0F1B  00FD               	movwf	??_sprintf
  3200  0F1C  087D               	movf	??_sprintf,w
  3201  0F1D  00E0               	movwf	vfprintf@ap
  3202  0F1E  30A4               	movlw	(low (sprintf@f| 0))& (0+255)
  3203  0F1F  318F  27CF  318F   	fcall	_vfprintf
  3204  0F22                     l1901:
  3205  0F22  0021               	movlb	1	; select bank1
  3206  0F23  0825               	movf	(sprintf@f^(0+128)+1),w
  3207  0F24  0723               	addwf	sprintf@s^(0+128),w
  3208  0F25  00FD               	movwf	??_sprintf
  3209  0F26  087D               	movf	??_sprintf,w
  3210  0F27  0086               	movwf	6
  3211  0F28  0187               	clrf	7
  3212  0F29  0181               	clrf	1
  3213  0F2A                     l707:
  3214  0F2A  0008               	return
  3215  0F2B                     __end_of_sprintf:
  3216                           
  3217                           	psect	text5
  3218  0FCF                     __ptext5:	
  3219 ;; *************** function _vfprintf *****************
  3220 ;; Defined at:
  3221 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  fp              1    wreg     PTR struct _IO_FILE
  3224 ;;		 -> sprintf@f(5), 
  3225 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  3226 ;;		 -> STR_8(3), STR_6(3), STR_4(3), STR_1(3), 
  3227 ;;  ap              1   64[BANK0 ] PTR PTR void 
  3228 ;;		 -> sprintf@ap(1), 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  3231 ;;		 -> sprintf@f(5), 
  3232 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  3233 ;;		 -> STR_8(3), STR_6(3), STR_4(3), STR_1(3), 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  2   62[BANK0 ] int 
  3236 ;; Registers used:
  3237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3243 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3244 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3245 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3246 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3247 ;;Total ram usage:        8 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    6
  3250 ;; This function calls:
  3251 ;;		_vfpfcnvrt
  3252 ;; This function is called by:
  3253 ;;		_sprintf
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _vfprintf
  3259  0FCF                     _vfprintf:
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3263                           ;vfprintf@fp stored from wreg
  3264  0FCF  0020               	movlb	0	; select bank0
  3265  0FD0  00E3               	movwf	vfprintf@fp
  3266  0FD1                     l1849:
  3267                           
  3268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3269  0FD1  085F               	movf	vfprintf@fmt+1,w
  3270  0FD2  00E5               	movwf	vfprintf@cfmt+1
  3271  0FD3  085E               	movf	vfprintf@fmt,w
  3272  0FD4  00E4               	movwf	vfprintf@cfmt
  3273  0FD5                     l1851:
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3276  0FD5  0021               	movlb	1	; select bank1
  3277  0FD6  01E1               	clrf	_nout^(0+128)
  3278  0FD7  01E2               	clrf	(_nout+1)^(0+128)
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3281  0FD8  2FED               	goto	l1855
  3282  0FD9                     l1853:
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3285  0FD9  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3286  0FDA  00E1               	movwf	??_vfprintf
  3287  0FDB  0861               	movf	??_vfprintf,w
  3288  0FDC  00CE               	movwf	vfpfcnvrt@fmt
  3289  0FDD  0860               	movf	vfprintf@ap,w
  3290  0FDE  00E2               	movwf	??_vfprintf+1
  3291  0FDF  0862               	movf	??_vfprintf+1,w
  3292  0FE0  00CF               	movwf	vfpfcnvrt@ap
  3293  0FE1  0863               	movf	vfprintf@fp,w
  3294  0FE2  3181  219F  318F   	fcall	_vfpfcnvrt
  3295  0FE5  0020               	movlb	0	; select bank0
  3296  0FE6  084E               	movf	?_vfpfcnvrt,w
  3297  0FE7  0021               	movlb	1	; select bank1
  3298  0FE8  07E1               	addwf	_nout^(0+128),f
  3299  0FE9  0020               	movlb	0	; select bank0
  3300  0FEA  084F               	movf	?_vfpfcnvrt+1,w
  3301  0FEB  0021               	movlb	1	; select bank1
  3302  0FEC  3DE2               	addwfc	(_nout+1)^(0+128),f
  3303  0FED                     l1855:
  3304                           
  3305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3306  0FED  0020               	movlb	0	; select bank0
  3307  0FEE  0864               	movf	vfprintf@cfmt,w
  3308  0FEF  0084               	movwf	4
  3309  0FF0  0865               	movf	vfprintf@cfmt+1,w
  3310  0FF1  0085               	movwf	5
  3311  0FF2  0012               	moviw fsr0++
  3312  0FF3  1D03               	btfss	3,2
  3313  0FF4  2FF6               	goto	u1701
  3314  0FF5  2FF7               	goto	u1700
  3315  0FF6                     u1701:
  3316  0FF6  2FD9               	goto	l1853
  3317  0FF7                     u1700:
  3318  0FF7                     l1857:
  3319                           
  3320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3321  0FF7  0021               	movlb	1	; select bank1
  3322  0FF8  0862               	movf	(_nout+1)^(0+128),w
  3323  0FF9  0020               	movlb	0	; select bank0
  3324  0FFA  00DF               	movwf	?_vfprintf+1
  3325  0FFB  0021               	movlb	1	; select bank1
  3326  0FFC  0861               	movf	_nout^(0+128),w
  3327  0FFD  0020               	movlb	0	; select bank0
  3328  0FFE  00DE               	movwf	?_vfprintf
  3329  0FFF                     l779:
  3330  0FFF  0008               	return
  3331  1000                     __end_of_vfprintf:
  3332                           
  3333                           	psect	text6
  3334  019F                     __ptext6:	
  3335 ;; *************** function _vfpfcnvrt *****************
  3336 ;; Defined at:
  3337 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  fp              1    wreg     PTR struct _IO_FILE
  3340 ;;		 -> sprintf@f(5), 
  3341 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3342 ;;		 -> vfprintf@cfmt(2), 
  3343 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3344 ;;		 -> sprintf@ap(1), 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  3347 ;;		 -> sprintf@f(5), 
  3348 ;;  ll              8   53[BANK0 ] long long 
  3349 ;;  llu             8    0        unsigned long long 
  3350 ;;  f               4    0        unsigned long long 
  3351 ;;  ct              3    0        unsigned char [3]
  3352 ;;  vp              2    0        PTR void 
  3353 ;;  i               2    0        int 
  3354 ;;  done            2    0        int 
  3355 ;;  cp              2    0        PTR unsigned char 
  3356 ;;  c               1    0        unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  2   46[BANK0 ] int 
  3359 ;; Registers used:
  3360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3366 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3367 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3368 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3369 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3370 ;;Total ram usage:       16 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:    5
  3373 ;; This function calls:
  3374 ;;		_dtoa
  3375 ;;		_fputc
  3376 ;; This function is called by:
  3377 ;;		_vfprintf
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           
  3382                           ;psect for function _vfpfcnvrt
  3383  019F                     _vfpfcnvrt:
  3384                           
  3385                           ;incstack = 0
  3386                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3387                           ;vfpfcnvrt@fp stored from wreg
  3388  019F  0020               	movlb	0	; select bank0
  3389  01A0  00DD               	movwf	vfpfcnvrt@fp
  3390  01A1                     l1665:
  3391                           
  3392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3393  01A1  084E               	movf	vfpfcnvrt@fmt,w
  3394  01A2  0086               	movwf	6
  3395  01A3  0187               	clrf	7
  3396  01A4  3F40               	moviw [0]fsr1
  3397  01A5  00D0               	movwf	??_vfpfcnvrt
  3398  01A6  3F41               	moviw [1]fsr1
  3399  01A7  00D1               	movwf	??_vfpfcnvrt+1
  3400  01A8  0850               	movf	??_vfpfcnvrt,w
  3401  01A9  0084               	movwf	4
  3402  01AA  0851               	movf	??_vfpfcnvrt+1,w
  3403  01AB  0085               	movwf	5
  3404  01AC  0012               	moviw fsr0++
  3405  01AD  3A25               	xorlw	37
  3406  01AE  1D03               	btfss	3,2
  3407  01AF  29B1               	goto	u1431
  3408  01B0  29B2               	goto	u1430
  3409  01B1                     u1431:
  3410  01B1  2A56               	goto	l1701
  3411  01B2                     u1430:
  3412  01B2                     l1667:
  3413                           
  3414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3415  01B2  084E               	movf	vfpfcnvrt@fmt,w
  3416  01B3  0086               	movwf	6
  3417  01B4  0187               	clrf	7
  3418  01B5  3001               	movlw	1
  3419  01B6  0781               	addwf	1,f
  3420  01B7  3141               	addfsr 1,1
  3421  01B8  1803               	skipnc
  3422  01B9  0A81               	incf	1,f
  3423  01BA                     l1669:
  3424                           
  3425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3426  01BA  0021               	movlb	1	; select bank1
  3427  01BB  01E3               	clrf	_width^(0+128)
  3428  01BC  01E4               	clrf	(_width+1)^(0+128)
  3429  01BD  0020               	movlb	0	; select bank0
  3430  01BE  01EE               	clrf	_flags
  3431  01BF  01EF               	clrf	_flags+1
  3432  01C0                     l1671:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3435  01C0  30FF               	movlw	255
  3436  01C1  00EC               	movwf	_prec
  3437  01C2  30FF               	movlw	255
  3438  01C3  00ED               	movwf	_prec+1
  3439  01C4                     l1673:
  3440                           
  3441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3442  01C4  084E               	movf	vfpfcnvrt@fmt,w
  3443  01C5  0086               	movwf	6
  3444  01C6  0187               	clrf	7
  3445  01C7  3F40               	moviw [0]fsr1
  3446  01C8  00D0               	movwf	??_vfpfcnvrt
  3447  01C9  3F41               	moviw [1]fsr1
  3448  01CA  00D1               	movwf	??_vfpfcnvrt+1
  3449  01CB  0850               	movf	??_vfpfcnvrt,w
  3450  01CC  0084               	movwf	4
  3451  01CD  0851               	movf	??_vfpfcnvrt+1,w
  3452  01CE  0085               	movwf	5
  3453  01CF  0012               	moviw fsr0++
  3454  01D0  3A64               	xorlw	100
  3455  01D1  1903               	btfsc	3,2
  3456  01D2  29D4               	goto	u1441
  3457  01D3  29D5               	goto	u1440
  3458  01D4                     u1441:
  3459  01D4  29E6               	goto	l1677
  3460  01D5                     u1440:
  3461  01D5                     l1675:
  3462  01D5  084E               	movf	vfpfcnvrt@fmt,w
  3463  01D6  0086               	movwf	6
  3464  01D7  0187               	clrf	7
  3465  01D8  3F40               	moviw [0]fsr1
  3466  01D9  00D0               	movwf	??_vfpfcnvrt
  3467  01DA  3F41               	moviw [1]fsr1
  3468  01DB  00D1               	movwf	??_vfpfcnvrt+1
  3469  01DC  0850               	movf	??_vfpfcnvrt,w
  3470  01DD  0084               	movwf	4
  3471  01DE  0851               	movf	??_vfpfcnvrt+1,w
  3472  01DF  0085               	movwf	5
  3473  01E0  0012               	moviw fsr0++
  3474  01E1  3A69               	xorlw	105
  3475  01E2  1D03               	btfss	3,2
  3476  01E3  29E5               	goto	u1451
  3477  01E4  29E6               	goto	u1450
  3478  01E5                     u1451:
  3479  01E5  2A21               	goto	l1685
  3480  01E6                     u1450:
  3481  01E6                     l1677:
  3482                           
  3483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3484  01E6  084E               	movf	vfpfcnvrt@fmt,w
  3485  01E7  0086               	movwf	6
  3486  01E8  0187               	clrf	7
  3487  01E9  3001               	movlw	1
  3488  01EA  0781               	addwf	1,f
  3489  01EB  3141               	addfsr 1,1
  3490  01EC  1803               	skipnc
  3491  01ED  0A81               	incf	1,f
  3492  01EE                     l1679:
  3493                           
  3494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3495  01EE  084F               	movf	vfpfcnvrt@ap,w
  3496  01EF  0086               	movwf	6
  3497  01F0  0187               	clrf	7
  3498  01F1  0801               	movf	1,w
  3499  01F2  0084               	movwf	4
  3500  01F3  0185               	clrf	5
  3501  01F4  3002               	movlw	2
  3502  01F5  0781               	addwf	1,f
  3503  01F6  3F00               	moviw [0]fsr0
  3504  01F7  00D0               	movwf	??_vfpfcnvrt
  3505  01F8  3F01               	moviw [1]fsr0
  3506  01F9  00D1               	movwf	??_vfpfcnvrt+1
  3507  01FA  0850               	movf	??_vfpfcnvrt,w
  3508  01FB  00D5               	movwf	vfpfcnvrt@ll
  3509  01FC  0851               	movf	??_vfpfcnvrt+1,w
  3510  01FD  00D6               	movwf	vfpfcnvrt@ll+1
  3511  01FE  0D89               	rlf	9,f
  3512  01FF  3B89               	subwfb	9,f
  3513  0200  0989               	comf	9,f
  3514  0201  00D7               	movwf	vfpfcnvrt@ll+2
  3515  0202  00D8               	movwf	vfpfcnvrt@ll+3
  3516  0203  00D9               	movwf	vfpfcnvrt@ll+4
  3517  0204  00DA               	movwf	vfpfcnvrt@ll+5
  3518  0205  00DB               	movwf	vfpfcnvrt@ll+6
  3519  0206  00DC               	movwf	vfpfcnvrt@ll+7
  3520  0207                     l1681:
  3521                           
  3522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3523  0207  0855               	movf	vfpfcnvrt@ll,w
  3524  0208  00B0               	movwf	dtoa@d
  3525  0209  0856               	movf	vfpfcnvrt@ll+1,w
  3526  020A  00B1               	movwf	dtoa@d+1
  3527  020B  0857               	movf	vfpfcnvrt@ll+2,w
  3528  020C  00B2               	movwf	dtoa@d+2
  3529  020D  0858               	movf	vfpfcnvrt@ll+3,w
  3530  020E  00B3               	movwf	dtoa@d+3
  3531  020F  0859               	movf	vfpfcnvrt@ll+4,w
  3532  0210  00B4               	movwf	dtoa@d+4
  3533  0211  085A               	movf	vfpfcnvrt@ll+5,w
  3534  0212  00B5               	movwf	dtoa@d+5
  3535  0213  085B               	movf	vfpfcnvrt@ll+6,w
  3536  0214  00B6               	movwf	dtoa@d+6
  3537  0215  085C               	movf	vfpfcnvrt@ll+7,w
  3538  0216  00B7               	movwf	dtoa@d+7
  3539  0217  085D               	movf	vfpfcnvrt@fp,w
  3540  0218  3184  2465  3181   	fcall	_dtoa
  3541  021B  0020               	movlb	0	; select bank0
  3542  021C  0831               	movf	?_dtoa+1,w
  3543  021D  00CF               	movwf	?_vfpfcnvrt+1
  3544  021E  0830               	movf	?_dtoa,w
  3545  021F  00CE               	movwf	?_vfpfcnvrt
  3546  0220  2A79               	goto	l772
  3547  0221                     l1685:
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3550  0221  084E               	movf	vfpfcnvrt@fmt,w
  3551  0222  0086               	movwf	6
  3552  0223  0187               	clrf	7
  3553  0224  3F40               	moviw [0]fsr1
  3554  0225  00D0               	movwf	??_vfpfcnvrt
  3555  0226  3F41               	moviw [1]fsr1
  3556  0227  00D1               	movwf	??_vfpfcnvrt+1
  3557  0228  0850               	movf	??_vfpfcnvrt,w
  3558  0229  0084               	movwf	4
  3559  022A  0851               	movf	??_vfpfcnvrt+1,w
  3560  022B  0085               	movwf	5
  3561  022C  0012               	moviw fsr0++
  3562  022D  3A25               	xorlw	37
  3563  022E  1D03               	btfss	3,2
  3564  022F  2A31               	goto	u1461
  3565  0230  2A32               	goto	u1460
  3566  0231                     u1461:
  3567  0231  2A4B               	goto	l1695
  3568  0232                     u1460:
  3569  0232                     l1687:
  3570                           
  3571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3572  0232  084E               	movf	vfpfcnvrt@fmt,w
  3573  0233  0086               	movwf	6
  3574  0234  0187               	clrf	7
  3575  0235  3001               	movlw	1
  3576  0236  0781               	addwf	1,f
  3577  0237  3141               	addfsr 1,1
  3578  0238  1803               	skipnc
  3579  0239  0A81               	incf	1,f
  3580  023A                     l1689:
  3581                           
  3582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3583  023A  3025               	movlw	37
  3584  023B  00F0               	movwf	fputc@c
  3585  023C  3000               	movlw	0
  3586  023D  00F1               	movwf	fputc@c+1
  3587  023E  085D               	movf	vfpfcnvrt@fp,w
  3588  023F  00D0               	movwf	??_vfpfcnvrt
  3589  0240  0850               	movf	??_vfpfcnvrt,w
  3590  0241  00F2               	movwf	fputc@fp
  3591  0242  3180  2048  3181   	fcall	_fputc
  3592  0245                     l1691:
  3593                           
  3594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3595  0245  3001               	movlw	1
  3596  0246  0020               	movlb	0	; select bank0
  3597  0247  00CE               	movwf	?_vfpfcnvrt
  3598  0248  3000               	movlw	0
  3599  0249  00CF               	movwf	?_vfpfcnvrt+1
  3600  024A  2A79               	goto	l772
  3601  024B                     l1695:
  3602                           
  3603                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3604  024B  084E               	movf	vfpfcnvrt@fmt,w
  3605  024C  0086               	movwf	6
  3606  024D  0187               	clrf	7
  3607  024E  3001               	movlw	1
  3608  024F  0781               	addwf	1,f
  3609  0250  3141               	addfsr 1,1
  3610  0251  1803               	skipnc
  3611  0252  0A81               	incf	1,f
  3612  0253                     l1697:
  3613                           
  3614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3615  0253  01CE               	clrf	?_vfpfcnvrt
  3616  0254  01CF               	clrf	?_vfpfcnvrt+1
  3617  0255  2A79               	goto	l772
  3618  0256                     l1701:
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3621  0256  084E               	movf	vfpfcnvrt@fmt,w
  3622  0257  0086               	movwf	6
  3623  0258  0187               	clrf	7
  3624  0259  3F40               	moviw [0]fsr1
  3625  025A  00D0               	movwf	??_vfpfcnvrt
  3626  025B  3F41               	moviw [1]fsr1
  3627  025C  00D1               	movwf	??_vfpfcnvrt+1
  3628  025D  0850               	movf	??_vfpfcnvrt,w
  3629  025E  0084               	movwf	4
  3630  025F  0851               	movf	??_vfpfcnvrt+1,w
  3631  0260  0085               	movwf	5
  3632  0261  0800               	movf	0,w	;code access
  3633  0262  00D2               	movwf	??_vfpfcnvrt+2
  3634  0263  01D3               	clrf	??_vfpfcnvrt+3
  3635  0264  0852               	movf	??_vfpfcnvrt+2,w
  3636  0265  00F0               	movwf	fputc@c
  3637  0266  0853               	movf	??_vfpfcnvrt+3,w
  3638  0267  00F1               	movwf	fputc@c+1
  3639  0268  085D               	movf	vfpfcnvrt@fp,w
  3640  0269  00D4               	movwf	??_vfpfcnvrt+4
  3641  026A  0854               	movf	??_vfpfcnvrt+4,w
  3642  026B  00F2               	movwf	fputc@fp
  3643  026C  3180  2048  3181   	fcall	_fputc
  3644  026F                     l1703:
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3647  026F  0020               	movlb	0	; select bank0
  3648  0270  084E               	movf	vfpfcnvrt@fmt,w
  3649  0271  0086               	movwf	6
  3650  0272  0187               	clrf	7
  3651  0273  3001               	movlw	1
  3652  0274  0781               	addwf	1,f
  3653  0275  3141               	addfsr 1,1
  3654  0276  1803               	skipnc
  3655  0277  0A81               	incf	1,f
  3656  0278  2A45               	goto	l1691
  3657  0279                     l772:
  3658  0279  0008               	return
  3659  027A                     __end_of_vfpfcnvrt:
  3660                           
  3661                           	psect	text7
  3662  0465                     __ptext7:	
  3663 ;; *************** function _dtoa *****************
  3664 ;; Defined at:
  3665 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  fp              1    wreg     PTR struct _IO_FILE
  3668 ;;		 -> sprintf@f(5), 
  3669 ;;  d               8   16[BANK0 ] long long 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  3672 ;;		 -> sprintf@f(5), 
  3673 ;;  n               8   36[BANK0 ] long long 
  3674 ;;  i               2   44[BANK0 ] int 
  3675 ;;  s               2   34[BANK0 ] int 
  3676 ;;  w               2   32[BANK0 ] int 
  3677 ;;  p               2   30[BANK0 ] int 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  2   16[BANK0 ] int 
  3680 ;; Registers used:
  3681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3687 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3688 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3689 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3690 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3691 ;;Total ram usage:       30 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    4
  3694 ;; This function calls:
  3695 ;;		___aodiv
  3696 ;;		___aomod
  3697 ;;		_abs
  3698 ;;		_pad
  3699 ;; This function is called by:
  3700 ;;		_vfpfcnvrt
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           
  3705                           ;psect for function _dtoa
  3706  0465                     _dtoa:
  3707                           
  3708                           ;incstack = 0
  3709                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3710                           ;dtoa@fp stored from wreg
  3711  0465  0020               	movlb	0	; select bank0
  3712  0466  00BD               	movwf	dtoa@fp
  3713  0467                     l1589:
  3714                           
  3715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3716  0467  0830               	movf	dtoa@d,w
  3717  0468  00C4               	movwf	dtoa@n
  3718  0469  0831               	movf	dtoa@d+1,w
  3719  046A  00C5               	movwf	dtoa@n+1
  3720  046B  0832               	movf	dtoa@d+2,w
  3721  046C  00C6               	movwf	dtoa@n+2
  3722  046D  0833               	movf	dtoa@d+3,w
  3723  046E  00C7               	movwf	dtoa@n+3
  3724  046F  0834               	movf	dtoa@d+4,w
  3725  0470  00C8               	movwf	dtoa@n+4
  3726  0471  0835               	movf	dtoa@d+5,w
  3727  0472  00C9               	movwf	dtoa@n+5
  3728  0473  0836               	movf	dtoa@d+6,w
  3729  0474  00CA               	movwf	dtoa@n+6
  3730  0475  0837               	movf	dtoa@d+7,w
  3731  0476  00CB               	movwf	dtoa@n+7
  3732  0477                     l1591:
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3735  0477  3044               	movlw	low dtoa@n
  3736  0478  0086               	movwf	6
  3737  0479  3000               	movlw	high dtoa@n
  3738  047A  0087               	movwf	7
  3739  047B  3F47               	moviw [7]fsr1
  3740  047C  00B8               	movwf	??_dtoa
  3741  047D  1BB8               	btfsc	??_dtoa,7
  3742  047E  2C80               	goto	u1251
  3743  047F  2C82               	goto	u1250
  3744  0480                     u1251:
  3745  0480  3001               	movlw	1
  3746  0481  2C83               	goto	u1260
  3747  0482                     u1250:
  3748  0482  3000               	movlw	0
  3749  0483                     u1260:
  3750  0483  0020               	movlb	0	; select bank0
  3751  0484  00B9               	movwf	??_dtoa+1
  3752  0485  01BA               	clrf	??_dtoa+2
  3753  0486  0839               	movf	??_dtoa+1,w
  3754  0487  00C2               	movwf	dtoa@s
  3755  0488  083A               	movf	??_dtoa+2,w
  3756  0489  00C3               	movwf	dtoa@s+1
  3757  048A                     l1593:
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3760  048A  0842               	movf	dtoa@s,w
  3761  048B  0443               	iorwf	dtoa@s+1,w
  3762  048C  1903               	btfsc	3,2
  3763  048D  2C8F               	goto	u1271
  3764  048E  2C90               	goto	u1270
  3765  048F                     u1271:
  3766  048F  2CAE               	goto	l742
  3767  0490                     u1270:
  3768  0490                     l1595:
  3769                           
  3770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3771  0490  09C4               	comf	dtoa@n,f
  3772  0491  09C5               	comf	dtoa@n+1,f
  3773  0492  09C6               	comf	dtoa@n+2,f
  3774  0493  09C7               	comf	dtoa@n+3,f
  3775  0494  09C8               	comf	dtoa@n+4,f
  3776  0495  09C9               	comf	dtoa@n+5,f
  3777  0496  09CA               	comf	dtoa@n+6,f
  3778  0497  09CB               	comf	dtoa@n+7,f
  3779  0498  0AC4               	incf	dtoa@n,f
  3780  0499  1D03               	skipz
  3781  049A  2CAE               	goto	u128lld
  3782  049B  0AC5               	incf	dtoa@n+1,f
  3783  049C  1D03               	skipz
  3784  049D  2CAE               	goto	u128lld
  3785  049E  0AC6               	incf	dtoa@n+2,f
  3786  049F  1D03               	skipz
  3787  04A0  2CAE               	goto	u128lld
  3788  04A1  0AC7               	incf	dtoa@n+3,f
  3789  04A2  1D03               	skipz
  3790  04A3  2CAE               	goto	u128lld
  3791  04A4  0AC8               	incf	dtoa@n+4,f
  3792  04A5  1D03               	skipz
  3793  04A6  2CAE               	goto	u128lld
  3794  04A7  0AC9               	incf	dtoa@n+5,f
  3795  04A8  1D03               	skipz
  3796  04A9  2CAE               	goto	u128lld
  3797  04AA  0ACA               	incf	dtoa@n+6,f
  3798  04AB  1D03               	skipz
  3799  04AC  2CAE               	goto	u128lld
  3800  04AD  0ACB               	incf	dtoa@n+7,f
  3801  04AE                     u128lld:
  3802  04AE                     l742:	
  3803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
  3804                           
  3805                           
  3806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3807  04AE  0020               	movlb	0	; select bank0
  3808  04AF  1BED               	btfsc	_prec+1,7
  3809  04B0  2CB2               	goto	u1291
  3810  04B1  2CB3               	goto	u1290
  3811  04B2                     u1291:
  3812  04B2  2CB7               	goto	l743
  3813  04B3                     u1290:
  3814  04B3                     l1597:
  3815                           
  3816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3817  04B3  30FD               	movlw	253
  3818  04B4  05EE               	andwf	_flags,f
  3819  04B5  30FF               	movlw	255
  3820  04B6  05EF               	andwf	_flags+1,f
  3821  04B7                     l743:	
  3822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
  3823                           
  3824                           
  3825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3826  04B7  086D               	movf	_prec+1,w
  3827  04B8  3A80               	xorlw	128
  3828  04B9  00B8               	movwf	??_dtoa
  3829  04BA  3080               	movlw	128
  3830  04BB  0238               	subwf	??_dtoa,w
  3831  04BC  1D03               	skipz
  3832  04BD  2CC0               	goto	u1305
  3833  04BE  3001               	movlw	1
  3834  04BF  026C               	subwf	_prec,w
  3835  04C0                     u1305:
  3836  04C0  1803               	skipnc
  3837  04C1  2CC3               	goto	u1301
  3838  04C2  2CC4               	goto	u1300
  3839  04C3                     u1301:
  3840  04C3  2CCA               	goto	l1601
  3841  04C4                     u1300:
  3842  04C4                     l1599:
  3843  04C4  3001               	movlw	1
  3844  04C5  0020               	movlb	0	; select bank0
  3845  04C6  00BE               	movwf	dtoa@p
  3846  04C7  3000               	movlw	0
  3847  04C8  00BF               	movwf	dtoa@p+1
  3848  04C9  2CCF               	goto	l747
  3849  04CA                     l1601:
  3850  04CA  0020               	movlb	0	; select bank0
  3851  04CB  086D               	movf	_prec+1,w
  3852  04CC  00BF               	movwf	dtoa@p+1
  3853  04CD  086C               	movf	_prec,w
  3854  04CE  00BE               	movwf	dtoa@p
  3855  04CF                     l747:
  3856                           
  3857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3858  04CF  0021               	movlb	1	; select bank1
  3859  04D0  0864               	movf	(_width+1)^(0+128),w
  3860  04D1  0020               	movlb	0	; select bank0
  3861  04D2  00C1               	movwf	dtoa@w+1
  3862  04D3  0021               	movlb	1	; select bank1
  3863  04D4  0863               	movf	_width^(0+128),w
  3864  04D5  0020               	movlb	0	; select bank0
  3865  04D6  00C0               	movwf	dtoa@w
  3866  04D7                     l1603:
  3867                           
  3868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3869  04D7  0842               	movf	dtoa@s,w
  3870  04D8  0443               	iorwf	dtoa@s+1,w
  3871  04D9  1D03               	btfss	3,2
  3872  04DA  2CDC               	goto	u1311
  3873  04DB  2CDD               	goto	u1310
  3874  04DC                     u1311:
  3875  04DC  2CE1               	goto	l1607
  3876  04DD                     u1310:
  3877  04DD                     l1605:
  3878  04DD  1D6E               	btfss	_flags,2
  3879  04DE  2CE0               	goto	u1321
  3880  04DF  2CE1               	goto	u1320
  3881  04E0                     u1321:
  3882  04E0  2CE5               	goto	l748
  3883  04E1                     u1320:
  3884  04E1                     l1607:
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  3887  04E1  30FF               	movlw	255
  3888  04E2  07C0               	addwf	dtoa@w,f
  3889  04E3  30FF               	movlw	255
  3890  04E4  3DC1               	addwfc	dtoa@w+1,f
  3891  04E5                     l748:	
  3892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
  3893                           
  3894                           
  3895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3896  04E5  301F               	movlw	31
  3897  04E6  00CC               	movwf	dtoa@i
  3898  04E7  3000               	movlw	0
  3899  04E8  00CD               	movwf	dtoa@i+1
  3900  04E9                     l1609:
  3901                           
  3902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3903  04E9  0022               	movlb	2	; select bank2
  3904  04EA  01BF               	clrf	(_dbuf^(0+256)+31)
  3905                           
  3906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3907  04EB  2D55               	goto	l751
  3908  04EC                     l1611:
  3909                           
  3910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  3911  04EC  30FF               	movlw	255
  3912  04ED  0020               	movlb	0	; select bank0
  3913  04EE  07CC               	addwf	dtoa@i,f
  3914  04EF  30FF               	movlw	255
  3915  04F0  3DCD               	addwfc	dtoa@i+1,f
  3916  04F1                     l1613:
  3917                           
  3918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3919  04F1  300A               	movlw	10
  3920  04F2  00A0               	movwf	___aomod@divisor
  3921  04F3  01A1               	clrf	___aomod@divisor+1
  3922  04F4  01A2               	clrf	___aomod@divisor+2
  3923  04F5  01A3               	clrf	___aomod@divisor+3
  3924  04F6  01A4               	clrf	___aomod@divisor+4
  3925  04F7  01A5               	clrf	___aomod@divisor+5
  3926  04F8  01A6               	clrf	___aomod@divisor+6
  3927  04F9  01A7               	clrf	___aomod@divisor+7
  3928  04FA  0844               	movf	dtoa@n,w
  3929  04FB  00A8               	movwf	___aomod@dividend
  3930  04FC  0845               	movf	dtoa@n+1,w
  3931  04FD  00A9               	movwf	___aomod@dividend+1
  3932  04FE  0846               	movf	dtoa@n+2,w
  3933  04FF  00AA               	movwf	___aomod@dividend+2
  3934  0500  0847               	movf	dtoa@n+3,w
  3935  0501  00AB               	movwf	___aomod@dividend+3
  3936  0502  0848               	movf	dtoa@n+4,w
  3937  0503  00AC               	movwf	___aomod@dividend+4
  3938  0504  0849               	movf	dtoa@n+5,w
  3939  0505  00AD               	movwf	___aomod@dividend+5
  3940  0506  084A               	movf	dtoa@n+6,w
  3941  0507  00AE               	movwf	___aomod@dividend+6
  3942  0508  084B               	movf	dtoa@n+7,w
  3943  0509  00AF               	movwf	___aomod@dividend+7
  3944  050A  3182  227A  3184   	fcall	___aomod
  3945  050D  0020               	movlb	0	; select bank0
  3946  050E  0821               	movf	?___aomod+1,w
  3947  050F  00F4               	movwf	abs@a+1
  3948  0510  0820               	movf	?___aomod,w
  3949  0511  00F3               	movwf	abs@a
  3950  0512  318E  2635  3184   	fcall	_abs
  3951  0515  0873               	movf	?_abs,w
  3952  0516  3E30               	addlw	48
  3953  0517  0020               	movlb	0	; select bank0
  3954  0518  00B8               	movwf	??_dtoa
  3955  0519  084C               	movf	dtoa@i,w
  3956  051A  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3957  051B  0086               	movwf	6
  3958  051C  3001               	movlw	1	; select bank2/3
  3959  051D  0087               	movwf	7
  3960  051E  0838               	movf	??_dtoa,w
  3961  051F  0081               	movwf	1
  3962  0520                     l1615:
  3963                           
  3964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  3965  0520  30FF               	movlw	255
  3966  0521  07BE               	addwf	dtoa@p,f
  3967  0522  30FF               	movlw	255
  3968  0523  3DBF               	addwfc	dtoa@p+1,f
  3969  0524                     l1617:
  3970                           
  3971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  3972  0524  30FF               	movlw	255
  3973  0525  07C0               	addwf	dtoa@w,f
  3974  0526  30FF               	movlw	255
  3975  0527  3DC1               	addwfc	dtoa@w+1,f
  3976  0528                     l1619:
  3977                           
  3978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3979  0528  300A               	movlw	10
  3980  0529  00A0               	movwf	___aodiv@divisor
  3981  052A  01A1               	clrf	___aodiv@divisor+1
  3982  052B  01A2               	clrf	___aodiv@divisor+2
  3983  052C  01A3               	clrf	___aodiv@divisor+3
  3984  052D  01A4               	clrf	___aodiv@divisor+4
  3985  052E  01A5               	clrf	___aodiv@divisor+5
  3986  052F  01A6               	clrf	___aodiv@divisor+6
  3987  0530  01A7               	clrf	___aodiv@divisor+7
  3988  0531  0844               	movf	dtoa@n,w
  3989  0532  00A8               	movwf	___aodiv@dividend
  3990  0533  0845               	movf	dtoa@n+1,w
  3991  0534  00A9               	movwf	___aodiv@dividend+1
  3992  0535  0846               	movf	dtoa@n+2,w
  3993  0536  00AA               	movwf	___aodiv@dividend+2
  3994  0537  0847               	movf	dtoa@n+3,w
  3995  0538  00AB               	movwf	___aodiv@dividend+3
  3996  0539  0848               	movf	dtoa@n+4,w
  3997  053A  00AC               	movwf	___aodiv@dividend+4
  3998  053B  0849               	movf	dtoa@n+5,w
  3999  053C  00AD               	movwf	___aodiv@dividend+5
  4000  053D  084A               	movf	dtoa@n+6,w
  4001  053E  00AE               	movwf	___aodiv@dividend+6
  4002  053F  084B               	movf	dtoa@n+7,w
  4003  0540  00AF               	movwf	___aodiv@dividend+7
  4004  0541  3183  2364  3184   	fcall	___aodiv
  4005  0544  0020               	movlb	0	; select bank0
  4006  0545  0820               	movf	?___aodiv,w
  4007  0546  00C4               	movwf	dtoa@n
  4008  0547  0821               	movf	?___aodiv+1,w
  4009  0548  00C5               	movwf	dtoa@n+1
  4010  0549  0822               	movf	?___aodiv+2,w
  4011  054A  00C6               	movwf	dtoa@n+2
  4012  054B  0823               	movf	?___aodiv+3,w
  4013  054C  00C7               	movwf	dtoa@n+3
  4014  054D  0824               	movf	?___aodiv+4,w
  4015  054E  00C8               	movwf	dtoa@n+4
  4016  054F  0825               	movf	?___aodiv+5,w
  4017  0550  00C9               	movwf	dtoa@n+5
  4018  0551  0826               	movf	?___aodiv+6,w
  4019  0552  00CA               	movwf	dtoa@n+6
  4020  0553  0827               	movf	?___aodiv+7,w
  4021  0554  00CB               	movwf	dtoa@n+7
  4022  0555                     l751:	
  4023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
  4024                           
  4025                           
  4026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4027  0555  0020               	movlb	0	; select bank0
  4028  0556  084D               	movf	dtoa@i+1,w
  4029  0557  3A80               	xorlw	128
  4030  0558  00B8               	movwf	??_dtoa
  4031  0559  3080               	movlw	128
  4032  055A  0238               	subwf	??_dtoa,w
  4033  055B  1D03               	skipz
  4034  055C  2D5F               	goto	u1335
  4035  055D  3001               	movlw	1
  4036  055E  024C               	subwf	dtoa@i,w
  4037  055F                     u1335:
  4038  055F  1C03               	skipc
  4039  0560  2D62               	goto	u1331
  4040  0561  2D63               	goto	u1330
  4041  0562                     u1331:
  4042  0562  2D90               	goto	l1629
  4043  0563                     u1330:
  4044  0563                     l1621:
  4045  0563  0020               	movlb	0	; select bank0
  4046  0564  0844               	movf	dtoa@n,w
  4047  0565  0445               	iorwf	dtoa@n+1,w
  4048  0566  0446               	iorwf	dtoa@n+2,w
  4049  0567  0447               	iorwf	dtoa@n+3,w
  4050  0568  0448               	iorwf	dtoa@n+4,w
  4051  0569  0449               	iorwf	dtoa@n+5,w
  4052  056A  044A               	iorwf	dtoa@n+6,w
  4053  056B  044B               	iorwf	dtoa@n+7,w
  4054  056C  1D03               	skipz
  4055  056D  2D6F               	goto	u1341
  4056  056E  2D70               	goto	u1340
  4057  056F                     u1341:
  4058  056F  2CEC               	goto	l1611
  4059  0570                     u1340:
  4060  0570                     l1623:
  4061  0570  083F               	movf	dtoa@p+1,w
  4062  0571  3A80               	xorlw	128
  4063  0572  00B8               	movwf	??_dtoa
  4064  0573  3080               	movlw	128
  4065  0574  0238               	subwf	??_dtoa,w
  4066  0575  1D03               	skipz
  4067  0576  2D79               	goto	u1355
  4068  0577  3001               	movlw	1
  4069  0578  023E               	subwf	dtoa@p,w
  4070  0579                     u1355:
  4071  0579  1803               	skipnc
  4072  057A  2D7C               	goto	u1351
  4073  057B  2D7D               	goto	u1350
  4074  057C                     u1351:
  4075  057C  2CEC               	goto	l1611
  4076  057D                     u1350:
  4077  057D                     l1625:
  4078  057D  0020               	movlb	0	; select bank0
  4079  057E  0841               	movf	dtoa@w+1,w
  4080  057F  3A80               	xorlw	128
  4081  0580  00B8               	movwf	??_dtoa
  4082  0581  3080               	movlw	128
  4083  0582  0238               	subwf	??_dtoa,w
  4084  0583  1D03               	skipz
  4085  0584  2D87               	goto	u1365
  4086  0585  3001               	movlw	1
  4087  0586  0240               	subwf	dtoa@w,w
  4088  0587                     u1365:
  4089  0587  1C03               	skipc
  4090  0588  2D8A               	goto	u1361
  4091  0589  2D8B               	goto	u1360
  4092  058A                     u1361:
  4093  058A  2D90               	goto	l1629
  4094  058B                     u1360:
  4095  058B                     l1627:
  4096  058B  0020               	movlb	0	; select bank0
  4097  058C  18EE               	btfsc	_flags,1
  4098  058D  2D8F               	goto	u1371
  4099  058E  2D90               	goto	u1370
  4100  058F                     u1371:
  4101  058F  2CEC               	goto	l1611
  4102  0590                     u1370:
  4103  0590                     l1629:
  4104                           
  4105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4106  0590  0020               	movlb	0	; select bank0
  4107  0591  0842               	movf	dtoa@s,w
  4108  0592  0443               	iorwf	dtoa@s+1,w
  4109  0593  1D03               	btfss	3,2
  4110  0594  2D96               	goto	u1381
  4111  0595  2D97               	goto	u1380
  4112  0596                     u1381:
  4113  0596  2D9B               	goto	l1633
  4114  0597                     u1380:
  4115  0597                     l1631:
  4116  0597  1D6E               	btfss	_flags,2
  4117  0598  2D9A               	goto	u1391
  4118  0599  2D9B               	goto	u1390
  4119  059A                     u1391:
  4120  059A  2DB7               	goto	l1643
  4121  059B                     u1390:
  4122  059B                     l1633:
  4123                           
  4124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  4125  059B  30FF               	movlw	255
  4126  059C  07CC               	addwf	dtoa@i,f
  4127  059D  30FF               	movlw	255
  4128  059E  3DCD               	addwfc	dtoa@i+1,f
  4129  059F                     l1635:
  4130                           
  4131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4132  059F  0842               	movf	dtoa@s,w
  4133  05A0  0443               	iorwf	dtoa@s+1,w
  4134  05A1  1D03               	btfss	3,2
  4135  05A2  2DA4               	goto	u1401
  4136  05A3  2DA5               	goto	u1400
  4137  05A4                     u1401:
  4138  05A4  2DAA               	goto	l1639
  4139  05A5                     u1400:
  4140  05A5                     l1637:
  4141  05A5  302B               	movlw	43
  4142  05A6  00BB               	movwf	_dtoa$616
  4143  05A7  3000               	movlw	0
  4144  05A8  00BC               	movwf	_dtoa$616+1
  4145  05A9  2DAE               	goto	l1641
  4146  05AA                     l1639:
  4147  05AA  302D               	movlw	45
  4148  05AB  00BB               	movwf	_dtoa$616
  4149  05AC  3000               	movlw	0
  4150  05AD  00BC               	movwf	_dtoa$616+1
  4151  05AE                     l1641:
  4152  05AE  083B               	movf	_dtoa$616,w
  4153  05AF  00B8               	movwf	??_dtoa
  4154  05B0  084C               	movf	dtoa@i,w
  4155  05B1  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4156  05B2  0086               	movwf	6
  4157  05B3  3001               	movlw	1	; select bank2/3
  4158  05B4  0087               	movwf	7
  4159  05B5  0838               	movf	??_dtoa,w
  4160  05B6  0081               	movwf	1
  4161  05B7                     l1643:
  4162                           
  4163                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4164  05B7  084C               	movf	dtoa@i,w
  4165  05B8  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4166  05B9  00B8               	movwf	??_dtoa
  4167  05BA  0838               	movf	??_dtoa,w
  4168  05BB  00A4               	movwf	pad@buf
  4169  05BC  0841               	movf	dtoa@w+1,w
  4170  05BD  00A6               	movwf	pad@p+1
  4171  05BE  0840               	movf	dtoa@w,w
  4172  05BF  00A5               	movwf	pad@p
  4173  05C0  083D               	movf	dtoa@fp,w
  4174  05C1  3180  20EA  3184   	fcall	_pad
  4175  05C4  0020               	movlb	0	; select bank0
  4176  05C5  0825               	movf	?_pad+1,w
  4177  05C6  00B1               	movwf	?_dtoa+1
  4178  05C7  0824               	movf	?_pad,w
  4179  05C8  00B0               	movwf	?_dtoa
  4180  05C9                     l765:
  4181  05C9  0008               	return
  4182  05CA                     __end_of_dtoa:
  4183                           
  4184                           	psect	text8
  4185  00EA                     __ptext8:	
  4186 ;; *************** function _pad *****************
  4187 ;; Defined at:
  4188 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  fp              1    wreg     PTR struct _IO_FILE
  4191 ;;		 -> sprintf@f(5), 
  4192 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  4193 ;;		 -> dbuf(32), 
  4194 ;;  p               2    5[BANK0 ] int 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  4197 ;;		 -> sprintf@f(5), 
  4198 ;;  w               2    9[BANK0 ] int 
  4199 ;;  i               2    7[BANK0 ] int 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  2    4[BANK0 ] int 
  4202 ;; Registers used:
  4203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4209 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4210 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4211 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4212 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4213 ;;Total ram usage:        9 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    3
  4216 ;; This function calls:
  4217 ;;		_fputc
  4218 ;;		_fputs
  4219 ;;		_strlen
  4220 ;; This function is called by:
  4221 ;;		_dtoa
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           
  4226                           ;psect for function _pad
  4227  00EA                     _pad:
  4228                           
  4229                           ;incstack = 0
  4230                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4231                           ;pad@fp stored from wreg
  4232  00EA  0020               	movlb	0	; select bank0
  4233  00EB  00AB               	movwf	pad@fp
  4234  00EC                     l1549:
  4235                           
  4236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4237  00EC  1C6E               	btfss	_flags,0
  4238  00ED  28EF               	goto	u1191
  4239  00EE  28F0               	goto	u1190
  4240  00EF                     u1191:
  4241  00EF  28F8               	goto	l1553
  4242  00F0                     u1190:
  4243  00F0                     l1551:
  4244                           
  4245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4246  00F0  082B               	movf	pad@fp,w
  4247  00F1  00FC               	movwf	??_pad
  4248  00F2  087C               	movf	??_pad,w
  4249  00F3  00F8               	movwf	fputs@fp
  4250  00F4  0824               	movf	pad@buf,w
  4251  00F5  318F  2778  3180   	fcall	_fputs
  4252  00F8                     l1553:
  4253                           
  4254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4255  00F8  0020               	movlb	0	; select bank0
  4256  00F9  1BA6               	btfsc	pad@p+1,7
  4257  00FA  28FC               	goto	u1201
  4258  00FB  28FD               	goto	u1200
  4259  00FC                     u1201:
  4260  00FC  2902               	goto	l1557
  4261  00FD                     u1200:
  4262  00FD                     l1555:
  4263  00FD  0826               	movf	pad@p+1,w
  4264  00FE  00AA               	movwf	pad@w+1
  4265  00FF  0825               	movf	pad@p,w
  4266  0100  00A9               	movwf	pad@w
  4267  0101  2904               	goto	l734
  4268  0102                     l1557:
  4269  0102  01A9               	clrf	pad@w
  4270  0103  01AA               	clrf	pad@w+1
  4271  0104                     l734:
  4272                           
  4273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4274  0104  01A7               	clrf	pad@i
  4275  0105  01A8               	clrf	pad@i+1
  4276                           
  4277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4278  0106  2918               	goto	l1563
  4279  0107                     l1559:
  4280                           
  4281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4282  0107  3020               	movlw	32
  4283  0108  00F0               	movwf	fputc@c
  4284  0109  3000               	movlw	0
  4285  010A  00F1               	movwf	fputc@c+1
  4286  010B  0020               	movlb	0	; select bank0
  4287  010C  082B               	movf	pad@fp,w
  4288  010D  00FC               	movwf	??_pad
  4289  010E  087C               	movf	??_pad,w
  4290  010F  00F2               	movwf	fputc@fp
  4291  0110  3180  2048  3180   	fcall	_fputc
  4292  0113                     l1561:
  4293                           
  4294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4295  0113  3001               	movlw	1
  4296  0114  0020               	movlb	0	; select bank0
  4297  0115  07A7               	addwf	pad@i,f
  4298  0116  3000               	movlw	0
  4299  0117  3DA8               	addwfc	pad@i+1,f
  4300  0118                     l1563:
  4301                           
  4302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4303  0118  0828               	movf	pad@i+1,w
  4304  0119  3A80               	xorlw	128
  4305  011A  00FC               	movwf	??_pad
  4306  011B  082A               	movf	pad@w+1,w
  4307  011C  3A80               	xorlw	128
  4308  011D  027C               	subwf	??_pad,w
  4309  011E  1D03               	skipz
  4310  011F  2922               	goto	u1215
  4311  0120  0829               	movf	pad@w,w
  4312  0121  0227               	subwf	pad@i,w
  4313  0122                     u1215:
  4314  0122  1C03               	skipc
  4315  0123  2925               	goto	u1211
  4316  0124  2926               	goto	u1210
  4317  0125                     u1211:
  4318  0125  2907               	goto	l1559
  4319  0126                     u1210:
  4320  0126                     l737:
  4321                           
  4322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4323  0126  0020               	movlb	0	; select bank0
  4324  0127  186E               	btfsc	_flags,0
  4325  0128  292A               	goto	u1221
  4326  0129  292B               	goto	u1220
  4327  012A                     u1221:
  4328  012A  2933               	goto	l1567
  4329  012B                     u1220:
  4330  012B                     l1565:
  4331                           
  4332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4333  012B  082B               	movf	pad@fp,w
  4334  012C  00FC               	movwf	??_pad
  4335  012D  087C               	movf	??_pad,w
  4336  012E  00F8               	movwf	fputs@fp
  4337  012F  0824               	movf	pad@buf,w
  4338  0130  318F  2778  3180   	fcall	_fputs
  4339  0133                     l1567:
  4340                           
  4341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4342  0133  0020               	movlb	0	; select bank0
  4343  0134  0824               	movf	pad@buf,w
  4344  0135  318E  264F  3180   	fcall	_strlen
  4345  0138  0020               	movlb	0	; select bank0
  4346  0139  0829               	movf	pad@w,w
  4347  013A  0770               	addwf	?_strlen,w
  4348  013B  00A4               	movwf	?_pad
  4349  013C  082A               	movf	pad@w+1,w
  4350  013D  3D71               	addwfc	?_strlen+1,w
  4351  013E  00A5               	movwf	?_pad+1
  4352  013F                     l739:
  4353  013F  0008               	return
  4354  0140                     __end_of_pad:
  4355                           
  4356                           	psect	text9
  4357  0E4F                     __ptext9:	
  4358 ;; *************** function _strlen *****************
  4359 ;; Defined at:
  4360 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;  s               1    wreg     PTR const unsigned char 
  4363 ;;		 -> dbuf(32), 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  s               1    4[COMMON] PTR const unsigned char 
  4366 ;;		 -> dbuf(32), 
  4367 ;;  a               1    3[COMMON] PTR const unsigned char 
  4368 ;;		 -> dbuf(32), 
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  2    0[COMMON] unsigned int 
  4371 ;; Registers used:
  4372 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4381 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4382 ;;Total ram usage:        5 bytes
  4383 ;; Hardware stack levels used:    1
  4384 ;; This function calls:
  4385 ;;		Nothing
  4386 ;; This function is called by:
  4387 ;;		_pad
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           
  4392                           ;psect for function _strlen
  4393  0E4F                     _strlen:
  4394                           
  4395                           ;incstack = 0
  4396                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4397                           ;strlen@s stored from wreg
  4398  0E4F  00F4               	movwf	strlen@s
  4399  0E50                     l1471:
  4400  0E50  0874               	movf	strlen@s,w
  4401  0E51  00F2               	movwf	??_strlen
  4402  0E52  0872               	movf	??_strlen,w
  4403  0E53  00F3               	movwf	strlen@a
  4404  0E54  2E59               	goto	l1475
  4405  0E55                     l1473:
  4406  0E55  3001               	movlw	1
  4407  0E56  00F2               	movwf	??_strlen
  4408  0E57  0872               	movf	??_strlen,w
  4409  0E58  07F4               	addwf	strlen@s,f
  4410  0E59                     l1475:
  4411  0E59  0874               	movf	strlen@s,w
  4412  0E5A  0086               	movwf	6
  4413  0E5B  3001               	movlw	1	; select bank2/3
  4414  0E5C  0087               	movwf	7
  4415  0E5D  0801               	movf	1,w
  4416  0E5E  1D03               	btfss	3,2
  4417  0E5F  2E61               	goto	u971
  4418  0E60  2E62               	goto	u970
  4419  0E61                     u971:
  4420  0E61  2E55               	goto	l1473
  4421  0E62                     u970:
  4422  0E62                     l1477:
  4423  0E62  0873               	movf	strlen@a,w
  4424  0E63  0274               	subwf	strlen@s,w
  4425  0E64  00F0               	movwf	?_strlen
  4426  0E65  01F1               	clrf	?_strlen+1
  4427  0E66  1BF0               	btfsc	?_strlen,7
  4428  0E67  03F1               	decf	?_strlen+1,f
  4429  0E68                     l815:
  4430  0E68  0008               	return
  4431  0E69                     __end_of_strlen:
  4432                           
  4433                           	psect	text10
  4434  0F78                     __ptext10:	
  4435 ;; *************** function _fputs *****************
  4436 ;; Defined at:
  4437 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  s               1    wreg     PTR const unsigned char 
  4440 ;;		 -> dbuf(32), 
  4441 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  4442 ;;		 -> sprintf@f(5), 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4445 ;;		 -> dbuf(32), 
  4446 ;;  i               2    1[BANK0 ] int 
  4447 ;;  c               1    0[BANK0 ] unsigned char 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  2    8[COMMON] int 
  4450 ;; Registers used:
  4451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4457 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4458 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4459 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4460 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4461 ;;Total ram usage:        8 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:    2
  4464 ;; This function calls:
  4465 ;;		_fputc
  4466 ;; This function is called by:
  4467 ;;		_pad
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           
  4472                           ;psect for function _fputs
  4473  0F78                     _fputs:
  4474                           
  4475                           ;incstack = 0
  4476                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4477                           ;fputs@s stored from wreg
  4478  0F78  0020               	movlb	0	; select bank0
  4479  0F79  00A3               	movwf	fputs@s
  4480  0F7A                     l1463:
  4481  0F7A  01A1               	clrf	fputs@i
  4482  0F7B  01A2               	clrf	fputs@i+1
  4483  0F7C  2F90               	goto	l1469
  4484  0F7D                     l1465:
  4485  0F7D  0820               	movf	fputs@c,w
  4486  0F7E  00F9               	movwf	??_fputs
  4487  0F7F  01FA               	clrf	??_fputs+1
  4488  0F80  0879               	movf	??_fputs,w
  4489  0F81  00F0               	movwf	fputc@c
  4490  0F82  087A               	movf	??_fputs+1,w
  4491  0F83  00F1               	movwf	fputc@c+1
  4492  0F84  0878               	movf	fputs@fp,w
  4493  0F85  00FB               	movwf	??_fputs+2
  4494  0F86  087B               	movf	??_fputs+2,w
  4495  0F87  00F2               	movwf	fputc@fp
  4496  0F88  3180  2048  318F   	fcall	_fputc
  4497  0F8B                     l1467:
  4498  0F8B  3001               	movlw	1
  4499  0F8C  0020               	movlb	0	; select bank0
  4500  0F8D  07A1               	addwf	fputs@i,f
  4501  0F8E  3000               	movlw	0
  4502  0F8F  3DA2               	addwfc	fputs@i+1,f
  4503  0F90                     l1469:
  4504  0F90  0821               	movf	fputs@i,w
  4505  0F91  0723               	addwf	fputs@s,w
  4506  0F92  00F9               	movwf	??_fputs
  4507  0F93  0879               	movf	??_fputs,w
  4508  0F94  0086               	movwf	6
  4509  0F95  3001               	movlw	1	; select bank2/3
  4510  0F96  0087               	movwf	7
  4511  0F97  0801               	movf	1,w
  4512  0F98  00FA               	movwf	??_fputs+1
  4513  0F99  087A               	movf	??_fputs+1,w
  4514  0F9A  00A0               	movwf	fputs@c
  4515  0F9B  0820               	movf	fputs@c,w
  4516  0F9C  1D03               	btfss	3,2
  4517  0F9D  2F9F               	goto	u961
  4518  0F9E  2FA0               	goto	u960
  4519  0F9F                     u961:
  4520  0F9F  2F7D               	goto	l1465
  4521  0FA0                     u960:
  4522  0FA0                     l806:
  4523  0FA0  0008               	return
  4524  0FA1                     __end_of_fputs:
  4525                           
  4526                           	psect	text11
  4527  0048                     __ptext11:	
  4528 ;; *************** function _fputc *****************
  4529 ;; Defined at:
  4530 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  c               2    0[COMMON] int 
  4533 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  4534 ;;		 -> sprintf@f(5), 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  2    0[COMMON] int 
  4539 ;; Registers used:
  4540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4546 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4548 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4549 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4550 ;;Total ram usage:        8 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    1
  4553 ;; This function calls:
  4554 ;;		_putch
  4555 ;; This function is called by:
  4556 ;;		_pad
  4557 ;;		_vfpfcnvrt
  4558 ;;		_fputs
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           
  4563                           ;psect for function _fputc
  4564  0048                     _fputc:
  4565  0048                     l1447:	
  4566                           ;incstack = 0
  4567                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4568                           
  4569  0048  0872               	movf	fputc@fp,w
  4570  0049  1903               	btfsc	3,2
  4571  004A  284C               	goto	u921
  4572  004B  284D               	goto	u920
  4573  004C                     u921:
  4574  004C  2852               	goto	l1451
  4575  004D                     u920:
  4576  004D                     l1449:
  4577  004D  0872               	movf	fputc@fp,w
  4578  004E  1D03               	btfss	3,2
  4579  004F  2851               	goto	u931
  4580  0050  2852               	goto	u930
  4581  0051                     u931:
  4582  0051  2857               	goto	l1453
  4583  0052                     u930:
  4584  0052                     l1451:
  4585  0052  0870               	movf	fputc@c,w
  4586  0053  3180  2004  3180   	fcall	_putch
  4587  0056  2896               	goto	l798
  4588  0057                     l1453:
  4589  0057  0872               	movf	fputc@fp,w
  4590  0058  3E03               	addlw	3
  4591  0059  0086               	movwf	6
  4592  005A  0187               	clrf	7
  4593  005B  0016               	moviw fsr1++
  4594  005C  0401               	iorwf	1,w
  4595  005D  1903               	btfsc	3,2
  4596  005E  2860               	goto	u941
  4597  005F  2861               	goto	u940
  4598  0060                     u941:
  4599  0060  287E               	goto	l1457
  4600  0061                     u940:
  4601  0061                     l1455:
  4602  0061  0872               	movf	fputc@fp,w
  4603  0062  3E03               	addlw	3
  4604  0063  0086               	movwf	6
  4605  0064  0187               	clrf	7
  4606  0065  3F40               	moviw [0]fsr1
  4607  0066  00F3               	movwf	??_fputc
  4608  0067  3F41               	moviw [1]fsr1
  4609  0068  00F4               	movwf	??_fputc+1
  4610  0069  0A72               	incf	fputc@fp,w
  4611  006A  0086               	movwf	6
  4612  006B  0187               	clrf	7
  4613  006C  3F40               	moviw [0]fsr1
  4614  006D  00F5               	movwf	??_fputc+2
  4615  006E  3F41               	moviw [1]fsr1
  4616  006F  00F6               	movwf	??_fputc+3
  4617  0070  0876               	movf	??_fputc+3,w
  4618  0071  3A80               	xorlw	128
  4619  0072  00F7               	movwf	??_fputc+4
  4620  0073  0874               	movf	??_fputc+1,w
  4621  0074  3A80               	xorlw	128
  4622  0075  0277               	subwf	??_fputc+4,w
  4623  0076  1D03               	skipz
  4624  0077  287A               	goto	u955
  4625  0078  0873               	movf	??_fputc,w
  4626  0079  0275               	subwf	??_fputc+2,w
  4627  007A                     u955:
  4628  007A  1803               	skipnc
  4629  007B  287D               	goto	u951
  4630  007C  287E               	goto	u950
  4631  007D                     u951:
  4632  007D  2896               	goto	l798
  4633  007E                     u950:
  4634  007E                     l1457:
  4635  007E  0870               	movf	fputc@c,w
  4636  007F  00F3               	movwf	??_fputc
  4637  0080  0872               	movf	fputc@fp,w
  4638  0081  0086               	movwf	6
  4639  0082  0187               	clrf	7
  4640  0083  0A72               	incf	fputc@fp,w
  4641  0084  0084               	movwf	4
  4642  0085  0185               	clrf	5
  4643  0086  0800               	movf	0,w
  4644  0087  0701               	addwf	1,w
  4645  0088  00F4               	movwf	??_fputc+1
  4646  0089  0874               	movf	??_fputc+1,w
  4647  008A  0086               	movwf	6
  4648  008B  0187               	clrf	7
  4649  008C  0873               	movf	??_fputc,w
  4650  008D  0081               	movwf	1
  4651  008E                     l1459:
  4652  008E  0A72               	incf	fputc@fp,w
  4653  008F  0086               	movwf	6
  4654  0090  0187               	clrf	7
  4655  0091  3001               	movlw	1
  4656  0092  0781               	addwf	1,f
  4657  0093  3141               	addfsr 1,1
  4658  0094  1803               	skipnc
  4659  0095  0A81               	incf	1,f
  4660  0096                     l798:
  4661  0096  0008               	return
  4662  0097                     __end_of_fputc:
  4663                           
  4664                           	psect	text12
  4665  0004                     __ptext12:	
  4666 ;; *************** function _putch *****************
  4667 ;; Defined at:
  4668 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  c               1    wreg     unsigned char 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  c               1    0[COMMON] unsigned char 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		wreg
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4686 ;;Total ram usage:        0 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_fputc
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           
  4696                           ;psect for function _putch
  4697  0004                     _putch:
  4698  0004                     l809:	
  4699                           ;incstack = 0
  4700                           ; Regs used in _putch: [wreg]
  4701                           
  4702  0004  0008               	return
  4703  0005                     __end_of_putch:
  4704                           
  4705                           	psect	text13
  4706  0E35                     __ptext13:	
  4707 ;; *************** function _abs *****************
  4708 ;; Defined at:
  4709 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  a               2    3[COMMON] int 
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;		None
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  2    3[COMMON] int 
  4716 ;; Registers used:
  4717 ;;		wreg, status,2, status,0
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4725 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4726 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4727 ;;Total ram usage:        4 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_dtoa
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           
  4737                           ;psect for function _abs
  4738  0E35                     _abs:
  4739  0E35                     l1571:	
  4740                           ;incstack = 0
  4741                           ; Regs used in _abs: [wreg+status,2+status,0]
  4742                           
  4743  0E35  0874               	movf	abs@a+1,w
  4744  0E36  3A80               	xorlw	128
  4745  0E37  00F5               	movwf	??_abs
  4746  0E38  3080               	movlw	128
  4747  0E39  0275               	subwf	??_abs,w
  4748  0E3A  1D03               	skipz
  4749  0E3B  2E3E               	goto	u1235
  4750  0E3C  3001               	movlw	1
  4751  0E3D  0273               	subwf	abs@a,w
  4752  0E3E                     u1235:
  4753  0E3E  1803               	skipnc
  4754  0E3F  2E41               	goto	u1231
  4755  0E40  2E42               	goto	u1230
  4756  0E41                     u1231:
  4757  0E41  2E4E               	goto	l783
  4758  0E42                     u1230:
  4759  0E42                     l1573:
  4760  0E42  0973               	comf	abs@a,w
  4761  0E43  00F5               	movwf	??_abs
  4762  0E44  0974               	comf	abs@a+1,w
  4763  0E45  00F6               	movwf	??_abs+1
  4764  0E46  0AF5               	incf	??_abs,f
  4765  0E47  1903               	skipnz
  4766  0E48  0AF6               	incf	??_abs+1,f
  4767  0E49  0875               	movf	??_abs,w
  4768  0E4A  00F3               	movwf	?_abs
  4769  0E4B  0876               	movf	??_abs+1,w
  4770  0E4C  00F4               	movwf	?_abs+1
  4771  0E4D  2E4E               	goto	l786
  4772  0E4E                     l783:
  4773  0E4E                     l786:
  4774  0E4E  0008               	return
  4775  0E4F                     __end_of_abs:
  4776                           
  4777                           	psect	text14
  4778  027A                     __ptext14:	
  4779 ;; *************** function ___aomod *****************
  4780 ;; Defined at:
  4781 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  divisor         8    0[BANK0 ] long long 
  4784 ;;  dividend        8    8[BANK0 ] long long 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;  sign            1    2[COMMON] unsigned char 
  4787 ;;  counter         1    1[COMMON] unsigned char 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  8    0[BANK0 ] long long 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4797 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4798 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4800 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4801 ;;Total ram usage:       19 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_dtoa
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           
  4811                           ;psect for function ___aomod
  4812  027A                     ___aomod:
  4813  027A                     l1519:	
  4814                           ;incstack = 0
  4815                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4816                           
  4817  027A  01F2               	clrf	___aomod@sign
  4818  027B                     l1521:
  4819  027B  3028               	movlw	low ___aomod@dividend
  4820  027C  0086               	movwf	6
  4821  027D  3000               	movlw	high ___aomod@dividend
  4822  027E  0087               	movwf	7
  4823  027F  3F47               	moviw [7]fsr1
  4824  0280  00F0               	movwf	??___aomod
  4825  0281  1FF0               	btfss	??___aomod,7
  4826  0282  2A84               	goto	u1091
  4827  0283  2A85               	goto	u1090
  4828  0284                     u1091:
  4829  0284  2AA6               	goto	l1525
  4830  0285                     u1090:
  4831  0285                     l1523:
  4832  0285  0020               	movlb	0	; select bank0
  4833  0286  09A8               	comf	___aomod@dividend,f
  4834  0287  09A9               	comf	___aomod@dividend+1,f
  4835  0288  09AA               	comf	___aomod@dividend+2,f
  4836  0289  09AB               	comf	___aomod@dividend+3,f
  4837  028A  09AC               	comf	___aomod@dividend+4,f
  4838  028B  09AD               	comf	___aomod@dividend+5,f
  4839  028C  09AE               	comf	___aomod@dividend+6,f
  4840  028D  09AF               	comf	___aomod@dividend+7,f
  4841  028E  0AA8               	incf	___aomod@dividend,f
  4842  028F  1D03               	skipz
  4843  0290  2AA4               	goto	u110lld
  4844  0291  0AA9               	incf	___aomod@dividend+1,f
  4845  0292  1D03               	skipz
  4846  0293  2AA4               	goto	u110lld
  4847  0294  0AAA               	incf	___aomod@dividend+2,f
  4848  0295  1D03               	skipz
  4849  0296  2AA4               	goto	u110lld
  4850  0297  0AAB               	incf	___aomod@dividend+3,f
  4851  0298  1D03               	skipz
  4852  0299  2AA4               	goto	u110lld
  4853  029A  0AAC               	incf	___aomod@dividend+4,f
  4854  029B  1D03               	skipz
  4855  029C  2AA4               	goto	u110lld
  4856  029D  0AAD               	incf	___aomod@dividend+5,f
  4857  029E  1D03               	skipz
  4858  029F  2AA4               	goto	u110lld
  4859  02A0  0AAE               	incf	___aomod@dividend+6,f
  4860  02A1  1D03               	skipz
  4861  02A2  2AA4               	goto	u110lld
  4862  02A3  0AAF               	incf	___aomod@dividend+7,f
  4863  02A4                     u110lld:
  4864  02A4  01F2               	clrf	___aomod@sign
  4865  02A5  0AF2               	incf	___aomod@sign,f
  4866  02A6                     l1525:
  4867  02A6  3020               	movlw	low ___aomod@divisor
  4868  02A7  0086               	movwf	6
  4869  02A8  3000               	movlw	high ___aomod@divisor
  4870  02A9  0087               	movwf	7
  4871  02AA  3F47               	moviw [7]fsr1
  4872  02AB  00F0               	movwf	??___aomod
  4873  02AC  1FF0               	btfss	??___aomod,7
  4874  02AD  2AAF               	goto	u1111
  4875  02AE  2AB0               	goto	u1110
  4876  02AF                     u1111:
  4877  02AF  2ACF               	goto	l1529
  4878  02B0                     u1110:
  4879  02B0                     l1527:
  4880  02B0  0020               	movlb	0	; select bank0
  4881  02B1  09A0               	comf	___aomod@divisor,f
  4882  02B2  09A1               	comf	___aomod@divisor+1,f
  4883  02B3  09A2               	comf	___aomod@divisor+2,f
  4884  02B4  09A3               	comf	___aomod@divisor+3,f
  4885  02B5  09A4               	comf	___aomod@divisor+4,f
  4886  02B6  09A5               	comf	___aomod@divisor+5,f
  4887  02B7  09A6               	comf	___aomod@divisor+6,f
  4888  02B8  09A7               	comf	___aomod@divisor+7,f
  4889  02B9  0AA0               	incf	___aomod@divisor,f
  4890  02BA  1D03               	skipz
  4891  02BB  2ACF               	goto	u112lld
  4892  02BC  0AA1               	incf	___aomod@divisor+1,f
  4893  02BD  1D03               	skipz
  4894  02BE  2ACF               	goto	u112lld
  4895  02BF  0AA2               	incf	___aomod@divisor+2,f
  4896  02C0  1D03               	skipz
  4897  02C1  2ACF               	goto	u112lld
  4898  02C2  0AA3               	incf	___aomod@divisor+3,f
  4899  02C3  1D03               	skipz
  4900  02C4  2ACF               	goto	u112lld
  4901  02C5  0AA4               	incf	___aomod@divisor+4,f
  4902  02C6  1D03               	skipz
  4903  02C7  2ACF               	goto	u112lld
  4904  02C8  0AA5               	incf	___aomod@divisor+5,f
  4905  02C9  1D03               	skipz
  4906  02CA  2ACF               	goto	u112lld
  4907  02CB  0AA6               	incf	___aomod@divisor+6,f
  4908  02CC  1D03               	skipz
  4909  02CD  2ACF               	goto	u112lld
  4910  02CE  0AA7               	incf	___aomod@divisor+7,f
  4911  02CF                     u112lld:
  4912  02CF                     l1529:
  4913  02CF  0020               	movlb	0	; select bank0
  4914  02D0  0820               	movf	___aomod@divisor,w
  4915  02D1  0421               	iorwf	___aomod@divisor+1,w
  4916  02D2  0422               	iorwf	___aomod@divisor+2,w
  4917  02D3  0423               	iorwf	___aomod@divisor+3,w
  4918  02D4  0424               	iorwf	___aomod@divisor+4,w
  4919  02D5  0425               	iorwf	___aomod@divisor+5,w
  4920  02D6  0426               	iorwf	___aomod@divisor+6,w
  4921  02D7  0427               	iorwf	___aomod@divisor+7,w
  4922  02D8  1903               	skipnz
  4923  02D9  2ADB               	goto	u1131
  4924  02DA  2ADC               	goto	u1130
  4925  02DB                     u1131:
  4926  02DB  2B2F               	goto	l1545
  4927  02DC                     u1130:
  4928  02DC                     l1531:
  4929  02DC  01F1               	clrf	___aomod@counter
  4930  02DD  0AF1               	incf	___aomod@counter,f
  4931  02DE  2AEB               	goto	l1537
  4932  02DF                     l1533:
  4933  02DF  35A0               	lslf	___aomod@divisor,f
  4934  02E0  0DA1               	rlf	___aomod@divisor+1,f
  4935  02E1  0DA2               	rlf	___aomod@divisor+2,f
  4936  02E2  0DA3               	rlf	___aomod@divisor+3,f
  4937  02E3  0DA4               	rlf	___aomod@divisor+4,f
  4938  02E4  0DA5               	rlf	___aomod@divisor+5,f
  4939  02E5  0DA6               	rlf	___aomod@divisor+6,f
  4940  02E6  0DA7               	rlf	___aomod@divisor+7,f
  4941  02E7                     l1535:
  4942  02E7  3001               	movlw	1
  4943  02E8  00F0               	movwf	??___aomod
  4944  02E9  0870               	movf	??___aomod,w
  4945  02EA  07F1               	addwf	___aomod@counter,f
  4946  02EB                     l1537:
  4947  02EB  1FA7               	btfss	___aomod@divisor+7,7
  4948  02EC  2AEE               	goto	u1141
  4949  02ED  2AEF               	goto	u1140
  4950  02EE                     u1141:
  4951  02EE  2ADF               	goto	l1533
  4952  02EF                     u1140:
  4953  02EF                     l1539:
  4954  02EF  0827               	movf	___aomod@divisor+7,w
  4955  02F0  022F               	subwf	___aomod@dividend+7,w
  4956  02F1  1D03               	skipz
  4957  02F2  2B0D               	goto	u1155
  4958  02F3  0826               	movf	___aomod@divisor+6,w
  4959  02F4  022E               	subwf	___aomod@dividend+6,w
  4960  02F5  1D03               	skipz
  4961  02F6  2B0D               	goto	u1155
  4962  02F7  0825               	movf	___aomod@divisor+5,w
  4963  02F8  022D               	subwf	___aomod@dividend+5,w
  4964  02F9  1D03               	skipz
  4965  02FA  2B0D               	goto	u1155
  4966  02FB  0824               	movf	___aomod@divisor+4,w
  4967  02FC  022C               	subwf	___aomod@dividend+4,w
  4968  02FD  1D03               	skipz
  4969  02FE  2B0D               	goto	u1155
  4970  02FF  0823               	movf	___aomod@divisor+3,w
  4971  0300  022B               	subwf	___aomod@dividend+3,w
  4972  0301  1D03               	skipz
  4973  0302  2B0D               	goto	u1155
  4974  0303  0822               	movf	___aomod@divisor+2,w
  4975  0304  022A               	subwf	___aomod@dividend+2,w
  4976  0305  1D03               	skipz
  4977  0306  2B0D               	goto	u1155
  4978  0307  0821               	movf	___aomod@divisor+1,w
  4979  0308  0229               	subwf	___aomod@dividend+1,w
  4980  0309  1D03               	skipz
  4981  030A  2B0D               	goto	u1155
  4982  030B  0820               	movf	___aomod@divisor,w
  4983  030C  0228               	subwf	___aomod@dividend,w
  4984  030D                     u1155:
  4985  030D  1C03               	skipc
  4986  030E  2B10               	goto	u1151
  4987  030F  2B11               	goto	u1150
  4988  0310                     u1151:
  4989  0310  2B21               	goto	l1543
  4990  0311                     u1150:
  4991  0311                     l1541:
  4992  0311  0820               	movf	___aomod@divisor,w
  4993  0312  02A8               	subwf	___aomod@dividend,f
  4994  0313  0821               	movf	___aomod@divisor+1,w
  4995  0314  3BA9               	subwfb	___aomod@dividend+1,f
  4996  0315  0822               	movf	___aomod@divisor+2,w
  4997  0316  3BAA               	subwfb	___aomod@dividend+2,f
  4998  0317  0823               	movf	___aomod@divisor+3,w
  4999  0318  3BAB               	subwfb	___aomod@dividend+3,f
  5000  0319  0824               	movf	___aomod@divisor+4,w
  5001  031A  3BAC               	subwfb	___aomod@dividend+4,f
  5002  031B  0825               	movf	___aomod@divisor+5,w
  5003  031C  3BAD               	subwfb	___aomod@dividend+5,f
  5004  031D  0826               	movf	___aomod@divisor+6,w
  5005  031E  3BAE               	subwfb	___aomod@dividend+6,f
  5006  031F  0827               	movf	___aomod@divisor+7,w
  5007  0320  3BAF               	subwfb	___aomod@dividend+7,f
  5008  0321                     l1543:
  5009  0321  36A7               	lsrf	___aomod@divisor+7,f
  5010  0322  0CA6               	rrf	___aomod@divisor+6,f
  5011  0323  0CA5               	rrf	___aomod@divisor+5,f
  5012  0324  0CA4               	rrf	___aomod@divisor+4,f
  5013  0325  0CA3               	rrf	___aomod@divisor+3,f
  5014  0326  0CA2               	rrf	___aomod@divisor+2,f
  5015  0327  0CA1               	rrf	___aomod@divisor+1,f
  5016  0328  0CA0               	rrf	___aomod@divisor,f
  5017  0329  3001               	movlw	1
  5018  032A  02F1               	subwf	___aomod@counter,f
  5019  032B  1D03               	btfss	3,2
  5020  032C  2B2E               	goto	u1161
  5021  032D  2B2F               	goto	u1160
  5022  032E                     u1161:
  5023  032E  2AEF               	goto	l1539
  5024  032F                     u1160:
  5025  032F                     l1545:
  5026  032F  0872               	movf	___aomod@sign,w
  5027  0330  1903               	btfsc	3,2
  5028  0331  2B33               	goto	u1171
  5029  0332  2B34               	goto	u1170
  5030  0333                     u1171:
  5031  0333  2B52               	goto	l357
  5032  0334                     u1170:
  5033  0334                     l1547:
  5034  0334  09A8               	comf	___aomod@dividend,f
  5035  0335  09A9               	comf	___aomod@dividend+1,f
  5036  0336  09AA               	comf	___aomod@dividend+2,f
  5037  0337  09AB               	comf	___aomod@dividend+3,f
  5038  0338  09AC               	comf	___aomod@dividend+4,f
  5039  0339  09AD               	comf	___aomod@dividend+5,f
  5040  033A  09AE               	comf	___aomod@dividend+6,f
  5041  033B  09AF               	comf	___aomod@dividend+7,f
  5042  033C  0AA8               	incf	___aomod@dividend,f
  5043  033D  1D03               	skipz
  5044  033E  2B52               	goto	u118lld
  5045  033F  0AA9               	incf	___aomod@dividend+1,f
  5046  0340  1D03               	skipz
  5047  0341  2B52               	goto	u118lld
  5048  0342  0AAA               	incf	___aomod@dividend+2,f
  5049  0343  1D03               	skipz
  5050  0344  2B52               	goto	u118lld
  5051  0345  0AAB               	incf	___aomod@dividend+3,f
  5052  0346  1D03               	skipz
  5053  0347  2B52               	goto	u118lld
  5054  0348  0AAC               	incf	___aomod@dividend+4,f
  5055  0349  1D03               	skipz
  5056  034A  2B52               	goto	u118lld
  5057  034B  0AAD               	incf	___aomod@dividend+5,f
  5058  034C  1D03               	skipz
  5059  034D  2B52               	goto	u118lld
  5060  034E  0AAE               	incf	___aomod@dividend+6,f
  5061  034F  1D03               	skipz
  5062  0350  2B52               	goto	u118lld
  5063  0351  0AAF               	incf	___aomod@dividend+7,f
  5064  0352                     u118lld:
  5065  0352                     l357:
  5066  0352  0020               	movlb	0	; select bank0
  5067  0353  0828               	movf	___aomod@dividend,w
  5068  0354  00A0               	movwf	?___aomod
  5069  0355  0829               	movf	___aomod@dividend+1,w
  5070  0356  00A1               	movwf	?___aomod+1
  5071  0357  082A               	movf	___aomod@dividend+2,w
  5072  0358  00A2               	movwf	?___aomod+2
  5073  0359  082B               	movf	___aomod@dividend+3,w
  5074  035A  00A3               	movwf	?___aomod+3
  5075  035B  082C               	movf	___aomod@dividend+4,w
  5076  035C  00A4               	movwf	?___aomod+4
  5077  035D  082D               	movf	___aomod@dividend+5,w
  5078  035E  00A5               	movwf	?___aomod+5
  5079  035F  082E               	movf	___aomod@dividend+6,w
  5080  0360  00A6               	movwf	?___aomod+6
  5081  0361  082F               	movf	___aomod@dividend+7,w
  5082  0362  00A7               	movwf	?___aomod+7
  5083  0363                     l358:
  5084  0363  0008               	return
  5085  0364                     __end_of___aomod:
  5086                           
  5087                           	psect	text15
  5088  0364                     __ptext15:	
  5089 ;; *************** function ___aodiv *****************
  5090 ;; Defined at:
  5091 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;  divisor         8    0[BANK0 ] long long 
  5094 ;;  dividend        8    8[BANK0 ] long long 
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;  quotient        8    3[COMMON] long long 
  5097 ;;  sign            1    2[COMMON] unsigned char 
  5098 ;;  counter         1    1[COMMON] unsigned char 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  8    0[BANK0 ] long long 
  5101 ;; Registers used:
  5102 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5108 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5109 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5111 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5112 ;;Total ram usage:       27 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_dtoa
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           
  5122                           ;psect for function ___aodiv
  5123  0364                     ___aodiv:
  5124  0364                     l1481:	
  5125                           ;incstack = 0
  5126                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  5127                           
  5128  0364  01F2               	clrf	___aodiv@sign
  5129  0365                     l1483:
  5130  0365  3020               	movlw	low ___aodiv@divisor
  5131  0366  0086               	movwf	6
  5132  0367  3000               	movlw	high ___aodiv@divisor
  5133  0368  0087               	movwf	7
  5134  0369  3F47               	moviw [7]fsr1
  5135  036A  00F0               	movwf	??___aodiv
  5136  036B  1FF0               	btfss	??___aodiv,7
  5137  036C  2B6E               	goto	u981
  5138  036D  2B6F               	goto	u980
  5139  036E                     u981:
  5140  036E  2B90               	goto	l1487
  5141  036F                     u980:
  5142  036F                     l1485:
  5143  036F  0020               	movlb	0	; select bank0
  5144  0370  09A0               	comf	___aodiv@divisor,f
  5145  0371  09A1               	comf	___aodiv@divisor+1,f
  5146  0372  09A2               	comf	___aodiv@divisor+2,f
  5147  0373  09A3               	comf	___aodiv@divisor+3,f
  5148  0374  09A4               	comf	___aodiv@divisor+4,f
  5149  0375  09A5               	comf	___aodiv@divisor+5,f
  5150  0376  09A6               	comf	___aodiv@divisor+6,f
  5151  0377  09A7               	comf	___aodiv@divisor+7,f
  5152  0378  0AA0               	incf	___aodiv@divisor,f
  5153  0379  1D03               	skipz
  5154  037A  2B8E               	goto	u99lld
  5155  037B  0AA1               	incf	___aodiv@divisor+1,f
  5156  037C  1D03               	skipz
  5157  037D  2B8E               	goto	u99lld
  5158  037E  0AA2               	incf	___aodiv@divisor+2,f
  5159  037F  1D03               	skipz
  5160  0380  2B8E               	goto	u99lld
  5161  0381  0AA3               	incf	___aodiv@divisor+3,f
  5162  0382  1D03               	skipz
  5163  0383  2B8E               	goto	u99lld
  5164  0384  0AA4               	incf	___aodiv@divisor+4,f
  5165  0385  1D03               	skipz
  5166  0386  2B8E               	goto	u99lld
  5167  0387  0AA5               	incf	___aodiv@divisor+5,f
  5168  0388  1D03               	skipz
  5169  0389  2B8E               	goto	u99lld
  5170  038A  0AA6               	incf	___aodiv@divisor+6,f
  5171  038B  1D03               	skipz
  5172  038C  2B8E               	goto	u99lld
  5173  038D  0AA7               	incf	___aodiv@divisor+7,f
  5174  038E                     u99lld:
  5175  038E  01F2               	clrf	___aodiv@sign
  5176  038F  0AF2               	incf	___aodiv@sign,f
  5177  0390                     l1487:
  5178  0390  3028               	movlw	low ___aodiv@dividend
  5179  0391  0086               	movwf	6
  5180  0392  3000               	movlw	high ___aodiv@dividend
  5181  0393  0087               	movwf	7
  5182  0394  3F47               	moviw [7]fsr1
  5183  0395  00F0               	movwf	??___aodiv
  5184  0396  1FF0               	btfss	??___aodiv,7
  5185  0397  2B99               	goto	u1001
  5186  0398  2B9A               	goto	u1000
  5187  0399                     u1001:
  5188  0399  2BBD               	goto	l1493
  5189  039A                     u1000:
  5190  039A                     l1489:
  5191  039A  0020               	movlb	0	; select bank0
  5192  039B  09A8               	comf	___aodiv@dividend,f
  5193  039C  09A9               	comf	___aodiv@dividend+1,f
  5194  039D  09AA               	comf	___aodiv@dividend+2,f
  5195  039E  09AB               	comf	___aodiv@dividend+3,f
  5196  039F  09AC               	comf	___aodiv@dividend+4,f
  5197  03A0  09AD               	comf	___aodiv@dividend+5,f
  5198  03A1  09AE               	comf	___aodiv@dividend+6,f
  5199  03A2  09AF               	comf	___aodiv@dividend+7,f
  5200  03A3  0AA8               	incf	___aodiv@dividend,f
  5201  03A4  1D03               	skipz
  5202  03A5  2BB9               	goto	u101lld
  5203  03A6  0AA9               	incf	___aodiv@dividend+1,f
  5204  03A7  1D03               	skipz
  5205  03A8  2BB9               	goto	u101lld
  5206  03A9  0AAA               	incf	___aodiv@dividend+2,f
  5207  03AA  1D03               	skipz
  5208  03AB  2BB9               	goto	u101lld
  5209  03AC  0AAB               	incf	___aodiv@dividend+3,f
  5210  03AD  1D03               	skipz
  5211  03AE  2BB9               	goto	u101lld
  5212  03AF  0AAC               	incf	___aodiv@dividend+4,f
  5213  03B0  1D03               	skipz
  5214  03B1  2BB9               	goto	u101lld
  5215  03B2  0AAD               	incf	___aodiv@dividend+5,f
  5216  03B3  1D03               	skipz
  5217  03B4  2BB9               	goto	u101lld
  5218  03B5  0AAE               	incf	___aodiv@dividend+6,f
  5219  03B6  1D03               	skipz
  5220  03B7  2BB9               	goto	u101lld
  5221  03B8  0AAF               	incf	___aodiv@dividend+7,f
  5222  03B9                     u101lld:
  5223  03B9                     l1491:
  5224  03B9  3001               	movlw	1
  5225  03BA  00F0               	movwf	??___aodiv
  5226  03BB  0870               	movf	??___aodiv,w
  5227  03BC  06F2               	xorwf	___aodiv@sign,f
  5228  03BD                     l1493:
  5229  03BD  3073               	movlw	low ___aodiv@quotient
  5230  03BE  0086               	movwf	6
  5231  03BF  3000               	movlw	high ___aodiv@quotient
  5232  03C0  0087               	movwf	7
  5233  03C1  3008               	movlw	8
  5234  03C2  00F0               	movwf	??___aodiv
  5235  03C3  3000               	movlw	0
  5236  03C4                     u1020:
  5237  03C4  001E               	movwi fsr1++
  5238  03C5  0BF0               	decfsz	??___aodiv,f
  5239  03C6  2BC4               	goto	u1020
  5240  03C7                     l1495:
  5241  03C7  0020               	movlb	0	; select bank0
  5242  03C8  0820               	movf	___aodiv@divisor,w
  5243  03C9  0421               	iorwf	___aodiv@divisor+1,w
  5244  03CA  0422               	iorwf	___aodiv@divisor+2,w
  5245  03CB  0423               	iorwf	___aodiv@divisor+3,w
  5246  03CC  0424               	iorwf	___aodiv@divisor+4,w
  5247  03CD  0425               	iorwf	___aodiv@divisor+5,w
  5248  03CE  0426               	iorwf	___aodiv@divisor+6,w
  5249  03CF  0427               	iorwf	___aodiv@divisor+7,w
  5250  03D0  1903               	skipnz
  5251  03D1  2BD3               	goto	u1031
  5252  03D2  2BD4               	goto	u1030
  5253  03D3                     u1031:
  5254  03D3  2C30               	goto	l1515
  5255  03D4                     u1030:
  5256  03D4                     l1497:
  5257  03D4  01F1               	clrf	___aodiv@counter
  5258  03D5  0AF1               	incf	___aodiv@counter,f
  5259  03D6  2BE3               	goto	l1503
  5260  03D7                     l1499:
  5261  03D7  35A0               	lslf	___aodiv@divisor,f
  5262  03D8  0DA1               	rlf	___aodiv@divisor+1,f
  5263  03D9  0DA2               	rlf	___aodiv@divisor+2,f
  5264  03DA  0DA3               	rlf	___aodiv@divisor+3,f
  5265  03DB  0DA4               	rlf	___aodiv@divisor+4,f
  5266  03DC  0DA5               	rlf	___aodiv@divisor+5,f
  5267  03DD  0DA6               	rlf	___aodiv@divisor+6,f
  5268  03DE  0DA7               	rlf	___aodiv@divisor+7,f
  5269  03DF                     l1501:
  5270  03DF  3001               	movlw	1
  5271  03E0  00F0               	movwf	??___aodiv
  5272  03E1  0870               	movf	??___aodiv,w
  5273  03E2  07F1               	addwf	___aodiv@counter,f
  5274  03E3                     l1503:
  5275  03E3  1FA7               	btfss	___aodiv@divisor+7,7
  5276  03E4  2BE6               	goto	u1041
  5277  03E5  2BE7               	goto	u1040
  5278  03E6                     u1041:
  5279  03E6  2BD7               	goto	l1499
  5280  03E7                     u1040:
  5281  03E7                     l1505:
  5282  03E7  35F3               	lslf	___aodiv@quotient,f
  5283  03E8  0DF4               	rlf	___aodiv@quotient+1,f
  5284  03E9  0DF5               	rlf	___aodiv@quotient+2,f
  5285  03EA  0DF6               	rlf	___aodiv@quotient+3,f
  5286  03EB  0DF7               	rlf	___aodiv@quotient+4,f
  5287  03EC  0DF8               	rlf	___aodiv@quotient+5,f
  5288  03ED  0DF9               	rlf	___aodiv@quotient+6,f
  5289  03EE  0DFA               	rlf	___aodiv@quotient+7,f
  5290  03EF                     l1507:
  5291  03EF  0827               	movf	___aodiv@divisor+7,w
  5292  03F0  022F               	subwf	___aodiv@dividend+7,w
  5293  03F1  1D03               	skipz
  5294  03F2  2C0D               	goto	u1055
  5295  03F3  0826               	movf	___aodiv@divisor+6,w
  5296  03F4  022E               	subwf	___aodiv@dividend+6,w
  5297  03F5  1D03               	skipz
  5298  03F6  2C0D               	goto	u1055
  5299  03F7  0825               	movf	___aodiv@divisor+5,w
  5300  03F8  022D               	subwf	___aodiv@dividend+5,w
  5301  03F9  1D03               	skipz
  5302  03FA  2C0D               	goto	u1055
  5303  03FB  0824               	movf	___aodiv@divisor+4,w
  5304  03FC  022C               	subwf	___aodiv@dividend+4,w
  5305  03FD  1D03               	skipz
  5306  03FE  2C0D               	goto	u1055
  5307  03FF  0823               	movf	___aodiv@divisor+3,w
  5308  0400  022B               	subwf	___aodiv@dividend+3,w
  5309  0401  1D03               	skipz
  5310  0402  2C0D               	goto	u1055
  5311  0403  0822               	movf	___aodiv@divisor+2,w
  5312  0404  022A               	subwf	___aodiv@dividend+2,w
  5313  0405  1D03               	skipz
  5314  0406  2C0D               	goto	u1055
  5315  0407  0821               	movf	___aodiv@divisor+1,w
  5316  0408  0229               	subwf	___aodiv@dividend+1,w
  5317  0409  1D03               	skipz
  5318  040A  2C0D               	goto	u1055
  5319  040B  0820               	movf	___aodiv@divisor,w
  5320  040C  0228               	subwf	___aodiv@dividend,w
  5321  040D                     u1055:
  5322  040D  1C03               	skipc
  5323  040E  2C10               	goto	u1051
  5324  040F  2C11               	goto	u1050
  5325  0410                     u1051:
  5326  0410  2C22               	goto	l1513
  5327  0411                     u1050:
  5328  0411                     l1509:
  5329  0411  0820               	movf	___aodiv@divisor,w
  5330  0412  02A8               	subwf	___aodiv@dividend,f
  5331  0413  0821               	movf	___aodiv@divisor+1,w
  5332  0414  3BA9               	subwfb	___aodiv@dividend+1,f
  5333  0415  0822               	movf	___aodiv@divisor+2,w
  5334  0416  3BAA               	subwfb	___aodiv@dividend+2,f
  5335  0417  0823               	movf	___aodiv@divisor+3,w
  5336  0418  3BAB               	subwfb	___aodiv@dividend+3,f
  5337  0419  0824               	movf	___aodiv@divisor+4,w
  5338  041A  3BAC               	subwfb	___aodiv@dividend+4,f
  5339  041B  0825               	movf	___aodiv@divisor+5,w
  5340  041C  3BAD               	subwfb	___aodiv@dividend+5,f
  5341  041D  0826               	movf	___aodiv@divisor+6,w
  5342  041E  3BAE               	subwfb	___aodiv@dividend+6,f
  5343  041F  0827               	movf	___aodiv@divisor+7,w
  5344  0420  3BAF               	subwfb	___aodiv@dividend+7,f
  5345  0421                     l1511:
  5346  0421  1473               	bsf	___aodiv@quotient,0
  5347  0422                     l1513:
  5348  0422  36A7               	lsrf	___aodiv@divisor+7,f
  5349  0423  0CA6               	rrf	___aodiv@divisor+6,f
  5350  0424  0CA5               	rrf	___aodiv@divisor+5,f
  5351  0425  0CA4               	rrf	___aodiv@divisor+4,f
  5352  0426  0CA3               	rrf	___aodiv@divisor+3,f
  5353  0427  0CA2               	rrf	___aodiv@divisor+2,f
  5354  0428  0CA1               	rrf	___aodiv@divisor+1,f
  5355  0429  0CA0               	rrf	___aodiv@divisor,f
  5356  042A  3001               	movlw	1
  5357  042B  02F1               	subwf	___aodiv@counter,f
  5358  042C  1D03               	btfss	3,2
  5359  042D  2C2F               	goto	u1061
  5360  042E  2C30               	goto	u1060
  5361  042F                     u1061:
  5362  042F  2BE7               	goto	l1505
  5363  0430                     u1060:
  5364  0430                     l1515:
  5365  0430  0872               	movf	___aodiv@sign,w
  5366  0431  1903               	btfsc	3,2
  5367  0432  2C34               	goto	u1071
  5368  0433  2C35               	goto	u1070
  5369  0434                     u1071:
  5370  0434  2C53               	goto	l344
  5371  0435                     u1070:
  5372  0435                     l1517:
  5373  0435  09F3               	comf	___aodiv@quotient,f
  5374  0436  09F4               	comf	___aodiv@quotient+1,f
  5375  0437  09F5               	comf	___aodiv@quotient+2,f
  5376  0438  09F6               	comf	___aodiv@quotient+3,f
  5377  0439  09F7               	comf	___aodiv@quotient+4,f
  5378  043A  09F8               	comf	___aodiv@quotient+5,f
  5379  043B  09F9               	comf	___aodiv@quotient+6,f
  5380  043C  09FA               	comf	___aodiv@quotient+7,f
  5381  043D  0AF3               	incf	___aodiv@quotient,f
  5382  043E  1D03               	skipz
  5383  043F  2C53               	goto	u108lld
  5384  0440  0AF4               	incf	___aodiv@quotient+1,f
  5385  0441  1D03               	skipz
  5386  0442  2C53               	goto	u108lld
  5387  0443  0AF5               	incf	___aodiv@quotient+2,f
  5388  0444  1D03               	skipz
  5389  0445  2C53               	goto	u108lld
  5390  0446  0AF6               	incf	___aodiv@quotient+3,f
  5391  0447  1D03               	skipz
  5392  0448  2C53               	goto	u108lld
  5393  0449  0AF7               	incf	___aodiv@quotient+4,f
  5394  044A  1D03               	skipz
  5395  044B  2C53               	goto	u108lld
  5396  044C  0AF8               	incf	___aodiv@quotient+5,f
  5397  044D  1D03               	skipz
  5398  044E  2C53               	goto	u108lld
  5399  044F  0AF9               	incf	___aodiv@quotient+6,f
  5400  0450  1D03               	skipz
  5401  0451  2C53               	goto	u108lld
  5402  0452  0AFA               	incf	___aodiv@quotient+7,f
  5403  0453                     u108lld:
  5404  0453                     l344:
  5405  0453  0873               	movf	___aodiv@quotient,w
  5406  0454  0020               	movlb	0	; select bank0
  5407  0455  00A0               	movwf	?___aodiv
  5408  0456  0874               	movf	___aodiv@quotient+1,w
  5409  0457  00A1               	movwf	?___aodiv+1
  5410  0458  0875               	movf	___aodiv@quotient+2,w
  5411  0459  00A2               	movwf	?___aodiv+2
  5412  045A  0876               	movf	___aodiv@quotient+3,w
  5413  045B  00A3               	movwf	?___aodiv+3
  5414  045C  0877               	movf	___aodiv@quotient+4,w
  5415  045D  00A4               	movwf	?___aodiv+4
  5416  045E  0878               	movf	___aodiv@quotient+5,w
  5417  045F  00A5               	movwf	?___aodiv+5
  5418  0460  0879               	movf	___aodiv@quotient+6,w
  5419  0461  00A6               	movwf	?___aodiv+6
  5420  0462  087A               	movf	___aodiv@quotient+7,w
  5421  0463  00A7               	movwf	?___aodiv+7
  5422  0464                     l345:
  5423  0464  0008               	return
  5424  0465                     __end_of___aodiv:
  5425                           
  5426                           	psect	text16
  5427  0EA5                     __ptext16:	
  5428 ;; *************** function ___wmul *****************
  5429 ;; Defined at:
  5430 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;  multiplier      2    0[COMMON] unsigned int 
  5433 ;;  multiplicand    2    2[COMMON] unsigned int 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;  product         2    4[COMMON] unsigned int 
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  2    0[COMMON] unsigned int 
  5438 ;; Registers used:
  5439 ;;		wreg, status,2, status,0
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5448 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5449 ;;Total ram usage:        6 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_main
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           
  5459                           ;psect for function ___wmul
  5460  0EA5                     ___wmul:
  5461  0EA5                     l1911:	
  5462                           ;incstack = 0
  5463                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5464                           
  5465  0EA5  01F4               	clrf	___wmul@product
  5466  0EA6  01F5               	clrf	___wmul@product+1
  5467  0EA7                     l1913:
  5468  0EA7  1C70               	btfss	___wmul@multiplier,0
  5469  0EA8  2EAA               	goto	u1721
  5470  0EA9  2EAB               	goto	u1720
  5471  0EAA                     u1721:
  5472  0EAA  2EAF               	goto	l244
  5473  0EAB                     u1720:
  5474  0EAB                     l1915:
  5475  0EAB  0872               	movf	___wmul@multiplicand,w
  5476  0EAC  07F4               	addwf	___wmul@product,f
  5477  0EAD  0873               	movf	___wmul@multiplicand+1,w
  5478  0EAE  3DF5               	addwfc	___wmul@product+1,f
  5479  0EAF                     l244:
  5480  0EAF  3001               	movlw	1
  5481  0EB0                     u1735:
  5482  0EB0  35F2               	lslf	___wmul@multiplicand,f
  5483  0EB1  0DF3               	rlf	___wmul@multiplicand+1,f
  5484  0EB2  0B89               	decfsz	9,f
  5485  0EB3  2EB0               	goto	u1735
  5486  0EB4                     l1917:
  5487  0EB4  3001               	movlw	1
  5488  0EB5                     u1745:
  5489  0EB5  36F1               	lsrf	___wmul@multiplier+1,f
  5490  0EB6  0CF0               	rrf	___wmul@multiplier,f
  5491  0EB7  0B89               	decfsz	9,f
  5492  0EB8  2EB5               	goto	u1745
  5493  0EB9                     l1919:
  5494  0EB9  0870               	movf	___wmul@multiplier,w
  5495  0EBA  0471               	iorwf	___wmul@multiplier+1,w
  5496  0EBB  1D03               	btfss	3,2
  5497  0EBC  2EBE               	goto	u1751
  5498  0EBD  2EBF               	goto	u1750
  5499  0EBE                     u1751:
  5500  0EBE  2EA7               	goto	l1913
  5501  0EBF                     u1750:
  5502  0EBF                     l1921:
  5503  0EBF  0875               	movf	___wmul@product+1,w
  5504  0EC0  00F1               	movwf	?___wmul+1
  5505  0EC1  0874               	movf	___wmul@product,w
  5506  0EC2  00F0               	movwf	?___wmul
  5507  0EC3                     l246:
  5508  0EC3  0008               	return
  5509  0EC4                     __end_of___wmul:
  5510                           
  5511                           	psect	text17
  5512  0E11                     __ptext17:	
  5513 ;; *************** function _SYSTEM_Initialize *****************
  5514 ;; Defined at:
  5515 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;		None
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      void 
  5522 ;; Registers used:
  5523 ;;		wreg, status,2, status,0, pclath, cstack
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5533 ;;Total ram usage:        0 bytes
  5534 ;; Hardware stack levels used:    1
  5535 ;; Hardware stack levels required when called:    1
  5536 ;; This function calls:
  5537 ;;		_OSCILLATOR_Initialize
  5538 ;;		_PIN_MANAGER_Initialize
  5539 ;;		_WDT_Initialize
  5540 ;; This function is called by:
  5541 ;;		_main
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           
  5546                           ;psect for function _SYSTEM_Initialize
  5547  0E11                     _SYSTEM_Initialize:
  5548  0E11                     l1875:	
  5549                           ;incstack = 0
  5550                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5551                           
  5552                           
  5553                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5554  0E11  318F  27A1  318E   	fcall	_PIN_MANAGER_Initialize
  5555                           
  5556                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5557  0E14  3180  2005  318E   	fcall	_OSCILLATOR_Initialize
  5558                           
  5559                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  5560  0E17  318E  2601  318E   	fcall	_WDT_Initialize
  5561  0E1A                     l129:
  5562  0E1A  0008               	return
  5563  0E1B                     __end_of_SYSTEM_Initialize:
  5564                           
  5565                           	psect	text18
  5566  0E01                     __ptext18:	
  5567 ;; *************** function _WDT_Initialize *****************
  5568 ;; Defined at:
  5569 ;;		line 68 in file "mcc_generated_files/mcc.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;		None
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5587 ;;Total ram usage:        0 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; This function calls:
  5590 ;;		Nothing
  5591 ;; This function is called by:
  5592 ;;		_SYSTEM_Initialize
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           
  5597                           ;psect for function _WDT_Initialize
  5598  0E01                     _WDT_Initialize:
  5599  0E01                     l1765:	
  5600                           ;incstack = 0
  5601                           ; Regs used in _WDT_Initialize: [wreg]
  5602                           
  5603                           
  5604                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  5605  0E01  3016               	movlw	22
  5606  0E02  0021               	movlb	1	; select bank1
  5607  0E03  0097               	movwf	23	;volatile
  5608  0E04                     l135:
  5609  0E04  0008               	return
  5610  0E05                     __end_of_WDT_Initialize:
  5611                           
  5612                           	psect	text19
  5613  0FA1                     __ptext19:	
  5614 ;; *************** function _PIN_MANAGER_Initialize *****************
  5615 ;; Defined at:
  5616 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;		None
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;		None
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  1    wreg      void 
  5623 ;; Registers used:
  5624 ;;		wreg, status,2
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5634 ;;Total ram usage:        0 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_SYSTEM_Initialize
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           
  5644                           ;psect for function _PIN_MANAGER_Initialize
  5645  0FA1                     _PIN_MANAGER_Initialize:
  5646  0FA1                     l1731:	
  5647                           ;incstack = 0
  5648                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5649                           
  5650                           
  5651                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5652  0FA1  0022               	movlb	2	; select bank2
  5653  0FA2  018C               	clrf	12	;volatile
  5654                           
  5655                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5656  0FA3  018D               	clrf	13	;volatile
  5657                           
  5658                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5659  0FA4  018E               	clrf	14	;volatile
  5660  0FA5                     l1733:
  5661                           
  5662                           ;mcc_generated_files/pin_manager.c: 67:     TRISE = 0x08;
  5663  0FA5  3008               	movlw	8
  5664  0FA6  0021               	movlb	1	; select bank1
  5665  0FA7  0090               	movwf	16	;volatile
  5666  0FA8                     l1735:
  5667                           
  5668                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0xFF;
  5669  0FA8  30FF               	movlw	255
  5670  0FA9  008C               	movwf	12	;volatile
  5671                           
  5672                           ;mcc_generated_files/pin_manager.c: 69:     TRISB = 0x00;
  5673  0FAA  018D               	clrf	13	;volatile
  5674  0FAB                     l1737:
  5675                           
  5676                           ;mcc_generated_files/pin_manager.c: 70:     TRISC = 0xFF;
  5677  0FAB  30FF               	movlw	255
  5678  0FAC  008E               	movwf	14	;volatile
  5679  0FAD                     l1739:
  5680                           
  5681                           ;mcc_generated_files/pin_manager.c: 75:     ANSELC = 0xFC;
  5682  0FAD  30FC               	movlw	252
  5683  0FAE  0023               	movlb	3	; select bank3
  5684  0FAF  008E               	movwf	14	;volatile
  5685                           
  5686                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x00;
  5687  0FB0  018D               	clrf	13	;volatile
  5688  0FB1                     l1741:
  5689                           
  5690                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x3F;
  5691  0FB1  303F               	movlw	63
  5692  0FB2  008C               	movwf	12	;volatile
  5693  0FB3                     l1743:
  5694                           
  5695                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  5696  0FB3  0024               	movlb	4	; select bank4
  5697  0FB4  0190               	clrf	16	;volatile
  5698  0FB5                     l1745:
  5699                           
  5700                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  5701  0FB5  018D               	clrf	13	;volatile
  5702  0FB6                     l1747:
  5703                           
  5704                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  5705  0FB6  018C               	clrf	12	;volatile
  5706  0FB7                     l1749:
  5707                           
  5708                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  5709  0FB7  018E               	clrf	14	;volatile
  5710  0FB8                     l1751:
  5711                           
  5712                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  5713  0FB8  0021               	movlb	1	; select bank1
  5714  0FB9  1795               	bsf	21,7	;volatile
  5715  0FBA                     l1753:
  5716                           
  5717                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  5718  0FBA  0025               	movlb	5	; select bank5
  5719  0FBB  018C               	clrf	12	;volatile
  5720  0FBC                     l1755:
  5721                           
  5722                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  5723  0FBC  018D               	clrf	13	;volatile
  5724  0FBD                     l1757:
  5725                           
  5726                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  5727  0FBD  018E               	clrf	14	;volatile
  5728                           
  5729                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0xFF;
  5730  0FBE  30FF               	movlw	255
  5731  0FBF  0026               	movlb	6	; select bank6
  5732  0FC0  008C               	movwf	12	;volatile
  5733                           
  5734                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xFF;
  5735  0FC1  30FF               	movlw	255
  5736  0FC2  008D               	movwf	13	;volatile
  5737                           
  5738                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  5739  0FC3  30FF               	movlw	255
  5740  0FC4  008E               	movwf	14	;volatile
  5741                           
  5742                           ;mcc_generated_files/pin_manager.c: 105:     INLVLA = 0xFF;
  5743  0FC5  30FF               	movlw	255
  5744  0FC6  0027               	movlb	7	; select bank7
  5745  0FC7  008C               	movwf	12	;volatile
  5746                           
  5747                           ;mcc_generated_files/pin_manager.c: 106:     INLVLB = 0xFF;
  5748  0FC8  30FF               	movlw	255
  5749  0FC9  008D               	movwf	13	;volatile
  5750                           
  5751                           ;mcc_generated_files/pin_manager.c: 107:     INLVLC = 0xFF;
  5752  0FCA  30FF               	movlw	255
  5753  0FCB  008E               	movwf	14	;volatile
  5754                           
  5755                           ;mcc_generated_files/pin_manager.c: 108:     INLVLE = 0x08;
  5756  0FCC  3008               	movlw	8
  5757  0FCD  0090               	movwf	16	;volatile
  5758  0FCE                     l109:
  5759  0FCE  0008               	return
  5760  0FCF                     __end_of_PIN_MANAGER_Initialize:
  5761                           
  5762                           	psect	text20
  5763  0005                     __ptext20:	
  5764 ;; *************** function _OSCILLATOR_Initialize *****************
  5765 ;; Defined at:
  5766 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;		None
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;		None
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  1    wreg      void 
  5773 ;; Registers used:
  5774 ;;		wreg, status,2
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5784 ;;Total ram usage:        0 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; This function calls:
  5787 ;;		Nothing
  5788 ;; This function is called by:
  5789 ;;		_SYSTEM_Initialize
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           
  5794                           ;psect for function _OSCILLATOR_Initialize
  5795  0005                     _OSCILLATOR_Initialize:
  5796  0005                     l1759:	
  5797                           ;incstack = 0
  5798                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5799                           
  5800                           
  5801                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x38;
  5802  0005  3038               	movlw	56
  5803  0006  0021               	movlb	1	; select bank1
  5804  0007  0099               	movwf	25	;volatile
  5805  0008                     l1761:
  5806                           
  5807                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  5808  0008  0198               	clrf	24	;volatile
  5809  0009                     l1763:
  5810                           
  5811                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  5812  0009  0022               	movlb	2	; select bank2
  5813  000A  0196               	clrf	22	;volatile
  5814  000B                     l132:
  5815  000B  0008               	return
  5816  000C                     __end_of_OSCILLATOR_Initialize:
  5817                           
  5818                           	psect	text21
  5819  0EE4                     __ptext21:	
  5820 ;; *************** function _LCD_Initialize *****************
  5821 ;; Defined at:
  5822 ;;		line 46 in file "lcd.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;		None
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;		None
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1    wreg      void 
  5829 ;; Registers used:
  5830 ;;		wreg, status,2, status,0, pclath, cstack
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5840 ;;Total ram usage:        1 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:    2
  5843 ;; This function calls:
  5844 ;;		_LCDPutCmd
  5845 ;; This function is called by:
  5846 ;;		_main
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           
  5851                           ;psect for function _LCD_Initialize
  5852  0EE4                     _LCD_Initialize:
  5853  0EE4                     l1877:	
  5854                           ;incstack = 0
  5855                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5856                           
  5857                           
  5858                           ;lcd.c: 49:   PORTB = 0;
  5859  0EE4  0020               	movlb	0	; select bank0
  5860  0EE5  018D               	clrf	13	;volatile
  5861                           
  5862                           ;lcd.c: 51:   TRISB = 0x00;
  5863  0EE6  0021               	movlb	1	; select bank1
  5864  0EE7  018D               	clrf	13	;volatile
  5865  0EE8                     l1879:
  5866                           
  5867                           ;lcd.c: 54:   PORTBbits.RB7 = 1;
  5868  0EE8  0020               	movlb	0	; select bank0
  5869  0EE9  178D               	bsf	13,7	;volatile
  5870  0EEA                     l1881:
  5871                           
  5872                           ;lcd.c: 57:   _delay((unsigned long)((15)*(500000/4000.0)));
  5873  0EEA  3003               	movlw	3
  5874  0EEB  00F7               	movwf	??_LCD_Initialize
  5875  0EEC  306E               	movlw	110
  5876  0EED                     u1857:
  5877  0EED  0B89               	decfsz	9,f
  5878  0EEE  2EED               	goto	u1857
  5879  0EEF  0BF7               	decfsz	??_LCD_Initialize,f
  5880  0EF0  2EED               	goto	u1857
  5881  0EF1  0000               	nop
  5882  0EF2                     l1883:
  5883                           
  5884                           ;lcd.c: 60:   LCDPutCmd(0x32);
  5885  0EF2  3032               	movlw	50
  5886  0EF3  318E  2686  318E   	fcall	_LCDPutCmd
  5887  0EF6                     l1885:
  5888                           
  5889                           ;lcd.c: 63:   LCDPutCmd(0x28);
  5890  0EF6  3028               	movlw	40
  5891  0EF7  318E  2686  318E   	fcall	_LCDPutCmd
  5892  0EFA                     l1887:
  5893                           
  5894                           ;lcd.c: 66:   LCDPutCmd(0x0C);
  5895  0EFA  300C               	movlw	12
  5896  0EFB  318E  2686  318E   	fcall	_LCDPutCmd
  5897  0EFE                     l1889:
  5898                           
  5899                           ;lcd.c: 68:   LCDPutCmd(0x01);
  5900  0EFE  3001               	movlw	1
  5901  0EFF  318E  2686  318E   	fcall	_LCDPutCmd
  5902  0F02                     l1891:
  5903                           
  5904                           ;lcd.c: 71:   LCDPutCmd(0x06);
  5905  0F02  3006               	movlw	6
  5906  0F03  318E  2686  318E   	fcall	_LCDPutCmd
  5907  0F06                     l148:
  5908  0F06  0008               	return
  5909  0F07                     __end_of_LCD_Initialize:
  5910                           
  5911                           	psect	text22
  5912  0E1B                     __ptext22:	
  5913 ;; *************** function _LCDClear *****************
  5914 ;; Defined at:
  5915 ;;		line 159 in file "lcd.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;		None
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1    wreg      void 
  5922 ;; Registers used:
  5923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5933 ;;Total ram usage:        0 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:    3
  5936 ;; This function calls:
  5937 ;;		_LCDGoto
  5938 ;;		_LCDPutStr
  5939 ;; This function is called by:
  5940 ;;		_main
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943                           
  5944                           
  5945                           ;psect for function _LCDClear
  5946  0E1B                     _LCDClear:
  5947  0E1B                     l1905:	
  5948                           ;incstack = 0
  5949                           ; Regs used in _LCDClear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5950                           
  5951                           
  5952                           ;lcd.c: 161:   LCDGoto(0, 0);
  5953  0E1B  01F7               	clrf	LCDGoto@ln
  5954  0E1C  3000               	movlw	0
  5955  0E1D  318F  2751  318E   	fcall	_LCDGoto
  5956  0E20                     l1907:
  5957                           
  5958                           ;lcd.c: 162:   LCDPutStr("                ");
  5959  0E20  3002               	movlw	low (STR_9| (0+32768))
  5960  0E21  00F7               	movwf	LCDPutStr@str
  5961  0E22  3090               	movlw	high (STR_9| (0+32768))
  5962  0E23  00F8               	movwf	LCDPutStr@str+1
  5963  0E24  318F  272B  318E   	fcall	_LCDPutStr
  5964  0E27                     l1909:
  5965                           
  5966                           ;lcd.c: 163:   LCDGoto(0, 1);
  5967  0E27  01F7               	clrf	LCDGoto@ln
  5968  0E28  0AF7               	incf	LCDGoto@ln,f
  5969  0E29  3000               	movlw	0
  5970  0E2A  318F  2751  318E   	fcall	_LCDGoto
  5971                           
  5972                           ;lcd.c: 164:   LCDPutStr("                ");
  5973  0E2D  3002               	movlw	low (STR_9| (0+32768))
  5974  0E2E  00F7               	movwf	LCDPutStr@str
  5975  0E2F  3090               	movlw	high (STR_9| (0+32768))
  5976  0E30  00F8               	movwf	LCDPutStr@str+1
  5977  0E31  318F  272B  318E   	fcall	_LCDPutStr
  5978  0E34                     l176:
  5979  0E34  0008               	return
  5980  0E35                     __end_of_LCDClear:
  5981                           
  5982                           	psect	text23
  5983  0F2B                     __ptext23:	
  5984 ;; *************** function _LCDPutStr *****************
  5985 ;; Defined at:
  5986 ;;		line 131 in file "lcd.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  str             2    7[COMMON] PTR const unsigned char 
  5989 ;;		 -> STR_10(17), STR_9(17), STR_7(8), STR_5(11), 
  5990 ;;		 -> STR_3(10), STR_2(8), main@printchar(10), 
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;  i               1   12[COMMON] unsigned char 
  5993 ;; Return value:  Size  Location     Type
  5994 ;;                  1    wreg      void 
  5995 ;; Registers used:
  5996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6003 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6004 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6005 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6006 ;;Total ram usage:        6 bytes
  6007 ;; Hardware stack levels used:    1
  6008 ;; Hardware stack levels required when called:    2
  6009 ;; This function calls:
  6010 ;;		_LCDPutChar
  6011 ;; This function is called by:
  6012 ;;		_main
  6013 ;;		_LCDClear
  6014 ;; This function uses a non-reentrant model
  6015 ;;
  6016                           
  6017                           
  6018                           ;psect for function _LCDPutStr
  6019  0F2B                     _LCDPutStr:
  6020  0F2B                     l1723:	
  6021                           ;incstack = 0
  6022                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6023                           
  6024                           
  6025                           ;lcd.c: 131: void LCDPutStr(const char *str);lcd.c: 132: {;lcd.c: 133:   uint8_t i = 0;
  6026  0F2B  01FC               	clrf	LCDPutStr@i
  6027                           
  6028                           ;lcd.c: 136:   while (str[i])
  6029  0F2C  2F40               	goto	l1729
  6030  0F2D                     l1725:
  6031                           
  6032                           ;lcd.c: 137:   {;lcd.c: 139:     LCDPutChar(str[i++]);
  6033  0F2D  0878               	movf	LCDPutStr@str+1,w
  6034  0F2E  00FA               	movwf	??_LCDPutStr+1
  6035  0F2F  0877               	movf	LCDPutStr@str,w
  6036  0F30  00F9               	movwf	??_LCDPutStr
  6037  0F31  087C               	movf	LCDPutStr@i,w
  6038  0F32  0779               	addwf	??_LCDPutStr,w
  6039  0F33  0084               	movwf	4
  6040  0F34  087A               	movf	??_LCDPutStr+1,w
  6041  0F35  1803               	skipnc
  6042  0F36  0A7A               	incf	??_LCDPutStr+1,w
  6043  0F37  0085               	movwf	5
  6044  0F38  0800               	movf	0,w	;code access
  6045  0F39  318E  2669  318F   	fcall	_LCDPutChar
  6046  0F3C                     l1727:
  6047  0F3C  3001               	movlw	1
  6048  0F3D  00F9               	movwf	??_LCDPutStr
  6049  0F3E  0879               	movf	??_LCDPutStr,w
  6050  0F3F  07FC               	addwf	LCDPutStr@i,f
  6051  0F40                     l1729:
  6052                           
  6053                           ;lcd.c: 136:   while (str[i])
  6054  0F40  0878               	movf	LCDPutStr@str+1,w
  6055  0F41  00FA               	movwf	??_LCDPutStr+1
  6056  0F42  0877               	movf	LCDPutStr@str,w
  6057  0F43  00F9               	movwf	??_LCDPutStr
  6058  0F44  087C               	movf	LCDPutStr@i,w
  6059  0F45  0779               	addwf	??_LCDPutStr,w
  6060  0F46  0084               	movwf	4
  6061  0F47  087A               	movf	??_LCDPutStr+1,w
  6062  0F48  1803               	skipnc
  6063  0F49  0A7A               	incf	??_LCDPutStr+1,w
  6064  0F4A  0085               	movwf	5
  6065  0F4B  0012               	moviw fsr0++
  6066  0F4C  1D03               	btfss	3,2
  6067  0F4D  2F4F               	goto	u1501
  6068  0F4E  2F50               	goto	u1500
  6069  0F4F                     u1501:
  6070  0F4F  2F2D               	goto	l1725
  6071  0F50                     u1500:
  6072  0F50                     l163:
  6073  0F50  0008               	return
  6074  0F51                     __end_of_LCDPutStr:
  6075                           
  6076                           	psect	text24
  6077  0E69                     __ptext24:	
  6078 ;; *************** function _LCDPutChar *****************
  6079 ;; Defined at:
  6080 ;;		line 101 in file "lcd.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;  ch              1    wreg     unsigned char 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  ch              1    6[COMMON] unsigned char 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  1    wreg      void 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0, pclath, cstack
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6096 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6097 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6098 ;;Total ram usage:        3 bytes
  6099 ;; Hardware stack levels used:    1
  6100 ;; Hardware stack levels required when called:    1
  6101 ;; This function calls:
  6102 ;;		_LCDWriteNibble
  6103 ;; This function is called by:
  6104 ;;		_LCDPutStr
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           
  6109                           ;psect for function _LCDPutChar
  6110  0E69                     _LCDPutChar:
  6111                           
  6112                           ;incstack = 0
  6113                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  6114                           ;LCDPutChar@ch stored from wreg
  6115  0E69  00F6               	movwf	LCDPutChar@ch
  6116  0E6A                     l1657:
  6117                           
  6118                           ;lcd.c: 101: void LCDPutChar(uint8_t ch);lcd.c: 102: {;lcd.c: 103:   _delay((unsigned lo
      +                          ng)((5)*(500000/4000.0)));
  6119  0E6A  30D0               	movlw	208
  6120  0E6B                     u1867:
  6121  0E6B  0B89               	decfsz	9,f
  6122  0E6C  2E6B               	goto	u1867
  6123  0E6D  0000               	nop
  6124  0E6E                     l1659:
  6125                           
  6126                           ;lcd.c: 106:   LCDWriteNibble(ch, 1);
  6127  0E6E  01F0               	clrf	LCDWriteNibble@rs
  6128  0E6F  0AF0               	incf	LCDWriteNibble@rs,f
  6129  0E70  0876               	movf	LCDPutChar@ch,w
  6130  0E71  318E  26C4  318E   	fcall	_LCDWriteNibble
  6131  0E74                     l1661:
  6132                           
  6133                           ;lcd.c: 109:   ch = (uint8_t)(ch << 4);
  6134  0E74  0876               	movf	LCDPutChar@ch,w
  6135  0E75  00F4               	movwf	??_LCDPutChar
  6136  0E76  3003               	movlw	3
  6137  0E77                     u1425:
  6138  0E77  35F4               	lslf	??_LCDPutChar,f
  6139  0E78  3EFF               	addlw	-1
  6140  0E79  1D03               	skipz
  6141  0E7A  2E77               	goto	u1425
  6142  0E7B  3574               	lslf	??_LCDPutChar,w
  6143  0E7C  00F5               	movwf	??_LCDPutChar+1
  6144  0E7D  0875               	movf	??_LCDPutChar+1,w
  6145  0E7E  00F6               	movwf	LCDPutChar@ch
  6146  0E7F                     l1663:
  6147                           
  6148                           ;lcd.c: 112:   LCDWriteNibble(ch, 1);
  6149  0E7F  01F0               	clrf	LCDWriteNibble@rs
  6150  0E80  0AF0               	incf	LCDWriteNibble@rs,f
  6151  0E81  0876               	movf	LCDPutChar@ch,w
  6152  0E82  318E  26C4  318E   	fcall	_LCDWriteNibble
  6153  0E85                     l154:
  6154  0E85  0008               	return
  6155  0E86                     __end_of_LCDPutChar:
  6156                           
  6157                           	psect	text25
  6158  0F51                     __ptext25:	
  6159 ;; *************** function _LCDGoto *****************
  6160 ;; Defined at:
  6161 ;;		line 143 in file "lcd.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;  pos             1    wreg     unsigned char 
  6164 ;;  ln              1    7[COMMON] unsigned char 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  pos             1   10[COMMON] unsigned char 
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      void 
  6169 ;; Registers used:
  6170 ;;		wreg, status,2, status,0, pclath, cstack
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6176 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6177 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6180 ;;Total ram usage:        4 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    2
  6183 ;; This function calls:
  6184 ;;		_LCDPutCmd
  6185 ;; This function is called by:
  6186 ;;		_main
  6187 ;;		_LCDClear
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           
  6192                           ;psect for function _LCDGoto
  6193  0F51                     _LCDGoto:
  6194                           
  6195                           ;incstack = 0
  6196                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  6197                           ;LCDGoto@pos stored from wreg
  6198  0F51  00FA               	movwf	LCDGoto@pos
  6199  0F52                     l1709:
  6200                           
  6201                           ;lcd.c: 143: void LCDGoto(uint8_t pos, uint8_t ln);lcd.c: 144: {;lcd.c: 146:   if ((ln >
      +                           (2 - 1)) || (pos > (16 - 1)))
  6202  0F52  3002               	movlw	2
  6203  0F53  0277               	subwf	LCDGoto@ln,w
  6204  0F54  1803               	skipnc
  6205  0F55  2F57               	goto	u1471
  6206  0F56  2F58               	goto	u1470
  6207  0F57                     u1471:
  6208  0F57  2F77               	goto	l169
  6209  0F58                     u1470:
  6210  0F58                     l1711:
  6211  0F58  3010               	movlw	16
  6212  0F59  027A               	subwf	LCDGoto@pos,w
  6213  0F5A  1C03               	skipc
  6214  0F5B  2F5D               	goto	u1481
  6215  0F5C  2F5E               	goto	u1480
  6216  0F5D                     u1481:
  6217  0F5D  2F5F               	goto	l1713
  6218  0F5E                     u1480:
  6219  0F5E  2F77               	goto	l169
  6220  0F5F                     l1713:
  6221                           
  6222                           ;lcd.c: 153:   LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  6223  0F5F  0377               	decf	LCDGoto@ln,w
  6224  0F60  1903               	btfsc	3,2
  6225  0F61  2F63               	goto	u1491
  6226  0F62  2F64               	goto	u1490
  6227  0F63                     u1491:
  6228  0F63  2F6A               	goto	l1717
  6229  0F64                     u1490:
  6230  0F64                     l1715:
  6231  0F64  3080               	movlw	128
  6232  0F65  047A               	iorwf	LCDGoto@pos,w
  6233  0F66  00F8               	movwf	_LCDGoto$227
  6234  0F67  3000               	movlw	0
  6235  0F68  00F9               	movwf	_LCDGoto$227+1
  6236  0F69  2F6F               	goto	l1719
  6237  0F6A                     l1717:
  6238  0F6A  30C0               	movlw	192
  6239  0F6B  047A               	iorwf	LCDGoto@pos,w
  6240  0F6C  00F8               	movwf	_LCDGoto$227
  6241  0F6D  3000               	movlw	0
  6242  0F6E  00F9               	movwf	_LCDGoto$227+1
  6243  0F6F                     l1719:
  6244  0F6F  0878               	movf	_LCDGoto$227,w
  6245  0F70  318E  2686  318F   	fcall	_LCDPutCmd
  6246  0F73                     l1721:
  6247                           
  6248                           ;lcd.c: 156:   _delay((unsigned long)((5)*(500000/4000.0)));
  6249  0F73  30D0               	movlw	208
  6250  0F74                     u1877:
  6251  0F74  0B89               	decfsz	9,f
  6252  0F75  2F74               	goto	u1877
  6253  0F76  0000               	nop
  6254  0F77                     l169:
  6255  0F77  0008               	return
  6256  0F78                     __end_of_LCDGoto:
  6257                           
  6258                           	psect	text26
  6259  0E86                     __ptext26:	
  6260 ;; *************** function _LCDPutCmd *****************
  6261 ;; Defined at:
  6262 ;;		line 115 in file "lcd.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  ch              1    wreg     unsigned char 
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;  ch              1    6[COMMON] unsigned char 
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  1    wreg      void 
  6269 ;; Registers used:
  6270 ;;		wreg, status,2, status,0, pclath, cstack
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6277 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6278 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6279 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6280 ;;Total ram usage:        3 bytes
  6281 ;; Hardware stack levels used:    1
  6282 ;; Hardware stack levels required when called:    1
  6283 ;; This function calls:
  6284 ;;		_LCDWriteNibble
  6285 ;; This function is called by:
  6286 ;;		_LCD_Initialize
  6287 ;;		_LCDGoto
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           
  6292                           ;psect for function _LCDPutCmd
  6293  0E86                     _LCDPutCmd:
  6294                           
  6295                           ;incstack = 0
  6296                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  6297                           ;LCDPutCmd@ch stored from wreg
  6298  0E86  00F6               	movwf	LCDPutCmd@ch
  6299  0E87                     l1647:
  6300                           
  6301                           ;lcd.c: 115: void LCDPutCmd(uint8_t ch);lcd.c: 116: {;lcd.c: 117:   _delay((unsigned lon
      +                          g)((5)*(500000/4000.0)));
  6302  0E87  30D0               	movlw	208
  6303  0E88                     u1887:
  6304  0E88  0B89               	decfsz	9,f
  6305  0E89  2E88               	goto	u1887
  6306  0E8A  0000               	nop
  6307  0E8B                     l1649:
  6308                           
  6309                           ;lcd.c: 120:   LCDWriteNibble(ch, 0);
  6310  0E8B  01F0               	clrf	LCDWriteNibble@rs
  6311  0E8C  0876               	movf	LCDPutCmd@ch,w
  6312  0E8D  318E  26C4  318E   	fcall	_LCDWriteNibble
  6313  0E90                     l1651:
  6314                           
  6315                           ;lcd.c: 123:   ch = (uint8_t)(ch << 4);
  6316  0E90  0876               	movf	LCDPutCmd@ch,w
  6317  0E91  00F4               	movwf	??_LCDPutCmd
  6318  0E92  3003               	movlw	3
  6319  0E93                     u1415:
  6320  0E93  35F4               	lslf	??_LCDPutCmd,f
  6321  0E94  3EFF               	addlw	-1
  6322  0E95  1D03               	skipz
  6323  0E96  2E93               	goto	u1415
  6324  0E97  3574               	lslf	??_LCDPutCmd,w
  6325  0E98  00F5               	movwf	??_LCDPutCmd+1
  6326  0E99  0875               	movf	??_LCDPutCmd+1,w
  6327  0E9A  00F6               	movwf	LCDPutCmd@ch
  6328  0E9B                     l1653:
  6329                           
  6330                           ;lcd.c: 125:   _delay((unsigned long)((1)*(500000/4000.0)));
  6331  0E9B  3029               	movlw	41
  6332  0E9C                     u1897:
  6333  0E9C  0B89               	decfsz	9,f
  6334  0E9D  2E9C               	goto	u1897
  6335  0E9E  3200               	nop2
  6336  0E9F                     l1655:
  6337                           
  6338                           ;lcd.c: 128:   LCDWriteNibble(ch, 0);
  6339  0E9F  01F0               	clrf	LCDWriteNibble@rs
  6340  0EA0  0876               	movf	LCDPutCmd@ch,w
  6341  0EA1  318E  26C4  318E   	fcall	_LCDWriteNibble
  6342  0EA4                     l157:
  6343  0EA4  0008               	return
  6344  0EA5                     __end_of_LCDPutCmd:
  6345                           
  6346                           	psect	text27
  6347  0EC4                     __ptext27:	
  6348 ;; *************** function _LCDWriteNibble *****************
  6349 ;; Defined at:
  6350 ;;		line 74 in file "lcd.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;  ch              1    wreg     unsigned char 
  6353 ;;  rs              1    0[COMMON] unsigned char 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;  ch              1    3[COMMON] unsigned char 
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      void 
  6358 ;; Registers used:
  6359 ;;		wreg, status,2, status,0
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6365 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6368 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6369 ;;Total ram usage:        4 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; This function calls:
  6372 ;;		Nothing
  6373 ;; This function is called by:
  6374 ;;		_LCDPutChar
  6375 ;;		_LCDPutCmd
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           
  6380                           ;psect for function _LCDWriteNibble
  6381  0EC4                     _LCDWriteNibble:
  6382                           
  6383                           ;incstack = 0
  6384                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
  6385                           ;LCDWriteNibble@ch stored from wreg
  6386  0EC4  00F3               	movwf	LCDWriteNibble@ch
  6387  0EC5                     l1575:
  6388                           
  6389                           ;lcd.c: 74: void LCDWriteNibble(uint8_t ch, uint8_t rs);lcd.c: 75: {;lcd.c: 77:   ch = (
      +                          ch >> 4);
  6390  0EC5  0873               	movf	LCDWriteNibble@ch,w
  6391  0EC6  00F1               	movwf	??_LCDWriteNibble
  6392  0EC7  3004               	movlw	4
  6393  0EC8                     u1245:
  6394  0EC8  36F1               	lsrf	??_LCDWriteNibble,f
  6395  0EC9  0B89               	decfsz	9,f
  6396  0ECA  2EC8               	goto	u1245
  6397  0ECB  0871               	movf	??_LCDWriteNibble,w
  6398  0ECC  00F2               	movwf	??_LCDWriteNibble+1
  6399  0ECD  0872               	movf	??_LCDWriteNibble+1,w
  6400  0ECE  00F3               	movwf	LCDWriteNibble@ch
  6401  0ECF                     l1577:
  6402                           
  6403                           ;lcd.c: 80:   ch = (ch & 0x0F);
  6404  0ECF  0873               	movf	LCDWriteNibble@ch,w
  6405  0ED0  390F               	andlw	15
  6406  0ED1  00F1               	movwf	??_LCDWriteNibble
  6407  0ED2  0871               	movf	??_LCDWriteNibble,w
  6408  0ED3  00F3               	movwf	LCDWriteNibble@ch
  6409  0ED4                     l1579:
  6410                           
  6411                           ;lcd.c: 83:   PORTB = (PORTB & 0xF0);
  6412  0ED4  0020               	movlb	0	; select bank0
  6413  0ED5  080D               	movf	13,w	;volatile
  6414  0ED6  39F0               	andlw	240
  6415  0ED7  008D               	movwf	13	;volatile
  6416                           
  6417                           ;lcd.c: 86:   PORTB = (PORTB | ch);
  6418  0ED8  080D               	movf	13,w	;volatile
  6419  0ED9  0473               	iorwf	LCDWriteNibble@ch,w
  6420  0EDA  008D               	movwf	13	;volatile
  6421  0EDB                     l1581:
  6422                           
  6423                           ;lcd.c: 89:   PORTBbits.RB5 = rs;
  6424  0EDB  0C70               	rrf	LCDWriteNibble@rs,w
  6425  0EDC  1C03               	skipc
  6426  0EDD  128D               	bcf	13,5	;volatile
  6427  0EDE  1803               	skipnc
  6428  0EDF  168D               	bsf	13,5	;volatile
  6429  0EE0                     l1583:
  6430                           
  6431                           ;lcd.c: 92:   PORTBbits.RB6 = 0;
  6432  0EE0  130D               	bcf	13,6	;volatile
  6433  0EE1                     l1585:
  6434                           
  6435                           ;lcd.c: 95:   PORTBbits.RB4 = 1;
  6436  0EE1  160D               	bsf	13,4	;volatile
  6437  0EE2                     l1587:
  6438                           
  6439                           ;lcd.c: 98:   PORTBbits.RB4 = 0;
  6440  0EE2  120D               	bcf	13,4	;volatile
  6441  0EE3                     l151:
  6442  0EE3  0008               	return
  6443  0EE4                     __end_of_LCDWriteNibble:
  6444  007E                     btemp	set	126	;btemp
  6445  007E                     wtemp0	set	126
  6446                           
  6447                           	psect	config
  6448                           
  6449                           ;Config register CONFIG1 @ 0x8007
  6450                           ;	Oscillator Selection Bits
  6451                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6452                           ;	Watchdog Timer Enable
  6453                           ;	WDTE = OFF, WDT disabled
  6454                           ;	Power-up Timer Enable
  6455                           ;	PWRTE = OFF, PWRT disabled
  6456                           ;	MCLR Pin Function Select
  6457                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6458                           ;	Flash Program Memory Code Protection
  6459                           ;	CP = OFF, Program memory code protection is disabled
  6460                           ;	Brown-out Reset Enable
  6461                           ;	BOREN = ON, Brown-out Reset enabled
  6462                           ;	Clock Out Enable
  6463                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6464                           ;	Internal/External Switchover Mode
  6465                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  6466                           ;	Fail-Safe Clock Monitor Enable
  6467                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6468  8007                     	org	32775
  6469  8007  3FE4               	dw	16356
  6470                           
  6471                           ;Config register CONFIG2 @ 0x8008
  6472                           ;	Flash Memory Self-Write Protection
  6473                           ;	WRT = OFF, Write protection off
  6474                           ;	Peripheral Pin Select one-way control
  6475                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  6476                           ;	Zero-cross detect disable
  6477                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR and can be enabled with ZCDS
      +                          EN bit.
  6478                           ;	Phase Lock Loop enable
  6479                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  6480                           ;	Stack Overflow/Underflow Reset Enable
  6481                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6482                           ;	Brown-out Reset Voltage Selection
  6483                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6484                           ;	Low-Power Brown Out Reset
  6485                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6486                           ;	Low-Voltage Programming Enable
  6487                           ;	LVP = ON, Low-voltage programming enabled
  6488  8008                     	org	32776
  6489  8008  3EFF               	dw	16127

Data Sizes:
    Strings     57
    Constant    2
    Data        6
    BSS         48
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     57      75
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S543_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_7(CODE[8]), STR_5(CODE[11]), 
		 -> STR_3(CODE[10]), STR_2(CODE[8]), main@printchar(BANK1[10]), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _sumdigits->___awdiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_Initialize->_LCDPutCmd
    _LCDClear->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   16576
                                              9 BANK1     48    48      0
                           _LCDClear
                            _LCDGoto
                          _LCDPutStr
                     _LCD_Initialize
                  _SYSTEM_Initialize
                            ___awdiv
                            ___awmod
                             ___wmul
                            _sprintf
                          _sumdigits
 ---------------------------------------------------------------------------------
 (1) _sumdigits                                            7     5      2    1568
                                              9 COMMON     3     1      2
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6439
                                             13 COMMON     1     1      0
                                             70 BANK0      6     0      6
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     461
                                              7 COMMON     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDClear                                             0     0      0    2666
                            _LCDGoto
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            6     4      2    1311
                                              7 COMMON     6     4      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              4     3      1    1355
                                              7 COMMON     4     3      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       4     3      1     394
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDClear
     _LCDGoto
       _LCDPutCmd
         _LCDWriteNibble
     _LCDPutStr
       _LCDPutChar
         _LCDWriteNibble
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
       _LCDWriteNibble
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   ___awdiv
   ___awmod
   ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   _sumdigits
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     39      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      C9      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      C9      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jun 02 15:35:02 2021

                 _LCD_Initialize 0EE4                               l26 0047                      ?_LCDPutChar 0070  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0072                              l132 000B  
                            l109 0FCE                              l151 0EE3                              l135 0E04  
                            l129 0E1A                              l154 0E85                              l410 00E9  
                            l163 0F50                              l148 0F06                              l244 0EAF  
                            l157 0EA4                              l246 0EC3                              l176 0E34  
                            l344 0453                              l169 0F77                              l345 0464  
                            l357 0352                              l358 0363                              l707 0F2A  
                            l397 019E                              l806 0FA0                              l734 0104  
                            l742 04AE                              l815 0E68                              l751 0555  
                            l743 04B7                              l809 0004                              l737 0126  
                            l739 013F                              l747 04CF                              l748 04E5  
                            l772 0279                              l765 05C9                              l783 0E4E  
                            l786 0E4E                              l779 0FFF                              l798 0096  
                            u920 004D                              u921 004C                              u930 0052  
                            u931 0051                              u940 0061                              u941 0060  
                            u950 007E                              u951 007D                              u960 0FA0  
                            u961 0F9F                              u970 0E62                              u955 007A  
                            u971 0E61                              u980 036F                              u981 036E  
                            _abs 0E35                              _pad 00EA                     ___awmod@sign 0076  
                            wreg 0009                  __end_of_LCDGoto 0F78                             l2001 0709  
                           l2011 072C                             l2003 0710                             ?_abs 0073  
                           l2021 074D                             l2013 072C                             l2005 071D  
                           l2031 07C7                             l2023 075D                             l2015 0737  
                           l2007 0720                             l2033 07CD                             l2025 0761  
                           l2017 0739                             l2009 0725                             l2035 07D4  
                           l2027 076E                             l2019 073E                             l1501 03DF  
                           l2037 07D4                             l2029 07AE                             l1511 0421  
                           l1503 03E3                             l2039 07D4                             l1513 0422  
                           l1505 03E7                             l1521 027B                             l1601 04CA  
                           l1507 03EF                             l1515 0430                             l1531 02DC  
                           l1523 0285                             l1451 0052                             l1611 04EC  
                           l1603 04D7                             l1517 0435                             l1509 0411  
                           l1541 0311                             l1533 02DF                             l1525 02A6  
                           l1453 0057                             l1621 0563                             l1613 04F1  
                           l1605 04DD                             l1701 0256                             l2077 05EE  
                           l1711 0F58                             l1543 0321                             l1535 02E7  
                           l1527 02B0                             l1519 027A                             l1455 0061  
                           l1447 0048                             l1463 0F7A                             l1471 0E50  
                           l1551 00F0                             l1631 0597                             l1623 0570  
                           l1615 0520                             l1607 04E1                             l1703 026F  
                           l1721 0F73                             l1713 0F5F                             l1481 0364  
                           l1537 02EB                             l1545 032F                             l1529 02CF  
                           l1457 007E                             l1449 004D                             l1465 0F7D  
                           l1473 0E55                             l1561 0113                             l1553 00F8  
                           l1641 05AE                             l1633 059B                             l1625 057D  
                           l1617 0524                             l1609 04E9                             l1801 018A  
                           l1651 0E90                             l1715 0F64                             l1723 0F2B  
                           l1731 0FA1                             l1491 03B9                             l1483 0365  
                           l1547 0334                             l1539 02EF                             l1571 0E35  
                           l1459 008E                             l1467 0F8B                             l1475 0E59  
                           l1563 0118                             l1555 00FD                             l1635 059F  
                           l1643 05B7                             l1627 058B                             l1619 0528  
                           l1803 0190                             l1811 0097                             l1581 0EDB  
                           l1653 0E9B                             l1717 0F6A                             l1709 0F52  
                           l1661 0E74                             l1725 0F2D                             l1741 0FB1  
                           l1733 0FA5                             l1493 03BD                             l1485 036F  
                           l1573 0E42                             l1469 0F90                             l1477 0E62  
                           l1565 012B                             l1557 0102                             l1549 00EC  
                           l1637 05A5                             l1629 0590                             l1901 0F22  
                           l1805 0195                             l1821 00A7                             l1813 0098  
                           l1583 0EE0                             l1575 0EC5                             l1655 0E9F  
                           l1647 0E87                             l1719 0F6F                             l1663 0E7F  
                           l1727 0F3C                             l1751 0FB8                             l1743 0FB3  
                           l1735 0FA8                             l1911 0EA5                             l1495 03C7  
                           l1487 0390                             l1567 0133                             l1559 0107  
                           l1639 05AA                             l1591 0477                             l1671 01C0  
                           l1807 019A                             l1831 00BE                             l1823 00AC  
                           l1815 009C                             l1585 0EE1                             l1577 0ECF  
                           l1649 0E8B                             l1657 0E6A                             l1729 0F40  
                           l1905 0E1B                             l1761 0008                             l1753 0FBA  
                           l1745 0FB5                             l1737 0FAB                             l1921 0EBF  
                           l1913 0EA7                             l1497 03D4                             l1489 039A  
                           l1593 048A                             l1681 0207                             l1673 01C4  
                           l1665 01A1                             l1833 00C2                             l1825 00B2  
                           l1841 00DB                             l1817 00A1                             l1587 0EE2  
                           l1579 0ED4                             l1659 0E6E                             l1907 0E20  
                           l1763 0009                             l1755 0FBC                             l1747 0FB6  
                           l1739 0FAD                             l1915 0EAB                             l1499 03D7  
                           l1595 0490                             l1691 0245                             l1675 01D5  
                           l1667 01B2                             l1851 0FD5                             l1771 0145  
                           l1843 00E0                             l1835 00CC                             l1827 00B5  
                           l1819 00A3                             l1931 05DB                             l1909 0E27  
                           l1757 0FBD                             l1749 0FB7                             l1765 0E01  
                           l1917 0EB4                             l1597 04B3                             l1589 0467  
                           l1685 0221                             l1677 01E6                             l1669 01BA  
                           l1853 0FD9                             l1781 0159                             l1773 014A  
                           l1845 00E5                             l1837 00D0                             l1829 00BA  
                           l1861 000C                             l1941 060E                             l1933 05E0  
                           l1925 05CA                             l1759 0005                             l1919 0EB9  
                           l1599 04C4                             l1687 0232                             l1695 024B  
                           l1679 01EE                             l1855 0FED                             l1791 016D  
                           l1783 015B                             l1775 014C                             l1767 0140  
                           l1839 00D5                             l1871 0042                             l1863 0010  
                           l1951 0632                             l1943 0615                             l1935 05F6  
                           l1927 05D1                             l1881 0EEA                             l1697 0253  
                           l1689 023A                             l1857 0FF7                             l1849 0FD1  
                           l1793 0171                             l1785 0161                             l1777 0150  
                           l1769 0141                             l1865 0020                             l1961 066E  
                           l1953 0644                             l1945 061B                             l1937 05F8  
                           l1929 05D6                             l1891 0F02                             l1883 0EF2  
                           l1875 0E11                             l1795 0180                             l1787 0164  
                           l1779 0155                             l1867 0026                             l1971 068E  
                           l1963 0674                             l1955 0648                             l1947 0622  
                           l1939 0609                             l1885 0EF6                             l1877 0EE4  
                           l1893 0F09                             l1797 0184                             l1789 0169  
                           l1869 0035                             l1981 06C0                             l1973 0695  
                           l1957 064D                             l1949 0628                             l1965 0678  
                           ?_pad 0024                             l1887 0EFA                             l1879 0EE8  
                           l1895 0F11                             l1799 0185                             l1991 06D4  
                           l1983 06C3                             l1975 06A6                             l1967 0686  
                           l1959 0667                             l1889 0EFE                             l1897 0F13  
                           l1993 06E1                             l1985 06C3                             l1977 06AC  
                           l1969 0689                             l1899 0F15                             l1995 06E5  
                           l1987 06C8                             l1979 06B3                             l1997 06F2  
                           l1989 06CF                             l1999 0703                             STR_1 1038  
                           STR_2 1028                             STR_3 101E                             STR_4 1038  
                           STR_5 1013                             STR_6 1038                             STR_7 1030  
                           STR_8 1038                             STR_9 1002                             u1000 039A  
                           u1001 0399                             u1020 03C4                             u1030 03D4  
                           u1110 02B0                             u1031 03D3                             u1111 02AF  
                           u1040 03E7                             u1200 00FD                             u1041 03E6  
                           u1201 00FC                             u1050 0411                             u1130 02DC  
                           u1210 0126                             u1051 0410                             u1131 02DB  
                           u1211 0125                             u1060 0430                             u1140 02EF  
                           u1220 012B                             u1300 04C4                             u1061 042F  
                           u1141 02EE                             u1221 012A                             u1301 04C3  
                           u1070 0435                             u1150 0311                             u1230 0E42  
                           u1310 04DD                             u1071 0434                             u1055 040D  
                           u1151 0310                             u1231 0E41                             u1215 0122  
                           u1311 04DC                             u1160 032F                             u1400 05A5  
                           u1320 04E1                             u1161 032E                             u1401 05A4  
                           u1321 04E0                             u1305 04C0                             u1170 0334  
                           u1090 0285                             u1330 0563                             u1250 0482  
                           u1171 0333                             u1155 030D                             u1091 0284  
                           u1235 0E3E                             u1331 0562                             u1251 0480  
                           u1500 0F50                             u1340 0570                             u1260 0483  
                           u1245 0EC8                             u1501 0F4F                             u1341 056F  
                           _LATA 010C                             u1190 00F0                             u1350 057D  
                           u1270 0490                             u1430 01B2                             u1510 0145  
                           _LATB 010D                             u1415 0E93                             u1191 00EF  
                           u1351 057C                             u1335 055F                             u1271 048F  
                           u1431 01B1                             u1511 0144                             _LATC 010E  
                           u1360 058B                             u1440 01D5                             u1600 0195  
                           u1520 0150                             u1425 0E77                             u1361 058A  
                           u1441 01D4                             u1601 0194                             u1521 014F  
                           u1370 0590                             u1290 04B3                             u1450 01E6  
                           u1530 0161                             u1610 009C                             u1371 058F  
                           u1355 0579                             u1291 04B2                             u1451 01E5  
                           u1531 0160                             u1611 009B                             u1380 0597  
                           u1460 0232                             u1700 0FF7                             u1620 00A7  
                           u1381 0596                             u1365 0587                             u1461 0231  
                           u1701 0FF6                             u1621 00A6                             u1470 0F58  
                           u1390 059B                             u1550 0171                             u1630 00B2  
                           u1710 0042                             u1471 0F57                             u1391 059A  
                           u1551 0170                             u1631 00B1                             u1711 0041  
                           u1480 0F5E                             u1720 0EAB                             u1800 06F2  
                           u1481 0F5D                             u1721 0EAA                             u1545 0165  
                           u1801 06F1                             u1490 0F64                             u1570 0180  
                           u1650 00C2                             u1810 0734                             u1491 0F63  
                           u1571 017F                             u1651 00C1                             u1715 003E  
                           u1660 00CC                             u1820 076E                             u1565 0172  
                           u1661 00CB                             u1645 00B6                             u1821 076D  
                           u1805 06EE                             u1750 0EBF                             u1590 0190  
                           u1751 0EBE                             u1735 0EB0                             u1591 018F  
                           u1575 017C                             u1680 00DB                             u1760 0644  
                           u1745 0EB5                             u1585 0186                             u1681 00DA  
                           u1665 00C8                             u1825 076A                             u1761 0643  
                           u1690 00E0                             u1770 0667                             u1691 00DF  
                           u1675 00D1                             u1771 0666                             u1780 066E  
                           u1837 06B9                             u1781 066D                             u1790 0686  
                           u1847 0716                             u1791 0685                             u1775 0663  
                           u1857 0EED                             u1867 0E6B                             u1795 0682  
                           u1877 0F74                             u1887 0E88                             u1897 0E9C  
                           _WPUA 020C                             _WPUB 020D                             _WPUC 020E  
                           _WPUE 0210                     main@SumPrime 00D3                             abs@a 0073  
                           _dbuf 0120                             _main 05CA                             _dtoa 0465  
                           _prec 006C                             _nout 00E1                             pad@i 0027  
                           pad@p 0025                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             pad@w 0029                             btemp 007E  
             __size_of_LCDPutCmd 001F                             start 0002               __size_of_LCDPutStr 0026  
         __end_of_LCD_Initialize 0F07                 __end_of_LCDClear 0E35                            ??_abs 0075  
                          ??_pad 007C                      LCDPutCmd@ch 0076   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 000C                  __end_of___aodiv 0465                            ?_main 0070  
                          ?_dtoa 0030                  __end_of___aomod 0364                  __end_of___awdiv 019F  
                          STR_10 1002                  __end_of___awmod 00EA                  ___awdiv@divisor 0070  
                ___awdiv@counter 0075                     vfpfcnvrt@fmt 004E                            _PORTB 000D  
                  main@SumDigits 00D5                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E                            _TRISE 0090                            u99lld 038E  
                          _flags 006E                   _WDT_Initialize 0E01                            _fputc 0048  
                          _fputs 0F78                            pad@fp 002B                            _width 00E3  
                          _putch 0004                            main@i 00D1                            dtoa@d 0030  
                          dtoa@i 004C                            dtoa@n 0044                            dtoa@p 003E  
                          dtoa@s 0042                            dtoa@w 0040              __size_of_LCDPutChar 001D  
                          status 0003                            wtemp0 007E                  __end_of_sprintf 0F2B  
                ?_LCD_Initialize 0070                  __initialization 07D7                     __end_of_main 07D7  
                   __end_of_dtoa 05CA                           ??_main 00A9                           ??_dtoa 0038  
                      ??_LCDGoto 0078                __end_of_LCDPutCmd 0EA5                     LCDPutChar@ch 0076  
              __end_of_LCDPutStr 0F51           __end_of_WDT_Initialize 0E05                           ?_fputc 0070  
                         ?_fputs 0078                 ___awdiv@dividend 0072                           _ANSELA 018C  
                         ?_putch 0070                           _ANSELB 018D                           _ANSELC 018E  
                         _BORCON 0116                           _ODCONA 028C                           _ODCONB 028D  
                         _ODCONC 028E                           _INLVLA 038C                           _INLVLB 038D  
                         _INLVLC 038E                           _INLVLE 0390                           u101lld 03B9  
                         u110lld 02A4                           _OSCCON 0099                           u112lld 02CF  
                         u108lld 0453                           u118lld 0352                           u128lld 04AE  
                         _WDTCON 0097                     LCDPutStr@str 0077                   _LCDWriteNibble 0EC4  
                   vfprintf@cfmt 0064                        ??___aodiv 0070                        ??___aomod 0070  
                         ___wmul 0EA5                        ??___awdiv 0074                        ??___awmod 0074  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                  ___awmod@counter 0075  
                         pad@buf 0024                           dtoa@fp 003D                           _strlen 0E4F  
                         fputc@c 0070                           fputs@c 0020                           fputs@i 0021  
                         fputs@s 0023                    main@printchar 00B7                  ?_WDT_Initialize 0070  
                         putch@c 0070                 __end_of_vfprintf 1000                        ??_sprintf 007D  
                      ?_LCDClear 0070                _SYSTEM_Initialize 0E11           __end_of_LCDWriteNibble 0EE4  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070                        LCDGoto@ln 0077  
             _last3digitsCarnet1 00E9               _last3digitsCarnet2 00E7               _last3digitsCarnet3 00E5  
                 __pcstackCOMMON 0070                     __pidataBANK1 0E0B              ??_SYSTEM_Initialize 0070  
                  __end_of_fputc 0097                     ??_LCDPutChar 0074                    __end_of_fputs 0FA1  
                  __end_of_putch 0005                   _OPTION_REGbits 0095                   sumdigits@digit 0020  
                        ??_fputc 0073        __end_of_SYSTEM_Initialize 0E1B                          ??_fputs 0079  
                        ??_putch 0070                       __pbssBANK0 006C                       __pbssBANK1 00D9  
                     __pbssBANK2 0120                       ??_LCDClear 007D                  ?_LCDWriteNibble 0070  
             __end_of_LCDPutChar 0E86                       __pmaintext 05CA                          ?___wmul 0070  
                        ?_strlen 0070                          _LCDGoto 0F51               __size_of_vfpfcnvrt 00DB  
                        _OSCTUNE 0098                          _SLRCONA 030C                          _SLRCONB 030D  
                        _SLRCONC 030E               __size_of_sumdigits 003C                 ??_LCD_Initialize 0077  
                        ___aodiv 0364                          ___aomod 027A                          ___awdiv 0140  
                        ___awmod 0097                  __size_of___wmul 001F                        ?_vfprintf 005E  
                        __ptext1 000C                          __ptext2 0097                          __ptext3 0140  
                        __ptext4 0F07                          __ptext5 0FCF                          __ptext6 019F  
                        __ptext7 0465                          __ptext8 00EA                          __ptext9 0E4F  
                __size_of_strlen 001A            _OSCILLATOR_Initialize 0005                     __size_of_abs 001A  
                   __size_of_pad 0056                 ___awmod@dividend 0072         ??_PIN_MANAGER_Initialize 0070  
                      _LCDPutCmd 0E86                          main@bin 00C1       __size_of_SYSTEM_Initialize 000A  
                        _sprintf 0F07                          clrloop0 0E06                        _LCDPutStr 0F2B  
           end_of_initialization 07FD                          fputc@fp 0072                          fputs@fp 0078  
              __end_of_vfpfcnvrt 027A                       ??_vfprintf 0061                __end_ofmain@label 1002  
                        strlen@a 0073                          strlen@s 0074                __end_of_sumdigits 0048  
               ??_WDT_Initialize 0070                        _PORTBbits 000D                       main@Binary 00CB  
                     ?_LCDPutCmd 0070                       ?_LCDPutStr 0077                       main@carnet 00CF  
                     LCDGoto@pos 007A                __size_of_LCDClear 001A                       main@number 00D7  
                    vfpfcnvrt@ap 004F                      vfpfcnvrt@fp 005D                       LCDPutStr@i 007C  
                    vfpfcnvrt@ll 0055                   __end_of___wmul 0EC4           ?_OSCILLATOR_Initialize 0070  
                 __end_of_strlen 0E69              start_initialization 07D7  __size_of_PIN_MANAGER_Initialize 002E  
               ??_LCDWriteNibble 0071                      __end_of_abs 0E4F                      __end_of_pad 0140  
                    vfprintf@fmt 005E                         ??___wmul 0074                      __pdataBANK1 00E5  
                sumdigits@number 0079                         ??_strlen 0072                         ?_LCDGoto 0077  
                      ___latbits 0003                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
               ___aodiv@dividend 0028                      ??_LCDPutCmd 0074                      ??_LCDPutStr 0079  
         _PIN_MANAGER_Initialize 0FA1                         ?___aodiv 0020                         ?___aomod 0020  
                       ?___awdiv 0070                 ___aodiv@quotient 0073                         ?___awmod 0070  
               LCDWriteNibble@ch 0073                 LCDWriteNibble@rs 0070                __size_of_vfprintf 0031  
                       ?_sprintf 0066                   __size_of_fputc 004F                   __size_of_fputs 0029  
                 __size_of_putch 0001                         _LCDClear 0E1B                   ___wmul@product 0074  
                      clear_ram0 0E05                      _LCDGoto$227 0078                        main@F5610 00D9  
                      _vfpfcnvrt 019F                ___wmul@multiplier 0070                        main@label 1000  
                      _sumdigits 000C                 __size_of_LCDGoto 0027                        main@prime 00C9  
                     vfprintf@ap 0060                       vfprintf@fp 0063          ??_OSCILLATOR_Initialize 0070  
        __size_of_LCD_Initialize 0023                 __size_of___aodiv 0101                 __size_of___aomod 00EA  
               __size_of___awdiv 005F                 __size_of___awmod 0053                       ?_vfpfcnvrt 004E  
                ___aodiv@divisor 0020                  ___aodiv@counter 0071                       sprintf@fmt 0066  
             sumdigits@SumDigits 0022                       ?_sumdigits 0079                         _dtoa$616 003B  
                       __ptext10 0F78                         __ptext11 0048                         __ptext20 0005  
                       __ptext12 0004                         __ptext21 0EE4                         __ptext13 0E35  
                       __ptext22 0E1B                         __ptext14 027A                         __ptext23 0F2B  
                       __ptext15 0364                         __ptext24 0E69                         __ptext16 0EA5  
                       __ptext25 0F51                         __ptext17 0E11                         __ptext26 0E86  
                       __ptext18 0E01                         __ptext27 0EC4                         __ptext19 0FA1  
               __size_of_sprintf 0024                    __size_of_main 020D                    __size_of_dtoa 0165  
                       _vfprintf 0FCF                       _LCDPutChar 0E69                 ___aomod@dividend 0028  
        __size_of_WDT_Initialize 0004                        sprintf@ap 00A2          ?_PIN_MANAGER_Initialize 0070  
                ___aomod@divisor 0020                      ??_vfpfcnvrt 0050                  ___aomod@counter 0071  
                  __pstringtext1 1000                    __pstringtext2 1013                    __pstringtext3 101E  
                  __pstringtext4 1028                    __pstringtext5 1030                    __pstringtext6 1038  
                  __pstringtext7 0000                         sprintf@f 00A4                         sprintf@s 00A3  
                    ??_sumdigits 007B                     ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 0FCF  
        __size_of_LCDWriteNibble 0020                     ___aomod@sign 0072  
