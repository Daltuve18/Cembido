

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jun 02 11:52:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16LF1718
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16LF1718 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0118                     	;# 
   143  0119                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011C                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018E                     	;# 
   151  0191                     	;# 
   152  0191                     	;# 
   153  0192                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0194                     	;# 
   157  0195                     	;# 
   158  0196                     	;# 
   159  0199                     	;# 
   160  0199                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019A                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019D                     	;# 
   174  019D                     	;# 
   175  019D                     	;# 
   176  019E                     	;# 
   177  019E                     	;# 
   178  019E                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  020C                     	;# 
   185  020D                     	;# 
   186  020E                     	;# 
   187  0210                     	;# 
   188  0211                     	;# 
   189  0211                     	;# 
   190  0212                     	;# 
   191  0212                     	;# 
   192  0213                     	;# 
   193  0213                     	;# 
   194  0214                     	;# 
   195  0214                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0216                     	;# 
   201  0216                     	;# 
   202  0217                     	;# 
   203  0217                     	;# 
   204  028C                     	;# 
   205  028D                     	;# 
   206  028E                     	;# 
   207  0291                     	;# 
   208  0291                     	;# 
   209  0292                     	;# 
   210  0293                     	;# 
   211  0293                     	;# 
   212  0298                     	;# 
   213  0298                     	;# 
   214  0299                     	;# 
   215  029A                     	;# 
   216  029A                     	;# 
   217  029E                     	;# 
   218  030C                     	;# 
   219  030D                     	;# 
   220  030E                     	;# 
   221  038C                     	;# 
   222  038D                     	;# 
   223  038E                     	;# 
   224  0390                     	;# 
   225  0391                     	;# 
   226  0392                     	;# 
   227  0393                     	;# 
   228  0394                     	;# 
   229  0395                     	;# 
   230  0396                     	;# 
   231  0397                     	;# 
   232  0398                     	;# 
   233  0399                     	;# 
   234  039D                     	;# 
   235  039E                     	;# 
   236  039F                     	;# 
   237  0415                     	;# 
   238  0416                     	;# 
   239  0417                     	;# 
   240  041C                     	;# 
   241  041D                     	;# 
   242  041E                     	;# 
   243  0498                     	;# 
   244  0498                     	;# 
   245  0499                     	;# 
   246  049A                     	;# 
   247  049B                     	;# 
   248  049B                     	;# 
   249  049C                     	;# 
   250  049D                     	;# 
   251  049E                     	;# 
   252  049F                     	;# 
   253  0511                     	;# 
   254  0515                     	;# 
   255  0617                     	;# 
   256  0618                     	;# 
   257  0619                     	;# 
   258  0619                     	;# 
   259  061A                     	;# 
   260  061B                     	;# 
   261  061C                     	;# 
   262  061C                     	;# 
   263  0691                     	;# 
   264  0692                     	;# 
   265  0693                     	;# 
   266  0694                     	;# 
   267  0695                     	;# 
   268  0696                     	;# 
   269  0697                     	;# 
   270  0698                     	;# 
   271  0699                     	;# 
   272  069A                     	;# 
   273  069B                     	;# 
   274  069C                     	;# 
   275  069D                     	;# 
   276  069E                     	;# 
   277  069F                     	;# 
   278  0E0F                     	;# 
   279  0E10                     	;# 
   280  0E11                     	;# 
   281  0E12                     	;# 
   282  0E13                     	;# 
   283  0E14                     	;# 
   284  0E15                     	;# 
   285  0E17                     	;# 
   286  0E20                     	;# 
   287  0E21                     	;# 
   288  0E22                     	;# 
   289  0E24                     	;# 
   290  0E25                     	;# 
   291  0E28                     	;# 
   292  0E29                     	;# 
   293  0E2A                     	;# 
   294  0E2B                     	;# 
   295  0E90                     	;# 
   296  0E91                     	;# 
   297  0E92                     	;# 
   298  0E93                     	;# 
   299  0E94                     	;# 
   300  0E95                     	;# 
   301  0E96                     	;# 
   302  0E97                     	;# 
   303  0E98                     	;# 
   304  0E99                     	;# 
   305  0E9A                     	;# 
   306  0E9B                     	;# 
   307  0E9C                     	;# 
   308  0E9D                     	;# 
   309  0E9E                     	;# 
   310  0E9F                     	;# 
   311  0EA0                     	;# 
   312  0EA1                     	;# 
   313  0EA2                     	;# 
   314  0EA3                     	;# 
   315  0EA4                     	;# 
   316  0EA5                     	;# 
   317  0EA6                     	;# 
   318  0EA7                     	;# 
   319  0F0F                     	;# 
   320  0F10                     	;# 
   321  0F11                     	;# 
   322  0F12                     	;# 
   323  0F13                     	;# 
   324  0F14                     	;# 
   325  0F15                     	;# 
   326  0F16                     	;# 
   327  0F17                     	;# 
   328  0F18                     	;# 
   329  0F19                     	;# 
   330  0F1A                     	;# 
   331  0F1B                     	;# 
   332  0F1C                     	;# 
   333  0F1D                     	;# 
   334  0F1E                     	;# 
   335  0F1F                     	;# 
   336  0F20                     	;# 
   337  0F21                     	;# 
   338  0F22                     	;# 
   339  0F23                     	;# 
   340  0F24                     	;# 
   341  0F25                     	;# 
   342  0F26                     	;# 
   343  0F27                     	;# 
   344  0F28                     	;# 
   345  0F29                     	;# 
   346  0F2A                     	;# 
   347  0F2B                     	;# 
   348  0F2C                     	;# 
   349  0F2D                     	;# 
   350  0F2E                     	;# 
   351  0F2F                     	;# 
   352  0F30                     	;# 
   353  0F31                     	;# 
   354  0F32                     	;# 
   355  0F33                     	;# 
   356  0F34                     	;# 
   357  0F35                     	;# 
   358  0F36                     	;# 
   359  0F37                     	;# 
   360  0FE4                     	;# 
   361  0FE5                     	;# 
   362  0FE6                     	;# 
   363  0FE7                     	;# 
   364  0FE8                     	;# 
   365  0FE9                     	;# 
   366  0FEA                     	;# 
   367  0FEB                     	;# 
   368  0FED                     	;# 
   369  0FEE                     	;# 
   370  0FEF                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  000D                     	;# 
   385  000E                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  008C                     	;# 
   400  008D                     	;# 
   401  008E                     	;# 
   402  0090                     	;# 
   403  0091                     	;# 
   404  0092                     	;# 
   405  0093                     	;# 
   406  0095                     	;# 
   407  0096                     	;# 
   408  0097                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009A                     	;# 
   412  009B                     	;# 
   413  009B                     	;# 
   414  009C                     	;# 
   415  009D                     	;# 
   416  009E                     	;# 
   417  009F                     	;# 
   418  010C                     	;# 
   419  010D                     	;# 
   420  010E                     	;# 
   421  0111                     	;# 
   422  0112                     	;# 
   423  0113                     	;# 
   424  0114                     	;# 
   425  0115                     	;# 
   426  0116                     	;# 
   427  0117                     	;# 
   428  0118                     	;# 
   429  0119                     	;# 
   430  011A                     	;# 
   431  011B                     	;# 
   432  011B                     	;# 
   433  011C                     	;# 
   434  018C                     	;# 
   435  018D                     	;# 
   436  018E                     	;# 
   437  0191                     	;# 
   438  0191                     	;# 
   439  0192                     	;# 
   440  0193                     	;# 
   441  0193                     	;# 
   442  0194                     	;# 
   443  0195                     	;# 
   444  0196                     	;# 
   445  0199                     	;# 
   446  0199                     	;# 
   447  0199                     	;# 
   448  019A                     	;# 
   449  019A                     	;# 
   450  019A                     	;# 
   451  019B                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019C                     	;# 
   457  019C                     	;# 
   458  019C                     	;# 
   459  019D                     	;# 
   460  019D                     	;# 
   461  019D                     	;# 
   462  019E                     	;# 
   463  019E                     	;# 
   464  019E                     	;# 
   465  019F                     	;# 
   466  019F                     	;# 
   467  019F                     	;# 
   468  019F                     	;# 
   469  019F                     	;# 
   470  020C                     	;# 
   471  020D                     	;# 
   472  020E                     	;# 
   473  0210                     	;# 
   474  0211                     	;# 
   475  0211                     	;# 
   476  0212                     	;# 
   477  0212                     	;# 
   478  0213                     	;# 
   479  0213                     	;# 
   480  0214                     	;# 
   481  0214                     	;# 
   482  0215                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0216                     	;# 
   487  0216                     	;# 
   488  0217                     	;# 
   489  0217                     	;# 
   490  028C                     	;# 
   491  028D                     	;# 
   492  028E                     	;# 
   493  0291                     	;# 
   494  0291                     	;# 
   495  0292                     	;# 
   496  0293                     	;# 
   497  0293                     	;# 
   498  0298                     	;# 
   499  0298                     	;# 
   500  0299                     	;# 
   501  029A                     	;# 
   502  029A                     	;# 
   503  029E                     	;# 
   504  030C                     	;# 
   505  030D                     	;# 
   506  030E                     	;# 
   507  038C                     	;# 
   508  038D                     	;# 
   509  038E                     	;# 
   510  0390                     	;# 
   511  0391                     	;# 
   512  0392                     	;# 
   513  0393                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0397                     	;# 
   518  0398                     	;# 
   519  0399                     	;# 
   520  039D                     	;# 
   521  039E                     	;# 
   522  039F                     	;# 
   523  0415                     	;# 
   524  0416                     	;# 
   525  0417                     	;# 
   526  041C                     	;# 
   527  041D                     	;# 
   528  041E                     	;# 
   529  0498                     	;# 
   530  0498                     	;# 
   531  0499                     	;# 
   532  049A                     	;# 
   533  049B                     	;# 
   534  049B                     	;# 
   535  049C                     	;# 
   536  049D                     	;# 
   537  049E                     	;# 
   538  049F                     	;# 
   539  0511                     	;# 
   540  0515                     	;# 
   541  0617                     	;# 
   542  0618                     	;# 
   543  0619                     	;# 
   544  0619                     	;# 
   545  061A                     	;# 
   546  061B                     	;# 
   547  061C                     	;# 
   548  061C                     	;# 
   549  0691                     	;# 
   550  0692                     	;# 
   551  0693                     	;# 
   552  0694                     	;# 
   553  0695                     	;# 
   554  0696                     	;# 
   555  0697                     	;# 
   556  0698                     	;# 
   557  0699                     	;# 
   558  069A                     	;# 
   559  069B                     	;# 
   560  069C                     	;# 
   561  069D                     	;# 
   562  069E                     	;# 
   563  069F                     	;# 
   564  0E0F                     	;# 
   565  0E10                     	;# 
   566  0E11                     	;# 
   567  0E12                     	;# 
   568  0E13                     	;# 
   569  0E14                     	;# 
   570  0E15                     	;# 
   571  0E17                     	;# 
   572  0E20                     	;# 
   573  0E21                     	;# 
   574  0E22                     	;# 
   575  0E24                     	;# 
   576  0E25                     	;# 
   577  0E28                     	;# 
   578  0E29                     	;# 
   579  0E2A                     	;# 
   580  0E2B                     	;# 
   581  0E90                     	;# 
   582  0E91                     	;# 
   583  0E92                     	;# 
   584  0E93                     	;# 
   585  0E94                     	;# 
   586  0E95                     	;# 
   587  0E96                     	;# 
   588  0E97                     	;# 
   589  0E98                     	;# 
   590  0E99                     	;# 
   591  0E9A                     	;# 
   592  0E9B                     	;# 
   593  0E9C                     	;# 
   594  0E9D                     	;# 
   595  0E9E                     	;# 
   596  0E9F                     	;# 
   597  0EA0                     	;# 
   598  0EA1                     	;# 
   599  0EA2                     	;# 
   600  0EA3                     	;# 
   601  0EA4                     	;# 
   602  0EA5                     	;# 
   603  0EA6                     	;# 
   604  0EA7                     	;# 
   605  0F0F                     	;# 
   606  0F10                     	;# 
   607  0F11                     	;# 
   608  0F12                     	;# 
   609  0F13                     	;# 
   610  0F14                     	;# 
   611  0F15                     	;# 
   612  0F16                     	;# 
   613  0F17                     	;# 
   614  0F18                     	;# 
   615  0F19                     	;# 
   616  0F1A                     	;# 
   617  0F1B                     	;# 
   618  0F1C                     	;# 
   619  0F1D                     	;# 
   620  0F1E                     	;# 
   621  0F1F                     	;# 
   622  0F20                     	;# 
   623  0F21                     	;# 
   624  0F22                     	;# 
   625  0F23                     	;# 
   626  0F24                     	;# 
   627  0F25                     	;# 
   628  0F26                     	;# 
   629  0F27                     	;# 
   630  0F28                     	;# 
   631  0F29                     	;# 
   632  0F2A                     	;# 
   633  0F2B                     	;# 
   634  0F2C                     	;# 
   635  0F2D                     	;# 
   636  0F2E                     	;# 
   637  0F2F                     	;# 
   638  0F30                     	;# 
   639  0F31                     	;# 
   640  0F32                     	;# 
   641  0F33                     	;# 
   642  0F34                     	;# 
   643  0F35                     	;# 
   644  0F36                     	;# 
   645  0F37                     	;# 
   646  0FE4                     	;# 
   647  0FE5                     	;# 
   648  0FE6                     	;# 
   649  0FE7                     	;# 
   650  0FE8                     	;# 
   651  0FE9                     	;# 
   652  0FEA                     	;# 
   653  0FEB                     	;# 
   654  0FED                     	;# 
   655  0FEE                     	;# 
   656  0FEF                     	;# 
   657  0000                     	;# 
   658  0001                     	;# 
   659  0002                     	;# 
   660  0003                     	;# 
   661  0004                     	;# 
   662  0005                     	;# 
   663  0006                     	;# 
   664  0007                     	;# 
   665  0008                     	;# 
   666  0009                     	;# 
   667  000A                     	;# 
   668  000B                     	;# 
   669  000C                     	;# 
   670  000D                     	;# 
   671  000E                     	;# 
   672  0010                     	;# 
   673  0011                     	;# 
   674  0012                     	;# 
   675  0013                     	;# 
   676  0015                     	;# 
   677  0016                     	;# 
   678  0016                     	;# 
   679  0017                     	;# 
   680  0018                     	;# 
   681  0019                     	;# 
   682  001A                     	;# 
   683  001B                     	;# 
   684  001C                     	;# 
   685  008C                     	;# 
   686  008D                     	;# 
   687  008E                     	;# 
   688  0090                     	;# 
   689  0091                     	;# 
   690  0092                     	;# 
   691  0093                     	;# 
   692  0095                     	;# 
   693  0096                     	;# 
   694  0097                     	;# 
   695  0098                     	;# 
   696  0099                     	;# 
   697  009A                     	;# 
   698  009B                     	;# 
   699  009B                     	;# 
   700  009C                     	;# 
   701  009D                     	;# 
   702  009E                     	;# 
   703  009F                     	;# 
   704  010C                     	;# 
   705  010D                     	;# 
   706  010E                     	;# 
   707  0111                     	;# 
   708  0112                     	;# 
   709  0113                     	;# 
   710  0114                     	;# 
   711  0115                     	;# 
   712  0116                     	;# 
   713  0117                     	;# 
   714  0118                     	;# 
   715  0119                     	;# 
   716  011A                     	;# 
   717  011B                     	;# 
   718  011B                     	;# 
   719  011C                     	;# 
   720  018C                     	;# 
   721  018D                     	;# 
   722  018E                     	;# 
   723  0191                     	;# 
   724  0191                     	;# 
   725  0192                     	;# 
   726  0193                     	;# 
   727  0193                     	;# 
   728  0194                     	;# 
   729  0195                     	;# 
   730  0196                     	;# 
   731  0199                     	;# 
   732  0199                     	;# 
   733  0199                     	;# 
   734  019A                     	;# 
   735  019A                     	;# 
   736  019A                     	;# 
   737  019B                     	;# 
   738  019B                     	;# 
   739  019B                     	;# 
   740  019B                     	;# 
   741  019B                     	;# 
   742  019C                     	;# 
   743  019C                     	;# 
   744  019C                     	;# 
   745  019D                     	;# 
   746  019D                     	;# 
   747  019D                     	;# 
   748  019E                     	;# 
   749  019E                     	;# 
   750  019E                     	;# 
   751  019F                     	;# 
   752  019F                     	;# 
   753  019F                     	;# 
   754  019F                     	;# 
   755  019F                     	;# 
   756  020C                     	;# 
   757  020D                     	;# 
   758  020E                     	;# 
   759  0210                     	;# 
   760  0211                     	;# 
   761  0211                     	;# 
   762  0212                     	;# 
   763  0212                     	;# 
   764  0213                     	;# 
   765  0213                     	;# 
   766  0214                     	;# 
   767  0214                     	;# 
   768  0215                     	;# 
   769  0215                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0216                     	;# 
   773  0216                     	;# 
   774  0217                     	;# 
   775  0217                     	;# 
   776  028C                     	;# 
   777  028D                     	;# 
   778  028E                     	;# 
   779  0291                     	;# 
   780  0291                     	;# 
   781  0292                     	;# 
   782  0293                     	;# 
   783  0293                     	;# 
   784  0298                     	;# 
   785  0298                     	;# 
   786  0299                     	;# 
   787  029A                     	;# 
   788  029A                     	;# 
   789  029E                     	;# 
   790  030C                     	;# 
   791  030D                     	;# 
   792  030E                     	;# 
   793  038C                     	;# 
   794  038D                     	;# 
   795  038E                     	;# 
   796  0390                     	;# 
   797  0391                     	;# 
   798  0392                     	;# 
   799  0393                     	;# 
   800  0394                     	;# 
   801  0395                     	;# 
   802  0396                     	;# 
   803  0397                     	;# 
   804  0398                     	;# 
   805  0399                     	;# 
   806  039D                     	;# 
   807  039E                     	;# 
   808  039F                     	;# 
   809  0415                     	;# 
   810  0416                     	;# 
   811  0417                     	;# 
   812  041C                     	;# 
   813  041D                     	;# 
   814  041E                     	;# 
   815  0498                     	;# 
   816  0498                     	;# 
   817  0499                     	;# 
   818  049A                     	;# 
   819  049B                     	;# 
   820  049B                     	;# 
   821  049C                     	;# 
   822  049D                     	;# 
   823  049E                     	;# 
   824  049F                     	;# 
   825  0511                     	;# 
   826  0515                     	;# 
   827  0617                     	;# 
   828  0618                     	;# 
   829  0619                     	;# 
   830  0619                     	;# 
   831  061A                     	;# 
   832  061B                     	;# 
   833  061C                     	;# 
   834  061C                     	;# 
   835  0691                     	;# 
   836  0692                     	;# 
   837  0693                     	;# 
   838  0694                     	;# 
   839  0695                     	;# 
   840  0696                     	;# 
   841  0697                     	;# 
   842  0698                     	;# 
   843  0699                     	;# 
   844  069A                     	;# 
   845  069B                     	;# 
   846  069C                     	;# 
   847  069D                     	;# 
   848  069E                     	;# 
   849  069F                     	;# 
   850  0E0F                     	;# 
   851  0E10                     	;# 
   852  0E11                     	;# 
   853  0E12                     	;# 
   854  0E13                     	;# 
   855  0E14                     	;# 
   856  0E15                     	;# 
   857  0E17                     	;# 
   858  0E20                     	;# 
   859  0E21                     	;# 
   860  0E22                     	;# 
   861  0E24                     	;# 
   862  0E25                     	;# 
   863  0E28                     	;# 
   864  0E29                     	;# 
   865  0E2A                     	;# 
   866  0E2B                     	;# 
   867  0E90                     	;# 
   868  0E91                     	;# 
   869  0E92                     	;# 
   870  0E93                     	;# 
   871  0E94                     	;# 
   872  0E95                     	;# 
   873  0E96                     	;# 
   874  0E97                     	;# 
   875  0E98                     	;# 
   876  0E99                     	;# 
   877  0E9A                     	;# 
   878  0E9B                     	;# 
   879  0E9C                     	;# 
   880  0E9D                     	;# 
   881  0E9E                     	;# 
   882  0E9F                     	;# 
   883  0EA0                     	;# 
   884  0EA1                     	;# 
   885  0EA2                     	;# 
   886  0EA3                     	;# 
   887  0EA4                     	;# 
   888  0EA5                     	;# 
   889  0EA6                     	;# 
   890  0EA7                     	;# 
   891  0F0F                     	;# 
   892  0F10                     	;# 
   893  0F11                     	;# 
   894  0F12                     	;# 
   895  0F13                     	;# 
   896  0F14                     	;# 
   897  0F15                     	;# 
   898  0F16                     	;# 
   899  0F17                     	;# 
   900  0F18                     	;# 
   901  0F19                     	;# 
   902  0F1A                     	;# 
   903  0F1B                     	;# 
   904  0F1C                     	;# 
   905  0F1D                     	;# 
   906  0F1E                     	;# 
   907  0F1F                     	;# 
   908  0F20                     	;# 
   909  0F21                     	;# 
   910  0F22                     	;# 
   911  0F23                     	;# 
   912  0F24                     	;# 
   913  0F25                     	;# 
   914  0F26                     	;# 
   915  0F27                     	;# 
   916  0F28                     	;# 
   917  0F29                     	;# 
   918  0F2A                     	;# 
   919  0F2B                     	;# 
   920  0F2C                     	;# 
   921  0F2D                     	;# 
   922  0F2E                     	;# 
   923  0F2F                     	;# 
   924  0F30                     	;# 
   925  0F31                     	;# 
   926  0F32                     	;# 
   927  0F33                     	;# 
   928  0F34                     	;# 
   929  0F35                     	;# 
   930  0F36                     	;# 
   931  0F37                     	;# 
   932  0FE4                     	;# 
   933  0FE5                     	;# 
   934  0FE6                     	;# 
   935  0FE7                     	;# 
   936  0FE8                     	;# 
   937  0FE9                     	;# 
   938  0FEA                     	;# 
   939  0FEB                     	;# 
   940  0FED                     	;# 
   941  0FEE                     	;# 
   942  0FEF                     	;# 
   943  0000                     	;# 
   944  0001                     	;# 
   945  0002                     	;# 
   946  0003                     	;# 
   947  0004                     	;# 
   948  0005                     	;# 
   949  0006                     	;# 
   950  0007                     	;# 
   951  0008                     	;# 
   952  0009                     	;# 
   953  000A                     	;# 
   954  000B                     	;# 
   955  000C                     	;# 
   956  000D                     	;# 
   957  000E                     	;# 
   958  0010                     	;# 
   959  0011                     	;# 
   960  0012                     	;# 
   961  0013                     	;# 
   962  0015                     	;# 
   963  0016                     	;# 
   964  0016                     	;# 
   965  0017                     	;# 
   966  0018                     	;# 
   967  0019                     	;# 
   968  001A                     	;# 
   969  001B                     	;# 
   970  001C                     	;# 
   971  008C                     	;# 
   972  008D                     	;# 
   973  008E                     	;# 
   974  0090                     	;# 
   975  0091                     	;# 
   976  0092                     	;# 
   977  0093                     	;# 
   978  0095                     	;# 
   979  0096                     	;# 
   980  0097                     	;# 
   981  0098                     	;# 
   982  0099                     	;# 
   983  009A                     	;# 
   984  009B                     	;# 
   985  009B                     	;# 
   986  009C                     	;# 
   987  009D                     	;# 
   988  009E                     	;# 
   989  009F                     	;# 
   990  010C                     	;# 
   991  010D                     	;# 
   992  010E                     	;# 
   993  0111                     	;# 
   994  0112                     	;# 
   995  0113                     	;# 
   996  0114                     	;# 
   997  0115                     	;# 
   998  0116                     	;# 
   999  0117                     	;# 
  1000  0118                     	;# 
  1001  0119                     	;# 
  1002  011A                     	;# 
  1003  011B                     	;# 
  1004  011B                     	;# 
  1005  011C                     	;# 
  1006  018C                     	;# 
  1007  018D                     	;# 
  1008  018E                     	;# 
  1009  0191                     	;# 
  1010  0191                     	;# 
  1011  0192                     	;# 
  1012  0193                     	;# 
  1013  0193                     	;# 
  1014  0194                     	;# 
  1015  0195                     	;# 
  1016  0196                     	;# 
  1017  0199                     	;# 
  1018  0199                     	;# 
  1019  0199                     	;# 
  1020  019A                     	;# 
  1021  019A                     	;# 
  1022  019A                     	;# 
  1023  019B                     	;# 
  1024  019B                     	;# 
  1025  019B                     	;# 
  1026  019B                     	;# 
  1027  019B                     	;# 
  1028  019C                     	;# 
  1029  019C                     	;# 
  1030  019C                     	;# 
  1031  019D                     	;# 
  1032  019D                     	;# 
  1033  019D                     	;# 
  1034  019E                     	;# 
  1035  019E                     	;# 
  1036  019E                     	;# 
  1037  019F                     	;# 
  1038  019F                     	;# 
  1039  019F                     	;# 
  1040  019F                     	;# 
  1041  019F                     	;# 
  1042  020C                     	;# 
  1043  020D                     	;# 
  1044  020E                     	;# 
  1045  0210                     	;# 
  1046  0211                     	;# 
  1047  0211                     	;# 
  1048  0212                     	;# 
  1049  0212                     	;# 
  1050  0213                     	;# 
  1051  0213                     	;# 
  1052  0214                     	;# 
  1053  0214                     	;# 
  1054  0215                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0215                     	;# 
  1058  0216                     	;# 
  1059  0216                     	;# 
  1060  0217                     	;# 
  1061  0217                     	;# 
  1062  028C                     	;# 
  1063  028D                     	;# 
  1064  028E                     	;# 
  1065  0291                     	;# 
  1066  0291                     	;# 
  1067  0292                     	;# 
  1068  0293                     	;# 
  1069  0293                     	;# 
  1070  0298                     	;# 
  1071  0298                     	;# 
  1072  0299                     	;# 
  1073  029A                     	;# 
  1074  029A                     	;# 
  1075  029E                     	;# 
  1076  030C                     	;# 
  1077  030D                     	;# 
  1078  030E                     	;# 
  1079  038C                     	;# 
  1080  038D                     	;# 
  1081  038E                     	;# 
  1082  0390                     	;# 
  1083  0391                     	;# 
  1084  0392                     	;# 
  1085  0393                     	;# 
  1086  0394                     	;# 
  1087  0395                     	;# 
  1088  0396                     	;# 
  1089  0397                     	;# 
  1090  0398                     	;# 
  1091  0399                     	;# 
  1092  039D                     	;# 
  1093  039E                     	;# 
  1094  039F                     	;# 
  1095  0415                     	;# 
  1096  0416                     	;# 
  1097  0417                     	;# 
  1098  041C                     	;# 
  1099  041D                     	;# 
  1100  041E                     	;# 
  1101  0498                     	;# 
  1102  0498                     	;# 
  1103  0499                     	;# 
  1104  049A                     	;# 
  1105  049B                     	;# 
  1106  049B                     	;# 
  1107  049C                     	;# 
  1108  049D                     	;# 
  1109  049E                     	;# 
  1110  049F                     	;# 
  1111  0511                     	;# 
  1112  0515                     	;# 
  1113  0617                     	;# 
  1114  0618                     	;# 
  1115  0619                     	;# 
  1116  0619                     	;# 
  1117  061A                     	;# 
  1118  061B                     	;# 
  1119  061C                     	;# 
  1120  061C                     	;# 
  1121  0691                     	;# 
  1122  0692                     	;# 
  1123  0693                     	;# 
  1124  0694                     	;# 
  1125  0695                     	;# 
  1126  0696                     	;# 
  1127  0697                     	;# 
  1128  0698                     	;# 
  1129  0699                     	;# 
  1130  069A                     	;# 
  1131  069B                     	;# 
  1132  069C                     	;# 
  1133  069D                     	;# 
  1134  069E                     	;# 
  1135  069F                     	;# 
  1136  0E0F                     	;# 
  1137  0E10                     	;# 
  1138  0E11                     	;# 
  1139  0E12                     	;# 
  1140  0E13                     	;# 
  1141  0E14                     	;# 
  1142  0E15                     	;# 
  1143  0E17                     	;# 
  1144  0E20                     	;# 
  1145  0E21                     	;# 
  1146  0E22                     	;# 
  1147  0E24                     	;# 
  1148  0E25                     	;# 
  1149  0E28                     	;# 
  1150  0E29                     	;# 
  1151  0E2A                     	;# 
  1152  0E2B                     	;# 
  1153  0E90                     	;# 
  1154  0E91                     	;# 
  1155  0E92                     	;# 
  1156  0E93                     	;# 
  1157  0E94                     	;# 
  1158  0E95                     	;# 
  1159  0E96                     	;# 
  1160  0E97                     	;# 
  1161  0E98                     	;# 
  1162  0E99                     	;# 
  1163  0E9A                     	;# 
  1164  0E9B                     	;# 
  1165  0E9C                     	;# 
  1166  0E9D                     	;# 
  1167  0E9E                     	;# 
  1168  0E9F                     	;# 
  1169  0EA0                     	;# 
  1170  0EA1                     	;# 
  1171  0EA2                     	;# 
  1172  0EA3                     	;# 
  1173  0EA4                     	;# 
  1174  0EA5                     	;# 
  1175  0EA6                     	;# 
  1176  0EA7                     	;# 
  1177  0F0F                     	;# 
  1178  0F10                     	;# 
  1179  0F11                     	;# 
  1180  0F12                     	;# 
  1181  0F13                     	;# 
  1182  0F14                     	;# 
  1183  0F15                     	;# 
  1184  0F16                     	;# 
  1185  0F17                     	;# 
  1186  0F18                     	;# 
  1187  0F19                     	;# 
  1188  0F1A                     	;# 
  1189  0F1B                     	;# 
  1190  0F1C                     	;# 
  1191  0F1D                     	;# 
  1192  0F1E                     	;# 
  1193  0F1F                     	;# 
  1194  0F20                     	;# 
  1195  0F21                     	;# 
  1196  0F22                     	;# 
  1197  0F23                     	;# 
  1198  0F24                     	;# 
  1199  0F25                     	;# 
  1200  0F26                     	;# 
  1201  0F27                     	;# 
  1202  0F28                     	;# 
  1203  0F29                     	;# 
  1204  0F2A                     	;# 
  1205  0F2B                     	;# 
  1206  0F2C                     	;# 
  1207  0F2D                     	;# 
  1208  0F2E                     	;# 
  1209  0F2F                     	;# 
  1210  0F30                     	;# 
  1211  0F31                     	;# 
  1212  0F32                     	;# 
  1213  0F33                     	;# 
  1214  0F34                     	;# 
  1215  0F35                     	;# 
  1216  0F36                     	;# 
  1217  0F37                     	;# 
  1218  0FE4                     	;# 
  1219  0FE5                     	;# 
  1220  0FE6                     	;# 
  1221  0FE7                     	;# 
  1222  0FE8                     	;# 
  1223  0FE9                     	;# 
  1224  0FEA                     	;# 
  1225  0FEB                     	;# 
  1226  0FED                     	;# 
  1227  0FEE                     	;# 
  1228  0FEF                     	;# 
  1229                           
  1230                           	psect	idataBANK1
  1231  0E2D                     __pidataBANK1:
  1232                           
  1233                           ;initializer for _last3digitsCarnet3
  1234  0E2D  34A4               	retlw	164
  1235  0E2E  3401               	retlw	1
  1236                           
  1237                           ;initializer for _last3digitsCarnet2
  1238  0E2F  34ED               	retlw	237
  1239  0E30  3401               	retlw	1
  1240                           
  1241                           ;initializer for _last3digitsCarnet1
  1242  0E31  34FF               	retlw	255
  1243  0E32  3400               	retlw	0
  1244                           
  1245                           	psect	stringtext1
  1246  1000                     __pstringtext1:
  1247  1000                     main@label:
  1248  1000  3401               	retlw	1
  1249  1001  3400               	retlw	0
  1250  1002                     __end_ofmain@label:
  1251  000D                     _PORTBbits	set	13
  1252  000D                     _PORTB	set	13
  1253  0097                     _WDTCON	set	151
  1254  0098                     _OSCTUNE	set	152
  1255  0099                     _OSCCON	set	153
  1256  0095                     _OPTION_REGbits	set	149
  1257  008E                     _TRISC	set	142
  1258  008D                     _TRISB	set	141
  1259  008C                     _TRISA	set	140
  1260  0090                     _TRISE	set	144
  1261  0116                     _BORCON	set	278
  1262  010E                     _LATC	set	270
  1263  010D                     _LATB	set	269
  1264  010C                     _LATA	set	268
  1265  018C                     _ANSELA	set	396
  1266  018D                     _ANSELB	set	397
  1267  018E                     _ANSELC	set	398
  1268  020E                     _WPUC	set	526
  1269  020C                     _WPUA	set	524
  1270  020D                     _WPUB	set	525
  1271  0210                     _WPUE	set	528
  1272  028E                     _ODCONC	set	654
  1273  028D                     _ODCONB	set	653
  1274  028C                     _ODCONA	set	652
  1275  030E                     _SLRCONC	set	782
  1276  030D                     _SLRCONB	set	781
  1277  030C                     _SLRCONA	set	780
  1278  0390                     _INLVLE	set	912
  1279  038E                     _INLVLC	set	910
  1280  038D                     _INLVLB	set	909
  1281  038C                     _INLVLA	set	908
  1282  1002                     STR_7:
  1283  1002  3420               	retlw	32	;' '
  1284  1003  3420               	retlw	32	;' '
  1285  1004  3420               	retlw	32	;' '
  1286  1005  3420               	retlw	32	;' '
  1287  1006  3420               	retlw	32	;' '
  1288  1007  3420               	retlw	32	;' '
  1289  1008  3420               	retlw	32	;' '
  1290  1009  3420               	retlw	32	;' '
  1291  100A  3420               	retlw	32	;' '
  1292  100B  3420               	retlw	32	;' '
  1293  100C  3420               	retlw	32	;' '
  1294  100D  3420               	retlw	32	;' '
  1295  100E  3420               	retlw	32	;' '
  1296  100F  3420               	retlw	32	;' '
  1297  1010  3420               	retlw	32	;' '
  1298  1011  3420               	retlw	32	;' '
  1299  1012  3400               	retlw	0
  1300                           
  1301                           	psect	stringtext2
  1302  1013                     __pstringtext2:
  1303  1013                     STR_3:
  1304  1013  3473               	retlw	115	;'s'
  1305  1014  3475               	retlw	117	;'u'
  1306  1015  346D               	retlw	109	;'m'
  1307  1016  3444               	retlw	68	;'D'
  1308  1017  3469               	retlw	105	;'i'
  1309  1018  3467               	retlw	103	;'g'
  1310  1019  3469               	retlw	105	;'i'
  1311  101A  3474               	retlw	116	;'t'
  1312  101B  3473               	retlw	115	;'s'
  1313  101C  343D               	retlw	61	;'='
  1314  101D  3400               	retlw	0
  1315                           
  1316                           	psect	stringtext3
  1317  101E                     __pstringtext3:
  1318  101E                     STR_1:
  1319  101E  3473               	retlw	115	;'s'
  1320  101F  3475               	retlw	117	;'u'
  1321  1020  346D               	retlw	109	;'m'
  1322  1021  3450               	retlw	80	;'P'
  1323  1022  3472               	retlw	114	;'r'
  1324  1023  3469               	retlw	105	;'i'
  1325  1024  346D               	retlw	109	;'m'
  1326  1025  3465               	retlw	101	;'e'
  1327  1026  343D               	retlw	61	;'='
  1328  1027  3400               	retlw	0
  1329                           
  1330                           	psect	stringtext4
  1331  1028                     __pstringtext4:
  1332  1028                     STR_5:
  1333  1028  3442               	retlw	66	;'B'
  1334  1029  3469               	retlw	105	;'i'
  1335  102A  346E               	retlw	110	;'n'
  1336  102B  3461               	retlw	97	;'a'
  1337  102C  3472               	retlw	114	;'r'
  1338  102D  3479               	retlw	121	;'y'
  1339  102E  343D               	retlw	61	;'='
  1340  102F  3400               	retlw	0
  1341                           
  1342                           	psect	stringtext5
  1343  1030                     __pstringtext5:
  1344  1030                     STR_2:
  1345  1030  3425               	retlw	37	;'%'
  1346  1031  3464               	retlw	100	;'d'
  1347  1032  3400               	retlw	0
  1348                           
  1349                           	psect	stringtext6
  1350  0000                     __pstringtext6:
  1351  1002                     
  1352                           	psect	cinit
  1353  07D7                     start_initialization:	
  1354                           ; #config settings
  1355                           
  1356  07D7                     __initialization:
  1357                           
  1358                           ; Initialize objects allocated to BANK1
  1359  07D7  302D               	movlw	low __pidataBANK1
  1360  07D8  0084               	movwf	4
  1361  07D9  308E               	movlw	(high __pidataBANK1)| (0+128)
  1362  07DA  0085               	movwf	5
  1363  07DB  0021               	movlb	1	; select bank1
  1364  07DC  0012               	moviw fsr0++
  1365  07DD  00E7               	movwf	__pdataBANK1& (0+127)
  1366  07DE  0012               	moviw fsr0++
  1367  07DF  00E8               	movwf	(__pdataBANK1+1)& (0+127)
  1368  07E0  0012               	moviw fsr0++
  1369  07E1  00E9               	movwf	(__pdataBANK1+2)& (0+127)
  1370  07E2  0012               	moviw fsr0++
  1371  07E3  00EA               	movwf	(__pdataBANK1+3)& (0+127)
  1372  07E4  0012               	moviw fsr0++
  1373  07E5  00EB               	movwf	(__pdataBANK1+4)& (0+127)
  1374  07E6  0012               	moviw fsr0++
  1375  07E7  00EC               	movwf	(__pdataBANK1+5)& (0+127)
  1376                           
  1377                           ; Clear objects allocated to BANK0
  1378  07E8  0020               	movlb	0	; select bank0
  1379  07E9  01EC               	clrf	__pbssBANK0& (0+127)
  1380  07EA  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  1381  07EB  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  1382  07EC  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  1383                           
  1384                           ; Clear objects allocated to BANK1
  1385  07ED  30DB               	movlw	low __pbssBANK1
  1386  07EE  0084               	movwf	4
  1387  07EF  3000               	movlw	high __pbssBANK1
  1388  07F0  0085               	movwf	5
  1389  07F1  300C               	movlw	12
  1390  07F2  318E  2627  3187   	fcall	clear_ram0
  1391                           
  1392                           ; Clear objects allocated to BANK2
  1393  07F5  3020               	movlw	low __pbssBANK2
  1394  07F6  0084               	movwf	4
  1395  07F7  3001               	movlw	high __pbssBANK2
  1396  07F8  0085               	movwf	5
  1397  07F9  3020               	movlw	32
  1398  07FA  318E  2627  3187   	fcall	clear_ram0
  1399  07FD                     end_of_initialization:	
  1400                           ;End of C runtime variable initialization code
  1401                           
  1402  07FD                     __end_of__initialization:
  1403  07FD  0020               	movlb	0
  1404  07FE  3185  2DEF         	ljmp	_main	;jump to C main() function
  1405                           
  1406                           	psect	bssBANK0
  1407  006C                     __pbssBANK0:
  1408  006C                     _prec:
  1409  006C                     	ds	2
  1410  006E                     _flags:
  1411  006E                     	ds	2
  1412                           
  1413                           	psect	bssBANK1
  1414  00DB                     __pbssBANK1:
  1415  00DB                     main@F5610:
  1416  00DB                     	ds	8
  1417  00E3                     _nout:
  1418  00E3                     	ds	2
  1419  00E5                     _width:
  1420  00E5                     	ds	2
  1421                           
  1422                           	psect	dataBANK1
  1423  00E7                     __pdataBANK1:
  1424  00E7                     _last3digitsCarnet3:
  1425  00E7                     	ds	2
  1426  00E9                     _last3digitsCarnet2:
  1427  00E9                     	ds	2
  1428  00EB                     _last3digitsCarnet1:
  1429  00EB                     	ds	2
  1430                           
  1431                           	psect	bssBANK2
  1432  0120                     __pbssBANK2:
  1433  0120                     _dbuf:
  1434  0120                     	ds	32
  1435                           
  1436                           	psect	clrtext
  1437  0E27                     clear_ram0:	
  1438                           ;	Called with FSR0 containing the base address, and
  1439                           ;	WREG with the size to clear
  1440                           
  1441  0E27  0064               	clrwdt	;clear the watchdog before getting into this loop
  1442  0E28                     clrloop0:
  1443  0E28  0180               	clrf	0	;clear RAM location pointed to by FSR
  1444  0E29  3101               	addfsr 0,1
  1445  0E2A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1446  0E2B  2E28               	goto	clrloop0	;have we reached the end yet?
  1447  0E2C  3400               	retlw	0	;all done for this memory range, return
  1448                           
  1449                           	psect	cstackBANK1
  1450  00A0                     __pcstackBANK1:
  1451  00A0                     	ds	2
  1452  00A2                     sprintf@ap:
  1453                           
  1454                           ; 1 bytes @ 0x2
  1455  00A2                     	ds	1
  1456  00A3                     sprintf@s:
  1457                           
  1458                           ; 1 bytes @ 0x3
  1459  00A3                     	ds	1
  1460  00A4                     sprintf@f:
  1461                           
  1462                           ; 5 bytes @ 0x4
  1463  00A4                     	ds	5
  1464  00A9                     ??_main:
  1465                           
  1466                           ; 1 bytes @ 0x9
  1467  00A9                     	ds	6
  1468  00AF                     main@printchar:
  1469                           
  1470                           ; 20 bytes @ 0xF
  1471  00AF                     	ds	20
  1472  00C3                     main@Binary:
  1473                           
  1474                           ; 4 bytes @ 0x23
  1475  00C3                     	ds	4
  1476  00C7                     main@bin:
  1477                           
  1478                           ; 8 bytes @ 0x27
  1479  00C7                     	ds	8
  1480  00CF                     main@prime:
  1481                           
  1482                           ; 2 bytes @ 0x2F
  1483  00CF                     	ds	2
  1484  00D1                     main@carnet:
  1485                           
  1486                           ; 2 bytes @ 0x31
  1487  00D1                     	ds	2
  1488  00D3                     main@SumPrime:
  1489                           
  1490                           ; 2 bytes @ 0x33
  1491  00D3                     	ds	2
  1492  00D5                     main@i:
  1493                           
  1494                           ; 2 bytes @ 0x35
  1495  00D5                     	ds	2
  1496  00D7                     main@number:
  1497                           
  1498                           ; 2 bytes @ 0x37
  1499  00D7                     	ds	2
  1500  00D9                     main@SumDigits:
  1501                           
  1502                           ; 2 bytes @ 0x39
  1503  00D9                     	ds	2
  1504                           
  1505                           	psect	cstackCOMMON
  1506  0070                     __pcstackCOMMON:
  1507  0070                     ?_SYSTEM_Initialize:
  1508  0070                     ??_SYSTEM_Initialize:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ?_LCD_Initialize:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ?_LCDClear:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_OSCILLATOR_Initialize:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ??_OSCILLATOR_Initialize:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ?_WDT_Initialize:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ??_WDT_Initialize:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ?_LCDPutCmd:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_putch:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ??_putch:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ?_main:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_PIN_MANAGER_Initialize:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ??_PIN_MANAGER_Initialize:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_LCDWriteNibble:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_LCDPutChar:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ??___aodiv:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ??___aomod:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_fputc:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_strlen:	
  1563                           ; 2 bytes @ 0x0
  1564                           
  1565  0070                     ?___wmul:	
  1566                           ; 2 bytes @ 0x0
  1567                           
  1568  0070                     ?___awdiv:	
  1569                           ; 2 bytes @ 0x0
  1570                           
  1571  0070                     ?___awmod:	
  1572                           ; 2 bytes @ 0x0
  1573                           
  1574  0070                     LCDWriteNibble@rs:	
  1575                           ; 2 bytes @ 0x0
  1576                           
  1577  0070                     putch@c:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ___wmul@multiplier:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ___awdiv@divisor:	
  1584                           ; 2 bytes @ 0x0
  1585                           
  1586  0070                     ___awmod@divisor:	
  1587                           ; 2 bytes @ 0x0
  1588                           
  1589  0070                     fputc@c:	
  1590                           ; 2 bytes @ 0x0
  1591                           
  1592                           
  1593                           ; 2 bytes @ 0x0
  1594  0070                     	ds	1
  1595  0071                     ??_LCDWriteNibble:
  1596  0071                     ___aodiv@counter:	
  1597                           ; 1 bytes @ 0x1
  1598                           
  1599  0071                     ___aomod@counter:	
  1600                           ; 1 bytes @ 0x1
  1601                           
  1602                           
  1603                           ; 1 bytes @ 0x1
  1604  0071                     	ds	1
  1605  0072                     ??_strlen:
  1606  0072                     ___aodiv@sign:	
  1607                           ; 1 bytes @ 0x2
  1608                           
  1609  0072                     ___aomod@sign:	
  1610                           ; 1 bytes @ 0x2
  1611                           
  1612  0072                     fputc@fp:	
  1613                           ; 1 bytes @ 0x2
  1614                           
  1615  0072                     ___wmul@multiplicand:	
  1616                           ; 1 bytes @ 0x2
  1617                           
  1618  0072                     ___awdiv@dividend:	
  1619                           ; 2 bytes @ 0x2
  1620                           
  1621  0072                     ___awmod@dividend:	
  1622                           ; 2 bytes @ 0x2
  1623                           
  1624                           
  1625                           ; 2 bytes @ 0x2
  1626  0072                     	ds	1
  1627  0073                     ??_fputc:
  1628  0073                     ?_abs:	
  1629                           ; 1 bytes @ 0x3
  1630                           
  1631  0073                     LCDWriteNibble@ch:	
  1632                           ; 2 bytes @ 0x3
  1633                           
  1634  0073                     strlen@a:	
  1635                           ; 1 bytes @ 0x3
  1636                           
  1637  0073                     abs@a:	
  1638                           ; 1 bytes @ 0x3
  1639                           
  1640  0073                     ___aodiv@quotient:	
  1641                           ; 2 bytes @ 0x3
  1642                           
  1643                           
  1644                           ; 8 bytes @ 0x3
  1645  0073                     	ds	1
  1646  0074                     ??_LCDPutCmd:
  1647  0074                     ??_LCDPutChar:	
  1648                           ; 1 bytes @ 0x4
  1649                           
  1650  0074                     ??___wmul:	
  1651                           ; 1 bytes @ 0x4
  1652                           
  1653  0074                     ??___awdiv:	
  1654                           ; 1 bytes @ 0x4
  1655                           
  1656  0074                     ??___awmod:	
  1657                           ; 1 bytes @ 0x4
  1658                           
  1659  0074                     strlen@s:	
  1660                           ; 1 bytes @ 0x4
  1661                           
  1662  0074                     ___wmul@product:	
  1663                           ; 1 bytes @ 0x4
  1664                           
  1665                           
  1666                           ; 2 bytes @ 0x4
  1667  0074                     	ds	1
  1668  0075                     ??_abs:
  1669  0075                     ___awdiv@counter:	
  1670                           ; 1 bytes @ 0x5
  1671                           
  1672  0075                     ___awmod@counter:	
  1673                           ; 1 bytes @ 0x5
  1674                           
  1675                           
  1676                           ; 1 bytes @ 0x5
  1677  0075                     	ds	1
  1678  0076                     LCDPutChar@ch:
  1679  0076                     LCDPutCmd@ch:	
  1680                           ; 1 bytes @ 0x6
  1681                           
  1682  0076                     ___awdiv@sign:	
  1683                           ; 1 bytes @ 0x6
  1684                           
  1685  0076                     ___awmod@sign:	
  1686                           ; 1 bytes @ 0x6
  1687                           
  1688                           
  1689                           ; 1 bytes @ 0x6
  1690  0076                     	ds	1
  1691  0077                     ??_LCD_Initialize:
  1692  0077                     ?_LCDGoto:	
  1693                           ; 1 bytes @ 0x7
  1694                           
  1695  0077                     ?_LCDPutStr:	
  1696                           ; 1 bytes @ 0x7
  1697                           
  1698  0077                     LCDGoto@ln:	
  1699                           ; 1 bytes @ 0x7
  1700                           
  1701  0077                     LCDPutStr@str:	
  1702                           ; 1 bytes @ 0x7
  1703                           
  1704  0077                     ___awdiv@quotient:	
  1705                           ; 2 bytes @ 0x7
  1706                           
  1707                           
  1708                           ; 2 bytes @ 0x7
  1709  0077                     	ds	1
  1710  0078                     ??_LCDGoto:
  1711  0078                     ?_fputs:	
  1712                           ; 1 bytes @ 0x8
  1713                           
  1714  0078                     fputs@fp:	
  1715                           ; 2 bytes @ 0x8
  1716                           
  1717  0078                     _LCDGoto$222:	
  1718                           ; 1 bytes @ 0x8
  1719                           
  1720                           
  1721                           ; 2 bytes @ 0x8
  1722  0078                     	ds	1
  1723  0079                     ??_LCDPutStr:
  1724  0079                     ??_fputs:	
  1725                           ; 1 bytes @ 0x9
  1726                           
  1727  0079                     ?_sumdigits:	
  1728                           ; 1 bytes @ 0x9
  1729                           
  1730  0079                     sumdigits@number:	
  1731                           ; 2 bytes @ 0x9
  1732                           
  1733                           
  1734                           ; 2 bytes @ 0x9
  1735  0079                     	ds	1
  1736  007A                     LCDGoto@pos:
  1737                           
  1738                           ; 1 bytes @ 0xA
  1739  007A                     	ds	1
  1740  007B                     ??_sumdigits:
  1741                           
  1742                           ; 1 bytes @ 0xB
  1743  007B                     	ds	1
  1744  007C                     ??_pad:
  1745  007C                     LCDPutStr@i:	
  1746                           ; 1 bytes @ 0xC
  1747                           
  1748                           
  1749                           ; 1 bytes @ 0xC
  1750  007C                     	ds	1
  1751  007D                     ??_sprintf:
  1752  007D                     ??_LCDClear:	
  1753                           ; 1 bytes @ 0xD
  1754                           
  1755                           
  1756                           ; 1 bytes @ 0xD
  1757  007D                     	ds	1
  1758                           
  1759                           	psect	cstackBANK0
  1760  0020                     __pcstackBANK0:
  1761  0020                     ?___aodiv:
  1762  0020                     ?___aomod:	
  1763                           ; 8 bytes @ 0x0
  1764                           
  1765  0020                     fputs@c:	
  1766                           ; 8 bytes @ 0x0
  1767                           
  1768  0020                     sumdigits@digit:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771  0020                     ___aodiv@divisor:	
  1772                           ; 2 bytes @ 0x0
  1773                           
  1774  0020                     ___aomod@divisor:	
  1775                           ; 8 bytes @ 0x0
  1776                           
  1777                           
  1778                           ; 8 bytes @ 0x0
  1779  0020                     	ds	1
  1780  0021                     fputs@i:
  1781                           
  1782                           ; 2 bytes @ 0x1
  1783  0021                     	ds	1
  1784  0022                     sumdigits@SumDigits:
  1785                           
  1786                           ; 2 bytes @ 0x2
  1787  0022                     	ds	1
  1788  0023                     fputs@s:
  1789                           
  1790                           ; 1 bytes @ 0x3
  1791  0023                     	ds	1
  1792  0024                     ?_pad:
  1793  0024                     pad@buf:	
  1794                           ; 2 bytes @ 0x4
  1795                           
  1796                           
  1797                           ; 1 bytes @ 0x4
  1798  0024                     	ds	1
  1799  0025                     pad@p:
  1800                           
  1801                           ; 2 bytes @ 0x5
  1802  0025                     	ds	2
  1803  0027                     pad@i:
  1804                           
  1805                           ; 2 bytes @ 0x7
  1806  0027                     	ds	1
  1807  0028                     ___aodiv@dividend:
  1808  0028                     ___aomod@dividend:	
  1809                           ; 8 bytes @ 0x8
  1810                           
  1811                           
  1812                           ; 8 bytes @ 0x8
  1813  0028                     	ds	1
  1814  0029                     pad@w:
  1815                           
  1816                           ; 2 bytes @ 0x9
  1817  0029                     	ds	2
  1818  002B                     pad@fp:
  1819                           
  1820                           ; 1 bytes @ 0xB
  1821  002B                     	ds	5
  1822  0030                     ?_dtoa:
  1823  0030                     dtoa@d:	
  1824                           ; 2 bytes @ 0x10
  1825                           
  1826                           
  1827                           ; 8 bytes @ 0x10
  1828  0030                     	ds	8
  1829  0038                     ??_dtoa:
  1830                           
  1831                           ; 1 bytes @ 0x18
  1832  0038                     	ds	3
  1833  003B                     _dtoa$611:
  1834                           
  1835                           ; 2 bytes @ 0x1B
  1836  003B                     	ds	2
  1837  003D                     dtoa@fp:
  1838                           
  1839                           ; 1 bytes @ 0x1D
  1840  003D                     	ds	1
  1841  003E                     dtoa@p:
  1842                           
  1843                           ; 2 bytes @ 0x1E
  1844  003E                     	ds	2
  1845  0040                     dtoa@w:
  1846                           
  1847                           ; 2 bytes @ 0x20
  1848  0040                     	ds	2
  1849  0042                     dtoa@s:
  1850                           
  1851                           ; 2 bytes @ 0x22
  1852  0042                     	ds	2
  1853  0044                     dtoa@n:
  1854                           
  1855                           ; 8 bytes @ 0x24
  1856  0044                     	ds	8
  1857  004C                     dtoa@i:
  1858                           
  1859                           ; 2 bytes @ 0x2C
  1860  004C                     	ds	2
  1861  004E                     ?_vfpfcnvrt:
  1862  004E                     vfpfcnvrt@fmt:	
  1863                           ; 2 bytes @ 0x2E
  1864                           
  1865                           
  1866                           ; 1 bytes @ 0x2E
  1867  004E                     	ds	1
  1868  004F                     vfpfcnvrt@ap:
  1869                           
  1870                           ; 1 bytes @ 0x2F
  1871  004F                     	ds	1
  1872  0050                     ??_vfpfcnvrt:
  1873                           
  1874                           ; 1 bytes @ 0x30
  1875  0050                     	ds	5
  1876  0055                     vfpfcnvrt@ll:
  1877                           
  1878                           ; 8 bytes @ 0x35
  1879  0055                     	ds	8
  1880  005D                     vfpfcnvrt@fp:
  1881                           
  1882                           ; 1 bytes @ 0x3D
  1883  005D                     	ds	1
  1884  005E                     ?_vfprintf:
  1885  005E                     vfprintf@fmt:	
  1886                           ; 2 bytes @ 0x3E
  1887                           
  1888                           
  1889                           ; 2 bytes @ 0x3E
  1890  005E                     	ds	2
  1891  0060                     vfprintf@ap:
  1892                           
  1893                           ; 1 bytes @ 0x40
  1894  0060                     	ds	1
  1895  0061                     ??_vfprintf:
  1896                           
  1897                           ; 1 bytes @ 0x41
  1898  0061                     	ds	2
  1899  0063                     vfprintf@fp:
  1900                           
  1901                           ; 1 bytes @ 0x43
  1902  0063                     	ds	1
  1903  0064                     vfprintf@cfmt:
  1904                           
  1905                           ; 2 bytes @ 0x44
  1906  0064                     	ds	2
  1907  0066                     ?_sprintf:
  1908  0066                     sprintf@fmt:	
  1909                           ; 2 bytes @ 0x46
  1910                           
  1911                           
  1912                           ; 2 bytes @ 0x46
  1913  0066                     	ds	6
  1914                           
  1915                           	psect	maintext
  1916  05EF                     __pmaintext:	
  1917 ;;
  1918 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1919 ;;
  1920 ;; *************** function _main *****************
  1921 ;; Defined at:
  1922 ;;		line 71 in file "main.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  printchar      20   15[BANK1 ] unsigned char [20]
  1927 ;;  bin             8   39[BANK1 ] int [4]
  1928 ;;  Binary          4   35[BANK1 ] long 
  1929 ;;  SumDigits       2   57[BANK1 ] int 
  1930 ;;  number          2   55[BANK1 ] int 
  1931 ;;  i               2   53[BANK1 ] int 
  1932 ;;  SumPrime        2   51[BANK1 ] int 
  1933 ;;  carnet          2   49[BANK1 ] int 
  1934 ;;  prime           2   47[BANK1 ] int 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : B1F/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1945 ;;      Locals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1946 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1947 ;;      Totals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1948 ;;Total ram usage:       50 bytes
  1949 ;; Hardware stack levels required when called:    8
  1950 ;; This function calls:
  1951 ;;		_LCDClear
  1952 ;;		_LCDGoto
  1953 ;;		_LCDPutStr
  1954 ;;		_LCD_Initialize
  1955 ;;		_SYSTEM_Initialize
  1956 ;;		___awdiv
  1957 ;;		___awmod
  1958 ;;		___wmul
  1959 ;;		_sprintf
  1960 ;;		_sumdigits
  1961 ;; This function is called by:
  1962 ;;		Startup code after reset
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           
  1967                           ;psect for function _main
  1968  05EF                     _main:
  1969  05EF                     l1905:	
  1970                           ;incstack = 0
  1971                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1972                           
  1973                           
  1974                           ;main.c: 74:     SYSTEM_Initialize();
  1975  05EF  318E  263A  3185   	fcall	_SYSTEM_Initialize
  1976                           
  1977                           ;main.c: 75:     LCD_Initialize();
  1978  05F2  318F  270D  3185   	fcall	_LCD_Initialize
  1979                           
  1980                           ;main.c: 84:     LCDGoto(0,0);
  1981  05F5  01F7               	clrf	LCDGoto@ln
  1982  05F6  3000               	movlw	0
  1983  05F7  318F  277A  3185   	fcall	_LCDGoto
  1984  05FA                     l1907:
  1985                           
  1986                           ;main.c: 85:     LCDPutStr("sumPrime=");
  1987  05FA  301E               	movlw	low (STR_1| (0+32768))
  1988  05FB  00F7               	movwf	LCDPutStr@str
  1989  05FC  3090               	movlw	high (STR_1| (0+32768))
  1990  05FD  00F8               	movwf	LCDPutStr@str+1
  1991  05FE  318F  2754  3185   	fcall	_LCDPutStr
  1992                           
  1993                           ;main.c: 87:     const int label = 1;;main.c: 88:     int carnet;;main.c: 90:     switch
      +                           (label)
  1994  0601  2E11               	goto	l1915
  1995  0602                     l1909:
  1996                           
  1997                           ;main.c: 93:         {;main.c: 94:             carnet = last3digitsCarnet1;
  1998  0602  30FF               	movlw	255
  1999  0603  00D1               	movwf	main@carnet^(0+128)
  2000  0604  3000               	movlw	0
  2001  0605  00D2               	movwf	(main@carnet^(0+128)+1)
  2002                           
  2003                           ;main.c: 95:             break;
  2004  0606  2E27               	goto	l1917
  2005  0607                     l1911:
  2006                           
  2007                           ;main.c: 98:         {;main.c: 99:             carnet = last3digitsCarnet2;
  2008  0607  30ED               	movlw	237
  2009  0608  00D1               	movwf	main@carnet^(0+128)
  2010  0609  3001               	movlw	1
  2011  060A  00D2               	movwf	(main@carnet^(0+128)+1)
  2012                           
  2013                           ;main.c: 100:             break;
  2014  060B  2E27               	goto	l1917
  2015  060C                     l1913:
  2016                           
  2017                           ;main.c: 103:         {;main.c: 104:             carnet = last3digitsCarnet3;
  2018  060C  30A4               	movlw	164
  2019  060D  00D1               	movwf	main@carnet^(0+128)
  2020  060E  3001               	movlw	1
  2021  060F  00D2               	movwf	(main@carnet^(0+128)+1)
  2022                           
  2023                           ;main.c: 105:         };main.c: 106:     }
  2024  0610  2E27               	goto	l1917
  2025  0611                     l1915:
  2026  0611  3000               	movlw	low (main@label| (0+32768))
  2027  0612  0084               	movwf	4
  2028  0613  3090               	movlw	high (main@label| (0+32768))
  2029  0614  0085               	movwf	5
  2030  0615  3F00               	moviw [0]fsr0
  2031  0616  0021               	movlb	1	; select bank1
  2032  0617  00A9               	movwf	??_main^(0+128)
  2033  0618  3F01               	moviw [1]fsr0
  2034  0619  00AA               	movwf	(??_main^(0+128)+1)
  2035                           
  2036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2037                           ; Switch size 1, requested type "simple"
  2038                           ; Number of cases is 1, Range of values is 0 to 0
  2039                           ; switch strategies available:
  2040                           ; Name         Instructions Cycles
  2041                           ; simple_byte            4     3 (average)
  2042                           ; direct_byte            8     6 (fixed)
  2043                           ; jumptable            260     6 (fixed)
  2044                           ;	Chosen strategy is simple_byte
  2045  061A  082A               	movf	(??_main+1)^(0+128),w
  2046  061B  3A00               	xorlw	0	; case 0
  2047  061C  1903               	skipnz
  2048  061D  2E1F               	goto	l2037
  2049  061E  2E0C               	goto	l1913
  2050  061F                     l2037:
  2051                           
  2052                           ; Switch size 1, requested type "simple"
  2053                           ; Number of cases is 2, Range of values is 1 to 2
  2054                           ; switch strategies available:
  2055                           ; Name         Instructions Cycles
  2056                           ; simple_byte            7     4 (average)
  2057                           ; direct_byte           13     9 (fixed)
  2058                           ; jumptable            263     9 (fixed)
  2059                           ;	Chosen strategy is simple_byte
  2060  061F  0829               	movf	??_main^(0+128),w
  2061  0620  3A01               	xorlw	1	; case 1
  2062  0621  1903               	skipnz
  2063  0622  2E02               	goto	l1909
  2064  0623  3A03               	xorlw	3	; case 2
  2065  0624  1903               	skipnz
  2066  0625  2E07               	goto	l1911
  2067  0626  2E0C               	goto	l1913
  2068  0627                     l1917:
  2069                           
  2070                           ;main.c: 114:     int SumPrime = 0, i,number=2, prime;
  2071  0627  01D3               	clrf	main@SumPrime^(0+128)
  2072  0628  01D4               	clrf	(main@SumPrime+1)^(0+128)
  2073  0629                     l1919:
  2074  0629  3002               	movlw	2
  2075  062A  00D7               	movwf	main@number^(0+128)
  2076  062B  3000               	movlw	0
  2077  062C  00D8               	movwf	(main@number^(0+128)+1)
  2078                           
  2079                           ;main.c: 115:     char printchar[20];;main.c: 116:     while(number<=carnet)
  2080  062D  2E7E               	goto	l1937
  2081  062E                     l1921:
  2082                           
  2083                           ;main.c: 117:     {;main.c: 118:       prime = 1;
  2084  062E  3001               	movlw	1
  2085  062F  0021               	movlb	1	; select bank1
  2086  0630  00CF               	movwf	main@prime^(0+128)
  2087  0631  3000               	movlw	0
  2088  0632  00D0               	movwf	(main@prime^(0+128)+1)
  2089                           
  2090                           ;main.c: 119:       for(i=2;i<=number/2;i++)
  2091  0633  3002               	movlw	2
  2092  0634  00D5               	movwf	main@i^(0+128)
  2093  0635  3000               	movlw	0
  2094  0636  00D6               	movwf	(main@i^(0+128)+1)
  2095  0637  2E53               	goto	l1929
  2096  0638                     l1923:
  2097                           
  2098                           ;main.c: 120:       {;main.c: 121:         if(number%i==0)
  2099  0638  0021               	movlb	1	; select bank1
  2100  0639  0856               	movf	(main@i+1)^(0+128),w
  2101  063A  00F1               	movwf	___awmod@divisor+1
  2102  063B  0855               	movf	main@i^(0+128),w
  2103  063C  00F0               	movwf	___awmod@divisor
  2104  063D  0858               	movf	(main@number+1)^(0+128),w
  2105  063E  00F3               	movwf	___awmod@dividend+1
  2106  063F  0857               	movf	main@number^(0+128),w
  2107  0640  00F2               	movwf	___awmod@dividend
  2108  0641  3180  20BC  3185   	fcall	___awmod
  2109  0644  0870               	movf	?___awmod,w
  2110  0645  0471               	iorwf	?___awmod+1,w
  2111  0646  1D03               	btfss	3,2
  2112  0647  2E49               	goto	u1761
  2113  0648  2E4A               	goto	u1760
  2114  0649                     u1761:
  2115  0649  2E4E               	goto	l1927
  2116  064A                     u1760:
  2117  064A                     l1925:
  2118                           
  2119                           ;main.c: 122:         {;main.c: 123:           prime = 0;
  2120  064A  0021               	movlb	1	; select bank1
  2121  064B  01CF               	clrf	main@prime^(0+128)
  2122  064C  01D0               	clrf	(main@prime+1)^(0+128)
  2123                           
  2124                           ;main.c: 124:           break;
  2125  064D  2E6D               	goto	l1931
  2126  064E                     l1927:
  2127                           
  2128                           ;main.c: 126:       }
  2129  064E  3001               	movlw	1
  2130  064F  0021               	movlb	1	; select bank1
  2131  0650  07D5               	addwf	main@i^(0+128),f
  2132  0651  3000               	movlw	0
  2133  0652  3DD6               	addwfc	(main@i+1)^(0+128),f
  2134  0653                     l1929:
  2135  0653  3002               	movlw	2
  2136  0654  00F0               	movwf	___awdiv@divisor
  2137  0655  3000               	movlw	0
  2138  0656  00F1               	movwf	___awdiv@divisor+1
  2139  0657  0858               	movf	(main@number+1)^(0+128),w
  2140  0658  00F3               	movwf	___awdiv@dividend+1
  2141  0659  0857               	movf	main@number^(0+128),w
  2142  065A  00F2               	movwf	___awdiv@dividend
  2143  065B  3181  2165  3185   	fcall	___awdiv
  2144  065E  0871               	movf	?___awdiv+1,w
  2145  065F  3A80               	xorlw	128
  2146  0660  0021               	movlb	1	; select bank1
  2147  0661  00A9               	movwf	??_main^(0+128)
  2148  0662  0856               	movf	(main@i+1)^(0+128),w
  2149  0663  3A80               	xorlw	128
  2150  0664  0229               	subwf	??_main^(0+128),w
  2151  0665  1D03               	skipz
  2152  0666  2E69               	goto	u1775
  2153  0667  0855               	movf	main@i^(0+128),w
  2154  0668  0270               	subwf	?___awdiv,w
  2155  0669                     u1775:
  2156  0669  1803               	skipnc
  2157  066A  2E6C               	goto	u1771
  2158  066B  2E6D               	goto	u1770
  2159  066C                     u1771:
  2160  066C  2E38               	goto	l1923
  2161  066D                     u1770:
  2162  066D                     l1931:
  2163                           
  2164                           ;main.c: 127:       if(prime==1)
  2165  066D  0021               	movlb	1	; select bank1
  2166  066E  034F               	decf	main@prime^(0+128),w
  2167  066F  0450               	iorwf	(main@prime+1)^(0+128),w
  2168  0670  1D03               	btfss	3,2
  2169  0671  2E73               	goto	u1781
  2170  0672  2E74               	goto	u1780
  2171  0673                     u1781:
  2172  0673  2E7A               	goto	l1935
  2173  0674                     u1780:
  2174  0674                     l1933:
  2175                           
  2176                           ;main.c: 128:       {;main.c: 129:         SumPrime= SumPrime+number;
  2177  0674  0857               	movf	main@number^(0+128),w
  2178  0675  0753               	addwf	main@SumPrime^(0+128),w
  2179  0676  00D3               	movwf	main@SumPrime^(0+128)
  2180  0677  0858               	movf	(main@number+1)^(0+128),w
  2181  0678  3D54               	addwfc	(main@SumPrime+1)^(0+128),w
  2182  0679  00D4               	movwf	(main@SumPrime+1)^(0+128)
  2183  067A                     l1935:
  2184                           
  2185                           ;main.c: 131:       ++number;
  2186  067A  3001               	movlw	1
  2187  067B  07D7               	addwf	main@number^(0+128),f
  2188  067C  3000               	movlw	0
  2189  067D  3DD8               	addwfc	(main@number+1)^(0+128),f
  2190  067E                     l1937:
  2191                           
  2192                           ;main.c: 116:     while(number<=carnet)
  2193  067E  0852               	movf	(main@carnet+1)^(0+128),w
  2194  067F  3A80               	xorlw	128
  2195  0680  00A9               	movwf	??_main^(0+128)
  2196  0681  0858               	movf	(main@number+1)^(0+128),w
  2197  0682  3A80               	xorlw	128
  2198  0683  0229               	subwf	??_main^(0+128),w
  2199  0684  1D03               	skipz
  2200  0685  2E88               	goto	u1795
  2201  0686  0857               	movf	main@number^(0+128),w
  2202  0687  0251               	subwf	main@carnet^(0+128),w
  2203  0688                     u1795:
  2204  0688  1803               	skipnc
  2205  0689  2E8B               	goto	u1791
  2206  068A  2E8C               	goto	u1790
  2207  068B                     u1791:
  2208  068B  2E2E               	goto	l1921
  2209  068C                     u1790:
  2210  068C                     l1939:
  2211                           
  2212                           ;main.c: 133:     sprintf(printchar,"%d",SumPrime);
  2213  068C  3030               	movlw	low (STR_2| (0+32768))
  2214  068D  0020               	movlb	0	; select bank0
  2215  068E  00E6               	movwf	sprintf@fmt
  2216  068F  3090               	movlw	high (STR_2| (0+32768))
  2217  0690  00E7               	movwf	sprintf@fmt+1
  2218  0691  0021               	movlb	1	; select bank1
  2219  0692  0854               	movf	(main@SumPrime+1)^(0+128),w
  2220  0693  0020               	movlb	0	; select bank0
  2221  0694  00E9               	movwf	?_sprintf+3
  2222  0695  0021               	movlb	1	; select bank1
  2223  0696  0853               	movf	main@SumPrime^(0+128),w
  2224  0697  0020               	movlb	0	; select bank0
  2225  0698  00E8               	movwf	?_sprintf+2
  2226  0699  30AF               	movlw	(low (main@printchar| 0))& (0+255)
  2227  069A  318F  2730  3185   	fcall	_sprintf
  2228  069D                     l1941:
  2229                           
  2230                           ;main.c: 134:     LCDGoto(0,1);
  2231  069D  01F7               	clrf	LCDGoto@ln
  2232  069E  0AF7               	incf	LCDGoto@ln,f
  2233  069F  3000               	movlw	0
  2234  06A0  318F  277A  3185   	fcall	_LCDGoto
  2235  06A3                     l1943:
  2236                           
  2237                           ;main.c: 135:     LCDPutStr(printchar);
  2238  06A3  30AF               	movlw	low main@printchar
  2239  06A4  00F7               	movwf	LCDPutStr@str
  2240  06A5  3000               	movlw	high main@printchar
  2241  06A6  00F8               	movwf	LCDPutStr@str+1
  2242  06A7  318F  2754  3185   	fcall	_LCDPutStr
  2243  06AA                     l1945:
  2244                           
  2245                           ;main.c: 136:     _delay((unsigned long)((2000)*(500000/4000.0)));
  2246  06AA  3002               	movlw	2
  2247  06AB  0021               	movlb	1	; select bank1
  2248  06AC  00AA               	movwf	(??_main^(0+128)+1)
  2249  06AD  3045               	movlw	69
  2250  06AE  00A9               	movwf	??_main^(0+128)
  2251  06AF  30A9               	movlw	169
  2252  06B0                     u1837:
  2253  06B0  0B89               	decfsz	9,f
  2254  06B1  2EB0               	goto	u1837
  2255  06B2  0BA9               	decfsz	??_main^(0+128),f
  2256  06B3  2EB0               	goto	u1837
  2257  06B4  0BAA               	decfsz	(??_main^(0+128)+1),f
  2258  06B5  2EB0               	goto	u1837
  2259  06B6  3200               	nop2
  2260  06B7                     l1947:
  2261                           
  2262                           ;main.c: 137:     LCDClear();
  2263  06B7  318E  2644  3185   	fcall	_LCDClear
  2264  06BA                     l1949:
  2265  06BA                     l1951:
  2266                           
  2267                           ;main.c: 151:     number=SumPrime;
  2268  06BA  0021               	movlb	1	; select bank1
  2269  06BB  0854               	movf	(main@SumPrime+1)^(0+128),w
  2270  06BC  00D8               	movwf	(main@number+1)^(0+128)
  2271  06BD  0853               	movf	main@SumPrime^(0+128),w
  2272  06BE  00D7               	movwf	main@number^(0+128)
  2273  06BF                     l1953:
  2274                           
  2275                           ;main.c: 152:     LCDGoto(0,0);
  2276  06BF  01F7               	clrf	LCDGoto@ln
  2277  06C0  3000               	movlw	0
  2278  06C1  318F  277A  3185   	fcall	_LCDGoto
  2279  06C4                     l1955:
  2280                           
  2281                           ;main.c: 153:     LCDPutStr("sumDigits=");
  2282  06C4  3013               	movlw	low (STR_3| (0+32768))
  2283  06C5  00F7               	movwf	LCDPutStr@str
  2284  06C6  3090               	movlw	high (STR_3| (0+32768))
  2285  06C7  00F8               	movwf	LCDPutStr@str+1
  2286  06C8  318F  2754  3185   	fcall	_LCDPutStr
  2287  06CB                     l1957:
  2288                           
  2289                           ;main.c: 156:     {;main.c: 157:       SumDigits = sumdigits(number);
  2290  06CB  0021               	movlb	1	; select bank1
  2291  06CC  0858               	movf	(main@number+1)^(0+128),w
  2292  06CD  00FA               	movwf	sumdigits@number+1
  2293  06CE  0857               	movf	main@number^(0+128),w
  2294  06CF  00F9               	movwf	sumdigits@number
  2295  06D0  3180  2031  3185   	fcall	_sumdigits
  2296  06D3  087A               	movf	?_sumdigits+1,w
  2297  06D4  0021               	movlb	1	; select bank1
  2298  06D5  00DA               	movwf	(main@SumDigits+1)^(0+128)
  2299  06D6  0879               	movf	?_sumdigits,w
  2300  06D7  00D9               	movwf	main@SumDigits^(0+128)
  2301  06D8                     l1959:
  2302                           
  2303                           ;main.c: 158:       number = SumDigits;
  2304  06D8  085A               	movf	(main@SumDigits+1)^(0+128),w
  2305  06D9  00D8               	movwf	(main@number+1)^(0+128)
  2306  06DA  0859               	movf	main@SumDigits^(0+128),w
  2307  06DB  00D7               	movwf	main@number^(0+128)
  2308  06DC                     l1961:
  2309                           
  2310                           ;main.c: 159:     } while (SumDigits>10);
  2311  06DC  085A               	movf	(main@SumDigits+1)^(0+128),w
  2312  06DD  3A80               	xorlw	128
  2313  06DE  00A9               	movwf	??_main^(0+128)
  2314  06DF  3080               	movlw	128
  2315  06E0  0229               	subwf	??_main^(0+128),w
  2316  06E1  1D03               	skipz
  2317  06E2  2EE5               	goto	u1805
  2318  06E3  300B               	movlw	11
  2319  06E4  0259               	subwf	main@SumDigits^(0+128),w
  2320  06E5                     u1805:
  2321  06E5  1803               	skipnc
  2322  06E6  2EE8               	goto	u1801
  2323  06E7  2EE9               	goto	u1800
  2324  06E8                     u1801:
  2325  06E8  2ECB               	goto	l1957
  2326  06E9                     u1800:
  2327  06E9                     l1963:
  2328                           
  2329                           ;main.c: 160:     sprintf(printchar,"%d",SumDigits);
  2330  06E9  3030               	movlw	low (STR_2| (0+32768))
  2331  06EA  0020               	movlb	0	; select bank0
  2332  06EB  00E6               	movwf	sprintf@fmt
  2333  06EC  3090               	movlw	high (STR_2| (0+32768))
  2334  06ED  00E7               	movwf	sprintf@fmt+1
  2335  06EE  0021               	movlb	1	; select bank1
  2336  06EF  085A               	movf	(main@SumDigits+1)^(0+128),w
  2337  06F0  0020               	movlb	0	; select bank0
  2338  06F1  00E9               	movwf	?_sprintf+3
  2339  06F2  0021               	movlb	1	; select bank1
  2340  06F3  0859               	movf	main@SumDigits^(0+128),w
  2341  06F4  0020               	movlb	0	; select bank0
  2342  06F5  00E8               	movwf	?_sprintf+2
  2343  06F6  30AF               	movlw	(low (main@printchar| 0))& (0+255)
  2344  06F7  318F  2730  3185   	fcall	_sprintf
  2345  06FA                     l1965:
  2346                           
  2347                           ;main.c: 161:     LCDGoto(0,1);
  2348  06FA  01F7               	clrf	LCDGoto@ln
  2349  06FB  0AF7               	incf	LCDGoto@ln,f
  2350  06FC  3000               	movlw	0
  2351  06FD  318F  277A  3185   	fcall	_LCDGoto
  2352  0700                     l1967:
  2353                           
  2354                           ;main.c: 162:     LCDPutStr(printchar);
  2355  0700  30AF               	movlw	low main@printchar
  2356  0701  00F7               	movwf	LCDPutStr@str
  2357  0702  3000               	movlw	high main@printchar
  2358  0703  00F8               	movwf	LCDPutStr@str+1
  2359  0704  318F  2754  3185   	fcall	_LCDPutStr
  2360  0707                     l1969:
  2361                           
  2362                           ;main.c: 163:     _delay((unsigned long)((2000)*(500000/4000.0)));
  2363  0707  3002               	movlw	2
  2364  0708  0021               	movlb	1	; select bank1
  2365  0709  00AA               	movwf	(??_main^(0+128)+1)
  2366  070A  3045               	movlw	69
  2367  070B  00A9               	movwf	??_main^(0+128)
  2368  070C  30A9               	movlw	169
  2369  070D                     u1847:
  2370  070D  0B89               	decfsz	9,f
  2371  070E  2F0D               	goto	u1847
  2372  070F  0BA9               	decfsz	??_main^(0+128),f
  2373  0710  2F0D               	goto	u1847
  2374  0711  0BAA               	decfsz	(??_main^(0+128)+1),f
  2375  0712  2F0D               	goto	u1847
  2376  0713  3200               	nop2
  2377  0714                     l1971:
  2378                           
  2379                           ;main.c: 164:     LCDClear();
  2380  0714  318E  2644  3185   	fcall	_LCDClear
  2381  0717                     l1973:
  2382                           
  2383                           ;main.c: 174:     LCDGoto(0,0);
  2384  0717  01F7               	clrf	LCDGoto@ln
  2385  0718  3000               	movlw	0
  2386  0719  318F  277A  3185   	fcall	_LCDGoto
  2387  071C                     l1975:
  2388                           
  2389                           ;main.c: 175:     LCDPutStr("Binary=");
  2390  071C  3028               	movlw	low (STR_5| (0+32768))
  2391  071D  00F7               	movwf	LCDPutStr@str
  2392  071E  3090               	movlw	high (STR_5| (0+32768))
  2393  071F  00F8               	movwf	LCDPutStr@str+1
  2394  0720  318F  2754  3185   	fcall	_LCDPutStr
  2395  0723                     l1977:
  2396  0723                     l1979:
  2397                           
  2398                           ;main.c: 179:     int bin[4]={0,0,0,0};
  2399  0723  30C7               	movlw	low main@bin
  2400  0724  0086               	movwf	6
  2401  0725  3000               	movlw	high main@bin
  2402  0726  0087               	movwf	7
  2403  0727  3008               	movlw	8
  2404  0728  0021               	movlb	1	; select bank1
  2405  0729  00A9               	movwf	??_main^(0+128)
  2406  072A  3000               	movlw	0
  2407  072B                     u1810:
  2408  072B  001E               	movwi fsr1++
  2409  072C  0BA9               	decfsz	??_main^(0+128),f
  2410  072D  2F2B               	goto	u1810
  2411  072E                     l1981:
  2412                           
  2413                           ;main.c: 180:     i=0;
  2414  072E  01D5               	clrf	main@i^(0+128)
  2415  072F  01D6               	clrf	(main@i+1)^(0+128)
  2416                           
  2417                           ;main.c: 181:       while (SumDigits>0)
  2418  0730  2F54               	goto	l1989
  2419  0731                     l1983:
  2420                           
  2421                           ;main.c: 182:       {;main.c: 183:         bin[i] = SumDigits%2;
  2422  0731  3001               	movlw	1
  2423  0732  0021               	movlb	1	; select bank1
  2424  0733  0559               	andwf	main@SumDigits^(0+128),w
  2425  0734  00A9               	movwf	??_main^(0+128)
  2426  0735  3000               	movlw	0
  2427  0736  055A               	andwf	(main@SumDigits+1)^(0+128),w
  2428  0737  00AA               	movwf	(??_main+1)^(0+128)
  2429  0738  3555               	lslf	main@i^(0+128),w
  2430  0739  3EC7               	addlw	(low (main@bin| 0))& (0+255)
  2431  073A  0086               	movwf	6
  2432  073B  0187               	clrf	7
  2433  073C  0829               	movf	??_main^(0+128),w
  2434  073D  3FC0               	movwi [0]fsr1
  2435  073E  082A               	movf	(??_main+1)^(0+128),w
  2436  073F  3FC1               	movwi [1]fsr1
  2437  0740                     l1985:
  2438                           
  2439                           ;main.c: 184:         SumDigits = SumDigits/2;
  2440  0740  3002               	movlw	2
  2441  0741  00F0               	movwf	___awdiv@divisor
  2442  0742  3000               	movlw	0
  2443  0743  00F1               	movwf	___awdiv@divisor+1
  2444  0744  085A               	movf	(main@SumDigits+1)^(0+128),w
  2445  0745  00F3               	movwf	___awdiv@dividend+1
  2446  0746  0859               	movf	main@SumDigits^(0+128),w
  2447  0747  00F2               	movwf	___awdiv@dividend
  2448  0748  3181  2165  3185   	fcall	___awdiv
  2449  074B  0871               	movf	?___awdiv+1,w
  2450  074C  0021               	movlb	1	; select bank1
  2451  074D  00DA               	movwf	(main@SumDigits+1)^(0+128)
  2452  074E  0870               	movf	?___awdiv,w
  2453  074F  00D9               	movwf	main@SumDigits^(0+128)
  2454  0750                     l1987:
  2455                           
  2456                           ;main.c: 185:         i++;
  2457  0750  3001               	movlw	1
  2458  0751  07D5               	addwf	main@i^(0+128),f
  2459  0752  3000               	movlw	0
  2460  0753  3DD6               	addwfc	(main@i+1)^(0+128),f
  2461  0754                     l1989:
  2462                           
  2463                           ;main.c: 181:       while (SumDigits>0)
  2464  0754  085A               	movf	(main@SumDigits+1)^(0+128),w
  2465  0755  3A80               	xorlw	128
  2466  0756  00A9               	movwf	??_main^(0+128)
  2467  0757  3080               	movlw	128
  2468  0758  0229               	subwf	??_main^(0+128),w
  2469  0759  1D03               	skipz
  2470  075A  2F5D               	goto	u1825
  2471  075B  3001               	movlw	1
  2472  075C  0259               	subwf	main@SumDigits^(0+128),w
  2473  075D                     u1825:
  2474  075D  1803               	skipnc
  2475  075E  2F60               	goto	u1821
  2476  075F  2F61               	goto	u1820
  2477  0760                     u1821:
  2478  0760  2F31               	goto	l1983
  2479  0761                     u1820:
  2480  0761                     l1991:
  2481                           
  2482                           ;main.c: 187:       Binary= (1000*bin[3])+(100*bin[2])+(10*bin[1])+(1*bin[0]);
  2483  0761  0021               	movlb	1	; select bank1
  2484  0762  084E               	movf	((main@bin+1)^(0+128)+6),w
  2485  0763  00F1               	movwf	___wmul@multiplier+1
  2486  0764  084D               	movf	(main@bin^(0+128)+6),w
  2487  0765  00F0               	movwf	___wmul@multiplier
  2488  0766  30E8               	movlw	232
  2489  0767  00F2               	movwf	___wmul@multiplicand
  2490  0768  3003               	movlw	3
  2491  0769  00F3               	movwf	___wmul@multiplicand+1
  2492  076A  318E  26CE  3185   	fcall	___wmul
  2493  076D  0870               	movf	?___wmul,w
  2494  076E  0021               	movlb	1	; select bank1
  2495  076F  00A9               	movwf	??_main^(0+128)
  2496  0770  0871               	movf	?___wmul+1,w
  2497  0771  00AA               	movwf	(??_main^(0+128)+1)
  2498  0772  084C               	movf	((main@bin+1)^(0+128)+4),w
  2499  0773  00F1               	movwf	___wmul@multiplier+1
  2500  0774  084B               	movf	(main@bin^(0+128)+4),w
  2501  0775  00F0               	movwf	___wmul@multiplier
  2502  0776  3064               	movlw	100
  2503  0777  00F2               	movwf	___wmul@multiplicand
  2504  0778  3000               	movlw	0
  2505  0779  00F3               	movwf	___wmul@multiplicand+1
  2506  077A  318E  26CE  3185   	fcall	___wmul
  2507  077D  0870               	movf	?___wmul,w
  2508  077E  0021               	movlb	1	; select bank1
  2509  077F  0729               	addwf	??_main^(0+128),w
  2510  0780  00AB               	movwf	(??_main+2)^(0+128)
  2511  0781  0871               	movf	?___wmul+1,w
  2512  0782  3D2A               	addwfc	(??_main+1)^(0+128),w
  2513  0783  00AC               	movwf	(??_main+3)^(0+128)
  2514  0784  084A               	movf	((main@bin+1)^(0+128)+2),w
  2515  0785  00F1               	movwf	___wmul@multiplier+1
  2516  0786  0849               	movf	(main@bin^(0+128)+2),w
  2517  0787  00F0               	movwf	___wmul@multiplier
  2518  0788  300A               	movlw	10
  2519  0789  00F2               	movwf	___wmul@multiplicand
  2520  078A  3000               	movlw	0
  2521  078B  00F3               	movwf	___wmul@multiplicand+1
  2522  078C  318E  26CE  3185   	fcall	___wmul
  2523  078F  0870               	movf	?___wmul,w
  2524  0790  0021               	movlb	1	; select bank1
  2525  0791  072B               	addwf	(??_main+2)^(0+128),w
  2526  0792  00AD               	movwf	(??_main+4)^(0+128)
  2527  0793  0871               	movf	?___wmul+1,w
  2528  0794  3D2C               	addwfc	(??_main+3)^(0+128),w
  2529  0795  00AE               	movwf	(??_main+5)^(0+128)
  2530  0796  0847               	movf	main@bin^(0+128),w
  2531  0797  072D               	addwf	(??_main+4)^(0+128),w
  2532  0798  00C3               	movwf	main@Binary^(0+128)
  2533  0799  0848               	movf	(main@bin+1)^(0+128),w
  2534  079A  3D2E               	addwfc	(??_main+5)^(0+128),w
  2535  079B  00C4               	movwf	(main@Binary+1)^(0+128)
  2536  079C  01C5               	clrf	(main@Binary^(0+128)+2)
  2537  079D  1BC4               	btfsc	(main@Binary^(0+128)+1),7
  2538  079E  03C5               	decf	(main@Binary+2)^(0+128),f
  2539  079F  0845               	movf	(main@Binary^(0+128)+2),w
  2540  07A0  00C6               	movwf	(main@Binary+3)^(0+128)
  2541  07A1                     l1993:
  2542                           
  2543                           ;main.c: 189:     sprintf(printchar,"%d",Binary);
  2544  07A1  3030               	movlw	low (STR_2| (0+32768))
  2545  07A2  0020               	movlb	0	; select bank0
  2546  07A3  00E6               	movwf	sprintf@fmt
  2547  07A4  3090               	movlw	high (STR_2| (0+32768))
  2548  07A5  00E7               	movwf	sprintf@fmt+1
  2549  07A6  0021               	movlb	1	; select bank1
  2550  07A7  0846               	movf	(main@Binary+3)^(0+128),w
  2551  07A8  0020               	movlb	0	; select bank0
  2552  07A9  00EB               	movwf	?_sprintf+5
  2553  07AA  0021               	movlb	1	; select bank1
  2554  07AB  0845               	movf	(main@Binary+2)^(0+128),w
  2555  07AC  0020               	movlb	0	; select bank0
  2556  07AD  00EA               	movwf	?_sprintf+4
  2557  07AE  0021               	movlb	1	; select bank1
  2558  07AF  0844               	movf	(main@Binary+1)^(0+128),w
  2559  07B0  0020               	movlb	0	; select bank0
  2560  07B1  00E9               	movwf	?_sprintf+3
  2561  07B2  0021               	movlb	1	; select bank1
  2562  07B3  0843               	movf	main@Binary^(0+128),w
  2563  07B4  0020               	movlb	0	; select bank0
  2564  07B5  00E8               	movwf	?_sprintf+2
  2565  07B6  30AF               	movlw	(low (main@printchar| 0))& (0+255)
  2566  07B7  318F  2730  3185   	fcall	_sprintf
  2567  07BA                     l1995:
  2568                           
  2569                           ;main.c: 190:     LCDGoto(0,1);
  2570  07BA  01F7               	clrf	LCDGoto@ln
  2571  07BB  0AF7               	incf	LCDGoto@ln,f
  2572  07BC  3000               	movlw	0
  2573  07BD  318F  277A  3185   	fcall	_LCDGoto
  2574  07C0                     l1997:
  2575                           
  2576                           ;main.c: 191:     LCDPutStr(printchar);
  2577  07C0  30AF               	movlw	low main@printchar
  2578  07C1  00F7               	movwf	LCDPutStr@str
  2579  07C2  3000               	movlw	high main@printchar
  2580  07C3  00F8               	movwf	LCDPutStr@str+1
  2581  07C4  318F  2754  3185   	fcall	_LCDPutStr
  2582  07C7                     l1999:
  2583                           
  2584                           ;main.c: 192:     _delay((unsigned long)((2000)*(500000/4000.0)));
  2585  07C7  3002               	movlw	2
  2586  07C8  0021               	movlb	1	; select bank1
  2587  07C9  00AA               	movwf	(??_main^(0+128)+1)
  2588  07CA  3045               	movlw	69
  2589  07CB  00A9               	movwf	??_main^(0+128)
  2590  07CC  30A9               	movlw	169
  2591  07CD                     u1857:
  2592  07CD  0B89               	decfsz	9,f
  2593  07CE  2FCD               	goto	u1857
  2594  07CF  0BA9               	decfsz	??_main^(0+128),f
  2595  07D0  2FCD               	goto	u1857
  2596  07D1  0BAA               	decfsz	(??_main^(0+128)+1),f
  2597  07D2  2FCD               	goto	u1857
  2598  07D3  3200               	nop2
  2599  07D4                     l53:	
  2600                           ;main.c: 193:     while (1)
  2601                           
  2602  07D4                     l54:	
  2603                           ;main.c: 194:     {;main.c: 196:     }
  2604                           
  2605  07D4  2FD4               	goto	l53
  2606  07D5  3180  2802         	ljmp	start
  2607  07D7                     __end_of_main:
  2608                           
  2609                           	psect	text1
  2610  0031                     __ptext1:	
  2611 ;; *************** function _sumdigits *****************
  2612 ;; Defined at:
  2613 ;;		line 58 in file "main.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  number          2    9[COMMON] int 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  SumDigits       2    2[BANK0 ] int 
  2618 ;;  digit           2    0[BANK0 ] int 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  2    9[COMMON] int 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2629 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2630 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2631 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2632 ;;Total ram usage:        7 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    1
  2635 ;; This function calls:
  2636 ;;		___awdiv
  2637 ;;		___awmod
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           
  2644                           ;psect for function _sumdigits
  2645  0031                     _sumdigits:
  2646  0031                     l1841:	
  2647                           ;incstack = 0
  2648                           ; Regs used in _sumdigits: [wreg+status,2+status,0+pclath+cstack]
  2649                           
  2650                           
  2651                           ;main.c: 58: int sumdigits(int number);main.c: 59: {;main.c: 60:   int SumDigits = 0,dig
      +                          it;
  2652  0031  0020               	movlb	0	; select bank0
  2653  0032  01A2               	clrf	sumdigits@SumDigits
  2654  0033  01A3               	clrf	sumdigits@SumDigits+1
  2655                           
  2656                           ;main.c: 61:   while (number>0)
  2657  0034  285A               	goto	l1849
  2658  0035                     l1843:
  2659                           
  2660                           ;main.c: 62:   {;main.c: 63:     digit = number%10;
  2661  0035  300A               	movlw	10
  2662  0036  00F0               	movwf	___awmod@divisor
  2663  0037  3000               	movlw	0
  2664  0038  00F1               	movwf	___awmod@divisor+1
  2665  0039  087A               	movf	sumdigits@number+1,w
  2666  003A  00F3               	movwf	___awmod@dividend+1
  2667  003B  0879               	movf	sumdigits@number,w
  2668  003C  00F2               	movwf	___awmod@dividend
  2669  003D  3180  20BC  3180   	fcall	___awmod
  2670  0040  0871               	movf	?___awmod+1,w
  2671  0041  0020               	movlb	0	; select bank0
  2672  0042  00A1               	movwf	sumdigits@digit+1
  2673  0043  0870               	movf	?___awmod,w
  2674  0044  00A0               	movwf	sumdigits@digit
  2675  0045                     l1845:
  2676                           
  2677                           ;main.c: 64:     SumDigits = SumDigits + digit;
  2678  0045  0820               	movf	sumdigits@digit,w
  2679  0046  0722               	addwf	sumdigits@SumDigits,w
  2680  0047  00A2               	movwf	sumdigits@SumDigits
  2681  0048  0821               	movf	sumdigits@digit+1,w
  2682  0049  3D23               	addwfc	sumdigits@SumDigits+1,w
  2683  004A  00A3               	movwf	sumdigits@SumDigits+1
  2684  004B                     l1847:
  2685                           
  2686                           ;main.c: 65:     number = number /10;
  2687  004B  300A               	movlw	10
  2688  004C  00F0               	movwf	___awdiv@divisor
  2689  004D  3000               	movlw	0
  2690  004E  00F1               	movwf	___awdiv@divisor+1
  2691  004F  087A               	movf	sumdigits@number+1,w
  2692  0050  00F3               	movwf	___awdiv@dividend+1
  2693  0051  0879               	movf	sumdigits@number,w
  2694  0052  00F2               	movwf	___awdiv@dividend
  2695  0053  3181  2165  3180   	fcall	___awdiv
  2696  0056  0871               	movf	?___awdiv+1,w
  2697  0057  00FA               	movwf	sumdigits@number+1
  2698  0058  0870               	movf	?___awdiv,w
  2699  0059  00F9               	movwf	sumdigits@number
  2700  005A                     l1849:
  2701                           
  2702                           ;main.c: 61:   while (number>0)
  2703  005A  087A               	movf	sumdigits@number+1,w
  2704  005B  3A80               	xorlw	128
  2705  005C  00FB               	movwf	??_sumdigits
  2706  005D  3080               	movlw	128
  2707  005E  027B               	subwf	??_sumdigits,w
  2708  005F  1D03               	skipz
  2709  0060  2863               	goto	u1715
  2710  0061  3001               	movlw	1
  2711  0062  0279               	subwf	sumdigits@number,w
  2712  0063                     u1715:
  2713  0063  1803               	skipnc
  2714  0064  2866               	goto	u1711
  2715  0065  2867               	goto	u1710
  2716  0066                     u1711:
  2717  0066  2835               	goto	l1843
  2718  0067                     u1710:
  2719  0067                     l1851:
  2720                           
  2721                           ;main.c: 67:   return SumDigits;
  2722  0067  0020               	movlb	0	; select bank0
  2723  0068  0823               	movf	sumdigits@SumDigits+1,w
  2724  0069  00FA               	movwf	?_sumdigits+1
  2725  006A  0822               	movf	sumdigits@SumDigits,w
  2726  006B  00F9               	movwf	?_sumdigits
  2727  006C                     l26:
  2728  006C  0008               	return
  2729  006D                     __end_of_sumdigits:
  2730                           
  2731                           	psect	text2
  2732  00BC                     __ptext2:	
  2733 ;; *************** function ___awmod *****************
  2734 ;; Defined at:
  2735 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  divisor         2    0[COMMON] int 
  2738 ;;  dividend        2    2[COMMON] int 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  sign            1    6[COMMON] unsigned char 
  2741 ;;  counter         1    5[COMMON] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  2    0[COMMON] int 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2751 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2752 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2753 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2754 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2755 ;;Total ram usage:        7 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_sumdigits
  2761 ;;		_main
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           
  2766                           ;psect for function ___awmod
  2767  00BC                     ___awmod:
  2768  00BC                     l1791:	
  2769                           ;incstack = 0
  2770                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2771                           
  2772  00BC  01F6               	clrf	___awmod@sign
  2773  00BD                     l1793:
  2774  00BD  1FF3               	btfss	___awmod@dividend+1,7
  2775  00BE  28C0               	goto	u1611
  2776  00BF  28C1               	goto	u1610
  2777  00C0                     u1611:
  2778  00C0  28C8               	goto	l1799
  2779  00C1                     u1610:
  2780  00C1                     l1795:
  2781  00C1  09F2               	comf	___awmod@dividend,f
  2782  00C2  09F3               	comf	___awmod@dividend+1,f
  2783  00C3  0AF2               	incf	___awmod@dividend,f
  2784  00C4  1903               	skipnz
  2785  00C5  0AF3               	incf	___awmod@dividend+1,f
  2786  00C6                     l1797:
  2787  00C6  01F6               	clrf	___awmod@sign
  2788  00C7  0AF6               	incf	___awmod@sign,f
  2789  00C8                     l1799:
  2790  00C8  1FF1               	btfss	___awmod@divisor+1,7
  2791  00C9  28CB               	goto	u1621
  2792  00CA  28CC               	goto	u1620
  2793  00CB                     u1621:
  2794  00CB  28D1               	goto	l1803
  2795  00CC                     u1620:
  2796  00CC                     l1801:
  2797  00CC  09F0               	comf	___awmod@divisor,f
  2798  00CD  09F1               	comf	___awmod@divisor+1,f
  2799  00CE  0AF0               	incf	___awmod@divisor,f
  2800  00CF  1903               	skipnz
  2801  00D0  0AF1               	incf	___awmod@divisor+1,f
  2802  00D1                     l1803:
  2803  00D1  0870               	movf	___awmod@divisor,w
  2804  00D2  0471               	iorwf	___awmod@divisor+1,w
  2805  00D3  1903               	btfsc	3,2
  2806  00D4  28D6               	goto	u1631
  2807  00D5  28D7               	goto	u1630
  2808  00D6                     u1631:
  2809  00D6  2900               	goto	l1821
  2810  00D7                     u1630:
  2811  00D7                     l1805:
  2812  00D7  01F5               	clrf	___awmod@counter
  2813  00D8  0AF5               	incf	___awmod@counter,f
  2814  00D9  28E3               	goto	l1811
  2815  00DA                     l1807:
  2816  00DA  3001               	movlw	1
  2817  00DB                     u1645:
  2818  00DB  35F0               	lslf	___awmod@divisor,f
  2819  00DC  0DF1               	rlf	___awmod@divisor+1,f
  2820  00DD  0B89               	decfsz	9,f
  2821  00DE  28DB               	goto	u1645
  2822  00DF                     l1809:
  2823  00DF  3001               	movlw	1
  2824  00E0  00F4               	movwf	??___awmod
  2825  00E1  0874               	movf	??___awmod,w
  2826  00E2  07F5               	addwf	___awmod@counter,f
  2827  00E3                     l1811:
  2828  00E3  1FF1               	btfss	___awmod@divisor+1,7
  2829  00E4  28E6               	goto	u1651
  2830  00E5  28E7               	goto	u1650
  2831  00E6                     u1651:
  2832  00E6  28DA               	goto	l1807
  2833  00E7                     u1650:
  2834  00E7                     l1813:
  2835  00E7  0871               	movf	___awmod@divisor+1,w
  2836  00E8  0273               	subwf	___awmod@dividend+1,w
  2837  00E9  1D03               	skipz
  2838  00EA  28ED               	goto	u1665
  2839  00EB  0870               	movf	___awmod@divisor,w
  2840  00EC  0272               	subwf	___awmod@dividend,w
  2841  00ED                     u1665:
  2842  00ED  1C03               	skipc
  2843  00EE  28F0               	goto	u1661
  2844  00EF  28F1               	goto	u1660
  2845  00F0                     u1661:
  2846  00F0  28F5               	goto	l1817
  2847  00F1                     u1660:
  2848  00F1                     l1815:
  2849  00F1  0870               	movf	___awmod@divisor,w
  2850  00F2  02F2               	subwf	___awmod@dividend,f
  2851  00F3  0871               	movf	___awmod@divisor+1,w
  2852  00F4  3BF3               	subwfb	___awmod@dividend+1,f
  2853  00F5                     l1817:
  2854  00F5  3001               	movlw	1
  2855  00F6                     u1675:
  2856  00F6  36F1               	lsrf	___awmod@divisor+1,f
  2857  00F7  0CF0               	rrf	___awmod@divisor,f
  2858  00F8  0B89               	decfsz	9,f
  2859  00F9  28F6               	goto	u1675
  2860  00FA                     l1819:
  2861  00FA  3001               	movlw	1
  2862  00FB  02F5               	subwf	___awmod@counter,f
  2863  00FC  1D03               	btfss	3,2
  2864  00FD  28FF               	goto	u1681
  2865  00FE  2900               	goto	u1680
  2866  00FF                     u1681:
  2867  00FF  28E7               	goto	l1813
  2868  0100                     u1680:
  2869  0100                     l1821:
  2870  0100  0876               	movf	___awmod@sign,w
  2871  0101  1903               	btfsc	3,2
  2872  0102  2904               	goto	u1691
  2873  0103  2905               	goto	u1690
  2874  0104                     u1691:
  2875  0104  290A               	goto	l1825
  2876  0105                     u1690:
  2877  0105                     l1823:
  2878  0105  09F2               	comf	___awmod@dividend,f
  2879  0106  09F3               	comf	___awmod@dividend+1,f
  2880  0107  0AF2               	incf	___awmod@dividend,f
  2881  0108  1903               	skipnz
  2882  0109  0AF3               	incf	___awmod@dividend+1,f
  2883  010A                     l1825:
  2884  010A  0873               	movf	___awmod@dividend+1,w
  2885  010B  00F1               	movwf	?___awmod+1
  2886  010C  0872               	movf	___awmod@dividend,w
  2887  010D  00F0               	movwf	?___awmod
  2888  010E                     l410:
  2889  010E  0008               	return
  2890  010F                     __end_of___awmod:
  2891                           
  2892                           	psect	text3
  2893  0165                     __ptext3:	
  2894 ;; *************** function ___awdiv *****************
  2895 ;; Defined at:
  2896 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  divisor         2    0[COMMON] int 
  2899 ;;  dividend        2    2[COMMON] int 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  quotient        2    7[COMMON] int 
  2902 ;;  sign            1    6[COMMON] unsigned char 
  2903 ;;  counter         1    5[COMMON] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  2    0[COMMON] int 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2914 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2915 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2916 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2917 ;;Total ram usage:        9 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_sumdigits
  2923 ;;		_main
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function ___awdiv
  2929  0165                     ___awdiv:
  2930  0165                     l1747:	
  2931                           ;incstack = 0
  2932                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2933                           
  2934  0165  01F6               	clrf	___awdiv@sign
  2935  0166                     l1749:
  2936  0166  1FF1               	btfss	___awdiv@divisor+1,7
  2937  0167  2969               	goto	u1511
  2938  0168  296A               	goto	u1510
  2939  0169                     u1511:
  2940  0169  2971               	goto	l1755
  2941  016A                     u1510:
  2942  016A                     l1751:
  2943  016A  09F0               	comf	___awdiv@divisor,f
  2944  016B  09F1               	comf	___awdiv@divisor+1,f
  2945  016C  0AF0               	incf	___awdiv@divisor,f
  2946  016D  1903               	skipnz
  2947  016E  0AF1               	incf	___awdiv@divisor+1,f
  2948  016F                     l1753:
  2949  016F  01F6               	clrf	___awdiv@sign
  2950  0170  0AF6               	incf	___awdiv@sign,f
  2951  0171                     l1755:
  2952  0171  1FF3               	btfss	___awdiv@dividend+1,7
  2953  0172  2974               	goto	u1521
  2954  0173  2975               	goto	u1520
  2955  0174                     u1521:
  2956  0174  297E               	goto	l1761
  2957  0175                     u1520:
  2958  0175                     l1757:
  2959  0175  09F2               	comf	___awdiv@dividend,f
  2960  0176  09F3               	comf	___awdiv@dividend+1,f
  2961  0177  0AF2               	incf	___awdiv@dividend,f
  2962  0178  1903               	skipnz
  2963  0179  0AF3               	incf	___awdiv@dividend+1,f
  2964  017A                     l1759:
  2965  017A  3001               	movlw	1
  2966  017B  00F4               	movwf	??___awdiv
  2967  017C  0874               	movf	??___awdiv,w
  2968  017D  06F6               	xorwf	___awdiv@sign,f
  2969  017E                     l1761:
  2970  017E  01F7               	clrf	___awdiv@quotient
  2971  017F  01F8               	clrf	___awdiv@quotient+1
  2972  0180                     l1763:
  2973  0180  0870               	movf	___awdiv@divisor,w
  2974  0181  0471               	iorwf	___awdiv@divisor+1,w
  2975  0182  1903               	btfsc	3,2
  2976  0183  2985               	goto	u1531
  2977  0184  2986               	goto	u1530
  2978  0185                     u1531:
  2979  0185  29B5               	goto	l1783
  2980  0186                     u1530:
  2981  0186                     l1765:
  2982  0186  01F5               	clrf	___awdiv@counter
  2983  0187  0AF5               	incf	___awdiv@counter,f
  2984  0188  2992               	goto	l1771
  2985  0189                     l1767:
  2986  0189  3001               	movlw	1
  2987  018A                     u1545:
  2988  018A  35F0               	lslf	___awdiv@divisor,f
  2989  018B  0DF1               	rlf	___awdiv@divisor+1,f
  2990  018C  0B89               	decfsz	9,f
  2991  018D  298A               	goto	u1545
  2992  018E                     l1769:
  2993  018E  3001               	movlw	1
  2994  018F  00F4               	movwf	??___awdiv
  2995  0190  0874               	movf	??___awdiv,w
  2996  0191  07F5               	addwf	___awdiv@counter,f
  2997  0192                     l1771:
  2998  0192  1FF1               	btfss	___awdiv@divisor+1,7
  2999  0193  2995               	goto	u1551
  3000  0194  2996               	goto	u1550
  3001  0195                     u1551:
  3002  0195  2989               	goto	l1767
  3003  0196                     u1550:
  3004  0196                     l1773:
  3005  0196  3001               	movlw	1
  3006  0197                     u1565:
  3007  0197  35F7               	lslf	___awdiv@quotient,f
  3008  0198  0DF8               	rlf	___awdiv@quotient+1,f
  3009  0199  0B89               	decfsz	9,f
  3010  019A  2997               	goto	u1565
  3011  019B  0871               	movf	___awdiv@divisor+1,w
  3012  019C  0273               	subwf	___awdiv@dividend+1,w
  3013  019D  1D03               	skipz
  3014  019E  29A1               	goto	u1575
  3015  019F  0870               	movf	___awdiv@divisor,w
  3016  01A0  0272               	subwf	___awdiv@dividend,w
  3017  01A1                     u1575:
  3018  01A1  1C03               	skipc
  3019  01A2  29A4               	goto	u1571
  3020  01A3  29A5               	goto	u1570
  3021  01A4                     u1571:
  3022  01A4  29AA               	goto	l1779
  3023  01A5                     u1570:
  3024  01A5                     l1775:
  3025  01A5  0870               	movf	___awdiv@divisor,w
  3026  01A6  02F2               	subwf	___awdiv@dividend,f
  3027  01A7  0871               	movf	___awdiv@divisor+1,w
  3028  01A8  3BF3               	subwfb	___awdiv@dividend+1,f
  3029  01A9                     l1777:
  3030  01A9  1477               	bsf	___awdiv@quotient,0
  3031  01AA                     l1779:
  3032  01AA  3001               	movlw	1
  3033  01AB                     u1585:
  3034  01AB  36F1               	lsrf	___awdiv@divisor+1,f
  3035  01AC  0CF0               	rrf	___awdiv@divisor,f
  3036  01AD  0B89               	decfsz	9,f
  3037  01AE  29AB               	goto	u1585
  3038  01AF                     l1781:
  3039  01AF  3001               	movlw	1
  3040  01B0  02F5               	subwf	___awdiv@counter,f
  3041  01B1  1D03               	btfss	3,2
  3042  01B2  29B4               	goto	u1591
  3043  01B3  29B5               	goto	u1590
  3044  01B4                     u1591:
  3045  01B4  2996               	goto	l1773
  3046  01B5                     u1590:
  3047  01B5                     l1783:
  3048  01B5  0876               	movf	___awdiv@sign,w
  3049  01B6  1903               	btfsc	3,2
  3050  01B7  29B9               	goto	u1601
  3051  01B8  29BA               	goto	u1600
  3052  01B9                     u1601:
  3053  01B9  29BF               	goto	l1787
  3054  01BA                     u1600:
  3055  01BA                     l1785:
  3056  01BA  09F7               	comf	___awdiv@quotient,f
  3057  01BB  09F8               	comf	___awdiv@quotient+1,f
  3058  01BC  0AF7               	incf	___awdiv@quotient,f
  3059  01BD  1903               	skipnz
  3060  01BE  0AF8               	incf	___awdiv@quotient+1,f
  3061  01BF                     l1787:
  3062  01BF  0878               	movf	___awdiv@quotient+1,w
  3063  01C0  00F1               	movwf	?___awdiv+1
  3064  01C1  0877               	movf	___awdiv@quotient,w
  3065  01C2  00F0               	movwf	?___awdiv
  3066  01C3                     l397:
  3067  01C3  0008               	return
  3068  01C4                     __end_of___awdiv:
  3069                           
  3070                           	psect	text4
  3071  0F30                     __ptext4:	
  3072 ;; *************** function _sprintf *****************
  3073 ;; Defined at:
  3074 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  s               1    wreg     PTR unsigned char 
  3077 ;;		 -> main@printchar(20), 
  3078 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  3079 ;;		 -> STR_6(3), STR_4(3), STR_2(3), 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  s               1    3[BANK1 ] PTR unsigned char 
  3082 ;;		 -> main@printchar(20), 
  3083 ;;  f               5    4[BANK1 ] struct _IO_FILE
  3084 ;;  ret             2    0        int 
  3085 ;;  ap              1    2[BANK1 ] PTR void [1]
  3086 ;;		 -> ?_sprintf(2), 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  2   70[BANK0 ] int 
  3089 ;; Registers used:
  3090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3096 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3097 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3098 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3099 ;;      Totals:         1       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3100 ;;Total ram usage:       16 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    7
  3103 ;; This function calls:
  3104 ;;		_vfprintf
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _sprintf
  3112  0F30                     _sprintf:
  3113                           
  3114                           ;incstack = 0
  3115                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3116                           ;sprintf@s stored from wreg
  3117  0F30  0021               	movlb	1	; select bank1
  3118  0F31  00A3               	movwf	sprintf@s^(0+128)
  3119  0F32                     l1873:
  3120  0F32  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3121  0F33  00FD               	movwf	??_sprintf
  3122  0F34  087D               	movf	??_sprintf,w
  3123  0F35  00A2               	movwf	sprintf@ap^(0+128)
  3124  0F36  0823               	movf	sprintf@s^(0+128),w
  3125  0F37  00FD               	movwf	??_sprintf
  3126  0F38  087D               	movf	??_sprintf,w
  3127  0F39  00A4               	movwf	sprintf@f^(0+128)
  3128  0F3A                     l1875:
  3129  0F3A  01A5               	clrf	(sprintf@f^(0+128)+1)
  3130  0F3B  01A6               	clrf	((sprintf@f+1)^(0+128)+1)
  3131  0F3C                     l1877:
  3132  0F3C  01A7               	clrf	(sprintf@f^(0+128)+3)
  3133  0F3D  01A8               	clrf	((sprintf@f+1)^(0+128)+3)
  3134  0F3E                     l1879:
  3135  0F3E  0020               	movlb	0	; select bank0
  3136  0F3F  0867               	movf	sprintf@fmt+1,w
  3137  0F40  00DF               	movwf	vfprintf@fmt+1
  3138  0F41  0866               	movf	sprintf@fmt,w
  3139  0F42  00DE               	movwf	vfprintf@fmt
  3140  0F43  30A2               	movlw	(low (sprintf@ap| 0))& (0+255)
  3141  0F44  00FD               	movwf	??_sprintf
  3142  0F45  087D               	movf	??_sprintf,w
  3143  0F46  00E0               	movwf	vfprintf@ap
  3144  0F47  30A4               	movlw	(low (sprintf@f| 0))& (0+255)
  3145  0F48  318F  27CF  318F   	fcall	_vfprintf
  3146  0F4B                     l1881:
  3147  0F4B  0021               	movlb	1	; select bank1
  3148  0F4C  0825               	movf	(sprintf@f^(0+128)+1),w
  3149  0F4D  0723               	addwf	sprintf@s^(0+128),w
  3150  0F4E  00FD               	movwf	??_sprintf
  3151  0F4F  087D               	movf	??_sprintf,w
  3152  0F50  0086               	movwf	6
  3153  0F51  0187               	clrf	7
  3154  0F52  0181               	clrf	1
  3155  0F53                     l707:
  3156  0F53  0008               	return
  3157  0F54                     __end_of_sprintf:
  3158                           
  3159                           	psect	text5
  3160  0FCF                     __ptext5:	
  3161 ;; *************** function _vfprintf *****************
  3162 ;; Defined at:
  3163 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  fp              1    wreg     PTR struct _IO_FILE
  3166 ;;		 -> sprintf@f(5), 
  3167 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  3168 ;;		 -> STR_6(3), STR_4(3), STR_2(3), 
  3169 ;;  ap              1   64[BANK0 ] PTR PTR void 
  3170 ;;		 -> sprintf@ap(1), 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  3173 ;;		 -> sprintf@f(5), 
  3174 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  3175 ;;		 -> STR_6(3), STR_4(3), STR_2(3), 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  2   62[BANK0 ] int 
  3178 ;; Registers used:
  3179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3185 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3186 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3187 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3188 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3189 ;;Total ram usage:        8 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    6
  3192 ;; This function calls:
  3193 ;;		_vfpfcnvrt
  3194 ;; This function is called by:
  3195 ;;		_sprintf
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           
  3200                           ;psect for function _vfprintf
  3201  0FCF                     _vfprintf:
  3202                           
  3203                           ;incstack = 0
  3204                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3205                           ;vfprintf@fp stored from wreg
  3206  0FCF  0020               	movlb	0	; select bank0
  3207  0FD0  00E3               	movwf	vfprintf@fp
  3208  0FD1                     l1829:
  3209                           
  3210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3211  0FD1  085F               	movf	vfprintf@fmt+1,w
  3212  0FD2  00E5               	movwf	vfprintf@cfmt+1
  3213  0FD3  085E               	movf	vfprintf@fmt,w
  3214  0FD4  00E4               	movwf	vfprintf@cfmt
  3215  0FD5                     l1831:
  3216                           
  3217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3218  0FD5  0021               	movlb	1	; select bank1
  3219  0FD6  01E3               	clrf	_nout^(0+128)
  3220  0FD7  01E4               	clrf	(_nout+1)^(0+128)
  3221                           
  3222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3223  0FD8  2FED               	goto	l1835
  3224  0FD9                     l1833:
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3227  0FD9  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3228  0FDA  00E1               	movwf	??_vfprintf
  3229  0FDB  0861               	movf	??_vfprintf,w
  3230  0FDC  00CE               	movwf	vfpfcnvrt@fmt
  3231  0FDD  0860               	movf	vfprintf@ap,w
  3232  0FDE  00E2               	movwf	??_vfprintf+1
  3233  0FDF  0862               	movf	??_vfprintf+1,w
  3234  0FE0  00CF               	movwf	vfpfcnvrt@ap
  3235  0FE1  0863               	movf	vfprintf@fp,w
  3236  0FE2  3181  21C4  318F   	fcall	_vfpfcnvrt
  3237  0FE5  0020               	movlb	0	; select bank0
  3238  0FE6  084E               	movf	?_vfpfcnvrt,w
  3239  0FE7  0021               	movlb	1	; select bank1
  3240  0FE8  07E3               	addwf	_nout^(0+128),f
  3241  0FE9  0020               	movlb	0	; select bank0
  3242  0FEA  084F               	movf	?_vfpfcnvrt+1,w
  3243  0FEB  0021               	movlb	1	; select bank1
  3244  0FEC  3DE4               	addwfc	(_nout+1)^(0+128),f
  3245  0FED                     l1835:
  3246                           
  3247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3248  0FED  0020               	movlb	0	; select bank0
  3249  0FEE  0864               	movf	vfprintf@cfmt,w
  3250  0FEF  0084               	movwf	4
  3251  0FF0  0865               	movf	vfprintf@cfmt+1,w
  3252  0FF1  0085               	movwf	5
  3253  0FF2  0012               	moviw fsr0++
  3254  0FF3  1D03               	btfss	3,2
  3255  0FF4  2FF6               	goto	u1701
  3256  0FF5  2FF7               	goto	u1700
  3257  0FF6                     u1701:
  3258  0FF6  2FD9               	goto	l1833
  3259  0FF7                     u1700:
  3260  0FF7                     l1837:
  3261                           
  3262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3263  0FF7  0021               	movlb	1	; select bank1
  3264  0FF8  0864               	movf	(_nout+1)^(0+128),w
  3265  0FF9  0020               	movlb	0	; select bank0
  3266  0FFA  00DF               	movwf	?_vfprintf+1
  3267  0FFB  0021               	movlb	1	; select bank1
  3268  0FFC  0863               	movf	_nout^(0+128),w
  3269  0FFD  0020               	movlb	0	; select bank0
  3270  0FFE  00DE               	movwf	?_vfprintf
  3271  0FFF                     l779:
  3272  0FFF  0008               	return
  3273  1000                     __end_of_vfprintf:
  3274                           
  3275                           	psect	text6
  3276  01C4                     __ptext6:	
  3277 ;; *************** function _vfpfcnvrt *****************
  3278 ;; Defined at:
  3279 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  fp              1    wreg     PTR struct _IO_FILE
  3282 ;;		 -> sprintf@f(5), 
  3283 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3284 ;;		 -> vfprintf@cfmt(2), 
  3285 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3286 ;;		 -> sprintf@ap(1), 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  3289 ;;		 -> sprintf@f(5), 
  3290 ;;  ll              8   53[BANK0 ] long long 
  3291 ;;  llu             8    0        unsigned long long 
  3292 ;;  f               4    0        unsigned long long 
  3293 ;;  ct              3    0        unsigned char [3]
  3294 ;;  vp              2    0        PTR void 
  3295 ;;  i               2    0        int 
  3296 ;;  done            2    0        int 
  3297 ;;  cp              2    0        PTR unsigned char 
  3298 ;;  c               1    0        unsigned char 
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  2   46[BANK0 ] int 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3308 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3309 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3310 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3311 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3312 ;;Total ram usage:       16 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    5
  3315 ;; This function calls:
  3316 ;;		_dtoa
  3317 ;;		_fputc
  3318 ;; This function is called by:
  3319 ;;		_vfprintf
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           
  3324                           ;psect for function _vfpfcnvrt
  3325  01C4                     _vfpfcnvrt:
  3326                           
  3327                           ;incstack = 0
  3328                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3329                           ;vfpfcnvrt@fp stored from wreg
  3330  01C4  0020               	movlb	0	; select bank0
  3331  01C5  00DD               	movwf	vfpfcnvrt@fp
  3332  01C6                     l1645:
  3333                           
  3334                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3335  01C6  084E               	movf	vfpfcnvrt@fmt,w
  3336  01C7  0086               	movwf	6
  3337  01C8  0187               	clrf	7
  3338  01C9  3F40               	moviw [0]fsr1
  3339  01CA  00D0               	movwf	??_vfpfcnvrt
  3340  01CB  3F41               	moviw [1]fsr1
  3341  01CC  00D1               	movwf	??_vfpfcnvrt+1
  3342  01CD  0850               	movf	??_vfpfcnvrt,w
  3343  01CE  0084               	movwf	4
  3344  01CF  0851               	movf	??_vfpfcnvrt+1,w
  3345  01D0  0085               	movwf	5
  3346  01D1  0012               	moviw fsr0++
  3347  01D2  3A25               	xorlw	37
  3348  01D3  1D03               	btfss	3,2
  3349  01D4  29D6               	goto	u1431
  3350  01D5  29D7               	goto	u1430
  3351  01D6                     u1431:
  3352  01D6  2A7B               	goto	l1681
  3353  01D7                     u1430:
  3354  01D7                     l1647:
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3357  01D7  084E               	movf	vfpfcnvrt@fmt,w
  3358  01D8  0086               	movwf	6
  3359  01D9  0187               	clrf	7
  3360  01DA  3001               	movlw	1
  3361  01DB  0781               	addwf	1,f
  3362  01DC  3141               	addfsr 1,1
  3363  01DD  1803               	skipnc
  3364  01DE  0A81               	incf	1,f
  3365  01DF                     l1649:
  3366                           
  3367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3368  01DF  0021               	movlb	1	; select bank1
  3369  01E0  01E5               	clrf	_width^(0+128)
  3370  01E1  01E6               	clrf	(_width+1)^(0+128)
  3371  01E2  0020               	movlb	0	; select bank0
  3372  01E3  01EE               	clrf	_flags
  3373  01E4  01EF               	clrf	_flags+1
  3374  01E5                     l1651:
  3375                           
  3376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3377  01E5  30FF               	movlw	255
  3378  01E6  00EC               	movwf	_prec
  3379  01E7  30FF               	movlw	255
  3380  01E8  00ED               	movwf	_prec+1
  3381  01E9                     l1653:
  3382                           
  3383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3384  01E9  084E               	movf	vfpfcnvrt@fmt,w
  3385  01EA  0086               	movwf	6
  3386  01EB  0187               	clrf	7
  3387  01EC  3F40               	moviw [0]fsr1
  3388  01ED  00D0               	movwf	??_vfpfcnvrt
  3389  01EE  3F41               	moviw [1]fsr1
  3390  01EF  00D1               	movwf	??_vfpfcnvrt+1
  3391  01F0  0850               	movf	??_vfpfcnvrt,w
  3392  01F1  0084               	movwf	4
  3393  01F2  0851               	movf	??_vfpfcnvrt+1,w
  3394  01F3  0085               	movwf	5
  3395  01F4  0012               	moviw fsr0++
  3396  01F5  3A64               	xorlw	100
  3397  01F6  1903               	btfsc	3,2
  3398  01F7  29F9               	goto	u1441
  3399  01F8  29FA               	goto	u1440
  3400  01F9                     u1441:
  3401  01F9  2A0B               	goto	l1657
  3402  01FA                     u1440:
  3403  01FA                     l1655:
  3404  01FA  084E               	movf	vfpfcnvrt@fmt,w
  3405  01FB  0086               	movwf	6
  3406  01FC  0187               	clrf	7
  3407  01FD  3F40               	moviw [0]fsr1
  3408  01FE  00D0               	movwf	??_vfpfcnvrt
  3409  01FF  3F41               	moviw [1]fsr1
  3410  0200  00D1               	movwf	??_vfpfcnvrt+1
  3411  0201  0850               	movf	??_vfpfcnvrt,w
  3412  0202  0084               	movwf	4
  3413  0203  0851               	movf	??_vfpfcnvrt+1,w
  3414  0204  0085               	movwf	5
  3415  0205  0012               	moviw fsr0++
  3416  0206  3A69               	xorlw	105
  3417  0207  1D03               	btfss	3,2
  3418  0208  2A0A               	goto	u1451
  3419  0209  2A0B               	goto	u1450
  3420  020A                     u1451:
  3421  020A  2A46               	goto	l1665
  3422  020B                     u1450:
  3423  020B                     l1657:
  3424                           
  3425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3426  020B  084E               	movf	vfpfcnvrt@fmt,w
  3427  020C  0086               	movwf	6
  3428  020D  0187               	clrf	7
  3429  020E  3001               	movlw	1
  3430  020F  0781               	addwf	1,f
  3431  0210  3141               	addfsr 1,1
  3432  0211  1803               	skipnc
  3433  0212  0A81               	incf	1,f
  3434  0213                     l1659:
  3435                           
  3436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3437  0213  084F               	movf	vfpfcnvrt@ap,w
  3438  0214  0086               	movwf	6
  3439  0215  0187               	clrf	7
  3440  0216  0801               	movf	1,w
  3441  0217  0084               	movwf	4
  3442  0218  0185               	clrf	5
  3443  0219  3002               	movlw	2
  3444  021A  0781               	addwf	1,f
  3445  021B  3F00               	moviw [0]fsr0
  3446  021C  00D0               	movwf	??_vfpfcnvrt
  3447  021D  3F01               	moviw [1]fsr0
  3448  021E  00D1               	movwf	??_vfpfcnvrt+1
  3449  021F  0850               	movf	??_vfpfcnvrt,w
  3450  0220  00D5               	movwf	vfpfcnvrt@ll
  3451  0221  0851               	movf	??_vfpfcnvrt+1,w
  3452  0222  00D6               	movwf	vfpfcnvrt@ll+1
  3453  0223  0D89               	rlf	9,f
  3454  0224  3B89               	subwfb	9,f
  3455  0225  0989               	comf	9,f
  3456  0226  00D7               	movwf	vfpfcnvrt@ll+2
  3457  0227  00D8               	movwf	vfpfcnvrt@ll+3
  3458  0228  00D9               	movwf	vfpfcnvrt@ll+4
  3459  0229  00DA               	movwf	vfpfcnvrt@ll+5
  3460  022A  00DB               	movwf	vfpfcnvrt@ll+6
  3461  022B  00DC               	movwf	vfpfcnvrt@ll+7
  3462  022C                     l1661:
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3465  022C  0855               	movf	vfpfcnvrt@ll,w
  3466  022D  00B0               	movwf	dtoa@d
  3467  022E  0856               	movf	vfpfcnvrt@ll+1,w
  3468  022F  00B1               	movwf	dtoa@d+1
  3469  0230  0857               	movf	vfpfcnvrt@ll+2,w
  3470  0231  00B2               	movwf	dtoa@d+2
  3471  0232  0858               	movf	vfpfcnvrt@ll+3,w
  3472  0233  00B3               	movwf	dtoa@d+3
  3473  0234  0859               	movf	vfpfcnvrt@ll+4,w
  3474  0235  00B4               	movwf	dtoa@d+4
  3475  0236  085A               	movf	vfpfcnvrt@ll+5,w
  3476  0237  00B5               	movwf	dtoa@d+5
  3477  0238  085B               	movf	vfpfcnvrt@ll+6,w
  3478  0239  00B6               	movwf	dtoa@d+6
  3479  023A  085C               	movf	vfpfcnvrt@ll+7,w
  3480  023B  00B7               	movwf	dtoa@d+7
  3481  023C  085D               	movf	vfpfcnvrt@fp,w
  3482  023D  3184  248A  3181   	fcall	_dtoa
  3483  0240  0020               	movlb	0	; select bank0
  3484  0241  0831               	movf	?_dtoa+1,w
  3485  0242  00CF               	movwf	?_vfpfcnvrt+1
  3486  0243  0830               	movf	?_dtoa,w
  3487  0244  00CE               	movwf	?_vfpfcnvrt
  3488  0245  2A9E               	goto	l772
  3489  0246                     l1665:
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3492  0246  084E               	movf	vfpfcnvrt@fmt,w
  3493  0247  0086               	movwf	6
  3494  0248  0187               	clrf	7
  3495  0249  3F40               	moviw [0]fsr1
  3496  024A  00D0               	movwf	??_vfpfcnvrt
  3497  024B  3F41               	moviw [1]fsr1
  3498  024C  00D1               	movwf	??_vfpfcnvrt+1
  3499  024D  0850               	movf	??_vfpfcnvrt,w
  3500  024E  0084               	movwf	4
  3501  024F  0851               	movf	??_vfpfcnvrt+1,w
  3502  0250  0085               	movwf	5
  3503  0251  0012               	moviw fsr0++
  3504  0252  3A25               	xorlw	37
  3505  0253  1D03               	btfss	3,2
  3506  0254  2A56               	goto	u1461
  3507  0255  2A57               	goto	u1460
  3508  0256                     u1461:
  3509  0256  2A70               	goto	l1675
  3510  0257                     u1460:
  3511  0257                     l1667:
  3512                           
  3513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3514  0257  084E               	movf	vfpfcnvrt@fmt,w
  3515  0258  0086               	movwf	6
  3516  0259  0187               	clrf	7
  3517  025A  3001               	movlw	1
  3518  025B  0781               	addwf	1,f
  3519  025C  3141               	addfsr 1,1
  3520  025D  1803               	skipnc
  3521  025E  0A81               	incf	1,f
  3522  025F                     l1669:
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3525  025F  3025               	movlw	37
  3526  0260  00F0               	movwf	fputc@c
  3527  0261  3000               	movlw	0
  3528  0262  00F1               	movwf	fputc@c+1
  3529  0263  085D               	movf	vfpfcnvrt@fp,w
  3530  0264  00D0               	movwf	??_vfpfcnvrt
  3531  0265  0850               	movf	??_vfpfcnvrt,w
  3532  0266  00F2               	movwf	fputc@fp
  3533  0267  3180  206D  3181   	fcall	_fputc
  3534  026A                     l1671:
  3535                           
  3536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3537  026A  3001               	movlw	1
  3538  026B  0020               	movlb	0	; select bank0
  3539  026C  00CE               	movwf	?_vfpfcnvrt
  3540  026D  3000               	movlw	0
  3541  026E  00CF               	movwf	?_vfpfcnvrt+1
  3542  026F  2A9E               	goto	l772
  3543  0270                     l1675:
  3544                           
  3545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3546  0270  084E               	movf	vfpfcnvrt@fmt,w
  3547  0271  0086               	movwf	6
  3548  0272  0187               	clrf	7
  3549  0273  3001               	movlw	1
  3550  0274  0781               	addwf	1,f
  3551  0275  3141               	addfsr 1,1
  3552  0276  1803               	skipnc
  3553  0277  0A81               	incf	1,f
  3554  0278                     l1677:
  3555                           
  3556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3557  0278  01CE               	clrf	?_vfpfcnvrt
  3558  0279  01CF               	clrf	?_vfpfcnvrt+1
  3559  027A  2A9E               	goto	l772
  3560  027B                     l1681:
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3563  027B  084E               	movf	vfpfcnvrt@fmt,w
  3564  027C  0086               	movwf	6
  3565  027D  0187               	clrf	7
  3566  027E  3F40               	moviw [0]fsr1
  3567  027F  00D0               	movwf	??_vfpfcnvrt
  3568  0280  3F41               	moviw [1]fsr1
  3569  0281  00D1               	movwf	??_vfpfcnvrt+1
  3570  0282  0850               	movf	??_vfpfcnvrt,w
  3571  0283  0084               	movwf	4
  3572  0284  0851               	movf	??_vfpfcnvrt+1,w
  3573  0285  0085               	movwf	5
  3574  0286  0800               	movf	0,w	;code access
  3575  0287  00D2               	movwf	??_vfpfcnvrt+2
  3576  0288  01D3               	clrf	??_vfpfcnvrt+3
  3577  0289  0852               	movf	??_vfpfcnvrt+2,w
  3578  028A  00F0               	movwf	fputc@c
  3579  028B  0853               	movf	??_vfpfcnvrt+3,w
  3580  028C  00F1               	movwf	fputc@c+1
  3581  028D  085D               	movf	vfpfcnvrt@fp,w
  3582  028E  00D4               	movwf	??_vfpfcnvrt+4
  3583  028F  0854               	movf	??_vfpfcnvrt+4,w
  3584  0290  00F2               	movwf	fputc@fp
  3585  0291  3180  206D  3181   	fcall	_fputc
  3586  0294                     l1683:
  3587                           
  3588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3589  0294  0020               	movlb	0	; select bank0
  3590  0295  084E               	movf	vfpfcnvrt@fmt,w
  3591  0296  0086               	movwf	6
  3592  0297  0187               	clrf	7
  3593  0298  3001               	movlw	1
  3594  0299  0781               	addwf	1,f
  3595  029A  3141               	addfsr 1,1
  3596  029B  1803               	skipnc
  3597  029C  0A81               	incf	1,f
  3598  029D  2A6A               	goto	l1671
  3599  029E                     l772:
  3600  029E  0008               	return
  3601  029F                     __end_of_vfpfcnvrt:
  3602                           
  3603                           	psect	text7
  3604  048A                     __ptext7:	
  3605 ;; *************** function _dtoa *****************
  3606 ;; Defined at:
  3607 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  fp              1    wreg     PTR struct _IO_FILE
  3610 ;;		 -> sprintf@f(5), 
  3611 ;;  d               8   16[BANK0 ] long long 
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  3614 ;;		 -> sprintf@f(5), 
  3615 ;;  n               8   36[BANK0 ] long long 
  3616 ;;  i               2   44[BANK0 ] int 
  3617 ;;  s               2   34[BANK0 ] int 
  3618 ;;  w               2   32[BANK0 ] int 
  3619 ;;  p               2   30[BANK0 ] int 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  2   16[BANK0 ] int 
  3622 ;; Registers used:
  3623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3629 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3630 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3631 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3632 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3633 ;;Total ram usage:       30 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    4
  3636 ;; This function calls:
  3637 ;;		___aodiv
  3638 ;;		___aomod
  3639 ;;		_abs
  3640 ;;		_pad
  3641 ;; This function is called by:
  3642 ;;		_vfpfcnvrt
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           
  3647                           ;psect for function _dtoa
  3648  048A                     _dtoa:
  3649                           
  3650                           ;incstack = 0
  3651                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3652                           ;dtoa@fp stored from wreg
  3653  048A  0020               	movlb	0	; select bank0
  3654  048B  00BD               	movwf	dtoa@fp
  3655  048C                     l1569:
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3658  048C  0830               	movf	dtoa@d,w
  3659  048D  00C4               	movwf	dtoa@n
  3660  048E  0831               	movf	dtoa@d+1,w
  3661  048F  00C5               	movwf	dtoa@n+1
  3662  0490  0832               	movf	dtoa@d+2,w
  3663  0491  00C6               	movwf	dtoa@n+2
  3664  0492  0833               	movf	dtoa@d+3,w
  3665  0493  00C7               	movwf	dtoa@n+3
  3666  0494  0834               	movf	dtoa@d+4,w
  3667  0495  00C8               	movwf	dtoa@n+4
  3668  0496  0835               	movf	dtoa@d+5,w
  3669  0497  00C9               	movwf	dtoa@n+5
  3670  0498  0836               	movf	dtoa@d+6,w
  3671  0499  00CA               	movwf	dtoa@n+6
  3672  049A  0837               	movf	dtoa@d+7,w
  3673  049B  00CB               	movwf	dtoa@n+7
  3674  049C                     l1571:
  3675                           
  3676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3677  049C  3044               	movlw	low dtoa@n
  3678  049D  0086               	movwf	6
  3679  049E  3000               	movlw	high dtoa@n
  3680  049F  0087               	movwf	7
  3681  04A0  3F47               	moviw [7]fsr1
  3682  04A1  00B8               	movwf	??_dtoa
  3683  04A2  1BB8               	btfsc	??_dtoa,7
  3684  04A3  2CA5               	goto	u1251
  3685  04A4  2CA7               	goto	u1250
  3686  04A5                     u1251:
  3687  04A5  3001               	movlw	1
  3688  04A6  2CA8               	goto	u1260
  3689  04A7                     u1250:
  3690  04A7  3000               	movlw	0
  3691  04A8                     u1260:
  3692  04A8  0020               	movlb	0	; select bank0
  3693  04A9  00B9               	movwf	??_dtoa+1
  3694  04AA  01BA               	clrf	??_dtoa+2
  3695  04AB  0839               	movf	??_dtoa+1,w
  3696  04AC  00C2               	movwf	dtoa@s
  3697  04AD  083A               	movf	??_dtoa+2,w
  3698  04AE  00C3               	movwf	dtoa@s+1
  3699  04AF                     l1573:
  3700                           
  3701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3702  04AF  0842               	movf	dtoa@s,w
  3703  04B0  0443               	iorwf	dtoa@s+1,w
  3704  04B1  1903               	btfsc	3,2
  3705  04B2  2CB4               	goto	u1271
  3706  04B3  2CB5               	goto	u1270
  3707  04B4                     u1271:
  3708  04B4  2CD3               	goto	l742
  3709  04B5                     u1270:
  3710  04B5                     l1575:
  3711                           
  3712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3713  04B5  09C4               	comf	dtoa@n,f
  3714  04B6  09C5               	comf	dtoa@n+1,f
  3715  04B7  09C6               	comf	dtoa@n+2,f
  3716  04B8  09C7               	comf	dtoa@n+3,f
  3717  04B9  09C8               	comf	dtoa@n+4,f
  3718  04BA  09C9               	comf	dtoa@n+5,f
  3719  04BB  09CA               	comf	dtoa@n+6,f
  3720  04BC  09CB               	comf	dtoa@n+7,f
  3721  04BD  0AC4               	incf	dtoa@n,f
  3722  04BE  1D03               	skipz
  3723  04BF  2CD3               	goto	u128lld
  3724  04C0  0AC5               	incf	dtoa@n+1,f
  3725  04C1  1D03               	skipz
  3726  04C2  2CD3               	goto	u128lld
  3727  04C3  0AC6               	incf	dtoa@n+2,f
  3728  04C4  1D03               	skipz
  3729  04C5  2CD3               	goto	u128lld
  3730  04C6  0AC7               	incf	dtoa@n+3,f
  3731  04C7  1D03               	skipz
  3732  04C8  2CD3               	goto	u128lld
  3733  04C9  0AC8               	incf	dtoa@n+4,f
  3734  04CA  1D03               	skipz
  3735  04CB  2CD3               	goto	u128lld
  3736  04CC  0AC9               	incf	dtoa@n+5,f
  3737  04CD  1D03               	skipz
  3738  04CE  2CD3               	goto	u128lld
  3739  04CF  0ACA               	incf	dtoa@n+6,f
  3740  04D0  1D03               	skipz
  3741  04D1  2CD3               	goto	u128lld
  3742  04D2  0ACB               	incf	dtoa@n+7,f
  3743  04D3                     u128lld:
  3744  04D3                     l742:	
  3745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
  3746                           
  3747                           
  3748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3749  04D3  0020               	movlb	0	; select bank0
  3750  04D4  1BED               	btfsc	_prec+1,7
  3751  04D5  2CD7               	goto	u1291
  3752  04D6  2CD8               	goto	u1290
  3753  04D7                     u1291:
  3754  04D7  2CDC               	goto	l743
  3755  04D8                     u1290:
  3756  04D8                     l1577:
  3757                           
  3758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3759  04D8  30FD               	movlw	253
  3760  04D9  05EE               	andwf	_flags,f
  3761  04DA  30FF               	movlw	255
  3762  04DB  05EF               	andwf	_flags+1,f
  3763  04DC                     l743:	
  3764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
  3765                           
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3768  04DC  086D               	movf	_prec+1,w
  3769  04DD  3A80               	xorlw	128
  3770  04DE  00B8               	movwf	??_dtoa
  3771  04DF  3080               	movlw	128
  3772  04E0  0238               	subwf	??_dtoa,w
  3773  04E1  1D03               	skipz
  3774  04E2  2CE5               	goto	u1305
  3775  04E3  3001               	movlw	1
  3776  04E4  026C               	subwf	_prec,w
  3777  04E5                     u1305:
  3778  04E5  1803               	skipnc
  3779  04E6  2CE8               	goto	u1301
  3780  04E7  2CE9               	goto	u1300
  3781  04E8                     u1301:
  3782  04E8  2CEF               	goto	l1581
  3783  04E9                     u1300:
  3784  04E9                     l1579:
  3785  04E9  3001               	movlw	1
  3786  04EA  0020               	movlb	0	; select bank0
  3787  04EB  00BE               	movwf	dtoa@p
  3788  04EC  3000               	movlw	0
  3789  04ED  00BF               	movwf	dtoa@p+1
  3790  04EE  2CF4               	goto	l747
  3791  04EF                     l1581:
  3792  04EF  0020               	movlb	0	; select bank0
  3793  04F0  086D               	movf	_prec+1,w
  3794  04F1  00BF               	movwf	dtoa@p+1
  3795  04F2  086C               	movf	_prec,w
  3796  04F3  00BE               	movwf	dtoa@p
  3797  04F4                     l747:
  3798                           
  3799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3800  04F4  0021               	movlb	1	; select bank1
  3801  04F5  0866               	movf	(_width+1)^(0+128),w
  3802  04F6  0020               	movlb	0	; select bank0
  3803  04F7  00C1               	movwf	dtoa@w+1
  3804  04F8  0021               	movlb	1	; select bank1
  3805  04F9  0865               	movf	_width^(0+128),w
  3806  04FA  0020               	movlb	0	; select bank0
  3807  04FB  00C0               	movwf	dtoa@w
  3808  04FC                     l1583:
  3809                           
  3810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3811  04FC  0842               	movf	dtoa@s,w
  3812  04FD  0443               	iorwf	dtoa@s+1,w
  3813  04FE  1D03               	btfss	3,2
  3814  04FF  2D01               	goto	u1311
  3815  0500  2D02               	goto	u1310
  3816  0501                     u1311:
  3817  0501  2D06               	goto	l1587
  3818  0502                     u1310:
  3819  0502                     l1585:
  3820  0502  1D6E               	btfss	_flags,2
  3821  0503  2D05               	goto	u1321
  3822  0504  2D06               	goto	u1320
  3823  0505                     u1321:
  3824  0505  2D0A               	goto	l748
  3825  0506                     u1320:
  3826  0506                     l1587:
  3827                           
  3828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  3829  0506  30FF               	movlw	255
  3830  0507  07C0               	addwf	dtoa@w,f
  3831  0508  30FF               	movlw	255
  3832  0509  3DC1               	addwfc	dtoa@w+1,f
  3833  050A                     l748:	
  3834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
  3835                           
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3838  050A  301F               	movlw	31
  3839  050B  00CC               	movwf	dtoa@i
  3840  050C  3000               	movlw	0
  3841  050D  00CD               	movwf	dtoa@i+1
  3842  050E                     l1589:
  3843                           
  3844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3845  050E  0022               	movlb	2	; select bank2
  3846  050F  01BF               	clrf	(_dbuf^(0+256)+31)
  3847                           
  3848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3849  0510  2D7A               	goto	l751
  3850  0511                     l1591:
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  3853  0511  30FF               	movlw	255
  3854  0512  0020               	movlb	0	; select bank0
  3855  0513  07CC               	addwf	dtoa@i,f
  3856  0514  30FF               	movlw	255
  3857  0515  3DCD               	addwfc	dtoa@i+1,f
  3858  0516                     l1593:
  3859                           
  3860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3861  0516  300A               	movlw	10
  3862  0517  00A0               	movwf	___aomod@divisor
  3863  0518  01A1               	clrf	___aomod@divisor+1
  3864  0519  01A2               	clrf	___aomod@divisor+2
  3865  051A  01A3               	clrf	___aomod@divisor+3
  3866  051B  01A4               	clrf	___aomod@divisor+4
  3867  051C  01A5               	clrf	___aomod@divisor+5
  3868  051D  01A6               	clrf	___aomod@divisor+6
  3869  051E  01A7               	clrf	___aomod@divisor+7
  3870  051F  0844               	movf	dtoa@n,w
  3871  0520  00A8               	movwf	___aomod@dividend
  3872  0521  0845               	movf	dtoa@n+1,w
  3873  0522  00A9               	movwf	___aomod@dividend+1
  3874  0523  0846               	movf	dtoa@n+2,w
  3875  0524  00AA               	movwf	___aomod@dividend+2
  3876  0525  0847               	movf	dtoa@n+3,w
  3877  0526  00AB               	movwf	___aomod@dividend+3
  3878  0527  0848               	movf	dtoa@n+4,w
  3879  0528  00AC               	movwf	___aomod@dividend+4
  3880  0529  0849               	movf	dtoa@n+5,w
  3881  052A  00AD               	movwf	___aomod@dividend+5
  3882  052B  084A               	movf	dtoa@n+6,w
  3883  052C  00AE               	movwf	___aomod@dividend+6
  3884  052D  084B               	movf	dtoa@n+7,w
  3885  052E  00AF               	movwf	___aomod@dividend+7
  3886  052F  3182  229F  3184   	fcall	___aomod
  3887  0532  0020               	movlb	0	; select bank0
  3888  0533  0821               	movf	?___aomod+1,w
  3889  0534  00F4               	movwf	abs@a+1
  3890  0535  0820               	movf	?___aomod,w
  3891  0536  00F3               	movwf	abs@a
  3892  0537  318E  265E  3184   	fcall	_abs
  3893  053A  0873               	movf	?_abs,w
  3894  053B  3E30               	addlw	48
  3895  053C  0020               	movlb	0	; select bank0
  3896  053D  00B8               	movwf	??_dtoa
  3897  053E  084C               	movf	dtoa@i,w
  3898  053F  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3899  0540  0086               	movwf	6
  3900  0541  3001               	movlw	1	; select bank2/3
  3901  0542  0087               	movwf	7
  3902  0543  0838               	movf	??_dtoa,w
  3903  0544  0081               	movwf	1
  3904  0545                     l1595:
  3905                           
  3906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  3907  0545  30FF               	movlw	255
  3908  0546  07BE               	addwf	dtoa@p,f
  3909  0547  30FF               	movlw	255
  3910  0548  3DBF               	addwfc	dtoa@p+1,f
  3911  0549                     l1597:
  3912                           
  3913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  3914  0549  30FF               	movlw	255
  3915  054A  07C0               	addwf	dtoa@w,f
  3916  054B  30FF               	movlw	255
  3917  054C  3DC1               	addwfc	dtoa@w+1,f
  3918  054D                     l1599:
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3921  054D  300A               	movlw	10
  3922  054E  00A0               	movwf	___aodiv@divisor
  3923  054F  01A1               	clrf	___aodiv@divisor+1
  3924  0550  01A2               	clrf	___aodiv@divisor+2
  3925  0551  01A3               	clrf	___aodiv@divisor+3
  3926  0552  01A4               	clrf	___aodiv@divisor+4
  3927  0553  01A5               	clrf	___aodiv@divisor+5
  3928  0554  01A6               	clrf	___aodiv@divisor+6
  3929  0555  01A7               	clrf	___aodiv@divisor+7
  3930  0556  0844               	movf	dtoa@n,w
  3931  0557  00A8               	movwf	___aodiv@dividend
  3932  0558  0845               	movf	dtoa@n+1,w
  3933  0559  00A9               	movwf	___aodiv@dividend+1
  3934  055A  0846               	movf	dtoa@n+2,w
  3935  055B  00AA               	movwf	___aodiv@dividend+2
  3936  055C  0847               	movf	dtoa@n+3,w
  3937  055D  00AB               	movwf	___aodiv@dividend+3
  3938  055E  0848               	movf	dtoa@n+4,w
  3939  055F  00AC               	movwf	___aodiv@dividend+4
  3940  0560  0849               	movf	dtoa@n+5,w
  3941  0561  00AD               	movwf	___aodiv@dividend+5
  3942  0562  084A               	movf	dtoa@n+6,w
  3943  0563  00AE               	movwf	___aodiv@dividend+6
  3944  0564  084B               	movf	dtoa@n+7,w
  3945  0565  00AF               	movwf	___aodiv@dividend+7
  3946  0566  3183  2389  3184   	fcall	___aodiv
  3947  0569  0020               	movlb	0	; select bank0
  3948  056A  0820               	movf	?___aodiv,w
  3949  056B  00C4               	movwf	dtoa@n
  3950  056C  0821               	movf	?___aodiv+1,w
  3951  056D  00C5               	movwf	dtoa@n+1
  3952  056E  0822               	movf	?___aodiv+2,w
  3953  056F  00C6               	movwf	dtoa@n+2
  3954  0570  0823               	movf	?___aodiv+3,w
  3955  0571  00C7               	movwf	dtoa@n+3
  3956  0572  0824               	movf	?___aodiv+4,w
  3957  0573  00C8               	movwf	dtoa@n+4
  3958  0574  0825               	movf	?___aodiv+5,w
  3959  0575  00C9               	movwf	dtoa@n+5
  3960  0576  0826               	movf	?___aodiv+6,w
  3961  0577  00CA               	movwf	dtoa@n+6
  3962  0578  0827               	movf	?___aodiv+7,w
  3963  0579  00CB               	movwf	dtoa@n+7
  3964  057A                     l751:	
  3965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
  3966                           
  3967                           
  3968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3969  057A  0020               	movlb	0	; select bank0
  3970  057B  084D               	movf	dtoa@i+1,w
  3971  057C  3A80               	xorlw	128
  3972  057D  00B8               	movwf	??_dtoa
  3973  057E  3080               	movlw	128
  3974  057F  0238               	subwf	??_dtoa,w
  3975  0580  1D03               	skipz
  3976  0581  2D84               	goto	u1335
  3977  0582  3001               	movlw	1
  3978  0583  024C               	subwf	dtoa@i,w
  3979  0584                     u1335:
  3980  0584  1C03               	skipc
  3981  0585  2D87               	goto	u1331
  3982  0586  2D88               	goto	u1330
  3983  0587                     u1331:
  3984  0587  2DB5               	goto	l1609
  3985  0588                     u1330:
  3986  0588                     l1601:
  3987  0588  0020               	movlb	0	; select bank0
  3988  0589  0844               	movf	dtoa@n,w
  3989  058A  0445               	iorwf	dtoa@n+1,w
  3990  058B  0446               	iorwf	dtoa@n+2,w
  3991  058C  0447               	iorwf	dtoa@n+3,w
  3992  058D  0448               	iorwf	dtoa@n+4,w
  3993  058E  0449               	iorwf	dtoa@n+5,w
  3994  058F  044A               	iorwf	dtoa@n+6,w
  3995  0590  044B               	iorwf	dtoa@n+7,w
  3996  0591  1D03               	skipz
  3997  0592  2D94               	goto	u1341
  3998  0593  2D95               	goto	u1340
  3999  0594                     u1341:
  4000  0594  2D11               	goto	l1591
  4001  0595                     u1340:
  4002  0595                     l1603:
  4003  0595  083F               	movf	dtoa@p+1,w
  4004  0596  3A80               	xorlw	128
  4005  0597  00B8               	movwf	??_dtoa
  4006  0598  3080               	movlw	128
  4007  0599  0238               	subwf	??_dtoa,w
  4008  059A  1D03               	skipz
  4009  059B  2D9E               	goto	u1355
  4010  059C  3001               	movlw	1
  4011  059D  023E               	subwf	dtoa@p,w
  4012  059E                     u1355:
  4013  059E  1803               	skipnc
  4014  059F  2DA1               	goto	u1351
  4015  05A0  2DA2               	goto	u1350
  4016  05A1                     u1351:
  4017  05A1  2D11               	goto	l1591
  4018  05A2                     u1350:
  4019  05A2                     l1605:
  4020  05A2  0020               	movlb	0	; select bank0
  4021  05A3  0841               	movf	dtoa@w+1,w
  4022  05A4  3A80               	xorlw	128
  4023  05A5  00B8               	movwf	??_dtoa
  4024  05A6  3080               	movlw	128
  4025  05A7  0238               	subwf	??_dtoa,w
  4026  05A8  1D03               	skipz
  4027  05A9  2DAC               	goto	u1365
  4028  05AA  3001               	movlw	1
  4029  05AB  0240               	subwf	dtoa@w,w
  4030  05AC                     u1365:
  4031  05AC  1C03               	skipc
  4032  05AD  2DAF               	goto	u1361
  4033  05AE  2DB0               	goto	u1360
  4034  05AF                     u1361:
  4035  05AF  2DB5               	goto	l1609
  4036  05B0                     u1360:
  4037  05B0                     l1607:
  4038  05B0  0020               	movlb	0	; select bank0
  4039  05B1  18EE               	btfsc	_flags,1
  4040  05B2  2DB4               	goto	u1371
  4041  05B3  2DB5               	goto	u1370
  4042  05B4                     u1371:
  4043  05B4  2D11               	goto	l1591
  4044  05B5                     u1370:
  4045  05B5                     l1609:
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4048  05B5  0020               	movlb	0	; select bank0
  4049  05B6  0842               	movf	dtoa@s,w
  4050  05B7  0443               	iorwf	dtoa@s+1,w
  4051  05B8  1D03               	btfss	3,2
  4052  05B9  2DBB               	goto	u1381
  4053  05BA  2DBC               	goto	u1380
  4054  05BB                     u1381:
  4055  05BB  2DC0               	goto	l1613
  4056  05BC                     u1380:
  4057  05BC                     l1611:
  4058  05BC  1D6E               	btfss	_flags,2
  4059  05BD  2DBF               	goto	u1391
  4060  05BE  2DC0               	goto	u1390
  4061  05BF                     u1391:
  4062  05BF  2DDC               	goto	l1623
  4063  05C0                     u1390:
  4064  05C0                     l1613:
  4065                           
  4066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  4067  05C0  30FF               	movlw	255
  4068  05C1  07CC               	addwf	dtoa@i,f
  4069  05C2  30FF               	movlw	255
  4070  05C3  3DCD               	addwfc	dtoa@i+1,f
  4071  05C4                     l1615:
  4072                           
  4073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4074  05C4  0842               	movf	dtoa@s,w
  4075  05C5  0443               	iorwf	dtoa@s+1,w
  4076  05C6  1D03               	btfss	3,2
  4077  05C7  2DC9               	goto	u1401
  4078  05C8  2DCA               	goto	u1400
  4079  05C9                     u1401:
  4080  05C9  2DCF               	goto	l1619
  4081  05CA                     u1400:
  4082  05CA                     l1617:
  4083  05CA  302B               	movlw	43
  4084  05CB  00BB               	movwf	_dtoa$611
  4085  05CC  3000               	movlw	0
  4086  05CD  00BC               	movwf	_dtoa$611+1
  4087  05CE  2DD3               	goto	l1621
  4088  05CF                     l1619:
  4089  05CF  302D               	movlw	45
  4090  05D0  00BB               	movwf	_dtoa$611
  4091  05D1  3000               	movlw	0
  4092  05D2  00BC               	movwf	_dtoa$611+1
  4093  05D3                     l1621:
  4094  05D3  083B               	movf	_dtoa$611,w
  4095  05D4  00B8               	movwf	??_dtoa
  4096  05D5  084C               	movf	dtoa@i,w
  4097  05D6  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4098  05D7  0086               	movwf	6
  4099  05D8  3001               	movlw	1	; select bank2/3
  4100  05D9  0087               	movwf	7
  4101  05DA  0838               	movf	??_dtoa,w
  4102  05DB  0081               	movwf	1
  4103  05DC                     l1623:
  4104                           
  4105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4106  05DC  084C               	movf	dtoa@i,w
  4107  05DD  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4108  05DE  00B8               	movwf	??_dtoa
  4109  05DF  0838               	movf	??_dtoa,w
  4110  05E0  00A4               	movwf	pad@buf
  4111  05E1  0841               	movf	dtoa@w+1,w
  4112  05E2  00A6               	movwf	pad@p+1
  4113  05E3  0840               	movf	dtoa@w,w
  4114  05E4  00A5               	movwf	pad@p
  4115  05E5  083D               	movf	dtoa@fp,w
  4116  05E6  3181  210F  3184   	fcall	_pad
  4117  05E9  0020               	movlb	0	; select bank0
  4118  05EA  0825               	movf	?_pad+1,w
  4119  05EB  00B1               	movwf	?_dtoa+1
  4120  05EC  0824               	movf	?_pad,w
  4121  05ED  00B0               	movwf	?_dtoa
  4122  05EE                     l765:
  4123  05EE  0008               	return
  4124  05EF                     __end_of_dtoa:
  4125                           
  4126                           	psect	text8
  4127  010F                     __ptext8:	
  4128 ;; *************** function _pad *****************
  4129 ;; Defined at:
  4130 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  fp              1    wreg     PTR struct _IO_FILE
  4133 ;;		 -> sprintf@f(5), 
  4134 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  4135 ;;		 -> dbuf(32), 
  4136 ;;  p               2    5[BANK0 ] int 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  4139 ;;		 -> sprintf@f(5), 
  4140 ;;  w               2    9[BANK0 ] int 
  4141 ;;  i               2    7[BANK0 ] int 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  2    4[BANK0 ] int 
  4144 ;; Registers used:
  4145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4151 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4152 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4153 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4154 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4155 ;;Total ram usage:        9 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    3
  4158 ;; This function calls:
  4159 ;;		_fputc
  4160 ;;		_fputs
  4161 ;;		_strlen
  4162 ;; This function is called by:
  4163 ;;		_dtoa
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           
  4168                           ;psect for function _pad
  4169  010F                     _pad:
  4170                           
  4171                           ;incstack = 0
  4172                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4173                           ;pad@fp stored from wreg
  4174  010F  0020               	movlb	0	; select bank0
  4175  0110  00AB               	movwf	pad@fp
  4176  0111                     l1529:
  4177                           
  4178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4179  0111  1C6E               	btfss	_flags,0
  4180  0112  2914               	goto	u1191
  4181  0113  2915               	goto	u1190
  4182  0114                     u1191:
  4183  0114  291D               	goto	l1533
  4184  0115                     u1190:
  4185  0115                     l1531:
  4186                           
  4187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4188  0115  082B               	movf	pad@fp,w
  4189  0116  00FC               	movwf	??_pad
  4190  0117  087C               	movf	??_pad,w
  4191  0118  00F8               	movwf	fputs@fp
  4192  0119  0824               	movf	pad@buf,w
  4193  011A  3180  2008  3181   	fcall	_fputs
  4194  011D                     l1533:
  4195                           
  4196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4197  011D  0020               	movlb	0	; select bank0
  4198  011E  1BA6               	btfsc	pad@p+1,7
  4199  011F  2921               	goto	u1201
  4200  0120  2922               	goto	u1200
  4201  0121                     u1201:
  4202  0121  2927               	goto	l1537
  4203  0122                     u1200:
  4204  0122                     l1535:
  4205  0122  0826               	movf	pad@p+1,w
  4206  0123  00AA               	movwf	pad@w+1
  4207  0124  0825               	movf	pad@p,w
  4208  0125  00A9               	movwf	pad@w
  4209  0126  2929               	goto	l734
  4210  0127                     l1537:
  4211  0127  01A9               	clrf	pad@w
  4212  0128  01AA               	clrf	pad@w+1
  4213  0129                     l734:
  4214                           
  4215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4216  0129  01A7               	clrf	pad@i
  4217  012A  01A8               	clrf	pad@i+1
  4218                           
  4219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4220  012B  293D               	goto	l1543
  4221  012C                     l1539:
  4222                           
  4223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4224  012C  3020               	movlw	32
  4225  012D  00F0               	movwf	fputc@c
  4226  012E  3000               	movlw	0
  4227  012F  00F1               	movwf	fputc@c+1
  4228  0130  0020               	movlb	0	; select bank0
  4229  0131  082B               	movf	pad@fp,w
  4230  0132  00FC               	movwf	??_pad
  4231  0133  087C               	movf	??_pad,w
  4232  0134  00F2               	movwf	fputc@fp
  4233  0135  3180  206D  3181   	fcall	_fputc
  4234  0138                     l1541:
  4235                           
  4236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4237  0138  3001               	movlw	1
  4238  0139  0020               	movlb	0	; select bank0
  4239  013A  07A7               	addwf	pad@i,f
  4240  013B  3000               	movlw	0
  4241  013C  3DA8               	addwfc	pad@i+1,f
  4242  013D                     l1543:
  4243                           
  4244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4245  013D  0828               	movf	pad@i+1,w
  4246  013E  3A80               	xorlw	128
  4247  013F  00FC               	movwf	??_pad
  4248  0140  082A               	movf	pad@w+1,w
  4249  0141  3A80               	xorlw	128
  4250  0142  027C               	subwf	??_pad,w
  4251  0143  1D03               	skipz
  4252  0144  2947               	goto	u1215
  4253  0145  0829               	movf	pad@w,w
  4254  0146  0227               	subwf	pad@i,w
  4255  0147                     u1215:
  4256  0147  1C03               	skipc
  4257  0148  294A               	goto	u1211
  4258  0149  294B               	goto	u1210
  4259  014A                     u1211:
  4260  014A  292C               	goto	l1539
  4261  014B                     u1210:
  4262  014B                     l737:
  4263                           
  4264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4265  014B  0020               	movlb	0	; select bank0
  4266  014C  186E               	btfsc	_flags,0
  4267  014D  294F               	goto	u1221
  4268  014E  2950               	goto	u1220
  4269  014F                     u1221:
  4270  014F  2958               	goto	l1547
  4271  0150                     u1220:
  4272  0150                     l1545:
  4273                           
  4274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4275  0150  082B               	movf	pad@fp,w
  4276  0151  00FC               	movwf	??_pad
  4277  0152  087C               	movf	??_pad,w
  4278  0153  00F8               	movwf	fputs@fp
  4279  0154  0824               	movf	pad@buf,w
  4280  0155  3180  2008  3181   	fcall	_fputs
  4281  0158                     l1547:
  4282                           
  4283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4284  0158  0020               	movlb	0	; select bank0
  4285  0159  0824               	movf	pad@buf,w
  4286  015A  318E  2678  3181   	fcall	_strlen
  4287  015D  0020               	movlb	0	; select bank0
  4288  015E  0829               	movf	pad@w,w
  4289  015F  0770               	addwf	?_strlen,w
  4290  0160  00A4               	movwf	?_pad
  4291  0161  082A               	movf	pad@w+1,w
  4292  0162  3D71               	addwfc	?_strlen+1,w
  4293  0163  00A5               	movwf	?_pad+1
  4294  0164                     l739:
  4295  0164  0008               	return
  4296  0165                     __end_of_pad:
  4297                           
  4298                           	psect	text9
  4299  0E78                     __ptext9:	
  4300 ;; *************** function _strlen *****************
  4301 ;; Defined at:
  4302 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  s               1    wreg     PTR const unsigned char 
  4305 ;;		 -> dbuf(32), 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  s               1    4[COMMON] PTR const unsigned char 
  4308 ;;		 -> dbuf(32), 
  4309 ;;  a               1    3[COMMON] PTR const unsigned char 
  4310 ;;		 -> dbuf(32), 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  2    0[COMMON] unsigned int 
  4313 ;; Registers used:
  4314 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4321 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4323 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4324 ;;Total ram usage:        5 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_pad
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           
  4334                           ;psect for function _strlen
  4335  0E78                     _strlen:
  4336                           
  4337                           ;incstack = 0
  4338                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4339                           ;strlen@s stored from wreg
  4340  0E78  00F4               	movwf	strlen@s
  4341  0E79                     l1451:
  4342  0E79  0874               	movf	strlen@s,w
  4343  0E7A  00F2               	movwf	??_strlen
  4344  0E7B  0872               	movf	??_strlen,w
  4345  0E7C  00F3               	movwf	strlen@a
  4346  0E7D  2E82               	goto	l1455
  4347  0E7E                     l1453:
  4348  0E7E  3001               	movlw	1
  4349  0E7F  00F2               	movwf	??_strlen
  4350  0E80  0872               	movf	??_strlen,w
  4351  0E81  07F4               	addwf	strlen@s,f
  4352  0E82                     l1455:
  4353  0E82  0874               	movf	strlen@s,w
  4354  0E83  0086               	movwf	6
  4355  0E84  3001               	movlw	1	; select bank2/3
  4356  0E85  0087               	movwf	7
  4357  0E86  0801               	movf	1,w
  4358  0E87  1D03               	btfss	3,2
  4359  0E88  2E8A               	goto	u971
  4360  0E89  2E8B               	goto	u970
  4361  0E8A                     u971:
  4362  0E8A  2E7E               	goto	l1453
  4363  0E8B                     u970:
  4364  0E8B                     l1457:
  4365  0E8B  0873               	movf	strlen@a,w
  4366  0E8C  0274               	subwf	strlen@s,w
  4367  0E8D  00F0               	movwf	?_strlen
  4368  0E8E  01F1               	clrf	?_strlen+1
  4369  0E8F  1BF0               	btfsc	?_strlen,7
  4370  0E90  03F1               	decf	?_strlen+1,f
  4371  0E91                     l815:
  4372  0E91  0008               	return
  4373  0E92                     __end_of_strlen:
  4374                           
  4375                           	psect	text10
  4376  0008                     __ptext10:	
  4377 ;; *************** function _fputs *****************
  4378 ;; Defined at:
  4379 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  s               1    wreg     PTR const unsigned char 
  4382 ;;		 -> dbuf(32), 
  4383 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  4384 ;;		 -> sprintf@f(5), 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4387 ;;		 -> dbuf(32), 
  4388 ;;  i               2    1[BANK0 ] int 
  4389 ;;  c               1    0[BANK0 ] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  2    8[COMMON] int 
  4392 ;; Registers used:
  4393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4399 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4400 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4401 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4402 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4403 ;;Total ram usage:        8 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    2
  4406 ;; This function calls:
  4407 ;;		_fputc
  4408 ;; This function is called by:
  4409 ;;		_pad
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           
  4414                           ;psect for function _fputs
  4415  0008                     _fputs:
  4416                           
  4417                           ;incstack = 0
  4418                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4419                           ;fputs@s stored from wreg
  4420  0008  0020               	movlb	0	; select bank0
  4421  0009  00A3               	movwf	fputs@s
  4422  000A                     l1443:
  4423  000A  01A1               	clrf	fputs@i
  4424  000B  01A2               	clrf	fputs@i+1
  4425  000C  2820               	goto	l1449
  4426  000D                     l1445:
  4427  000D  0820               	movf	fputs@c,w
  4428  000E  00F9               	movwf	??_fputs
  4429  000F  01FA               	clrf	??_fputs+1
  4430  0010  0879               	movf	??_fputs,w
  4431  0011  00F0               	movwf	fputc@c
  4432  0012  087A               	movf	??_fputs+1,w
  4433  0013  00F1               	movwf	fputc@c+1
  4434  0014  0878               	movf	fputs@fp,w
  4435  0015  00FB               	movwf	??_fputs+2
  4436  0016  087B               	movf	??_fputs+2,w
  4437  0017  00F2               	movwf	fputc@fp
  4438  0018  3180  206D  3180   	fcall	_fputc
  4439  001B                     l1447:
  4440  001B  3001               	movlw	1
  4441  001C  0020               	movlb	0	; select bank0
  4442  001D  07A1               	addwf	fputs@i,f
  4443  001E  3000               	movlw	0
  4444  001F  3DA2               	addwfc	fputs@i+1,f
  4445  0020                     l1449:
  4446  0020  0821               	movf	fputs@i,w
  4447  0021  0723               	addwf	fputs@s,w
  4448  0022  00F9               	movwf	??_fputs
  4449  0023  0879               	movf	??_fputs,w
  4450  0024  0086               	movwf	6
  4451  0025  3001               	movlw	1	; select bank2/3
  4452  0026  0087               	movwf	7
  4453  0027  0801               	movf	1,w
  4454  0028  00FA               	movwf	??_fputs+1
  4455  0029  087A               	movf	??_fputs+1,w
  4456  002A  00A0               	movwf	fputs@c
  4457  002B  0820               	movf	fputs@c,w
  4458  002C  1D03               	btfss	3,2
  4459  002D  282F               	goto	u961
  4460  002E  2830               	goto	u960
  4461  002F                     u961:
  4462  002F  280D               	goto	l1445
  4463  0030                     u960:
  4464  0030                     l806:
  4465  0030  0008               	return
  4466  0031                     __end_of_fputs:
  4467                           
  4468                           	psect	text11
  4469  006D                     __ptext11:	
  4470 ;; *************** function _fputc *****************
  4471 ;; Defined at:
  4472 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  c               2    0[COMMON] int 
  4475 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  4476 ;;		 -> sprintf@f(5), 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  2    0[COMMON] int 
  4481 ;; Registers used:
  4482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4488 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4490 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4491 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4492 ;;Total ram usage:        8 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; Hardware stack levels required when called:    1
  4495 ;; This function calls:
  4496 ;;		_putch
  4497 ;; This function is called by:
  4498 ;;		_pad
  4499 ;;		_vfpfcnvrt
  4500 ;;		_fputs
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           
  4505                           ;psect for function _fputc
  4506  006D                     _fputc:
  4507  006D                     l1427:	
  4508                           ;incstack = 0
  4509                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4510                           
  4511  006D  0872               	movf	fputc@fp,w
  4512  006E  1903               	btfsc	3,2
  4513  006F  2871               	goto	u921
  4514  0070  2872               	goto	u920
  4515  0071                     u921:
  4516  0071  2877               	goto	l1431
  4517  0072                     u920:
  4518  0072                     l1429:
  4519  0072  0872               	movf	fputc@fp,w
  4520  0073  1D03               	btfss	3,2
  4521  0074  2876               	goto	u931
  4522  0075  2877               	goto	u930
  4523  0076                     u931:
  4524  0076  287C               	goto	l1433
  4525  0077                     u930:
  4526  0077                     l1431:
  4527  0077  0870               	movf	fputc@c,w
  4528  0078  318E  2626  3180   	fcall	_putch
  4529  007B  28BB               	goto	l798
  4530  007C                     l1433:
  4531  007C  0872               	movf	fputc@fp,w
  4532  007D  3E03               	addlw	3
  4533  007E  0086               	movwf	6
  4534  007F  0187               	clrf	7
  4535  0080  0016               	moviw fsr1++
  4536  0081  0401               	iorwf	1,w
  4537  0082  1903               	btfsc	3,2
  4538  0083  2885               	goto	u941
  4539  0084  2886               	goto	u940
  4540  0085                     u941:
  4541  0085  28A3               	goto	l1437
  4542  0086                     u940:
  4543  0086                     l1435:
  4544  0086  0872               	movf	fputc@fp,w
  4545  0087  3E03               	addlw	3
  4546  0088  0086               	movwf	6
  4547  0089  0187               	clrf	7
  4548  008A  3F40               	moviw [0]fsr1
  4549  008B  00F3               	movwf	??_fputc
  4550  008C  3F41               	moviw [1]fsr1
  4551  008D  00F4               	movwf	??_fputc+1
  4552  008E  0A72               	incf	fputc@fp,w
  4553  008F  0086               	movwf	6
  4554  0090  0187               	clrf	7
  4555  0091  3F40               	moviw [0]fsr1
  4556  0092  00F5               	movwf	??_fputc+2
  4557  0093  3F41               	moviw [1]fsr1
  4558  0094  00F6               	movwf	??_fputc+3
  4559  0095  0876               	movf	??_fputc+3,w
  4560  0096  3A80               	xorlw	128
  4561  0097  00F7               	movwf	??_fputc+4
  4562  0098  0874               	movf	??_fputc+1,w
  4563  0099  3A80               	xorlw	128
  4564  009A  0277               	subwf	??_fputc+4,w
  4565  009B  1D03               	skipz
  4566  009C  289F               	goto	u955
  4567  009D  0873               	movf	??_fputc,w
  4568  009E  0275               	subwf	??_fputc+2,w
  4569  009F                     u955:
  4570  009F  1803               	skipnc
  4571  00A0  28A2               	goto	u951
  4572  00A1  28A3               	goto	u950
  4573  00A2                     u951:
  4574  00A2  28BB               	goto	l798
  4575  00A3                     u950:
  4576  00A3                     l1437:
  4577  00A3  0870               	movf	fputc@c,w
  4578  00A4  00F3               	movwf	??_fputc
  4579  00A5  0872               	movf	fputc@fp,w
  4580  00A6  0086               	movwf	6
  4581  00A7  0187               	clrf	7
  4582  00A8  0A72               	incf	fputc@fp,w
  4583  00A9  0084               	movwf	4
  4584  00AA  0185               	clrf	5
  4585  00AB  0800               	movf	0,w
  4586  00AC  0701               	addwf	1,w
  4587  00AD  00F4               	movwf	??_fputc+1
  4588  00AE  0874               	movf	??_fputc+1,w
  4589  00AF  0086               	movwf	6
  4590  00B0  0187               	clrf	7
  4591  00B1  0873               	movf	??_fputc,w
  4592  00B2  0081               	movwf	1
  4593  00B3                     l1439:
  4594  00B3  0A72               	incf	fputc@fp,w
  4595  00B4  0086               	movwf	6
  4596  00B5  0187               	clrf	7
  4597  00B6  3001               	movlw	1
  4598  00B7  0781               	addwf	1,f
  4599  00B8  3141               	addfsr 1,1
  4600  00B9  1803               	skipnc
  4601  00BA  0A81               	incf	1,f
  4602  00BB                     l798:
  4603  00BB  0008               	return
  4604  00BC                     __end_of_fputc:
  4605                           
  4606                           	psect	text12
  4607  0E26                     __ptext12:	
  4608 ;; *************** function _putch *****************
  4609 ;; Defined at:
  4610 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  c               1    wreg     unsigned char 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  c               1    0[COMMON] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4628 ;;Total ram usage:        0 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_fputc
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           
  4638                           ;psect for function _putch
  4639  0E26                     _putch:
  4640  0E26                     l809:	
  4641                           ;incstack = 0
  4642                           ; Regs used in _putch: [wreg]
  4643                           
  4644  0E26  0008               	return
  4645  0E27                     __end_of_putch:
  4646                           
  4647                           	psect	text13
  4648  0E5E                     __ptext13:	
  4649 ;; *************** function _abs *****************
  4650 ;; Defined at:
  4651 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;  a               2    3[COMMON] int 
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  2    3[COMMON] int 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4667 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4668 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4669 ;;Total ram usage:        4 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; This function calls:
  4672 ;;		Nothing
  4673 ;; This function is called by:
  4674 ;;		_dtoa
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           
  4679                           ;psect for function _abs
  4680  0E5E                     _abs:
  4681  0E5E                     l1551:	
  4682                           ;incstack = 0
  4683                           ; Regs used in _abs: [wreg+status,2+status,0]
  4684                           
  4685  0E5E  0874               	movf	abs@a+1,w
  4686  0E5F  3A80               	xorlw	128
  4687  0E60  00F5               	movwf	??_abs
  4688  0E61  3080               	movlw	128
  4689  0E62  0275               	subwf	??_abs,w
  4690  0E63  1D03               	skipz
  4691  0E64  2E67               	goto	u1235
  4692  0E65  3001               	movlw	1
  4693  0E66  0273               	subwf	abs@a,w
  4694  0E67                     u1235:
  4695  0E67  1803               	skipnc
  4696  0E68  2E6A               	goto	u1231
  4697  0E69  2E6B               	goto	u1230
  4698  0E6A                     u1231:
  4699  0E6A  2E77               	goto	l783
  4700  0E6B                     u1230:
  4701  0E6B                     l1553:
  4702  0E6B  0973               	comf	abs@a,w
  4703  0E6C  00F5               	movwf	??_abs
  4704  0E6D  0974               	comf	abs@a+1,w
  4705  0E6E  00F6               	movwf	??_abs+1
  4706  0E6F  0AF5               	incf	??_abs,f
  4707  0E70  1903               	skipnz
  4708  0E71  0AF6               	incf	??_abs+1,f
  4709  0E72  0875               	movf	??_abs,w
  4710  0E73  00F3               	movwf	?_abs
  4711  0E74  0876               	movf	??_abs+1,w
  4712  0E75  00F4               	movwf	?_abs+1
  4713  0E76  2E77               	goto	l786
  4714  0E77                     l783:
  4715  0E77                     l786:
  4716  0E77  0008               	return
  4717  0E78                     __end_of_abs:
  4718                           
  4719                           	psect	text14
  4720  029F                     __ptext14:	
  4721 ;; *************** function ___aomod *****************
  4722 ;; Defined at:
  4723 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  divisor         8    0[BANK0 ] long long 
  4726 ;;  dividend        8    8[BANK0 ] long long 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  sign            1    2[COMMON] unsigned char 
  4729 ;;  counter         1    1[COMMON] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  8    0[BANK0 ] long long 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4739 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4740 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4741 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4742 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4743 ;;Total ram usage:       19 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_dtoa
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           
  4753                           ;psect for function ___aomod
  4754  029F                     ___aomod:
  4755  029F                     l1499:	
  4756                           ;incstack = 0
  4757                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4758                           
  4759  029F  01F2               	clrf	___aomod@sign
  4760  02A0                     l1501:
  4761  02A0  3028               	movlw	low ___aomod@dividend
  4762  02A1  0086               	movwf	6
  4763  02A2  3000               	movlw	high ___aomod@dividend
  4764  02A3  0087               	movwf	7
  4765  02A4  3F47               	moviw [7]fsr1
  4766  02A5  00F0               	movwf	??___aomod
  4767  02A6  1FF0               	btfss	??___aomod,7
  4768  02A7  2AA9               	goto	u1091
  4769  02A8  2AAA               	goto	u1090
  4770  02A9                     u1091:
  4771  02A9  2ACB               	goto	l1505
  4772  02AA                     u1090:
  4773  02AA                     l1503:
  4774  02AA  0020               	movlb	0	; select bank0
  4775  02AB  09A8               	comf	___aomod@dividend,f
  4776  02AC  09A9               	comf	___aomod@dividend+1,f
  4777  02AD  09AA               	comf	___aomod@dividend+2,f
  4778  02AE  09AB               	comf	___aomod@dividend+3,f
  4779  02AF  09AC               	comf	___aomod@dividend+4,f
  4780  02B0  09AD               	comf	___aomod@dividend+5,f
  4781  02B1  09AE               	comf	___aomod@dividend+6,f
  4782  02B2  09AF               	comf	___aomod@dividend+7,f
  4783  02B3  0AA8               	incf	___aomod@dividend,f
  4784  02B4  1D03               	skipz
  4785  02B5  2AC9               	goto	u110lld
  4786  02B6  0AA9               	incf	___aomod@dividend+1,f
  4787  02B7  1D03               	skipz
  4788  02B8  2AC9               	goto	u110lld
  4789  02B9  0AAA               	incf	___aomod@dividend+2,f
  4790  02BA  1D03               	skipz
  4791  02BB  2AC9               	goto	u110lld
  4792  02BC  0AAB               	incf	___aomod@dividend+3,f
  4793  02BD  1D03               	skipz
  4794  02BE  2AC9               	goto	u110lld
  4795  02BF  0AAC               	incf	___aomod@dividend+4,f
  4796  02C0  1D03               	skipz
  4797  02C1  2AC9               	goto	u110lld
  4798  02C2  0AAD               	incf	___aomod@dividend+5,f
  4799  02C3  1D03               	skipz
  4800  02C4  2AC9               	goto	u110lld
  4801  02C5  0AAE               	incf	___aomod@dividend+6,f
  4802  02C6  1D03               	skipz
  4803  02C7  2AC9               	goto	u110lld
  4804  02C8  0AAF               	incf	___aomod@dividend+7,f
  4805  02C9                     u110lld:
  4806  02C9  01F2               	clrf	___aomod@sign
  4807  02CA  0AF2               	incf	___aomod@sign,f
  4808  02CB                     l1505:
  4809  02CB  3020               	movlw	low ___aomod@divisor
  4810  02CC  0086               	movwf	6
  4811  02CD  3000               	movlw	high ___aomod@divisor
  4812  02CE  0087               	movwf	7
  4813  02CF  3F47               	moviw [7]fsr1
  4814  02D0  00F0               	movwf	??___aomod
  4815  02D1  1FF0               	btfss	??___aomod,7
  4816  02D2  2AD4               	goto	u1111
  4817  02D3  2AD5               	goto	u1110
  4818  02D4                     u1111:
  4819  02D4  2AF4               	goto	l1509
  4820  02D5                     u1110:
  4821  02D5                     l1507:
  4822  02D5  0020               	movlb	0	; select bank0
  4823  02D6  09A0               	comf	___aomod@divisor,f
  4824  02D7  09A1               	comf	___aomod@divisor+1,f
  4825  02D8  09A2               	comf	___aomod@divisor+2,f
  4826  02D9  09A3               	comf	___aomod@divisor+3,f
  4827  02DA  09A4               	comf	___aomod@divisor+4,f
  4828  02DB  09A5               	comf	___aomod@divisor+5,f
  4829  02DC  09A6               	comf	___aomod@divisor+6,f
  4830  02DD  09A7               	comf	___aomod@divisor+7,f
  4831  02DE  0AA0               	incf	___aomod@divisor,f
  4832  02DF  1D03               	skipz
  4833  02E0  2AF4               	goto	u112lld
  4834  02E1  0AA1               	incf	___aomod@divisor+1,f
  4835  02E2  1D03               	skipz
  4836  02E3  2AF4               	goto	u112lld
  4837  02E4  0AA2               	incf	___aomod@divisor+2,f
  4838  02E5  1D03               	skipz
  4839  02E6  2AF4               	goto	u112lld
  4840  02E7  0AA3               	incf	___aomod@divisor+3,f
  4841  02E8  1D03               	skipz
  4842  02E9  2AF4               	goto	u112lld
  4843  02EA  0AA4               	incf	___aomod@divisor+4,f
  4844  02EB  1D03               	skipz
  4845  02EC  2AF4               	goto	u112lld
  4846  02ED  0AA5               	incf	___aomod@divisor+5,f
  4847  02EE  1D03               	skipz
  4848  02EF  2AF4               	goto	u112lld
  4849  02F0  0AA6               	incf	___aomod@divisor+6,f
  4850  02F1  1D03               	skipz
  4851  02F2  2AF4               	goto	u112lld
  4852  02F3  0AA7               	incf	___aomod@divisor+7,f
  4853  02F4                     u112lld:
  4854  02F4                     l1509:
  4855  02F4  0020               	movlb	0	; select bank0
  4856  02F5  0820               	movf	___aomod@divisor,w
  4857  02F6  0421               	iorwf	___aomod@divisor+1,w
  4858  02F7  0422               	iorwf	___aomod@divisor+2,w
  4859  02F8  0423               	iorwf	___aomod@divisor+3,w
  4860  02F9  0424               	iorwf	___aomod@divisor+4,w
  4861  02FA  0425               	iorwf	___aomod@divisor+5,w
  4862  02FB  0426               	iorwf	___aomod@divisor+6,w
  4863  02FC  0427               	iorwf	___aomod@divisor+7,w
  4864  02FD  1903               	skipnz
  4865  02FE  2B00               	goto	u1131
  4866  02FF  2B01               	goto	u1130
  4867  0300                     u1131:
  4868  0300  2B54               	goto	l1525
  4869  0301                     u1130:
  4870  0301                     l1511:
  4871  0301  01F1               	clrf	___aomod@counter
  4872  0302  0AF1               	incf	___aomod@counter,f
  4873  0303  2B10               	goto	l1517
  4874  0304                     l1513:
  4875  0304  35A0               	lslf	___aomod@divisor,f
  4876  0305  0DA1               	rlf	___aomod@divisor+1,f
  4877  0306  0DA2               	rlf	___aomod@divisor+2,f
  4878  0307  0DA3               	rlf	___aomod@divisor+3,f
  4879  0308  0DA4               	rlf	___aomod@divisor+4,f
  4880  0309  0DA5               	rlf	___aomod@divisor+5,f
  4881  030A  0DA6               	rlf	___aomod@divisor+6,f
  4882  030B  0DA7               	rlf	___aomod@divisor+7,f
  4883  030C                     l1515:
  4884  030C  3001               	movlw	1
  4885  030D  00F0               	movwf	??___aomod
  4886  030E  0870               	movf	??___aomod,w
  4887  030F  07F1               	addwf	___aomod@counter,f
  4888  0310                     l1517:
  4889  0310  1FA7               	btfss	___aomod@divisor+7,7
  4890  0311  2B13               	goto	u1141
  4891  0312  2B14               	goto	u1140
  4892  0313                     u1141:
  4893  0313  2B04               	goto	l1513
  4894  0314                     u1140:
  4895  0314                     l1519:
  4896  0314  0827               	movf	___aomod@divisor+7,w
  4897  0315  022F               	subwf	___aomod@dividend+7,w
  4898  0316  1D03               	skipz
  4899  0317  2B32               	goto	u1155
  4900  0318  0826               	movf	___aomod@divisor+6,w
  4901  0319  022E               	subwf	___aomod@dividend+6,w
  4902  031A  1D03               	skipz
  4903  031B  2B32               	goto	u1155
  4904  031C  0825               	movf	___aomod@divisor+5,w
  4905  031D  022D               	subwf	___aomod@dividend+5,w
  4906  031E  1D03               	skipz
  4907  031F  2B32               	goto	u1155
  4908  0320  0824               	movf	___aomod@divisor+4,w
  4909  0321  022C               	subwf	___aomod@dividend+4,w
  4910  0322  1D03               	skipz
  4911  0323  2B32               	goto	u1155
  4912  0324  0823               	movf	___aomod@divisor+3,w
  4913  0325  022B               	subwf	___aomod@dividend+3,w
  4914  0326  1D03               	skipz
  4915  0327  2B32               	goto	u1155
  4916  0328  0822               	movf	___aomod@divisor+2,w
  4917  0329  022A               	subwf	___aomod@dividend+2,w
  4918  032A  1D03               	skipz
  4919  032B  2B32               	goto	u1155
  4920  032C  0821               	movf	___aomod@divisor+1,w
  4921  032D  0229               	subwf	___aomod@dividend+1,w
  4922  032E  1D03               	skipz
  4923  032F  2B32               	goto	u1155
  4924  0330  0820               	movf	___aomod@divisor,w
  4925  0331  0228               	subwf	___aomod@dividend,w
  4926  0332                     u1155:
  4927  0332  1C03               	skipc
  4928  0333  2B35               	goto	u1151
  4929  0334  2B36               	goto	u1150
  4930  0335                     u1151:
  4931  0335  2B46               	goto	l1523
  4932  0336                     u1150:
  4933  0336                     l1521:
  4934  0336  0820               	movf	___aomod@divisor,w
  4935  0337  02A8               	subwf	___aomod@dividend,f
  4936  0338  0821               	movf	___aomod@divisor+1,w
  4937  0339  3BA9               	subwfb	___aomod@dividend+1,f
  4938  033A  0822               	movf	___aomod@divisor+2,w
  4939  033B  3BAA               	subwfb	___aomod@dividend+2,f
  4940  033C  0823               	movf	___aomod@divisor+3,w
  4941  033D  3BAB               	subwfb	___aomod@dividend+3,f
  4942  033E  0824               	movf	___aomod@divisor+4,w
  4943  033F  3BAC               	subwfb	___aomod@dividend+4,f
  4944  0340  0825               	movf	___aomod@divisor+5,w
  4945  0341  3BAD               	subwfb	___aomod@dividend+5,f
  4946  0342  0826               	movf	___aomod@divisor+6,w
  4947  0343  3BAE               	subwfb	___aomod@dividend+6,f
  4948  0344  0827               	movf	___aomod@divisor+7,w
  4949  0345  3BAF               	subwfb	___aomod@dividend+7,f
  4950  0346                     l1523:
  4951  0346  36A7               	lsrf	___aomod@divisor+7,f
  4952  0347  0CA6               	rrf	___aomod@divisor+6,f
  4953  0348  0CA5               	rrf	___aomod@divisor+5,f
  4954  0349  0CA4               	rrf	___aomod@divisor+4,f
  4955  034A  0CA3               	rrf	___aomod@divisor+3,f
  4956  034B  0CA2               	rrf	___aomod@divisor+2,f
  4957  034C  0CA1               	rrf	___aomod@divisor+1,f
  4958  034D  0CA0               	rrf	___aomod@divisor,f
  4959  034E  3001               	movlw	1
  4960  034F  02F1               	subwf	___aomod@counter,f
  4961  0350  1D03               	btfss	3,2
  4962  0351  2B53               	goto	u1161
  4963  0352  2B54               	goto	u1160
  4964  0353                     u1161:
  4965  0353  2B14               	goto	l1519
  4966  0354                     u1160:
  4967  0354                     l1525:
  4968  0354  0872               	movf	___aomod@sign,w
  4969  0355  1903               	btfsc	3,2
  4970  0356  2B58               	goto	u1171
  4971  0357  2B59               	goto	u1170
  4972  0358                     u1171:
  4973  0358  2B77               	goto	l357
  4974  0359                     u1170:
  4975  0359                     l1527:
  4976  0359  09A8               	comf	___aomod@dividend,f
  4977  035A  09A9               	comf	___aomod@dividend+1,f
  4978  035B  09AA               	comf	___aomod@dividend+2,f
  4979  035C  09AB               	comf	___aomod@dividend+3,f
  4980  035D  09AC               	comf	___aomod@dividend+4,f
  4981  035E  09AD               	comf	___aomod@dividend+5,f
  4982  035F  09AE               	comf	___aomod@dividend+6,f
  4983  0360  09AF               	comf	___aomod@dividend+7,f
  4984  0361  0AA8               	incf	___aomod@dividend,f
  4985  0362  1D03               	skipz
  4986  0363  2B77               	goto	u118lld
  4987  0364  0AA9               	incf	___aomod@dividend+1,f
  4988  0365  1D03               	skipz
  4989  0366  2B77               	goto	u118lld
  4990  0367  0AAA               	incf	___aomod@dividend+2,f
  4991  0368  1D03               	skipz
  4992  0369  2B77               	goto	u118lld
  4993  036A  0AAB               	incf	___aomod@dividend+3,f
  4994  036B  1D03               	skipz
  4995  036C  2B77               	goto	u118lld
  4996  036D  0AAC               	incf	___aomod@dividend+4,f
  4997  036E  1D03               	skipz
  4998  036F  2B77               	goto	u118lld
  4999  0370  0AAD               	incf	___aomod@dividend+5,f
  5000  0371  1D03               	skipz
  5001  0372  2B77               	goto	u118lld
  5002  0373  0AAE               	incf	___aomod@dividend+6,f
  5003  0374  1D03               	skipz
  5004  0375  2B77               	goto	u118lld
  5005  0376  0AAF               	incf	___aomod@dividend+7,f
  5006  0377                     u118lld:
  5007  0377                     l357:
  5008  0377  0020               	movlb	0	; select bank0
  5009  0378  0828               	movf	___aomod@dividend,w
  5010  0379  00A0               	movwf	?___aomod
  5011  037A  0829               	movf	___aomod@dividend+1,w
  5012  037B  00A1               	movwf	?___aomod+1
  5013  037C  082A               	movf	___aomod@dividend+2,w
  5014  037D  00A2               	movwf	?___aomod+2
  5015  037E  082B               	movf	___aomod@dividend+3,w
  5016  037F  00A3               	movwf	?___aomod+3
  5017  0380  082C               	movf	___aomod@dividend+4,w
  5018  0381  00A4               	movwf	?___aomod+4
  5019  0382  082D               	movf	___aomod@dividend+5,w
  5020  0383  00A5               	movwf	?___aomod+5
  5021  0384  082E               	movf	___aomod@dividend+6,w
  5022  0385  00A6               	movwf	?___aomod+6
  5023  0386  082F               	movf	___aomod@dividend+7,w
  5024  0387  00A7               	movwf	?___aomod+7
  5025  0388                     l358:
  5026  0388  0008               	return
  5027  0389                     __end_of___aomod:
  5028                           
  5029                           	psect	text15
  5030  0389                     __ptext15:	
  5031 ;; *************** function ___aodiv *****************
  5032 ;; Defined at:
  5033 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  divisor         8    0[BANK0 ] long long 
  5036 ;;  dividend        8    8[BANK0 ] long long 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  quotient        8    3[COMMON] long long 
  5039 ;;  sign            1    2[COMMON] unsigned char 
  5040 ;;  counter         1    1[COMMON] unsigned char 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  8    0[BANK0 ] long long 
  5043 ;; Registers used:
  5044 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5050 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5051 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5053 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5054 ;;Total ram usage:       27 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_dtoa
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           
  5064                           ;psect for function ___aodiv
  5065  0389                     ___aodiv:
  5066  0389                     l1461:	
  5067                           ;incstack = 0
  5068                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  5069                           
  5070  0389  01F2               	clrf	___aodiv@sign
  5071  038A                     l1463:
  5072  038A  3020               	movlw	low ___aodiv@divisor
  5073  038B  0086               	movwf	6
  5074  038C  3000               	movlw	high ___aodiv@divisor
  5075  038D  0087               	movwf	7
  5076  038E  3F47               	moviw [7]fsr1
  5077  038F  00F0               	movwf	??___aodiv
  5078  0390  1FF0               	btfss	??___aodiv,7
  5079  0391  2B93               	goto	u981
  5080  0392  2B94               	goto	u980
  5081  0393                     u981:
  5082  0393  2BB5               	goto	l1467
  5083  0394                     u980:
  5084  0394                     l1465:
  5085  0394  0020               	movlb	0	; select bank0
  5086  0395  09A0               	comf	___aodiv@divisor,f
  5087  0396  09A1               	comf	___aodiv@divisor+1,f
  5088  0397  09A2               	comf	___aodiv@divisor+2,f
  5089  0398  09A3               	comf	___aodiv@divisor+3,f
  5090  0399  09A4               	comf	___aodiv@divisor+4,f
  5091  039A  09A5               	comf	___aodiv@divisor+5,f
  5092  039B  09A6               	comf	___aodiv@divisor+6,f
  5093  039C  09A7               	comf	___aodiv@divisor+7,f
  5094  039D  0AA0               	incf	___aodiv@divisor,f
  5095  039E  1D03               	skipz
  5096  039F  2BB3               	goto	u99lld
  5097  03A0  0AA1               	incf	___aodiv@divisor+1,f
  5098  03A1  1D03               	skipz
  5099  03A2  2BB3               	goto	u99lld
  5100  03A3  0AA2               	incf	___aodiv@divisor+2,f
  5101  03A4  1D03               	skipz
  5102  03A5  2BB3               	goto	u99lld
  5103  03A6  0AA3               	incf	___aodiv@divisor+3,f
  5104  03A7  1D03               	skipz
  5105  03A8  2BB3               	goto	u99lld
  5106  03A9  0AA4               	incf	___aodiv@divisor+4,f
  5107  03AA  1D03               	skipz
  5108  03AB  2BB3               	goto	u99lld
  5109  03AC  0AA5               	incf	___aodiv@divisor+5,f
  5110  03AD  1D03               	skipz
  5111  03AE  2BB3               	goto	u99lld
  5112  03AF  0AA6               	incf	___aodiv@divisor+6,f
  5113  03B0  1D03               	skipz
  5114  03B1  2BB3               	goto	u99lld
  5115  03B2  0AA7               	incf	___aodiv@divisor+7,f
  5116  03B3                     u99lld:
  5117  03B3  01F2               	clrf	___aodiv@sign
  5118  03B4  0AF2               	incf	___aodiv@sign,f
  5119  03B5                     l1467:
  5120  03B5  3028               	movlw	low ___aodiv@dividend
  5121  03B6  0086               	movwf	6
  5122  03B7  3000               	movlw	high ___aodiv@dividend
  5123  03B8  0087               	movwf	7
  5124  03B9  3F47               	moviw [7]fsr1
  5125  03BA  00F0               	movwf	??___aodiv
  5126  03BB  1FF0               	btfss	??___aodiv,7
  5127  03BC  2BBE               	goto	u1001
  5128  03BD  2BBF               	goto	u1000
  5129  03BE                     u1001:
  5130  03BE  2BE2               	goto	l1473
  5131  03BF                     u1000:
  5132  03BF                     l1469:
  5133  03BF  0020               	movlb	0	; select bank0
  5134  03C0  09A8               	comf	___aodiv@dividend,f
  5135  03C1  09A9               	comf	___aodiv@dividend+1,f
  5136  03C2  09AA               	comf	___aodiv@dividend+2,f
  5137  03C3  09AB               	comf	___aodiv@dividend+3,f
  5138  03C4  09AC               	comf	___aodiv@dividend+4,f
  5139  03C5  09AD               	comf	___aodiv@dividend+5,f
  5140  03C6  09AE               	comf	___aodiv@dividend+6,f
  5141  03C7  09AF               	comf	___aodiv@dividend+7,f
  5142  03C8  0AA8               	incf	___aodiv@dividend,f
  5143  03C9  1D03               	skipz
  5144  03CA  2BDE               	goto	u101lld
  5145  03CB  0AA9               	incf	___aodiv@dividend+1,f
  5146  03CC  1D03               	skipz
  5147  03CD  2BDE               	goto	u101lld
  5148  03CE  0AAA               	incf	___aodiv@dividend+2,f
  5149  03CF  1D03               	skipz
  5150  03D0  2BDE               	goto	u101lld
  5151  03D1  0AAB               	incf	___aodiv@dividend+3,f
  5152  03D2  1D03               	skipz
  5153  03D3  2BDE               	goto	u101lld
  5154  03D4  0AAC               	incf	___aodiv@dividend+4,f
  5155  03D5  1D03               	skipz
  5156  03D6  2BDE               	goto	u101lld
  5157  03D7  0AAD               	incf	___aodiv@dividend+5,f
  5158  03D8  1D03               	skipz
  5159  03D9  2BDE               	goto	u101lld
  5160  03DA  0AAE               	incf	___aodiv@dividend+6,f
  5161  03DB  1D03               	skipz
  5162  03DC  2BDE               	goto	u101lld
  5163  03DD  0AAF               	incf	___aodiv@dividend+7,f
  5164  03DE                     u101lld:
  5165  03DE                     l1471:
  5166  03DE  3001               	movlw	1
  5167  03DF  00F0               	movwf	??___aodiv
  5168  03E0  0870               	movf	??___aodiv,w
  5169  03E1  06F2               	xorwf	___aodiv@sign,f
  5170  03E2                     l1473:
  5171  03E2  3073               	movlw	low ___aodiv@quotient
  5172  03E3  0086               	movwf	6
  5173  03E4  3000               	movlw	high ___aodiv@quotient
  5174  03E5  0087               	movwf	7
  5175  03E6  3008               	movlw	8
  5176  03E7  00F0               	movwf	??___aodiv
  5177  03E8  3000               	movlw	0
  5178  03E9                     u1020:
  5179  03E9  001E               	movwi fsr1++
  5180  03EA  0BF0               	decfsz	??___aodiv,f
  5181  03EB  2BE9               	goto	u1020
  5182  03EC                     l1475:
  5183  03EC  0020               	movlb	0	; select bank0
  5184  03ED  0820               	movf	___aodiv@divisor,w
  5185  03EE  0421               	iorwf	___aodiv@divisor+1,w
  5186  03EF  0422               	iorwf	___aodiv@divisor+2,w
  5187  03F0  0423               	iorwf	___aodiv@divisor+3,w
  5188  03F1  0424               	iorwf	___aodiv@divisor+4,w
  5189  03F2  0425               	iorwf	___aodiv@divisor+5,w
  5190  03F3  0426               	iorwf	___aodiv@divisor+6,w
  5191  03F4  0427               	iorwf	___aodiv@divisor+7,w
  5192  03F5  1903               	skipnz
  5193  03F6  2BF8               	goto	u1031
  5194  03F7  2BF9               	goto	u1030
  5195  03F8                     u1031:
  5196  03F8  2C55               	goto	l1495
  5197  03F9                     u1030:
  5198  03F9                     l1477:
  5199  03F9  01F1               	clrf	___aodiv@counter
  5200  03FA  0AF1               	incf	___aodiv@counter,f
  5201  03FB  2C08               	goto	l1483
  5202  03FC                     l1479:
  5203  03FC  35A0               	lslf	___aodiv@divisor,f
  5204  03FD  0DA1               	rlf	___aodiv@divisor+1,f
  5205  03FE  0DA2               	rlf	___aodiv@divisor+2,f
  5206  03FF  0DA3               	rlf	___aodiv@divisor+3,f
  5207  0400  0DA4               	rlf	___aodiv@divisor+4,f
  5208  0401  0DA5               	rlf	___aodiv@divisor+5,f
  5209  0402  0DA6               	rlf	___aodiv@divisor+6,f
  5210  0403  0DA7               	rlf	___aodiv@divisor+7,f
  5211  0404                     l1481:
  5212  0404  3001               	movlw	1
  5213  0405  00F0               	movwf	??___aodiv
  5214  0406  0870               	movf	??___aodiv,w
  5215  0407  07F1               	addwf	___aodiv@counter,f
  5216  0408                     l1483:
  5217  0408  1FA7               	btfss	___aodiv@divisor+7,7
  5218  0409  2C0B               	goto	u1041
  5219  040A  2C0C               	goto	u1040
  5220  040B                     u1041:
  5221  040B  2BFC               	goto	l1479
  5222  040C                     u1040:
  5223  040C                     l1485:
  5224  040C  35F3               	lslf	___aodiv@quotient,f
  5225  040D  0DF4               	rlf	___aodiv@quotient+1,f
  5226  040E  0DF5               	rlf	___aodiv@quotient+2,f
  5227  040F  0DF6               	rlf	___aodiv@quotient+3,f
  5228  0410  0DF7               	rlf	___aodiv@quotient+4,f
  5229  0411  0DF8               	rlf	___aodiv@quotient+5,f
  5230  0412  0DF9               	rlf	___aodiv@quotient+6,f
  5231  0413  0DFA               	rlf	___aodiv@quotient+7,f
  5232  0414                     l1487:
  5233  0414  0827               	movf	___aodiv@divisor+7,w
  5234  0415  022F               	subwf	___aodiv@dividend+7,w
  5235  0416  1D03               	skipz
  5236  0417  2C32               	goto	u1055
  5237  0418  0826               	movf	___aodiv@divisor+6,w
  5238  0419  022E               	subwf	___aodiv@dividend+6,w
  5239  041A  1D03               	skipz
  5240  041B  2C32               	goto	u1055
  5241  041C  0825               	movf	___aodiv@divisor+5,w
  5242  041D  022D               	subwf	___aodiv@dividend+5,w
  5243  041E  1D03               	skipz
  5244  041F  2C32               	goto	u1055
  5245  0420  0824               	movf	___aodiv@divisor+4,w
  5246  0421  022C               	subwf	___aodiv@dividend+4,w
  5247  0422  1D03               	skipz
  5248  0423  2C32               	goto	u1055
  5249  0424  0823               	movf	___aodiv@divisor+3,w
  5250  0425  022B               	subwf	___aodiv@dividend+3,w
  5251  0426  1D03               	skipz
  5252  0427  2C32               	goto	u1055
  5253  0428  0822               	movf	___aodiv@divisor+2,w
  5254  0429  022A               	subwf	___aodiv@dividend+2,w
  5255  042A  1D03               	skipz
  5256  042B  2C32               	goto	u1055
  5257  042C  0821               	movf	___aodiv@divisor+1,w
  5258  042D  0229               	subwf	___aodiv@dividend+1,w
  5259  042E  1D03               	skipz
  5260  042F  2C32               	goto	u1055
  5261  0430  0820               	movf	___aodiv@divisor,w
  5262  0431  0228               	subwf	___aodiv@dividend,w
  5263  0432                     u1055:
  5264  0432  1C03               	skipc
  5265  0433  2C35               	goto	u1051
  5266  0434  2C36               	goto	u1050
  5267  0435                     u1051:
  5268  0435  2C47               	goto	l1493
  5269  0436                     u1050:
  5270  0436                     l1489:
  5271  0436  0820               	movf	___aodiv@divisor,w
  5272  0437  02A8               	subwf	___aodiv@dividend,f
  5273  0438  0821               	movf	___aodiv@divisor+1,w
  5274  0439  3BA9               	subwfb	___aodiv@dividend+1,f
  5275  043A  0822               	movf	___aodiv@divisor+2,w
  5276  043B  3BAA               	subwfb	___aodiv@dividend+2,f
  5277  043C  0823               	movf	___aodiv@divisor+3,w
  5278  043D  3BAB               	subwfb	___aodiv@dividend+3,f
  5279  043E  0824               	movf	___aodiv@divisor+4,w
  5280  043F  3BAC               	subwfb	___aodiv@dividend+4,f
  5281  0440  0825               	movf	___aodiv@divisor+5,w
  5282  0441  3BAD               	subwfb	___aodiv@dividend+5,f
  5283  0442  0826               	movf	___aodiv@divisor+6,w
  5284  0443  3BAE               	subwfb	___aodiv@dividend+6,f
  5285  0444  0827               	movf	___aodiv@divisor+7,w
  5286  0445  3BAF               	subwfb	___aodiv@dividend+7,f
  5287  0446                     l1491:
  5288  0446  1473               	bsf	___aodiv@quotient,0
  5289  0447                     l1493:
  5290  0447  36A7               	lsrf	___aodiv@divisor+7,f
  5291  0448  0CA6               	rrf	___aodiv@divisor+6,f
  5292  0449  0CA5               	rrf	___aodiv@divisor+5,f
  5293  044A  0CA4               	rrf	___aodiv@divisor+4,f
  5294  044B  0CA3               	rrf	___aodiv@divisor+3,f
  5295  044C  0CA2               	rrf	___aodiv@divisor+2,f
  5296  044D  0CA1               	rrf	___aodiv@divisor+1,f
  5297  044E  0CA0               	rrf	___aodiv@divisor,f
  5298  044F  3001               	movlw	1
  5299  0450  02F1               	subwf	___aodiv@counter,f
  5300  0451  1D03               	btfss	3,2
  5301  0452  2C54               	goto	u1061
  5302  0453  2C55               	goto	u1060
  5303  0454                     u1061:
  5304  0454  2C0C               	goto	l1485
  5305  0455                     u1060:
  5306  0455                     l1495:
  5307  0455  0872               	movf	___aodiv@sign,w
  5308  0456  1903               	btfsc	3,2
  5309  0457  2C59               	goto	u1071
  5310  0458  2C5A               	goto	u1070
  5311  0459                     u1071:
  5312  0459  2C78               	goto	l344
  5313  045A                     u1070:
  5314  045A                     l1497:
  5315  045A  09F3               	comf	___aodiv@quotient,f
  5316  045B  09F4               	comf	___aodiv@quotient+1,f
  5317  045C  09F5               	comf	___aodiv@quotient+2,f
  5318  045D  09F6               	comf	___aodiv@quotient+3,f
  5319  045E  09F7               	comf	___aodiv@quotient+4,f
  5320  045F  09F8               	comf	___aodiv@quotient+5,f
  5321  0460  09F9               	comf	___aodiv@quotient+6,f
  5322  0461  09FA               	comf	___aodiv@quotient+7,f
  5323  0462  0AF3               	incf	___aodiv@quotient,f
  5324  0463  1D03               	skipz
  5325  0464  2C78               	goto	u108lld
  5326  0465  0AF4               	incf	___aodiv@quotient+1,f
  5327  0466  1D03               	skipz
  5328  0467  2C78               	goto	u108lld
  5329  0468  0AF5               	incf	___aodiv@quotient+2,f
  5330  0469  1D03               	skipz
  5331  046A  2C78               	goto	u108lld
  5332  046B  0AF6               	incf	___aodiv@quotient+3,f
  5333  046C  1D03               	skipz
  5334  046D  2C78               	goto	u108lld
  5335  046E  0AF7               	incf	___aodiv@quotient+4,f
  5336  046F  1D03               	skipz
  5337  0470  2C78               	goto	u108lld
  5338  0471  0AF8               	incf	___aodiv@quotient+5,f
  5339  0472  1D03               	skipz
  5340  0473  2C78               	goto	u108lld
  5341  0474  0AF9               	incf	___aodiv@quotient+6,f
  5342  0475  1D03               	skipz
  5343  0476  2C78               	goto	u108lld
  5344  0477  0AFA               	incf	___aodiv@quotient+7,f
  5345  0478                     u108lld:
  5346  0478                     l344:
  5347  0478  0873               	movf	___aodiv@quotient,w
  5348  0479  0020               	movlb	0	; select bank0
  5349  047A  00A0               	movwf	?___aodiv
  5350  047B  0874               	movf	___aodiv@quotient+1,w
  5351  047C  00A1               	movwf	?___aodiv+1
  5352  047D  0875               	movf	___aodiv@quotient+2,w
  5353  047E  00A2               	movwf	?___aodiv+2
  5354  047F  0876               	movf	___aodiv@quotient+3,w
  5355  0480  00A3               	movwf	?___aodiv+3
  5356  0481  0877               	movf	___aodiv@quotient+4,w
  5357  0482  00A4               	movwf	?___aodiv+4
  5358  0483  0878               	movf	___aodiv@quotient+5,w
  5359  0484  00A5               	movwf	?___aodiv+5
  5360  0485  0879               	movf	___aodiv@quotient+6,w
  5361  0486  00A6               	movwf	?___aodiv+6
  5362  0487  087A               	movf	___aodiv@quotient+7,w
  5363  0488  00A7               	movwf	?___aodiv+7
  5364  0489                     l345:
  5365  0489  0008               	return
  5366  048A                     __end_of___aodiv:
  5367                           
  5368                           	psect	text16
  5369  0ECE                     __ptext16:	
  5370 ;; *************** function ___wmul *****************
  5371 ;; Defined at:
  5372 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;  multiplier      2    0[COMMON] unsigned int 
  5375 ;;  multiplicand    2    2[COMMON] unsigned int 
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  product         2    4[COMMON] unsigned int 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  2    0[COMMON] unsigned int 
  5380 ;; Registers used:
  5381 ;;		wreg, status,2, status,0
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5390 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5391 ;;Total ram usage:        6 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; This function calls:
  5394 ;;		Nothing
  5395 ;; This function is called by:
  5396 ;;		_main
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           
  5401                           ;psect for function ___wmul
  5402  0ECE                     ___wmul:
  5403  0ECE                     l1891:	
  5404                           ;incstack = 0
  5405                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5406                           
  5407  0ECE  01F4               	clrf	___wmul@product
  5408  0ECF  01F5               	clrf	___wmul@product+1
  5409  0ED0                     l1893:
  5410  0ED0  1C70               	btfss	___wmul@multiplier,0
  5411  0ED1  2ED3               	goto	u1721
  5412  0ED2  2ED4               	goto	u1720
  5413  0ED3                     u1721:
  5414  0ED3  2ED8               	goto	l244
  5415  0ED4                     u1720:
  5416  0ED4                     l1895:
  5417  0ED4  0872               	movf	___wmul@multiplicand,w
  5418  0ED5  07F4               	addwf	___wmul@product,f
  5419  0ED6  0873               	movf	___wmul@multiplicand+1,w
  5420  0ED7  3DF5               	addwfc	___wmul@product+1,f
  5421  0ED8                     l244:
  5422  0ED8  3001               	movlw	1
  5423  0ED9                     u1735:
  5424  0ED9  35F2               	lslf	___wmul@multiplicand,f
  5425  0EDA  0DF3               	rlf	___wmul@multiplicand+1,f
  5426  0EDB  0B89               	decfsz	9,f
  5427  0EDC  2ED9               	goto	u1735
  5428  0EDD                     l1897:
  5429  0EDD  3001               	movlw	1
  5430  0EDE                     u1745:
  5431  0EDE  36F1               	lsrf	___wmul@multiplier+1,f
  5432  0EDF  0CF0               	rrf	___wmul@multiplier,f
  5433  0EE0  0B89               	decfsz	9,f
  5434  0EE1  2EDE               	goto	u1745
  5435  0EE2                     l1899:
  5436  0EE2  0870               	movf	___wmul@multiplier,w
  5437  0EE3  0471               	iorwf	___wmul@multiplier+1,w
  5438  0EE4  1D03               	btfss	3,2
  5439  0EE5  2EE7               	goto	u1751
  5440  0EE6  2EE8               	goto	u1750
  5441  0EE7                     u1751:
  5442  0EE7  2ED0               	goto	l1893
  5443  0EE8                     u1750:
  5444  0EE8                     l1901:
  5445  0EE8  0875               	movf	___wmul@product+1,w
  5446  0EE9  00F1               	movwf	?___wmul+1
  5447  0EEA  0874               	movf	___wmul@product,w
  5448  0EEB  00F0               	movwf	?___wmul
  5449  0EEC                     l246:
  5450  0EEC  0008               	return
  5451  0EED                     __end_of___wmul:
  5452                           
  5453                           	psect	text17
  5454  0E3A                     __ptext17:	
  5455 ;; *************** function _SYSTEM_Initialize *****************
  5456 ;; Defined at:
  5457 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0, pclath, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5475 ;;Total ram usage:        0 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:    1
  5478 ;; This function calls:
  5479 ;;		_OSCILLATOR_Initialize
  5480 ;;		_PIN_MANAGER_Initialize
  5481 ;;		_WDT_Initialize
  5482 ;; This function is called by:
  5483 ;;		_main
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           
  5488                           ;psect for function _SYSTEM_Initialize
  5489  0E3A                     _SYSTEM_Initialize:
  5490  0E3A                     l1855:	
  5491                           ;incstack = 0
  5492                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5493                           
  5494                           
  5495                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5496  0E3A  318F  27A1  318E   	fcall	_PIN_MANAGER_Initialize
  5497                           
  5498                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5499  0E3D  318E  2633  318E   	fcall	_OSCILLATOR_Initialize
  5500                           
  5501                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  5502  0E40  3180  2004  318E   	fcall	_WDT_Initialize
  5503  0E43                     l129:
  5504  0E43  0008               	return
  5505  0E44                     __end_of_SYSTEM_Initialize:
  5506                           
  5507                           	psect	text18
  5508  0004                     __ptext18:	
  5509 ;; *************** function _WDT_Initialize *****************
  5510 ;; Defined at:
  5511 ;;		line 68 in file "mcc_generated_files/mcc.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		wreg
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5529 ;;Total ram usage:        0 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; This function calls:
  5532 ;;		Nothing
  5533 ;; This function is called by:
  5534 ;;		_SYSTEM_Initialize
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           
  5539                           ;psect for function _WDT_Initialize
  5540  0004                     _WDT_Initialize:
  5541  0004                     l1745:	
  5542                           ;incstack = 0
  5543                           ; Regs used in _WDT_Initialize: [wreg]
  5544                           
  5545                           
  5546                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  5547  0004  3016               	movlw	22
  5548  0005  0021               	movlb	1	; select bank1
  5549  0006  0097               	movwf	23	;volatile
  5550  0007                     l135:
  5551  0007  0008               	return
  5552  0008                     __end_of_WDT_Initialize:
  5553                           
  5554                           	psect	text19
  5555  0FA1                     __ptext19:	
  5556 ;; *************** function _PIN_MANAGER_Initialize *****************
  5557 ;; Defined at:
  5558 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;		None
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;		None
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  1    wreg      void 
  5565 ;; Registers used:
  5566 ;;		wreg, status,2
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5576 ;;Total ram usage:        0 bytes
  5577 ;; Hardware stack levels used:    1
  5578 ;; This function calls:
  5579 ;;		Nothing
  5580 ;; This function is called by:
  5581 ;;		_SYSTEM_Initialize
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           
  5586                           ;psect for function _PIN_MANAGER_Initialize
  5587  0FA1                     _PIN_MANAGER_Initialize:
  5588  0FA1                     l1711:	
  5589                           ;incstack = 0
  5590                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5591                           
  5592                           
  5593                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5594  0FA1  0022               	movlb	2	; select bank2
  5595  0FA2  018C               	clrf	12	;volatile
  5596                           
  5597                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5598  0FA3  018D               	clrf	13	;volatile
  5599                           
  5600                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5601  0FA4  018E               	clrf	14	;volatile
  5602  0FA5                     l1713:
  5603                           
  5604                           ;mcc_generated_files/pin_manager.c: 67:     TRISE = 0x08;
  5605  0FA5  3008               	movlw	8
  5606  0FA6  0021               	movlb	1	; select bank1
  5607  0FA7  0090               	movwf	16	;volatile
  5608  0FA8                     l1715:
  5609                           
  5610                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0xFF;
  5611  0FA8  30FF               	movlw	255
  5612  0FA9  008C               	movwf	12	;volatile
  5613                           
  5614                           ;mcc_generated_files/pin_manager.c: 69:     TRISB = 0x00;
  5615  0FAA  018D               	clrf	13	;volatile
  5616  0FAB                     l1717:
  5617                           
  5618                           ;mcc_generated_files/pin_manager.c: 70:     TRISC = 0xFF;
  5619  0FAB  30FF               	movlw	255
  5620  0FAC  008E               	movwf	14	;volatile
  5621  0FAD                     l1719:
  5622                           
  5623                           ;mcc_generated_files/pin_manager.c: 75:     ANSELC = 0xFC;
  5624  0FAD  30FC               	movlw	252
  5625  0FAE  0023               	movlb	3	; select bank3
  5626  0FAF  008E               	movwf	14	;volatile
  5627                           
  5628                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x00;
  5629  0FB0  018D               	clrf	13	;volatile
  5630  0FB1                     l1721:
  5631                           
  5632                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x3F;
  5633  0FB1  303F               	movlw	63
  5634  0FB2  008C               	movwf	12	;volatile
  5635  0FB3                     l1723:
  5636                           
  5637                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  5638  0FB3  0024               	movlb	4	; select bank4
  5639  0FB4  0190               	clrf	16	;volatile
  5640  0FB5                     l1725:
  5641                           
  5642                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  5643  0FB5  018D               	clrf	13	;volatile
  5644  0FB6                     l1727:
  5645                           
  5646                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  5647  0FB6  018C               	clrf	12	;volatile
  5648  0FB7                     l1729:
  5649                           
  5650                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  5651  0FB7  018E               	clrf	14	;volatile
  5652  0FB8                     l1731:
  5653                           
  5654                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  5655  0FB8  0021               	movlb	1	; select bank1
  5656  0FB9  1795               	bsf	21,7	;volatile
  5657  0FBA                     l1733:
  5658                           
  5659                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  5660  0FBA  0025               	movlb	5	; select bank5
  5661  0FBB  018C               	clrf	12	;volatile
  5662  0FBC                     l1735:
  5663                           
  5664                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  5665  0FBC  018D               	clrf	13	;volatile
  5666  0FBD                     l1737:
  5667                           
  5668                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  5669  0FBD  018E               	clrf	14	;volatile
  5670                           
  5671                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0xFF;
  5672  0FBE  30FF               	movlw	255
  5673  0FBF  0026               	movlb	6	; select bank6
  5674  0FC0  008C               	movwf	12	;volatile
  5675                           
  5676                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xFF;
  5677  0FC1  30FF               	movlw	255
  5678  0FC2  008D               	movwf	13	;volatile
  5679                           
  5680                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  5681  0FC3  30FF               	movlw	255
  5682  0FC4  008E               	movwf	14	;volatile
  5683                           
  5684                           ;mcc_generated_files/pin_manager.c: 105:     INLVLA = 0xFF;
  5685  0FC5  30FF               	movlw	255
  5686  0FC6  0027               	movlb	7	; select bank7
  5687  0FC7  008C               	movwf	12	;volatile
  5688                           
  5689                           ;mcc_generated_files/pin_manager.c: 106:     INLVLB = 0xFF;
  5690  0FC8  30FF               	movlw	255
  5691  0FC9  008D               	movwf	13	;volatile
  5692                           
  5693                           ;mcc_generated_files/pin_manager.c: 107:     INLVLC = 0xFF;
  5694  0FCA  30FF               	movlw	255
  5695  0FCB  008E               	movwf	14	;volatile
  5696                           
  5697                           ;mcc_generated_files/pin_manager.c: 108:     INLVLE = 0x08;
  5698  0FCC  3008               	movlw	8
  5699  0FCD  0090               	movwf	16	;volatile
  5700  0FCE                     l109:
  5701  0FCE  0008               	return
  5702  0FCF                     __end_of_PIN_MANAGER_Initialize:
  5703                           
  5704                           	psect	text20
  5705  0E33                     __ptext20:	
  5706 ;; *************** function _OSCILLATOR_Initialize *****************
  5707 ;; Defined at:
  5708 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;		None
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      void 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5726 ;;Total ram usage:        0 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_SYSTEM_Initialize
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function _OSCILLATOR_Initialize
  5737  0E33                     _OSCILLATOR_Initialize:
  5738  0E33                     l1739:	
  5739                           ;incstack = 0
  5740                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5741                           
  5742                           
  5743                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x38;
  5744  0E33  3038               	movlw	56
  5745  0E34  0021               	movlb	1	; select bank1
  5746  0E35  0099               	movwf	25	;volatile
  5747  0E36                     l1741:
  5748                           
  5749                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  5750  0E36  0198               	clrf	24	;volatile
  5751  0E37                     l1743:
  5752                           
  5753                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  5754  0E37  0022               	movlb	2	; select bank2
  5755  0E38  0196               	clrf	22	;volatile
  5756  0E39                     l132:
  5757  0E39  0008               	return
  5758  0E3A                     __end_of_OSCILLATOR_Initialize:
  5759                           
  5760                           	psect	text21
  5761  0F0D                     __ptext21:	
  5762 ;; *************** function _LCD_Initialize *****************
  5763 ;; Defined at:
  5764 ;;		line 46 in file "lcd.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;		None
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;		None
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      void 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2, status,0, pclath, cstack
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5782 ;;Total ram usage:        1 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    2
  5785 ;; This function calls:
  5786 ;;		_LCDPutCmd
  5787 ;; This function is called by:
  5788 ;;		_main
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           
  5793                           ;psect for function _LCD_Initialize
  5794  0F0D                     _LCD_Initialize:
  5795  0F0D                     l1857:	
  5796                           ;incstack = 0
  5797                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5798                           
  5799                           
  5800                           ;lcd.c: 49:   PORTB = 0;
  5801  0F0D  0020               	movlb	0	; select bank0
  5802  0F0E  018D               	clrf	13	;volatile
  5803                           
  5804                           ;lcd.c: 51:   TRISB = 0x00;
  5805  0F0F  0021               	movlb	1	; select bank1
  5806  0F10  018D               	clrf	13	;volatile
  5807  0F11                     l1859:
  5808                           
  5809                           ;lcd.c: 54:   PORTBbits.RB7 = 1;
  5810  0F11  0020               	movlb	0	; select bank0
  5811  0F12  178D               	bsf	13,7	;volatile
  5812  0F13                     l1861:
  5813                           
  5814                           ;lcd.c: 57:   _delay((unsigned long)((15)*(500000/4000.0)));
  5815  0F13  3003               	movlw	3
  5816  0F14  00F7               	movwf	??_LCD_Initialize
  5817  0F15  306E               	movlw	110
  5818  0F16                     u1867:
  5819  0F16  0B89               	decfsz	9,f
  5820  0F17  2F16               	goto	u1867
  5821  0F18  0BF7               	decfsz	??_LCD_Initialize,f
  5822  0F19  2F16               	goto	u1867
  5823  0F1A  0000               	nop
  5824  0F1B                     l1863:
  5825                           
  5826                           ;lcd.c: 60:   LCDPutCmd(0x32);
  5827  0F1B  3032               	movlw	50
  5828  0F1C  318E  26AF  318F   	fcall	_LCDPutCmd
  5829  0F1F                     l1865:
  5830                           
  5831                           ;lcd.c: 63:   LCDPutCmd(0x28);
  5832  0F1F  3028               	movlw	40
  5833  0F20  318E  26AF  318F   	fcall	_LCDPutCmd
  5834  0F23                     l1867:
  5835                           
  5836                           ;lcd.c: 66:   LCDPutCmd(0x0C);
  5837  0F23  300C               	movlw	12
  5838  0F24  318E  26AF  318F   	fcall	_LCDPutCmd
  5839  0F27                     l1869:
  5840                           
  5841                           ;lcd.c: 68:   LCDPutCmd(0x01);
  5842  0F27  3001               	movlw	1
  5843  0F28  318E  26AF  318F   	fcall	_LCDPutCmd
  5844  0F2B                     l1871:
  5845                           
  5846                           ;lcd.c: 71:   LCDPutCmd(0x06);
  5847  0F2B  3006               	movlw	6
  5848  0F2C  318E  26AF  318F   	fcall	_LCDPutCmd
  5849  0F2F                     l148:
  5850  0F2F  0008               	return
  5851  0F30                     __end_of_LCD_Initialize:
  5852                           
  5853                           	psect	text22
  5854  0E44                     __ptext22:	
  5855 ;; *************** function _LCDClear *****************
  5856 ;; Defined at:
  5857 ;;		line 159 in file "lcd.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;		None
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;		None
  5862 ;; Return value:  Size  Location     Type
  5863 ;;                  1    wreg      void 
  5864 ;; Registers used:
  5865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5875 ;;Total ram usage:        0 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:    3
  5878 ;; This function calls:
  5879 ;;		_LCDGoto
  5880 ;;		_LCDPutStr
  5881 ;; This function is called by:
  5882 ;;		_main
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           
  5887                           ;psect for function _LCDClear
  5888  0E44                     _LCDClear:
  5889  0E44                     l1885:	
  5890                           ;incstack = 0
  5891                           ; Regs used in _LCDClear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5892                           
  5893                           
  5894                           ;lcd.c: 161:   LCDGoto(0, 0);
  5895  0E44  01F7               	clrf	LCDGoto@ln
  5896  0E45  3000               	movlw	0
  5897  0E46  318F  277A  318E   	fcall	_LCDGoto
  5898  0E49                     l1887:
  5899                           
  5900                           ;lcd.c: 162:   LCDPutStr("                ");
  5901  0E49  3002               	movlw	low (STR_7| (0+32768))
  5902  0E4A  00F7               	movwf	LCDPutStr@str
  5903  0E4B  3090               	movlw	high (STR_7| (0+32768))
  5904  0E4C  00F8               	movwf	LCDPutStr@str+1
  5905  0E4D  318F  2754  318E   	fcall	_LCDPutStr
  5906  0E50                     l1889:
  5907                           
  5908                           ;lcd.c: 163:   LCDGoto(0, 1);
  5909  0E50  01F7               	clrf	LCDGoto@ln
  5910  0E51  0AF7               	incf	LCDGoto@ln,f
  5911  0E52  3000               	movlw	0
  5912  0E53  318F  277A  318E   	fcall	_LCDGoto
  5913                           
  5914                           ;lcd.c: 164:   LCDPutStr("                ");
  5915  0E56  3002               	movlw	low (STR_7| (0+32768))
  5916  0E57  00F7               	movwf	LCDPutStr@str
  5917  0E58  3090               	movlw	high (STR_7| (0+32768))
  5918  0E59  00F8               	movwf	LCDPutStr@str+1
  5919  0E5A  318F  2754  318E   	fcall	_LCDPutStr
  5920  0E5D                     l176:
  5921  0E5D  0008               	return
  5922  0E5E                     __end_of_LCDClear:
  5923                           
  5924                           	psect	text23
  5925  0F54                     __ptext23:	
  5926 ;; *************** function _LCDPutStr *****************
  5927 ;; Defined at:
  5928 ;;		line 131 in file "lcd.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  str             2    7[COMMON] PTR const unsigned char 
  5931 ;;		 -> STR_8(17), STR_7(17), STR_5(8), STR_3(11), 
  5932 ;;		 -> main@printchar(20), STR_1(10), 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;  i               1   12[COMMON] unsigned char 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5946 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5947 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5948 ;;Total ram usage:        6 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:    2
  5951 ;; This function calls:
  5952 ;;		_LCDPutChar
  5953 ;; This function is called by:
  5954 ;;		_main
  5955 ;;		_LCDClear
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           
  5960                           ;psect for function _LCDPutStr
  5961  0F54                     _LCDPutStr:
  5962  0F54                     l1703:	
  5963                           ;incstack = 0
  5964                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5965                           
  5966                           
  5967                           ;lcd.c: 131: void LCDPutStr(const char *str);lcd.c: 132: {;lcd.c: 133:   uint8_t i = 0;
  5968  0F54  01FC               	clrf	LCDPutStr@i
  5969                           
  5970                           ;lcd.c: 136:   while (str[i])
  5971  0F55  2F69               	goto	l1709
  5972  0F56                     l1705:
  5973                           
  5974                           ;lcd.c: 137:   {;lcd.c: 139:     LCDPutChar(str[i++]);
  5975  0F56  0878               	movf	LCDPutStr@str+1,w
  5976  0F57  00FA               	movwf	??_LCDPutStr+1
  5977  0F58  0877               	movf	LCDPutStr@str,w
  5978  0F59  00F9               	movwf	??_LCDPutStr
  5979  0F5A  087C               	movf	LCDPutStr@i,w
  5980  0F5B  0779               	addwf	??_LCDPutStr,w
  5981  0F5C  0084               	movwf	4
  5982  0F5D  087A               	movf	??_LCDPutStr+1,w
  5983  0F5E  1803               	skipnc
  5984  0F5F  0A7A               	incf	??_LCDPutStr+1,w
  5985  0F60  0085               	movwf	5
  5986  0F61  0800               	movf	0,w	;code access
  5987  0F62  318E  2692  318F   	fcall	_LCDPutChar
  5988  0F65                     l1707:
  5989  0F65  3001               	movlw	1
  5990  0F66  00F9               	movwf	??_LCDPutStr
  5991  0F67  0879               	movf	??_LCDPutStr,w
  5992  0F68  07FC               	addwf	LCDPutStr@i,f
  5993  0F69                     l1709:
  5994                           
  5995                           ;lcd.c: 136:   while (str[i])
  5996  0F69  0878               	movf	LCDPutStr@str+1,w
  5997  0F6A  00FA               	movwf	??_LCDPutStr+1
  5998  0F6B  0877               	movf	LCDPutStr@str,w
  5999  0F6C  00F9               	movwf	??_LCDPutStr
  6000  0F6D  087C               	movf	LCDPutStr@i,w
  6001  0F6E  0779               	addwf	??_LCDPutStr,w
  6002  0F6F  0084               	movwf	4
  6003  0F70  087A               	movf	??_LCDPutStr+1,w
  6004  0F71  1803               	skipnc
  6005  0F72  0A7A               	incf	??_LCDPutStr+1,w
  6006  0F73  0085               	movwf	5
  6007  0F74  0012               	moviw fsr0++
  6008  0F75  1D03               	btfss	3,2
  6009  0F76  2F78               	goto	u1501
  6010  0F77  2F79               	goto	u1500
  6011  0F78                     u1501:
  6012  0F78  2F56               	goto	l1705
  6013  0F79                     u1500:
  6014  0F79                     l163:
  6015  0F79  0008               	return
  6016  0F7A                     __end_of_LCDPutStr:
  6017                           
  6018                           	psect	text24
  6019  0E92                     __ptext24:	
  6020 ;; *************** function _LCDPutChar *****************
  6021 ;; Defined at:
  6022 ;;		line 101 in file "lcd.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  ch              1    wreg     unsigned char 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;  ch              1    6[COMMON] unsigned char 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  1    wreg      void 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0, pclath, cstack
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6038 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6039 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6040 ;;Total ram usage:        3 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    1
  6043 ;; This function calls:
  6044 ;;		_LCDWriteNibble
  6045 ;; This function is called by:
  6046 ;;		_LCDPutStr
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           
  6051                           ;psect for function _LCDPutChar
  6052  0E92                     _LCDPutChar:
  6053                           
  6054                           ;incstack = 0
  6055                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  6056                           ;LCDPutChar@ch stored from wreg
  6057  0E92  00F6               	movwf	LCDPutChar@ch
  6058  0E93                     l1637:
  6059                           
  6060                           ;lcd.c: 101: void LCDPutChar(uint8_t ch);lcd.c: 102: {;lcd.c: 103:   _delay((unsigned lo
      +                          ng)((5)*(500000/4000.0)));
  6061  0E93  30D0               	movlw	208
  6062  0E94                     u1877:
  6063  0E94  0B89               	decfsz	9,f
  6064  0E95  2E94               	goto	u1877
  6065  0E96  0000               	nop
  6066  0E97                     l1639:
  6067                           
  6068                           ;lcd.c: 106:   LCDWriteNibble(ch, 1);
  6069  0E97  01F0               	clrf	LCDWriteNibble@rs
  6070  0E98  0AF0               	incf	LCDWriteNibble@rs,f
  6071  0E99  0876               	movf	LCDPutChar@ch,w
  6072  0E9A  318E  26ED  318E   	fcall	_LCDWriteNibble
  6073  0E9D                     l1641:
  6074                           
  6075                           ;lcd.c: 109:   ch = (uint8_t)(ch << 4);
  6076  0E9D  0876               	movf	LCDPutChar@ch,w
  6077  0E9E  00F4               	movwf	??_LCDPutChar
  6078  0E9F  3003               	movlw	3
  6079  0EA0                     u1425:
  6080  0EA0  35F4               	lslf	??_LCDPutChar,f
  6081  0EA1  3EFF               	addlw	-1
  6082  0EA2  1D03               	skipz
  6083  0EA3  2EA0               	goto	u1425
  6084  0EA4  3574               	lslf	??_LCDPutChar,w
  6085  0EA5  00F5               	movwf	??_LCDPutChar+1
  6086  0EA6  0875               	movf	??_LCDPutChar+1,w
  6087  0EA7  00F6               	movwf	LCDPutChar@ch
  6088  0EA8                     l1643:
  6089                           
  6090                           ;lcd.c: 112:   LCDWriteNibble(ch, 1);
  6091  0EA8  01F0               	clrf	LCDWriteNibble@rs
  6092  0EA9  0AF0               	incf	LCDWriteNibble@rs,f
  6093  0EAA  0876               	movf	LCDPutChar@ch,w
  6094  0EAB  318E  26ED  318E   	fcall	_LCDWriteNibble
  6095  0EAE                     l154:
  6096  0EAE  0008               	return
  6097  0EAF                     __end_of_LCDPutChar:
  6098                           
  6099                           	psect	text25
  6100  0F7A                     __ptext25:	
  6101 ;; *************** function _LCDGoto *****************
  6102 ;; Defined at:
  6103 ;;		line 143 in file "lcd.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;  pos             1    wreg     unsigned char 
  6106 ;;  ln              1    7[COMMON] unsigned char 
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;  pos             1   10[COMMON] unsigned char 
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  1    wreg      void 
  6111 ;; Registers used:
  6112 ;;		wreg, status,2, status,0, pclath, cstack
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6118 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6119 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6121 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6122 ;;Total ram usage:        4 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    2
  6125 ;; This function calls:
  6126 ;;		_LCDPutCmd
  6127 ;; This function is called by:
  6128 ;;		_main
  6129 ;;		_LCDClear
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           
  6134                           ;psect for function _LCDGoto
  6135  0F7A                     _LCDGoto:
  6136                           
  6137                           ;incstack = 0
  6138                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  6139                           ;LCDGoto@pos stored from wreg
  6140  0F7A  00FA               	movwf	LCDGoto@pos
  6141  0F7B                     l1689:
  6142                           
  6143                           ;lcd.c: 143: void LCDGoto(uint8_t pos, uint8_t ln);lcd.c: 144: {;lcd.c: 146:   if ((ln >
      +                           (2 - 1)) || (pos > (16 - 1)))
  6144  0F7B  3002               	movlw	2
  6145  0F7C  0277               	subwf	LCDGoto@ln,w
  6146  0F7D  1803               	skipnc
  6147  0F7E  2F80               	goto	u1471
  6148  0F7F  2F81               	goto	u1470
  6149  0F80                     u1471:
  6150  0F80  2FA0               	goto	l169
  6151  0F81                     u1470:
  6152  0F81                     l1691:
  6153  0F81  3010               	movlw	16
  6154  0F82  027A               	subwf	LCDGoto@pos,w
  6155  0F83  1C03               	skipc
  6156  0F84  2F86               	goto	u1481
  6157  0F85  2F87               	goto	u1480
  6158  0F86                     u1481:
  6159  0F86  2F88               	goto	l1693
  6160  0F87                     u1480:
  6161  0F87  2FA0               	goto	l169
  6162  0F88                     l1693:
  6163                           
  6164                           ;lcd.c: 153:   LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  6165  0F88  0377               	decf	LCDGoto@ln,w
  6166  0F89  1903               	btfsc	3,2
  6167  0F8A  2F8C               	goto	u1491
  6168  0F8B  2F8D               	goto	u1490
  6169  0F8C                     u1491:
  6170  0F8C  2F93               	goto	l1697
  6171  0F8D                     u1490:
  6172  0F8D                     l1695:
  6173  0F8D  3080               	movlw	128
  6174  0F8E  047A               	iorwf	LCDGoto@pos,w
  6175  0F8F  00F8               	movwf	_LCDGoto$222
  6176  0F90  3000               	movlw	0
  6177  0F91  00F9               	movwf	_LCDGoto$222+1
  6178  0F92  2F98               	goto	l1699
  6179  0F93                     l1697:
  6180  0F93  30C0               	movlw	192
  6181  0F94  047A               	iorwf	LCDGoto@pos,w
  6182  0F95  00F8               	movwf	_LCDGoto$222
  6183  0F96  3000               	movlw	0
  6184  0F97  00F9               	movwf	_LCDGoto$222+1
  6185  0F98                     l1699:
  6186  0F98  0878               	movf	_LCDGoto$222,w
  6187  0F99  318E  26AF  318F   	fcall	_LCDPutCmd
  6188  0F9C                     l1701:
  6189                           
  6190                           ;lcd.c: 156:   _delay((unsigned long)((5)*(500000/4000.0)));
  6191  0F9C  30D0               	movlw	208
  6192  0F9D                     u1887:
  6193  0F9D  0B89               	decfsz	9,f
  6194  0F9E  2F9D               	goto	u1887
  6195  0F9F  0000               	nop
  6196  0FA0                     l169:
  6197  0FA0  0008               	return
  6198  0FA1                     __end_of_LCDGoto:
  6199                           
  6200                           	psect	text26
  6201  0EAF                     __ptext26:	
  6202 ;; *************** function _LCDPutCmd *****************
  6203 ;; Defined at:
  6204 ;;		line 115 in file "lcd.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;  ch              1    wreg     unsigned char 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;  ch              1    6[COMMON] unsigned char 
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  1    wreg      void 
  6211 ;; Registers used:
  6212 ;;		wreg, status,2, status,0, pclath, cstack
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6220 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6221 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6222 ;;Total ram usage:        3 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:    1
  6225 ;; This function calls:
  6226 ;;		_LCDWriteNibble
  6227 ;; This function is called by:
  6228 ;;		_LCD_Initialize
  6229 ;;		_LCDGoto
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           
  6234                           ;psect for function _LCDPutCmd
  6235  0EAF                     _LCDPutCmd:
  6236                           
  6237                           ;incstack = 0
  6238                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  6239                           ;LCDPutCmd@ch stored from wreg
  6240  0EAF  00F6               	movwf	LCDPutCmd@ch
  6241  0EB0                     l1627:
  6242                           
  6243                           ;lcd.c: 115: void LCDPutCmd(uint8_t ch);lcd.c: 116: {;lcd.c: 117:   _delay((unsigned lon
      +                          g)((5)*(500000/4000.0)));
  6244  0EB0  30D0               	movlw	208
  6245  0EB1                     u1897:
  6246  0EB1  0B89               	decfsz	9,f
  6247  0EB2  2EB1               	goto	u1897
  6248  0EB3  0000               	nop
  6249  0EB4                     l1629:
  6250                           
  6251                           ;lcd.c: 120:   LCDWriteNibble(ch, 0);
  6252  0EB4  01F0               	clrf	LCDWriteNibble@rs
  6253  0EB5  0876               	movf	LCDPutCmd@ch,w
  6254  0EB6  318E  26ED  318E   	fcall	_LCDWriteNibble
  6255  0EB9                     l1631:
  6256                           
  6257                           ;lcd.c: 123:   ch = (uint8_t)(ch << 4);
  6258  0EB9  0876               	movf	LCDPutCmd@ch,w
  6259  0EBA  00F4               	movwf	??_LCDPutCmd
  6260  0EBB  3003               	movlw	3
  6261  0EBC                     u1415:
  6262  0EBC  35F4               	lslf	??_LCDPutCmd,f
  6263  0EBD  3EFF               	addlw	-1
  6264  0EBE  1D03               	skipz
  6265  0EBF  2EBC               	goto	u1415
  6266  0EC0  3574               	lslf	??_LCDPutCmd,w
  6267  0EC1  00F5               	movwf	??_LCDPutCmd+1
  6268  0EC2  0875               	movf	??_LCDPutCmd+1,w
  6269  0EC3  00F6               	movwf	LCDPutCmd@ch
  6270  0EC4                     l1633:
  6271                           
  6272                           ;lcd.c: 125:   _delay((unsigned long)((1)*(500000/4000.0)));
  6273  0EC4  3029               	movlw	41
  6274  0EC5                     u1907:
  6275  0EC5  0B89               	decfsz	9,f
  6276  0EC6  2EC5               	goto	u1907
  6277  0EC7  3200               	nop2
  6278  0EC8                     l1635:
  6279                           
  6280                           ;lcd.c: 128:   LCDWriteNibble(ch, 0);
  6281  0EC8  01F0               	clrf	LCDWriteNibble@rs
  6282  0EC9  0876               	movf	LCDPutCmd@ch,w
  6283  0ECA  318E  26ED  318E   	fcall	_LCDWriteNibble
  6284  0ECD                     l157:
  6285  0ECD  0008               	return
  6286  0ECE                     __end_of_LCDPutCmd:
  6287                           
  6288                           	psect	text27
  6289  0EED                     __ptext27:	
  6290 ;; *************** function _LCDWriteNibble *****************
  6291 ;; Defined at:
  6292 ;;		line 74 in file "lcd.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;  ch              1    wreg     unsigned char 
  6295 ;;  rs              1    0[COMMON] unsigned char 
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;  ch              1    3[COMMON] unsigned char 
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  1    wreg      void 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2, status,0
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6307 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6309 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6310 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6311 ;;Total ram usage:        4 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; This function calls:
  6314 ;;		Nothing
  6315 ;; This function is called by:
  6316 ;;		_LCDPutChar
  6317 ;;		_LCDPutCmd
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           
  6322                           ;psect for function _LCDWriteNibble
  6323  0EED                     _LCDWriteNibble:
  6324                           
  6325                           ;incstack = 0
  6326                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
  6327                           ;LCDWriteNibble@ch stored from wreg
  6328  0EED  00F3               	movwf	LCDWriteNibble@ch
  6329  0EEE                     l1555:
  6330                           
  6331                           ;lcd.c: 74: void LCDWriteNibble(uint8_t ch, uint8_t rs);lcd.c: 75: {;lcd.c: 77:   ch = (
      +                          ch >> 4);
  6332  0EEE  0873               	movf	LCDWriteNibble@ch,w
  6333  0EEF  00F1               	movwf	??_LCDWriteNibble
  6334  0EF0  3004               	movlw	4
  6335  0EF1                     u1245:
  6336  0EF1  36F1               	lsrf	??_LCDWriteNibble,f
  6337  0EF2  0B89               	decfsz	9,f
  6338  0EF3  2EF1               	goto	u1245
  6339  0EF4  0871               	movf	??_LCDWriteNibble,w
  6340  0EF5  00F2               	movwf	??_LCDWriteNibble+1
  6341  0EF6  0872               	movf	??_LCDWriteNibble+1,w
  6342  0EF7  00F3               	movwf	LCDWriteNibble@ch
  6343  0EF8                     l1557:
  6344                           
  6345                           ;lcd.c: 80:   ch = (ch & 0x0F);
  6346  0EF8  0873               	movf	LCDWriteNibble@ch,w
  6347  0EF9  390F               	andlw	15
  6348  0EFA  00F1               	movwf	??_LCDWriteNibble
  6349  0EFB  0871               	movf	??_LCDWriteNibble,w
  6350  0EFC  00F3               	movwf	LCDWriteNibble@ch
  6351  0EFD                     l1559:
  6352                           
  6353                           ;lcd.c: 83:   PORTB = (PORTB & 0xF0);
  6354  0EFD  0020               	movlb	0	; select bank0
  6355  0EFE  080D               	movf	13,w	;volatile
  6356  0EFF  39F0               	andlw	240
  6357  0F00  008D               	movwf	13	;volatile
  6358                           
  6359                           ;lcd.c: 86:   PORTB = (PORTB | ch);
  6360  0F01  080D               	movf	13,w	;volatile
  6361  0F02  0473               	iorwf	LCDWriteNibble@ch,w
  6362  0F03  008D               	movwf	13	;volatile
  6363  0F04                     l1561:
  6364                           
  6365                           ;lcd.c: 89:   PORTBbits.RB5 = rs;
  6366  0F04  0C70               	rrf	LCDWriteNibble@rs,w
  6367  0F05  1C03               	skipc
  6368  0F06  128D               	bcf	13,5	;volatile
  6369  0F07  1803               	skipnc
  6370  0F08  168D               	bsf	13,5	;volatile
  6371  0F09                     l1563:
  6372                           
  6373                           ;lcd.c: 92:   PORTBbits.RB6 = 0;
  6374  0F09  130D               	bcf	13,6	;volatile
  6375  0F0A                     l1565:
  6376                           
  6377                           ;lcd.c: 95:   PORTBbits.RB4 = 1;
  6378  0F0A  160D               	bsf	13,4	;volatile
  6379  0F0B                     l1567:
  6380                           
  6381                           ;lcd.c: 98:   PORTBbits.RB4 = 0;
  6382  0F0B  120D               	bcf	13,4	;volatile
  6383  0F0C                     l151:
  6384  0F0C  0008               	return
  6385  0F0D                     __end_of_LCDWriteNibble:
  6386  007E                     btemp	set	126	;btemp
  6387  007E                     wtemp0	set	126
  6388                           
  6389                           	psect	config
  6390                           
  6391                           ;Config register CONFIG1 @ 0x8007
  6392                           ;	Oscillator Selection Bits
  6393                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6394                           ;	Watchdog Timer Enable
  6395                           ;	WDTE = OFF, WDT disabled
  6396                           ;	Power-up Timer Enable
  6397                           ;	PWRTE = OFF, PWRT disabled
  6398                           ;	MCLR Pin Function Select
  6399                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6400                           ;	Flash Program Memory Code Protection
  6401                           ;	CP = OFF, Program memory code protection is disabled
  6402                           ;	Brown-out Reset Enable
  6403                           ;	BOREN = ON, Brown-out Reset enabled
  6404                           ;	Clock Out Enable
  6405                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6406                           ;	Internal/External Switchover Mode
  6407                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  6408                           ;	Fail-Safe Clock Monitor Enable
  6409                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6410  8007                     	org	32775
  6411  8007  3FE4               	dw	16356
  6412                           
  6413                           ;Config register CONFIG2 @ 0x8008
  6414                           ;	Flash Memory Self-Write Protection
  6415                           ;	WRT = OFF, Write protection off
  6416                           ;	Peripheral Pin Select one-way control
  6417                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  6418                           ;	Zero-cross detect disable
  6419                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR and can be enabled with ZCDS
      +                          EN bit.
  6420                           ;	Phase Lock Loop enable
  6421                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  6422                           ;	Stack Overflow/Underflow Reset Enable
  6423                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6424                           ;	Brown-out Reset Voltage Selection
  6425                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6426                           ;	Low-Power Brown Out Reset
  6427                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6428                           ;	Low-Voltage Programming Enable
  6429                           ;	LVP = ON, Low-voltage programming enabled
  6430  8008                     	org	32776
  6431  8008  3EFF               	dw	16127

Data Sizes:
    Strings     49
    Constant    2
    Data        6
    BSS         48
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     59      77
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@printchar(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@printchar(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S538_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@printchar(BANK1[20]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@printchar(BANK1[20]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_5(CODE[8]), STR_3(CODE[11]), 
		 -> main@printchar(BANK1[20]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _sumdigits->___awdiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_Initialize->_LCDPutCmd
    _LCDClear->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                50    50      0   15701
                                              9 BANK1     50    50      0
                           _LCDClear
                            _LCDGoto
                          _LCDPutStr
                     _LCD_Initialize
                  _SYSTEM_Initialize
                            ___awdiv
                            ___awmod
                             ___wmul
                            _sprintf
                          _sumdigits
 ---------------------------------------------------------------------------------
 (1) _sumdigits                                            7     5      2    1568
                                              9 COMMON     3     1      2
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6330
                                             13 COMMON     1     1      0
                                             70 BANK0      6     0      6
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     461
                                              7 COMMON     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDClear                                             0     0      0    2362
                            _LCDGoto
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            6     4      2    1159
                                              7 COMMON     6     4      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              4     3      1    1203
                                              7 COMMON     4     3      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       4     3      1     394
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDClear
     _LCDGoto
       _LCDPutCmd
         _LCDWriteNibble
     _LCDPutStr
       _LCDPutChar
         _LCDWriteNibble
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
       _LCDWriteNibble
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   ___awdiv
   ___awmod
   ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   _sumdigits
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3B      4D       7       96.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      CB      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      CB      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jun 02 11:52:27 2021

                 _LCD_Initialize 0F0D                               l26 006C                      ?_LCDPutChar 0070  
                             l53 07D4                               l54 07D4                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072                              l132 0E39                              l109 0FCE  
                            l151 0F0C                              l135 0007                              l129 0E43  
                            l154 0EAE                              l410 010E                              l163 0F79  
                            l148 0F2F                              l244 0ED8                              l157 0ECD  
                            l246 0EEC                              l176 0E5D                              l344 0478  
                            l169 0FA0                              l345 0489                              l357 0377  
                            l358 0388                              l707 0F53                              l397 01C3  
                            l806 0030                              l734 0129                              l742 04D3  
                            l815 0E91                              l751 057A                              l743 04DC  
                            l809 0E26                              l737 014B                              l739 0164  
                            l747 04F4                              l748 050A                              l772 029E  
                            l765 05EE                              l783 0E77                              l786 0E77  
                            l779 0FFF                              l798 00BB                              u920 0072  
                            u921 0071                              u930 0077                              u931 0076  
                            u940 0086                              u941 0085                              u950 00A3  
                            u951 00A2                              u960 0030                              u961 002F  
                            u970 0E8B                              u955 009F                              u971 0E8A  
                            u980 0394                              u981 0393                              _abs 0E5E  
                            _pad 010F                     ___awmod@sign 0076                              wreg 0009  
                __end_of_LCDGoto 0FA1                             ?_abs 0073                             l1501 02A0  
                           l2037 061F                             l1511 0301                             l1503 02AA  
                           l1431 0077                             l1521 0336                             l1513 0304  
                           l1505 02CB                             l1433 007C                             l1601 0588  
                           l1523 0346                             l1515 030C                             l1507 02D5  
                           l1435 0086                             l1427 006D                             l1443 000A  
                           l1451 0E79                             l1531 0115                             l1611 05BC  
                           l1603 0595                             l1701 0F9C                             l1461 0389  
                           l1517 0310                             l1525 0354                             l1509 02F4  
                           l1437 00A3                             l1429 0072                             l1445 000D  
                           l1453 0E7E                             l1541 0138                             l1533 011D  
                           l1621 05D3                             l1613 05C0                             l1605 05A2  
                           l1631 0EB9                             l1703 0F54                             l1711 0FA1  
                           l1471 03DE                             l1463 038A                             l1527 0359  
                           l1519 0314                             l1551 0E5E                             l1439 00B3  
                           l1447 001B                             l1455 0E82                             l1543 013D  
                           l1535 0122                             l1615 05C4                             l1623 05DC  
                           l1607 05B0                             l1561 0F04                             l1633 0EC4  
                           l1641 0E9D                             l1705 0F56                             l1721 0FB1  
                           l1713 0FA5                             l1481 0404                             l1473 03E2  
                           l1465 0394                             l1553 0E6B                             l1449 0020  
                           l1457 0E8B                             l1545 0150                             l1537 0127  
                           l1529 0111                             l1617 05CA                             l1609 05B5  
                           l1801 00CC                             l1563 0F09                             l1555 0EEE  
                           l1635 0EC8                             l1627 0EB0                             l1643 0EA8  
                           l1707 0F65                             l1731 0FB8                             l1723 0FB3  
                           l1715 0FA8                             l1491 0446                             l1483 0408  
                           l1475 03EC                             l1467 03B5                             l1547 0158  
                           l1539 012C                             l1619 05CF                             l1571 049C  
                           l1651 01E5                             l1811 00E3                             l1803 00D1  
                           l1565 0F0A                             l1557 0EF8                             l1629 0EB4  
                           l1637 0E93                             l1709 0F69                             l1741 0E36  
                           l1733 0FBA                             l1725 0FB5                             l1717 0FAB  
                           l1901 0EE8                             l1493 0447                             l1485 040C  
                           l1477 03F9                             l1469 03BF                             l1581 04EF  
                           l1573 04AF                             l1661 022C                             l1653 01E9  
                           l1645 01C6                             l1813 00E7                             l1805 00D7  
                           l1821 0100                             l1567 0F0B                             l1559 0EFD  
                           l1639 0E97                             l1743 0E37                             l1735 0FBC  
                           l1727 0FB6                             l1719 0FAD                             l1487 0414  
                           l1479 03FC                             l1495 0455                             l1591 0511  
                           l1583 04FC                             l1575 04B5                             l1671 026A  
                           l1655 01FA                             l1647 01D7                             l1831 0FD5  
                           l1751 016A                             l1823 0105                             l1815 00F1  
                           l1807 00DA                             l1911 0607                             l1737 0FBD  
                           l1729 0FB7                             l1745 0004                             l1497 045A  
                           l1489 0436                             l1593 0516                             l1585 0502  
                           l1577 04D8                             l1569 048C                             l1665 0246  
                           l1657 020B                             l1649 01DF                             l1681 027B  
                           l1833 0FD9                             l1761 017E                             l1753 016F  
                           l1825 010A                             l1817 00F5                             l1809 00DF  
                           l1841 0031                             l1921 062E                             l1913 060C  
                           l1905 05EF                             l1691 0F81                             l1739 0E33  
                           l1499 029F                             l1595 0545                             l1587 0506  
                           l1579 04E9                             l1683 0294                             l1667 0257  
                           l1675 0270                             l1659 0213                             l1835 0FED  
                           l1771 0192                             l1763 0180                             l1755 0171  
                           l1747 0165                             l1819 00FA                             l1851 0067  
                           l1843 0035                             l1931 066D                             l1923 0638  
                           l1915 0611                             l1907 05FA                             l1693 0F88  
                           l1861 0F13                             l1597 0549                             l1589 050E  
                           l1677 0278                             l1669 025F                             l1837 0FF7  
                           l1829 0FD1                             l1781 01AF                             l1773 0196  
                           l1765 0186                             l1757 0175                             l1749 0166  
                           l1845 0045                             l1941 069D                             l1933 0674  
                           l1925 064A                             l1917 0627                             l1909 0602  
                           l1695 0F8D                             l1871 0F2B                             l1863 0F1B  
                           l1855 0E3A                             l1599 054D                             l1775 01A5  
                           l1767 0189                             l1783 01B5                             l1759 017A  
                           l1791 00BC                             l1847 004B                             l1951 06BA  
                           l1943 06A3                             l1935 067A                             l1927 064E  
                           l1919 0629                             l1697 0F93                             l1689 0F7B  
                           l1865 0F1F                             l1857 0F0D                             l1881 0F4B  
                           l1873 0F32                             l1785 01BA                             l1777 01A9  
                           l1769 018E                             l1793 00BD                             l1849 005A  
                           l1961 06DC                             l1953 06BF                             l1945 06AA  
                           l1929 0653                             l1937 067E                             l1699 0F98  
                           l1867 0F23                             l1859 0F11                             l1891 0ECE  
                           l1875 0F3A                             l1787 01BF                             l1779 01AA  
                           l1795 00C1                             l1971 0714                             l1963 06E9  
                           l1955 06C4                             l1947 06B7                             l1939 068C  
                           l1885 0E44                             l1869 0F27                             l1893 0ED0  
                           l1877 0F3C                             l1797 00C6                             l1981 072E  
                           l1973 0717                             l1965 06FA                             l1957 06CB  
                           l1949 06BA                             ?_pad 0024                             l1887 0E49  
                           l1895 0ED4                             l1879 0F3E                             l1799 00C8  
                           l1991 0761                             l1983 0731                             l1975 071C  
                           l1967 0700                             l1959 06D8                             l1889 0E50  
                           l1897 0EDD                             l1993 07A1                             l1985 0740  
                           l1977 0723                             l1969 0707                             l1899 0EE2  
                           l1995 07BA                             l1987 0750                             l1979 0723  
                           l1997 07C0                             l1989 0754                             l1999 07C7  
                           STR_1 101E                             STR_2 1030                             STR_3 1013  
                           STR_4 1030                             STR_5 1028                             STR_6 1030  
                           STR_7 1002                             STR_8 1002                             u1000 03BF  
                           u1001 03BE                             u1020 03E9                             u1030 03F9  
                           u1110 02D5                             u1031 03F8                             u1111 02D4  
                           u1040 040C                             u1200 0122                             u1041 040B  
                           u1201 0121                             u1050 0436                             u1130 0301  
                           u1210 014B                             u1051 0435                             u1131 0300  
                           u1211 014A                             u1060 0455                             u1140 0314  
                           u1220 0150                             u1300 04E9                             u1061 0454  
                           u1141 0313                             u1221 014F                             u1301 04E8  
                           u1070 045A                             u1150 0336                             u1230 0E6B  
                           u1310 0502                             u1071 0459                             u1055 0432  
                           u1151 0335                             u1231 0E6A                             u1215 0147  
                           u1311 0501                             u1160 0354                             u1400 05CA  
                           u1320 0506                             u1161 0353                             u1401 05C9  
                           u1321 0505                             u1305 04E5                             u1170 0359  
                           u1090 02AA                             u1330 0588                             u1250 04A7  
                           u1171 0358                             u1155 0332                             u1091 02A9  
                           u1235 0E67                             u1331 0587                             u1251 04A5  
                           u1500 0F79                             u1340 0595                             u1260 04A8  
                           u1245 0EF1                             u1501 0F78                             u1341 0594  
                           _LATA 010C                             u1190 0115                             u1350 05A2  
                           u1270 04B5                             u1430 01D7                             u1510 016A  
                           _LATB 010D                             u1415 0EBC                             u1191 0114  
                           u1351 05A1                             u1335 0584                             u1271 04B4  
                           u1431 01D6                             u1511 0169                             _LATC 010E  
                           u1360 05B0                             u1440 01FA                             u1600 01BA  
                           u1520 0175                             u1425 0EA0                             u1361 05AF  
                           u1441 01F9                             u1601 01B9                             u1521 0174  
                           u1370 05B5                             u1290 04D8                             u1450 020B  
                           u1530 0186                             u1610 00C1                             u1371 05B4  
                           u1355 059E                             u1291 04D7                             u1451 020A  
                           u1531 0185                             u1611 00C0                             u1380 05BC  
                           u1460 0257                             u1700 0FF7                             u1620 00CC  
                           u1381 05BB                             u1365 05AC                             u1461 0256  
                           u1701 0FF6                             u1621 00CB                             u1470 0F81  
                           u1390 05C0                             u1550 0196                             u1630 00D7  
                           u1710 0067                             u1471 0F80                             u1391 05BF  
                           u1551 0195                             u1631 00D6                             u1711 0066  
                           u1480 0F87                             u1720 0ED4                             u1800 06E9  
                           u1481 0F86                             u1721 0ED3                             u1545 018A  
                           u1801 06E8                             u1490 0F8D                             u1570 01A5  
                           u1650 00E7                             u1810 072B                             u1491 0F8C  
                           u1571 01A4                             u1651 00E6                             u1715 0063  
                           u1660 00F1                             u1820 0761                             u1565 0197  
                           u1661 00F0                             u1645 00DB                             u1821 0760  
                           u1805 06E5                             u1750 0EE8                             u1590 01B5  
                           u1751 0EE7                             u1735 0ED9                             u1591 01B4  
                           u1575 01A1                             u1680 0100                             u1760 064A  
                           u1745 0EDE                             u1585 01AB                             u1681 00FF  
                           u1665 00ED                             u1825 075D                             u1761 0649  
                           u1690 0105                             u1770 066D                             u1907 0EC5  
                           u1691 0104                             u1675 00F6                             u1771 066C  
                           u1780 0674                             u1837 06B0                             u1781 0673  
                           u1790 068C                             u1847 070D                             u1791 068B  
                           u1775 0669                             u1857 07CD                             u1867 0F16  
                           u1795 0688                             u1877 0E94                             u1887 0F9D  
                           u1897 0EB1                             _WPUA 020C                             _WPUB 020D  
                           _WPUC 020E                             _WPUE 0210                     main@SumPrime 00D3  
                           abs@a 0073                             _dbuf 0120                             _main 05EF  
                           _dtoa 048A                             _prec 006C                             _nout 00E3  
                           pad@i 0027                             pad@p 0025                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             pad@w 0029  
                           btemp 007E               __size_of_LCDPutCmd 001F                             start 0002  
             __size_of_LCDPutStr 0026           __end_of_LCD_Initialize 0F30                 __end_of_LCDClear 0E5E  
                          ??_abs 0075                            ??_pad 007C                      LCDPutCmd@ch 0076  
 __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 0E3A                  __end_of___aodiv 048A  
                          ?_main 0070                            ?_dtoa 0030                  __end_of___aomod 0389  
                __end_of___awdiv 01C4                  __end_of___awmod 010F                  ___awdiv@divisor 0070  
                ___awdiv@counter 0075                     vfpfcnvrt@fmt 004E                            _PORTB 000D  
                  main@SumDigits 00D9                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E                            _TRISE 0090                            u99lld 03B3  
                          _flags 006E                   _WDT_Initialize 0004                            _fputc 006D  
                          _fputs 0008                            pad@fp 002B                            _width 00E5  
                          _putch 0E26                            main@i 00D5                            dtoa@d 0030  
                          dtoa@i 004C                            dtoa@n 0044                            dtoa@p 003E  
                          dtoa@s 0042                            dtoa@w 0040              __size_of_LCDPutChar 001D  
                          status 0003                            wtemp0 007E                  __end_of_sprintf 0F54  
                ?_LCD_Initialize 0070                  __initialization 07D7                     __end_of_main 07D7  
                   __end_of_dtoa 05EF                           ??_main 00A9                           ??_dtoa 0038  
                      ??_LCDGoto 0078                __end_of_LCDPutCmd 0ECE                     LCDPutChar@ch 0076  
              __end_of_LCDPutStr 0F7A           __end_of_WDT_Initialize 0008                           ?_fputc 0070  
                         ?_fputs 0078                 ___awdiv@dividend 0072                           _ANSELA 018C  
                         ?_putch 0070                           _ANSELB 018D                           _ANSELC 018E  
                         _BORCON 0116                           _ODCONA 028C                           _ODCONB 028D  
                         _ODCONC 028E                           _INLVLA 038C                           _INLVLB 038D  
                         _INLVLC 038E                           _INLVLE 0390                           u101lld 03DE  
                         u110lld 02C9                           _OSCCON 0099                           u112lld 02F4  
                         u108lld 0478                           u118lld 0377                           u128lld 04D3  
                         _WDTCON 0097                     LCDPutStr@str 0077                   _LCDWriteNibble 0EED  
                   vfprintf@cfmt 0064                        ??___aodiv 0070                        ??___aomod 0070  
                         ___wmul 0ECE                        ??___awdiv 0074                        ??___awmod 0074  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                  ___awmod@counter 0075  
                         pad@buf 0024                           dtoa@fp 003D                           _strlen 0E78  
                         fputc@c 0070                           fputs@c 0020                           fputs@i 0021  
                         fputs@s 0023                    main@printchar 00AF                  ?_WDT_Initialize 0070  
                         putch@c 0070                 __end_of_vfprintf 1000                        ??_sprintf 007D  
                      ?_LCDClear 0070                _SYSTEM_Initialize 0E3A           __end_of_LCDWriteNibble 0F0D  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070                        LCDGoto@ln 0077  
             _last3digitsCarnet1 00EB               _last3digitsCarnet2 00E9               _last3digitsCarnet3 00E7  
                 __pcstackCOMMON 0070                     __pidataBANK1 0E2D              ??_SYSTEM_Initialize 0070  
                  __end_of_fputc 00BC                     ??_LCDPutChar 0074                    __end_of_fputs 0031  
                  __end_of_putch 0E27                   _OPTION_REGbits 0095                   sumdigits@digit 0020  
                        ??_fputc 0073        __end_of_SYSTEM_Initialize 0E44                          ??_fputs 0079  
                        ??_putch 0070                       __pbssBANK0 006C                       __pbssBANK1 00DB  
                     __pbssBANK2 0120                       ??_LCDClear 007D                  ?_LCDWriteNibble 0070  
             __end_of_LCDPutChar 0EAF                       __pmaintext 05EF                          ?___wmul 0070  
                        ?_strlen 0070                          _LCDGoto 0F7A               __size_of_vfpfcnvrt 00DB  
                        _OSCTUNE 0098                          _SLRCONA 030C                          _SLRCONB 030D  
                        _SLRCONC 030E               __size_of_sumdigits 003C                 ??_LCD_Initialize 0077  
                        ___aodiv 0389                          ___aomod 029F                          ___awdiv 0165  
                        ___awmod 00BC                  __size_of___wmul 001F                        ?_vfprintf 005E  
                        __ptext1 0031                          __ptext2 00BC                          __ptext3 0165  
                        __ptext4 0F30                          __ptext5 0FCF                          __ptext6 01C4  
                        __ptext7 048A                          __ptext8 010F                          __ptext9 0E78  
                __size_of_strlen 001A            _OSCILLATOR_Initialize 0E33                     __size_of_abs 001A  
                   __size_of_pad 0056                 ___awmod@dividend 0072         ??_PIN_MANAGER_Initialize 0070  
                      _LCDPutCmd 0EAF                          main@bin 00C7       __size_of_SYSTEM_Initialize 000A  
                        _sprintf 0F30                          clrloop0 0E28                        _LCDPutStr 0F54  
           end_of_initialization 07FD                          fputc@fp 0072                          fputs@fp 0078  
              __end_of_vfpfcnvrt 029F                       ??_vfprintf 0061                __end_ofmain@label 1002  
                        strlen@a 0073                          strlen@s 0074                __end_of_sumdigits 006D  
               ??_WDT_Initialize 0070                        _PORTBbits 000D                       main@Binary 00C3  
                     ?_LCDPutCmd 0070                       ?_LCDPutStr 0077                       main@carnet 00D1  
                     LCDGoto@pos 007A                __size_of_LCDClear 001A                       main@number 00D7  
                    vfpfcnvrt@ap 004F                      vfpfcnvrt@fp 005D                       LCDPutStr@i 007C  
                    vfpfcnvrt@ll 0055                   __end_of___wmul 0EED           ?_OSCILLATOR_Initialize 0070  
                 __end_of_strlen 0E92              start_initialization 07D7  __size_of_PIN_MANAGER_Initialize 002E  
               ??_LCDWriteNibble 0071                      __end_of_abs 0E78                      __end_of_pad 0165  
                    vfprintf@fmt 005E                         ??___wmul 0074                      __pdataBANK1 00E7  
                sumdigits@number 0079                         ??_strlen 0072                         ?_LCDGoto 0077  
                      ___latbits 0003                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
               ___aodiv@dividend 0028                      ??_LCDPutCmd 0074                      ??_LCDPutStr 0079  
         _PIN_MANAGER_Initialize 0FA1                         ?___aodiv 0020                         ?___aomod 0020  
                       ?___awdiv 0070                 ___aodiv@quotient 0073                         ?___awmod 0070  
               LCDWriteNibble@ch 0073                 LCDWriteNibble@rs 0070                __size_of_vfprintf 0031  
                       ?_sprintf 0066                   __size_of_fputc 004F                   __size_of_fputs 0029  
                 __size_of_putch 0001                         _LCDClear 0E44                   ___wmul@product 0074  
                      clear_ram0 0E27                      _LCDGoto$222 0078                        main@F5610 00DB  
                      _vfpfcnvrt 01C4                ___wmul@multiplier 0070                        main@label 1000  
                      _sumdigits 0031                 __size_of_LCDGoto 0027                        main@prime 00CF  
                     vfprintf@ap 0060                       vfprintf@fp 0063          ??_OSCILLATOR_Initialize 0070  
        __size_of_LCD_Initialize 0023                 __size_of___aodiv 0101                 __size_of___aomod 00EA  
               __size_of___awdiv 005F                 __size_of___awmod 0053                       ?_vfpfcnvrt 004E  
                ___aodiv@divisor 0020                  ___aodiv@counter 0071                       sprintf@fmt 0066  
             sumdigits@SumDigits 0022                       ?_sumdigits 0079                         _dtoa$611 003B  
                       __ptext10 0008                         __ptext11 006D                         __ptext20 0E33  
                       __ptext12 0E26                         __ptext21 0F0D                         __ptext13 0E5E  
                       __ptext22 0E44                         __ptext14 029F                         __ptext23 0F54  
                       __ptext15 0389                         __ptext24 0E92                         __ptext16 0ECE  
                       __ptext25 0F7A                         __ptext17 0E3A                         __ptext26 0EAF  
                       __ptext18 0004                         __ptext27 0EED                         __ptext19 0FA1  
               __size_of_sprintf 0024                    __size_of_main 01E8                    __size_of_dtoa 0165  
                       _vfprintf 0FCF                       _LCDPutChar 0E92                 ___aomod@dividend 0028  
        __size_of_WDT_Initialize 0004                        sprintf@ap 00A2          ?_PIN_MANAGER_Initialize 0070  
                ___aomod@divisor 0020                      ??_vfpfcnvrt 0050                  ___aomod@counter 0071  
                  __pstringtext1 1000                    __pstringtext2 1013                    __pstringtext3 101E  
                  __pstringtext4 1028                    __pstringtext5 1030                    __pstringtext6 0000  
                       sprintf@f 00A4                         sprintf@s 00A3                      ??_sumdigits 007B  
                   ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 0FCF          __size_of_LCDWriteNibble 0020  
                   ___aomod@sign 0072  
