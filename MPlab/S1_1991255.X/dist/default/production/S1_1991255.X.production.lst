

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jun 02 15:09:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16LF1718
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16LF1718 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  011A                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011C                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  018E                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0199                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019D                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019E                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  020C                     	;# 
   186  020D                     	;# 
   187  020E                     	;# 
   188  0210                     	;# 
   189  0211                     	;# 
   190  0211                     	;# 
   191  0212                     	;# 
   192  0212                     	;# 
   193  0213                     	;# 
   194  0213                     	;# 
   195  0214                     	;# 
   196  0214                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0216                     	;# 
   202  0216                     	;# 
   203  0217                     	;# 
   204  0217                     	;# 
   205  028C                     	;# 
   206  028D                     	;# 
   207  028E                     	;# 
   208  0291                     	;# 
   209  0291                     	;# 
   210  0292                     	;# 
   211  0293                     	;# 
   212  0293                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029A                     	;# 
   218  029E                     	;# 
   219  030C                     	;# 
   220  030D                     	;# 
   221  030E                     	;# 
   222  038C                     	;# 
   223  038D                     	;# 
   224  038E                     	;# 
   225  0390                     	;# 
   226  0391                     	;# 
   227  0392                     	;# 
   228  0393                     	;# 
   229  0394                     	;# 
   230  0395                     	;# 
   231  0396                     	;# 
   232  0397                     	;# 
   233  0398                     	;# 
   234  0399                     	;# 
   235  039D                     	;# 
   236  039E                     	;# 
   237  039F                     	;# 
   238  0415                     	;# 
   239  0416                     	;# 
   240  0417                     	;# 
   241  041C                     	;# 
   242  041D                     	;# 
   243  041E                     	;# 
   244  0498                     	;# 
   245  0498                     	;# 
   246  0499                     	;# 
   247  049A                     	;# 
   248  049B                     	;# 
   249  049B                     	;# 
   250  049C                     	;# 
   251  049D                     	;# 
   252  049E                     	;# 
   253  049F                     	;# 
   254  0511                     	;# 
   255  0515                     	;# 
   256  0617                     	;# 
   257  0618                     	;# 
   258  0619                     	;# 
   259  0619                     	;# 
   260  061A                     	;# 
   261  061B                     	;# 
   262  061C                     	;# 
   263  061C                     	;# 
   264  0691                     	;# 
   265  0692                     	;# 
   266  0693                     	;# 
   267  0694                     	;# 
   268  0695                     	;# 
   269  0696                     	;# 
   270  0697                     	;# 
   271  0698                     	;# 
   272  0699                     	;# 
   273  069A                     	;# 
   274  069B                     	;# 
   275  069C                     	;# 
   276  069D                     	;# 
   277  069E                     	;# 
   278  069F                     	;# 
   279  0E0F                     	;# 
   280  0E10                     	;# 
   281  0E11                     	;# 
   282  0E12                     	;# 
   283  0E13                     	;# 
   284  0E14                     	;# 
   285  0E15                     	;# 
   286  0E17                     	;# 
   287  0E20                     	;# 
   288  0E21                     	;# 
   289  0E22                     	;# 
   290  0E24                     	;# 
   291  0E25                     	;# 
   292  0E28                     	;# 
   293  0E29                     	;# 
   294  0E2A                     	;# 
   295  0E2B                     	;# 
   296  0E90                     	;# 
   297  0E91                     	;# 
   298  0E92                     	;# 
   299  0E93                     	;# 
   300  0E94                     	;# 
   301  0E95                     	;# 
   302  0E96                     	;# 
   303  0E97                     	;# 
   304  0E98                     	;# 
   305  0E99                     	;# 
   306  0E9A                     	;# 
   307  0E9B                     	;# 
   308  0E9C                     	;# 
   309  0E9D                     	;# 
   310  0E9E                     	;# 
   311  0E9F                     	;# 
   312  0EA0                     	;# 
   313  0EA1                     	;# 
   314  0EA2                     	;# 
   315  0EA3                     	;# 
   316  0EA4                     	;# 
   317  0EA5                     	;# 
   318  0EA6                     	;# 
   319  0EA7                     	;# 
   320  0F0F                     	;# 
   321  0F10                     	;# 
   322  0F11                     	;# 
   323  0F12                     	;# 
   324  0F13                     	;# 
   325  0F14                     	;# 
   326  0F15                     	;# 
   327  0F16                     	;# 
   328  0F17                     	;# 
   329  0F18                     	;# 
   330  0F19                     	;# 
   331  0F1A                     	;# 
   332  0F1B                     	;# 
   333  0F1C                     	;# 
   334  0F1D                     	;# 
   335  0F1E                     	;# 
   336  0F1F                     	;# 
   337  0F20                     	;# 
   338  0F21                     	;# 
   339  0F22                     	;# 
   340  0F23                     	;# 
   341  0F24                     	;# 
   342  0F25                     	;# 
   343  0F26                     	;# 
   344  0F27                     	;# 
   345  0F28                     	;# 
   346  0F29                     	;# 
   347  0F2A                     	;# 
   348  0F2B                     	;# 
   349  0F2C                     	;# 
   350  0F2D                     	;# 
   351  0F2E                     	;# 
   352  0F2F                     	;# 
   353  0F30                     	;# 
   354  0F31                     	;# 
   355  0F32                     	;# 
   356  0F33                     	;# 
   357  0F34                     	;# 
   358  0F35                     	;# 
   359  0F36                     	;# 
   360  0F37                     	;# 
   361  0FE4                     	;# 
   362  0FE5                     	;# 
   363  0FE6                     	;# 
   364  0FE7                     	;# 
   365  0FE8                     	;# 
   366  0FE9                     	;# 
   367  0FEA                     	;# 
   368  0FEB                     	;# 
   369  0FED                     	;# 
   370  0FEE                     	;# 
   371  0FEF                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  008C                     	;# 
   401  008D                     	;# 
   402  008E                     	;# 
   403  0090                     	;# 
   404  0091                     	;# 
   405  0092                     	;# 
   406  0093                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0097                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009A                     	;# 
   413  009B                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  010C                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  0111                     	;# 
   423  0112                     	;# 
   424  0113                     	;# 
   425  0114                     	;# 
   426  0115                     	;# 
   427  0116                     	;# 
   428  0117                     	;# 
   429  0118                     	;# 
   430  0119                     	;# 
   431  011A                     	;# 
   432  011B                     	;# 
   433  011B                     	;# 
   434  011C                     	;# 
   435  018C                     	;# 
   436  018D                     	;# 
   437  018E                     	;# 
   438  0191                     	;# 
   439  0191                     	;# 
   440  0192                     	;# 
   441  0193                     	;# 
   442  0193                     	;# 
   443  0194                     	;# 
   444  0195                     	;# 
   445  0196                     	;# 
   446  0199                     	;# 
   447  0199                     	;# 
   448  0199                     	;# 
   449  019A                     	;# 
   450  019A                     	;# 
   451  019A                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019C                     	;# 
   458  019C                     	;# 
   459  019C                     	;# 
   460  019D                     	;# 
   461  019D                     	;# 
   462  019D                     	;# 
   463  019E                     	;# 
   464  019E                     	;# 
   465  019E                     	;# 
   466  019F                     	;# 
   467  019F                     	;# 
   468  019F                     	;# 
   469  019F                     	;# 
   470  019F                     	;# 
   471  020C                     	;# 
   472  020D                     	;# 
   473  020E                     	;# 
   474  0210                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0212                     	;# 
   479  0213                     	;# 
   480  0213                     	;# 
   481  0214                     	;# 
   482  0214                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0216                     	;# 
   489  0217                     	;# 
   490  0217                     	;# 
   491  028C                     	;# 
   492  028D                     	;# 
   493  028E                     	;# 
   494  0291                     	;# 
   495  0291                     	;# 
   496  0292                     	;# 
   497  0293                     	;# 
   498  0293                     	;# 
   499  0298                     	;# 
   500  0298                     	;# 
   501  0299                     	;# 
   502  029A                     	;# 
   503  029A                     	;# 
   504  029E                     	;# 
   505  030C                     	;# 
   506  030D                     	;# 
   507  030E                     	;# 
   508  038C                     	;# 
   509  038D                     	;# 
   510  038E                     	;# 
   511  0390                     	;# 
   512  0391                     	;# 
   513  0392                     	;# 
   514  0393                     	;# 
   515  0394                     	;# 
   516  0395                     	;# 
   517  0396                     	;# 
   518  0397                     	;# 
   519  0398                     	;# 
   520  0399                     	;# 
   521  039D                     	;# 
   522  039E                     	;# 
   523  039F                     	;# 
   524  0415                     	;# 
   525  0416                     	;# 
   526  0417                     	;# 
   527  041C                     	;# 
   528  041D                     	;# 
   529  041E                     	;# 
   530  0498                     	;# 
   531  0498                     	;# 
   532  0499                     	;# 
   533  049A                     	;# 
   534  049B                     	;# 
   535  049B                     	;# 
   536  049C                     	;# 
   537  049D                     	;# 
   538  049E                     	;# 
   539  049F                     	;# 
   540  0511                     	;# 
   541  0515                     	;# 
   542  0617                     	;# 
   543  0618                     	;# 
   544  0619                     	;# 
   545  0619                     	;# 
   546  061A                     	;# 
   547  061B                     	;# 
   548  061C                     	;# 
   549  061C                     	;# 
   550  0691                     	;# 
   551  0692                     	;# 
   552  0693                     	;# 
   553  0694                     	;# 
   554  0695                     	;# 
   555  0696                     	;# 
   556  0697                     	;# 
   557  0698                     	;# 
   558  0699                     	;# 
   559  069A                     	;# 
   560  069B                     	;# 
   561  069C                     	;# 
   562  069D                     	;# 
   563  069E                     	;# 
   564  069F                     	;# 
   565  0E0F                     	;# 
   566  0E10                     	;# 
   567  0E11                     	;# 
   568  0E12                     	;# 
   569  0E13                     	;# 
   570  0E14                     	;# 
   571  0E15                     	;# 
   572  0E17                     	;# 
   573  0E20                     	;# 
   574  0E21                     	;# 
   575  0E22                     	;# 
   576  0E24                     	;# 
   577  0E25                     	;# 
   578  0E28                     	;# 
   579  0E29                     	;# 
   580  0E2A                     	;# 
   581  0E2B                     	;# 
   582  0E90                     	;# 
   583  0E91                     	;# 
   584  0E92                     	;# 
   585  0E93                     	;# 
   586  0E94                     	;# 
   587  0E95                     	;# 
   588  0E96                     	;# 
   589  0E97                     	;# 
   590  0E98                     	;# 
   591  0E99                     	;# 
   592  0E9A                     	;# 
   593  0E9B                     	;# 
   594  0E9C                     	;# 
   595  0E9D                     	;# 
   596  0E9E                     	;# 
   597  0E9F                     	;# 
   598  0EA0                     	;# 
   599  0EA1                     	;# 
   600  0EA2                     	;# 
   601  0EA3                     	;# 
   602  0EA4                     	;# 
   603  0EA5                     	;# 
   604  0EA6                     	;# 
   605  0EA7                     	;# 
   606  0F0F                     	;# 
   607  0F10                     	;# 
   608  0F11                     	;# 
   609  0F12                     	;# 
   610  0F13                     	;# 
   611  0F14                     	;# 
   612  0F15                     	;# 
   613  0F16                     	;# 
   614  0F17                     	;# 
   615  0F18                     	;# 
   616  0F19                     	;# 
   617  0F1A                     	;# 
   618  0F1B                     	;# 
   619  0F1C                     	;# 
   620  0F1D                     	;# 
   621  0F1E                     	;# 
   622  0F1F                     	;# 
   623  0F20                     	;# 
   624  0F21                     	;# 
   625  0F22                     	;# 
   626  0F23                     	;# 
   627  0F24                     	;# 
   628  0F25                     	;# 
   629  0F26                     	;# 
   630  0F27                     	;# 
   631  0F28                     	;# 
   632  0F29                     	;# 
   633  0F2A                     	;# 
   634  0F2B                     	;# 
   635  0F2C                     	;# 
   636  0F2D                     	;# 
   637  0F2E                     	;# 
   638  0F2F                     	;# 
   639  0F30                     	;# 
   640  0F31                     	;# 
   641  0F32                     	;# 
   642  0F33                     	;# 
   643  0F34                     	;# 
   644  0F35                     	;# 
   645  0F36                     	;# 
   646  0F37                     	;# 
   647  0FE4                     	;# 
   648  0FE5                     	;# 
   649  0FE6                     	;# 
   650  0FE7                     	;# 
   651  0FE8                     	;# 
   652  0FE9                     	;# 
   653  0FEA                     	;# 
   654  0FEB                     	;# 
   655  0FED                     	;# 
   656  0FEE                     	;# 
   657  0FEF                     	;# 
   658  0000                     	;# 
   659  0001                     	;# 
   660  0002                     	;# 
   661  0003                     	;# 
   662  0004                     	;# 
   663  0005                     	;# 
   664  0006                     	;# 
   665  0007                     	;# 
   666  0008                     	;# 
   667  0009                     	;# 
   668  000A                     	;# 
   669  000B                     	;# 
   670  000C                     	;# 
   671  000D                     	;# 
   672  000E                     	;# 
   673  0010                     	;# 
   674  0011                     	;# 
   675  0012                     	;# 
   676  0013                     	;# 
   677  0015                     	;# 
   678  0016                     	;# 
   679  0016                     	;# 
   680  0017                     	;# 
   681  0018                     	;# 
   682  0019                     	;# 
   683  001A                     	;# 
   684  001B                     	;# 
   685  001C                     	;# 
   686  008C                     	;# 
   687  008D                     	;# 
   688  008E                     	;# 
   689  0090                     	;# 
   690  0091                     	;# 
   691  0092                     	;# 
   692  0093                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0098                     	;# 
   697  0099                     	;# 
   698  009A                     	;# 
   699  009B                     	;# 
   700  009B                     	;# 
   701  009C                     	;# 
   702  009D                     	;# 
   703  009E                     	;# 
   704  009F                     	;# 
   705  010C                     	;# 
   706  010D                     	;# 
   707  010E                     	;# 
   708  0111                     	;# 
   709  0112                     	;# 
   710  0113                     	;# 
   711  0114                     	;# 
   712  0115                     	;# 
   713  0116                     	;# 
   714  0117                     	;# 
   715  0118                     	;# 
   716  0119                     	;# 
   717  011A                     	;# 
   718  011B                     	;# 
   719  011B                     	;# 
   720  011C                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  018E                     	;# 
   724  0191                     	;# 
   725  0191                     	;# 
   726  0192                     	;# 
   727  0193                     	;# 
   728  0193                     	;# 
   729  0194                     	;# 
   730  0195                     	;# 
   731  0196                     	;# 
   732  0199                     	;# 
   733  0199                     	;# 
   734  0199                     	;# 
   735  019A                     	;# 
   736  019A                     	;# 
   737  019A                     	;# 
   738  019B                     	;# 
   739  019B                     	;# 
   740  019B                     	;# 
   741  019B                     	;# 
   742  019B                     	;# 
   743  019C                     	;# 
   744  019C                     	;# 
   745  019C                     	;# 
   746  019D                     	;# 
   747  019D                     	;# 
   748  019D                     	;# 
   749  019E                     	;# 
   750  019E                     	;# 
   751  019E                     	;# 
   752  019F                     	;# 
   753  019F                     	;# 
   754  019F                     	;# 
   755  019F                     	;# 
   756  019F                     	;# 
   757  020C                     	;# 
   758  020D                     	;# 
   759  020E                     	;# 
   760  0210                     	;# 
   761  0211                     	;# 
   762  0211                     	;# 
   763  0212                     	;# 
   764  0212                     	;# 
   765  0213                     	;# 
   766  0213                     	;# 
   767  0214                     	;# 
   768  0214                     	;# 
   769  0215                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0215                     	;# 
   773  0216                     	;# 
   774  0216                     	;# 
   775  0217                     	;# 
   776  0217                     	;# 
   777  028C                     	;# 
   778  028D                     	;# 
   779  028E                     	;# 
   780  0291                     	;# 
   781  0291                     	;# 
   782  0292                     	;# 
   783  0293                     	;# 
   784  0293                     	;# 
   785  0298                     	;# 
   786  0298                     	;# 
   787  0299                     	;# 
   788  029A                     	;# 
   789  029A                     	;# 
   790  029E                     	;# 
   791  030C                     	;# 
   792  030D                     	;# 
   793  030E                     	;# 
   794  038C                     	;# 
   795  038D                     	;# 
   796  038E                     	;# 
   797  0390                     	;# 
   798  0391                     	;# 
   799  0392                     	;# 
   800  0393                     	;# 
   801  0394                     	;# 
   802  0395                     	;# 
   803  0396                     	;# 
   804  0397                     	;# 
   805  0398                     	;# 
   806  0399                     	;# 
   807  039D                     	;# 
   808  039E                     	;# 
   809  039F                     	;# 
   810  0415                     	;# 
   811  0416                     	;# 
   812  0417                     	;# 
   813  041C                     	;# 
   814  041D                     	;# 
   815  041E                     	;# 
   816  0498                     	;# 
   817  0498                     	;# 
   818  0499                     	;# 
   819  049A                     	;# 
   820  049B                     	;# 
   821  049B                     	;# 
   822  049C                     	;# 
   823  049D                     	;# 
   824  049E                     	;# 
   825  049F                     	;# 
   826  0511                     	;# 
   827  0515                     	;# 
   828  0617                     	;# 
   829  0618                     	;# 
   830  0619                     	;# 
   831  0619                     	;# 
   832  061A                     	;# 
   833  061B                     	;# 
   834  061C                     	;# 
   835  061C                     	;# 
   836  0691                     	;# 
   837  0692                     	;# 
   838  0693                     	;# 
   839  0694                     	;# 
   840  0695                     	;# 
   841  0696                     	;# 
   842  0697                     	;# 
   843  0698                     	;# 
   844  0699                     	;# 
   845  069A                     	;# 
   846  069B                     	;# 
   847  069C                     	;# 
   848  069D                     	;# 
   849  069E                     	;# 
   850  069F                     	;# 
   851  0E0F                     	;# 
   852  0E10                     	;# 
   853  0E11                     	;# 
   854  0E12                     	;# 
   855  0E13                     	;# 
   856  0E14                     	;# 
   857  0E15                     	;# 
   858  0E17                     	;# 
   859  0E20                     	;# 
   860  0E21                     	;# 
   861  0E22                     	;# 
   862  0E24                     	;# 
   863  0E25                     	;# 
   864  0E28                     	;# 
   865  0E29                     	;# 
   866  0E2A                     	;# 
   867  0E2B                     	;# 
   868  0E90                     	;# 
   869  0E91                     	;# 
   870  0E92                     	;# 
   871  0E93                     	;# 
   872  0E94                     	;# 
   873  0E95                     	;# 
   874  0E96                     	;# 
   875  0E97                     	;# 
   876  0E98                     	;# 
   877  0E99                     	;# 
   878  0E9A                     	;# 
   879  0E9B                     	;# 
   880  0E9C                     	;# 
   881  0E9D                     	;# 
   882  0E9E                     	;# 
   883  0E9F                     	;# 
   884  0EA0                     	;# 
   885  0EA1                     	;# 
   886  0EA2                     	;# 
   887  0EA3                     	;# 
   888  0EA4                     	;# 
   889  0EA5                     	;# 
   890  0EA6                     	;# 
   891  0EA7                     	;# 
   892  0F0F                     	;# 
   893  0F10                     	;# 
   894  0F11                     	;# 
   895  0F12                     	;# 
   896  0F13                     	;# 
   897  0F14                     	;# 
   898  0F15                     	;# 
   899  0F16                     	;# 
   900  0F17                     	;# 
   901  0F18                     	;# 
   902  0F19                     	;# 
   903  0F1A                     	;# 
   904  0F1B                     	;# 
   905  0F1C                     	;# 
   906  0F1D                     	;# 
   907  0F1E                     	;# 
   908  0F1F                     	;# 
   909  0F20                     	;# 
   910  0F21                     	;# 
   911  0F22                     	;# 
   912  0F23                     	;# 
   913  0F24                     	;# 
   914  0F25                     	;# 
   915  0F26                     	;# 
   916  0F27                     	;# 
   917  0F28                     	;# 
   918  0F29                     	;# 
   919  0F2A                     	;# 
   920  0F2B                     	;# 
   921  0F2C                     	;# 
   922  0F2D                     	;# 
   923  0F2E                     	;# 
   924  0F2F                     	;# 
   925  0F30                     	;# 
   926  0F31                     	;# 
   927  0F32                     	;# 
   928  0F33                     	;# 
   929  0F34                     	;# 
   930  0F35                     	;# 
   931  0F36                     	;# 
   932  0F37                     	;# 
   933  0FE4                     	;# 
   934  0FE5                     	;# 
   935  0FE6                     	;# 
   936  0FE7                     	;# 
   937  0FE8                     	;# 
   938  0FE9                     	;# 
   939  0FEA                     	;# 
   940  0FEB                     	;# 
   941  0FED                     	;# 
   942  0FEE                     	;# 
   943  0FEF                     	;# 
   944  0000                     	;# 
   945  0001                     	;# 
   946  0002                     	;# 
   947  0003                     	;# 
   948  0004                     	;# 
   949  0005                     	;# 
   950  0006                     	;# 
   951  0007                     	;# 
   952  0008                     	;# 
   953  0009                     	;# 
   954  000A                     	;# 
   955  000B                     	;# 
   956  000C                     	;# 
   957  000D                     	;# 
   958  000E                     	;# 
   959  0010                     	;# 
   960  0011                     	;# 
   961  0012                     	;# 
   962  0013                     	;# 
   963  0015                     	;# 
   964  0016                     	;# 
   965  0016                     	;# 
   966  0017                     	;# 
   967  0018                     	;# 
   968  0019                     	;# 
   969  001A                     	;# 
   970  001B                     	;# 
   971  001C                     	;# 
   972  008C                     	;# 
   973  008D                     	;# 
   974  008E                     	;# 
   975  0090                     	;# 
   976  0091                     	;# 
   977  0092                     	;# 
   978  0093                     	;# 
   979  0095                     	;# 
   980  0096                     	;# 
   981  0097                     	;# 
   982  0098                     	;# 
   983  0099                     	;# 
   984  009A                     	;# 
   985  009B                     	;# 
   986  009B                     	;# 
   987  009C                     	;# 
   988  009D                     	;# 
   989  009E                     	;# 
   990  009F                     	;# 
   991  010C                     	;# 
   992  010D                     	;# 
   993  010E                     	;# 
   994  0111                     	;# 
   995  0112                     	;# 
   996  0113                     	;# 
   997  0114                     	;# 
   998  0115                     	;# 
   999  0116                     	;# 
  1000  0117                     	;# 
  1001  0118                     	;# 
  1002  0119                     	;# 
  1003  011A                     	;# 
  1004  011B                     	;# 
  1005  011B                     	;# 
  1006  011C                     	;# 
  1007  018C                     	;# 
  1008  018D                     	;# 
  1009  018E                     	;# 
  1010  0191                     	;# 
  1011  0191                     	;# 
  1012  0192                     	;# 
  1013  0193                     	;# 
  1014  0193                     	;# 
  1015  0194                     	;# 
  1016  0195                     	;# 
  1017  0196                     	;# 
  1018  0199                     	;# 
  1019  0199                     	;# 
  1020  0199                     	;# 
  1021  019A                     	;# 
  1022  019A                     	;# 
  1023  019A                     	;# 
  1024  019B                     	;# 
  1025  019B                     	;# 
  1026  019B                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019C                     	;# 
  1030  019C                     	;# 
  1031  019C                     	;# 
  1032  019D                     	;# 
  1033  019D                     	;# 
  1034  019D                     	;# 
  1035  019E                     	;# 
  1036  019E                     	;# 
  1037  019E                     	;# 
  1038  019F                     	;# 
  1039  019F                     	;# 
  1040  019F                     	;# 
  1041  019F                     	;# 
  1042  019F                     	;# 
  1043  020C                     	;# 
  1044  020D                     	;# 
  1045  020E                     	;# 
  1046  0210                     	;# 
  1047  0211                     	;# 
  1048  0211                     	;# 
  1049  0212                     	;# 
  1050  0212                     	;# 
  1051  0213                     	;# 
  1052  0213                     	;# 
  1053  0214                     	;# 
  1054  0214                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0215                     	;# 
  1058  0215                     	;# 
  1059  0216                     	;# 
  1060  0216                     	;# 
  1061  0217                     	;# 
  1062  0217                     	;# 
  1063  028C                     	;# 
  1064  028D                     	;# 
  1065  028E                     	;# 
  1066  0291                     	;# 
  1067  0291                     	;# 
  1068  0292                     	;# 
  1069  0293                     	;# 
  1070  0293                     	;# 
  1071  0298                     	;# 
  1072  0298                     	;# 
  1073  0299                     	;# 
  1074  029A                     	;# 
  1075  029A                     	;# 
  1076  029E                     	;# 
  1077  030C                     	;# 
  1078  030D                     	;# 
  1079  030E                     	;# 
  1080  038C                     	;# 
  1081  038D                     	;# 
  1082  038E                     	;# 
  1083  0390                     	;# 
  1084  0391                     	;# 
  1085  0392                     	;# 
  1086  0393                     	;# 
  1087  0394                     	;# 
  1088  0395                     	;# 
  1089  0396                     	;# 
  1090  0397                     	;# 
  1091  0398                     	;# 
  1092  0399                     	;# 
  1093  039D                     	;# 
  1094  039E                     	;# 
  1095  039F                     	;# 
  1096  0415                     	;# 
  1097  0416                     	;# 
  1098  0417                     	;# 
  1099  041C                     	;# 
  1100  041D                     	;# 
  1101  041E                     	;# 
  1102  0498                     	;# 
  1103  0498                     	;# 
  1104  0499                     	;# 
  1105  049A                     	;# 
  1106  049B                     	;# 
  1107  049B                     	;# 
  1108  049C                     	;# 
  1109  049D                     	;# 
  1110  049E                     	;# 
  1111  049F                     	;# 
  1112  0511                     	;# 
  1113  0515                     	;# 
  1114  0617                     	;# 
  1115  0618                     	;# 
  1116  0619                     	;# 
  1117  0619                     	;# 
  1118  061A                     	;# 
  1119  061B                     	;# 
  1120  061C                     	;# 
  1121  061C                     	;# 
  1122  0691                     	;# 
  1123  0692                     	;# 
  1124  0693                     	;# 
  1125  0694                     	;# 
  1126  0695                     	;# 
  1127  0696                     	;# 
  1128  0697                     	;# 
  1129  0698                     	;# 
  1130  0699                     	;# 
  1131  069A                     	;# 
  1132  069B                     	;# 
  1133  069C                     	;# 
  1134  069D                     	;# 
  1135  069E                     	;# 
  1136  069F                     	;# 
  1137  0E0F                     	;# 
  1138  0E10                     	;# 
  1139  0E11                     	;# 
  1140  0E12                     	;# 
  1141  0E13                     	;# 
  1142  0E14                     	;# 
  1143  0E15                     	;# 
  1144  0E17                     	;# 
  1145  0E20                     	;# 
  1146  0E21                     	;# 
  1147  0E22                     	;# 
  1148  0E24                     	;# 
  1149  0E25                     	;# 
  1150  0E28                     	;# 
  1151  0E29                     	;# 
  1152  0E2A                     	;# 
  1153  0E2B                     	;# 
  1154  0E90                     	;# 
  1155  0E91                     	;# 
  1156  0E92                     	;# 
  1157  0E93                     	;# 
  1158  0E94                     	;# 
  1159  0E95                     	;# 
  1160  0E96                     	;# 
  1161  0E97                     	;# 
  1162  0E98                     	;# 
  1163  0E99                     	;# 
  1164  0E9A                     	;# 
  1165  0E9B                     	;# 
  1166  0E9C                     	;# 
  1167  0E9D                     	;# 
  1168  0E9E                     	;# 
  1169  0E9F                     	;# 
  1170  0EA0                     	;# 
  1171  0EA1                     	;# 
  1172  0EA2                     	;# 
  1173  0EA3                     	;# 
  1174  0EA4                     	;# 
  1175  0EA5                     	;# 
  1176  0EA6                     	;# 
  1177  0EA7                     	;# 
  1178  0F0F                     	;# 
  1179  0F10                     	;# 
  1180  0F11                     	;# 
  1181  0F12                     	;# 
  1182  0F13                     	;# 
  1183  0F14                     	;# 
  1184  0F15                     	;# 
  1185  0F16                     	;# 
  1186  0F17                     	;# 
  1187  0F18                     	;# 
  1188  0F19                     	;# 
  1189  0F1A                     	;# 
  1190  0F1B                     	;# 
  1191  0F1C                     	;# 
  1192  0F1D                     	;# 
  1193  0F1E                     	;# 
  1194  0F1F                     	;# 
  1195  0F20                     	;# 
  1196  0F21                     	;# 
  1197  0F22                     	;# 
  1198  0F23                     	;# 
  1199  0F24                     	;# 
  1200  0F25                     	;# 
  1201  0F26                     	;# 
  1202  0F27                     	;# 
  1203  0F28                     	;# 
  1204  0F29                     	;# 
  1205  0F2A                     	;# 
  1206  0F2B                     	;# 
  1207  0F2C                     	;# 
  1208  0F2D                     	;# 
  1209  0F2E                     	;# 
  1210  0F2F                     	;# 
  1211  0F30                     	;# 
  1212  0F31                     	;# 
  1213  0F32                     	;# 
  1214  0F33                     	;# 
  1215  0F34                     	;# 
  1216  0F35                     	;# 
  1217  0F36                     	;# 
  1218  0F37                     	;# 
  1219  0FE4                     	;# 
  1220  0FE5                     	;# 
  1221  0FE6                     	;# 
  1222  0FE7                     	;# 
  1223  0FE8                     	;# 
  1224  0FE9                     	;# 
  1225  0FEA                     	;# 
  1226  0FEB                     	;# 
  1227  0FED                     	;# 
  1228  0FEE                     	;# 
  1229  0FEF                     	;# 
  1230                           
  1231                           	psect	idataBANK1
  1232  0E2D                     __pidataBANK1:
  1233                           
  1234                           ;initializer for _last3digitsCarnet3
  1235  0E2D  34A4               	retlw	164
  1236  0E2E  3401               	retlw	1
  1237                           
  1238                           ;initializer for _last3digitsCarnet2
  1239  0E2F  34ED               	retlw	237
  1240  0E30  3401               	retlw	1
  1241                           
  1242                           ;initializer for _last3digitsCarnet1
  1243  0E31  34FF               	retlw	255
  1244  0E32  3400               	retlw	0
  1245                           
  1246                           	psect	stringtext1
  1247  1000                     __pstringtext1:
  1248  1000                     main@label:
  1249  1000  3401               	retlw	1
  1250  1001  3400               	retlw	0
  1251  1002                     __end_ofmain@label:
  1252  000D                     _PORTBbits	set	13
  1253  000D                     _PORTB	set	13
  1254  0097                     _WDTCON	set	151
  1255  0098                     _OSCTUNE	set	152
  1256  0099                     _OSCCON	set	153
  1257  0095                     _OPTION_REGbits	set	149
  1258  008E                     _TRISC	set	142
  1259  008D                     _TRISB	set	141
  1260  008C                     _TRISA	set	140
  1261  0090                     _TRISE	set	144
  1262  0116                     _BORCON	set	278
  1263  010E                     _LATC	set	270
  1264  010D                     _LATB	set	269
  1265  010C                     _LATA	set	268
  1266  018C                     _ANSELA	set	396
  1267  018D                     _ANSELB	set	397
  1268  018E                     _ANSELC	set	398
  1269  020E                     _WPUC	set	526
  1270  020C                     _WPUA	set	524
  1271  020D                     _WPUB	set	525
  1272  0210                     _WPUE	set	528
  1273  028E                     _ODCONC	set	654
  1274  028D                     _ODCONB	set	653
  1275  028C                     _ODCONA	set	652
  1276  030E                     _SLRCONC	set	782
  1277  030D                     _SLRCONB	set	781
  1278  030C                     _SLRCONA	set	780
  1279  0390                     _INLVLE	set	912
  1280  038E                     _INLVLC	set	910
  1281  038D                     _INLVLB	set	909
  1282  038C                     _INLVLA	set	908
  1283  1002                     STR_8:
  1284  1002  3420               	retlw	32	;' '
  1285  1003  3420               	retlw	32	;' '
  1286  1004  3420               	retlw	32	;' '
  1287  1005  3420               	retlw	32	;' '
  1288  1006  3420               	retlw	32	;' '
  1289  1007  3420               	retlw	32	;' '
  1290  1008  3420               	retlw	32	;' '
  1291  1009  3420               	retlw	32	;' '
  1292  100A  3420               	retlw	32	;' '
  1293  100B  3420               	retlw	32	;' '
  1294  100C  3420               	retlw	32	;' '
  1295  100D  3420               	retlw	32	;' '
  1296  100E  3420               	retlw	32	;' '
  1297  100F  3420               	retlw	32	;' '
  1298  1010  3420               	retlw	32	;' '
  1299  1011  3420               	retlw	32	;' '
  1300  1012  3400               	retlw	0
  1301                           
  1302                           	psect	stringtext2
  1303  1013                     __pstringtext2:
  1304  1013                     STR_1:
  1305  1013  3443               	retlw	67	;'C'
  1306  1014  3461               	retlw	97	;'a'
  1307  1015  346C               	retlw	108	;'l'
  1308  1016  3463               	retlw	99	;'c'
  1309  1017  3475               	retlw	117	;'u'
  1310  1018  346C               	retlw	108	;'l'
  1311  1019  3461               	retlw	97	;'a'
  1312  101A  346E               	retlw	110	;'n'
  1313  101B  3464               	retlw	100	;'d'
  1314  101C  346F               	retlw	111	;'o'
  1315  101D  342E               	retlw	46	;'.'
  1316  101E  342E               	retlw	46	;'.'
  1317  101F  342E               	retlw	46	;'.'
  1318  1020  3400               	retlw	0
  1319                           
  1320                           	psect	stringtext3
  1321  1021                     __pstringtext3:
  1322  1021                     STR_4:
  1323  1021  3473               	retlw	115	;'s'
  1324  1022  3475               	retlw	117	;'u'
  1325  1023  346D               	retlw	109	;'m'
  1326  1024  3444               	retlw	68	;'D'
  1327  1025  3469               	retlw	105	;'i'
  1328  1026  3467               	retlw	103	;'g'
  1329  1027  3469               	retlw	105	;'i'
  1330  1028  3474               	retlw	116	;'t'
  1331  1029  3473               	retlw	115	;'s'
  1332  102A  343D               	retlw	61	;'='
  1333  102B  3400               	retlw	0
  1334                           
  1335                           	psect	stringtext4
  1336  102C                     __pstringtext4:
  1337  102C                     STR_2:
  1338  102C  3473               	retlw	115	;'s'
  1339  102D  3475               	retlw	117	;'u'
  1340  102E  346D               	retlw	109	;'m'
  1341  102F  3450               	retlw	80	;'P'
  1342  1030  3472               	retlw	114	;'r'
  1343  1031  3469               	retlw	105	;'i'
  1344  1032  346D               	retlw	109	;'m'
  1345  1033  3465               	retlw	101	;'e'
  1346  1034  343D               	retlw	61	;'='
  1347  1035  3400               	retlw	0
  1348                           
  1349                           	psect	stringtext5
  1350  1036                     __pstringtext5:
  1351  1036                     STR_6:
  1352  1036  3442               	retlw	66	;'B'
  1353  1037  3469               	retlw	105	;'i'
  1354  1038  346E               	retlw	110	;'n'
  1355  1039  3461               	retlw	97	;'a'
  1356  103A  3472               	retlw	114	;'r'
  1357  103B  3479               	retlw	121	;'y'
  1358  103C  343D               	retlw	61	;'='
  1359  103D  3400               	retlw	0
  1360                           
  1361                           	psect	stringtext6
  1362  103E                     __pstringtext6:
  1363  103E                     STR_3:
  1364  103E  3425               	retlw	37	;'%'
  1365  103F  3464               	retlw	100	;'d'
  1366  1040  3400               	retlw	0
  1367                           
  1368                           	psect	stringtext7
  1369  0000                     __pstringtext7:
  1370  1002                     
  1371                           	psect	cinit
  1372  07D7                     start_initialization:	
  1373                           ; #config settings
  1374                           
  1375  07D7                     __initialization:
  1376                           
  1377                           ; Initialize objects allocated to BANK1
  1378  07D7  302D               	movlw	low __pidataBANK1
  1379  07D8  0084               	movwf	4
  1380  07D9  308E               	movlw	(high __pidataBANK1)| (0+128)
  1381  07DA  0085               	movwf	5
  1382  07DB  0021               	movlb	1	; select bank1
  1383  07DC  0012               	moviw fsr0++
  1384  07DD  00DD               	movwf	__pdataBANK1& (0+127)
  1385  07DE  0012               	moviw fsr0++
  1386  07DF  00DE               	movwf	(__pdataBANK1+1)& (0+127)
  1387  07E0  0012               	moviw fsr0++
  1388  07E1  00DF               	movwf	(__pdataBANK1+2)& (0+127)
  1389  07E2  0012               	moviw fsr0++
  1390  07E3  00E0               	movwf	(__pdataBANK1+3)& (0+127)
  1391  07E4  0012               	moviw fsr0++
  1392  07E5  00E1               	movwf	(__pdataBANK1+4)& (0+127)
  1393  07E6  0012               	moviw fsr0++
  1394  07E7  00E2               	movwf	(__pdataBANK1+5)& (0+127)
  1395                           
  1396                           ; Clear objects allocated to BANK0
  1397  07E8  0020               	movlb	0	; select bank0
  1398  07E9  01EC               	clrf	__pbssBANK0& (0+127)
  1399  07EA  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  1400  07EB  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  1401  07EC  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  1402                           
  1403                           ; Clear objects allocated to BANK1
  1404  07ED  30D1               	movlw	low __pbssBANK1
  1405  07EE  0084               	movwf	4
  1406  07EF  3000               	movlw	high __pbssBANK1
  1407  07F0  0085               	movwf	5
  1408  07F1  300C               	movlw	12
  1409  07F2  318E  2627  3187   	fcall	clear_ram0
  1410                           
  1411                           ; Clear objects allocated to BANK2
  1412  07F5  3020               	movlw	low __pbssBANK2
  1413  07F6  0084               	movwf	4
  1414  07F7  3001               	movlw	high __pbssBANK2
  1415  07F8  0085               	movwf	5
  1416  07F9  3020               	movlw	32
  1417  07FA  318E  2627  3187   	fcall	clear_ram0
  1418  07FD                     end_of_initialization:	
  1419                           ;End of C runtime variable initialization code
  1420                           
  1421  07FD                     __end_of__initialization:
  1422  07FD  0020               	movlb	0
  1423  07FE  3185  2DEC         	ljmp	_main	;jump to C main() function
  1424                           
  1425                           	psect	bssBANK0
  1426  006C                     __pbssBANK0:
  1427  006C                     _prec:
  1428  006C                     	ds	2
  1429  006E                     _flags:
  1430  006E                     	ds	2
  1431                           
  1432                           	psect	bssBANK1
  1433  00D1                     __pbssBANK1:
  1434  00D1                     main@F5610:
  1435  00D1                     	ds	8
  1436  00D9                     _nout:
  1437  00D9                     	ds	2
  1438  00DB                     _width:
  1439  00DB                     	ds	2
  1440                           
  1441                           	psect	dataBANK1
  1442  00DD                     __pdataBANK1:
  1443  00DD                     _last3digitsCarnet3:
  1444  00DD                     	ds	2
  1445  00DF                     _last3digitsCarnet2:
  1446  00DF                     	ds	2
  1447  00E1                     _last3digitsCarnet1:
  1448  00E1                     	ds	2
  1449                           
  1450                           	psect	bssBANK2
  1451  0120                     __pbssBANK2:
  1452  0120                     _dbuf:
  1453  0120                     	ds	32
  1454                           
  1455                           	psect	clrtext
  1456  0E27                     clear_ram0:	
  1457                           ;	Called with FSR0 containing the base address, and
  1458                           ;	WREG with the size to clear
  1459                           
  1460  0E27  0064               	clrwdt	;clear the watchdog before getting into this loop
  1461  0E28                     clrloop0:
  1462  0E28  0180               	clrf	0	;clear RAM location pointed to by FSR
  1463  0E29  3101               	addfsr 0,1
  1464  0E2A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1465  0E2B  2E28               	goto	clrloop0	;have we reached the end yet?
  1466  0E2C  3400               	retlw	0	;all done for this memory range, return
  1467                           
  1468                           	psect	cstackBANK1
  1469  00A0                     __pcstackBANK1:
  1470  00A0                     	ds	2
  1471  00A2                     sprintf@ap:
  1472                           
  1473                           ; 1 bytes @ 0x2
  1474  00A2                     	ds	1
  1475  00A3                     sprintf@s:
  1476                           
  1477                           ; 1 bytes @ 0x3
  1478  00A3                     	ds	1
  1479  00A4                     sprintf@f:
  1480                           
  1481                           ; 5 bytes @ 0x4
  1482  00A4                     	ds	5
  1483  00A9                     ??_main:
  1484                           
  1485                           ; 1 bytes @ 0x9
  1486  00A9                     	ds	6
  1487  00AF                     main@printchar:
  1488                           
  1489                           ; 10 bytes @ 0xF
  1490  00AF                     	ds	10
  1491  00B9                     main@Binary:
  1492                           
  1493                           ; 4 bytes @ 0x19
  1494  00B9                     	ds	4
  1495  00BD                     main@bin:
  1496                           
  1497                           ; 8 bytes @ 0x1D
  1498  00BD                     	ds	8
  1499  00C5                     main@prime:
  1500                           
  1501                           ; 2 bytes @ 0x25
  1502  00C5                     	ds	2
  1503  00C7                     main@carnet:
  1504                           
  1505                           ; 2 bytes @ 0x27
  1506  00C7                     	ds	2
  1507  00C9                     main@SumPrime:
  1508                           
  1509                           ; 2 bytes @ 0x29
  1510  00C9                     	ds	2
  1511  00CB                     main@i:
  1512                           
  1513                           ; 2 bytes @ 0x2B
  1514  00CB                     	ds	2
  1515  00CD                     main@number:
  1516                           
  1517                           ; 2 bytes @ 0x2D
  1518  00CD                     	ds	2
  1519  00CF                     main@SumDigits:
  1520                           
  1521                           ; 2 bytes @ 0x2F
  1522  00CF                     	ds	2
  1523                           
  1524                           	psect	cstackCOMMON
  1525  0070                     __pcstackCOMMON:
  1526  0070                     ?_SYSTEM_Initialize:
  1527  0070                     ??_SYSTEM_Initialize:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_LCD_Initialize:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_LCDClear:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_OSCILLATOR_Initialize:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ??_OSCILLATOR_Initialize:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_WDT_Initialize:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ??_WDT_Initialize:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_LCDPutCmd:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_putch:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ??_putch:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?_main:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_PIN_MANAGER_Initialize:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ??_PIN_MANAGER_Initialize:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ?_LCDWriteNibble:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_LCDPutChar:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ??___aodiv:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ??___aomod:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?_fputc:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ?_strlen:	
  1582                           ; 2 bytes @ 0x0
  1583                           
  1584  0070                     ?___wmul:	
  1585                           ; 2 bytes @ 0x0
  1586                           
  1587  0070                     ?___awdiv:	
  1588                           ; 2 bytes @ 0x0
  1589                           
  1590  0070                     ?___awmod:	
  1591                           ; 2 bytes @ 0x0
  1592                           
  1593  0070                     LCDWriteNibble@rs:	
  1594                           ; 2 bytes @ 0x0
  1595                           
  1596  0070                     putch@c:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0070                     ___wmul@multiplier:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0070                     ___awdiv@divisor:	
  1603                           ; 2 bytes @ 0x0
  1604                           
  1605  0070                     ___awmod@divisor:	
  1606                           ; 2 bytes @ 0x0
  1607                           
  1608  0070                     fputc@c:	
  1609                           ; 2 bytes @ 0x0
  1610                           
  1611                           
  1612                           ; 2 bytes @ 0x0
  1613  0070                     	ds	1
  1614  0071                     ??_LCDWriteNibble:
  1615  0071                     ___aodiv@counter:	
  1616                           ; 1 bytes @ 0x1
  1617                           
  1618  0071                     ___aomod@counter:	
  1619                           ; 1 bytes @ 0x1
  1620                           
  1621                           
  1622                           ; 1 bytes @ 0x1
  1623  0071                     	ds	1
  1624  0072                     ??_strlen:
  1625  0072                     ___aodiv@sign:	
  1626                           ; 1 bytes @ 0x2
  1627                           
  1628  0072                     ___aomod@sign:	
  1629                           ; 1 bytes @ 0x2
  1630                           
  1631  0072                     fputc@fp:	
  1632                           ; 1 bytes @ 0x2
  1633                           
  1634  0072                     ___wmul@multiplicand:	
  1635                           ; 1 bytes @ 0x2
  1636                           
  1637  0072                     ___awdiv@dividend:	
  1638                           ; 2 bytes @ 0x2
  1639                           
  1640  0072                     ___awmod@dividend:	
  1641                           ; 2 bytes @ 0x2
  1642                           
  1643                           
  1644                           ; 2 bytes @ 0x2
  1645  0072                     	ds	1
  1646  0073                     ??_fputc:
  1647  0073                     ?_abs:	
  1648                           ; 1 bytes @ 0x3
  1649                           
  1650  0073                     LCDWriteNibble@ch:	
  1651                           ; 2 bytes @ 0x3
  1652                           
  1653  0073                     strlen@a:	
  1654                           ; 1 bytes @ 0x3
  1655                           
  1656  0073                     abs@a:	
  1657                           ; 1 bytes @ 0x3
  1658                           
  1659  0073                     ___aodiv@quotient:	
  1660                           ; 2 bytes @ 0x3
  1661                           
  1662                           
  1663                           ; 8 bytes @ 0x3
  1664  0073                     	ds	1
  1665  0074                     ??_LCDPutCmd:
  1666  0074                     ??_LCDPutChar:	
  1667                           ; 1 bytes @ 0x4
  1668                           
  1669  0074                     ??___wmul:	
  1670                           ; 1 bytes @ 0x4
  1671                           
  1672  0074                     ??___awdiv:	
  1673                           ; 1 bytes @ 0x4
  1674                           
  1675  0074                     ??___awmod:	
  1676                           ; 1 bytes @ 0x4
  1677                           
  1678  0074                     strlen@s:	
  1679                           ; 1 bytes @ 0x4
  1680                           
  1681  0074                     ___wmul@product:	
  1682                           ; 1 bytes @ 0x4
  1683                           
  1684                           
  1685                           ; 2 bytes @ 0x4
  1686  0074                     	ds	1
  1687  0075                     ??_abs:
  1688  0075                     ___awdiv@counter:	
  1689                           ; 1 bytes @ 0x5
  1690                           
  1691  0075                     ___awmod@counter:	
  1692                           ; 1 bytes @ 0x5
  1693                           
  1694                           
  1695                           ; 1 bytes @ 0x5
  1696  0075                     	ds	1
  1697  0076                     LCDPutChar@ch:
  1698  0076                     LCDPutCmd@ch:	
  1699                           ; 1 bytes @ 0x6
  1700                           
  1701  0076                     ___awdiv@sign:	
  1702                           ; 1 bytes @ 0x6
  1703                           
  1704  0076                     ___awmod@sign:	
  1705                           ; 1 bytes @ 0x6
  1706                           
  1707                           
  1708                           ; 1 bytes @ 0x6
  1709  0076                     	ds	1
  1710  0077                     ??_LCD_Initialize:
  1711  0077                     ?_LCDGoto:	
  1712                           ; 1 bytes @ 0x7
  1713                           
  1714  0077                     ?_LCDPutStr:	
  1715                           ; 1 bytes @ 0x7
  1716                           
  1717  0077                     LCDGoto@ln:	
  1718                           ; 1 bytes @ 0x7
  1719                           
  1720  0077                     LCDPutStr@str:	
  1721                           ; 1 bytes @ 0x7
  1722                           
  1723  0077                     ___awdiv@quotient:	
  1724                           ; 2 bytes @ 0x7
  1725                           
  1726                           
  1727                           ; 2 bytes @ 0x7
  1728  0077                     	ds	1
  1729  0078                     ??_LCDGoto:
  1730  0078                     ?_fputs:	
  1731                           ; 1 bytes @ 0x8
  1732                           
  1733  0078                     fputs@fp:	
  1734                           ; 2 bytes @ 0x8
  1735                           
  1736  0078                     _LCDGoto$223:	
  1737                           ; 1 bytes @ 0x8
  1738                           
  1739                           
  1740                           ; 2 bytes @ 0x8
  1741  0078                     	ds	1
  1742  0079                     ??_LCDPutStr:
  1743  0079                     ??_fputs:	
  1744                           ; 1 bytes @ 0x9
  1745                           
  1746  0079                     ?_sumdigits:	
  1747                           ; 1 bytes @ 0x9
  1748                           
  1749  0079                     sumdigits@number:	
  1750                           ; 2 bytes @ 0x9
  1751                           
  1752                           
  1753                           ; 2 bytes @ 0x9
  1754  0079                     	ds	1
  1755  007A                     LCDGoto@pos:
  1756                           
  1757                           ; 1 bytes @ 0xA
  1758  007A                     	ds	1
  1759  007B                     ??_sumdigits:
  1760                           
  1761                           ; 1 bytes @ 0xB
  1762  007B                     	ds	1
  1763  007C                     ??_pad:
  1764  007C                     LCDPutStr@i:	
  1765                           ; 1 bytes @ 0xC
  1766                           
  1767                           
  1768                           ; 1 bytes @ 0xC
  1769  007C                     	ds	1
  1770  007D                     ??_LCDClear:
  1771  007D                     ??_sprintf:	
  1772                           ; 1 bytes @ 0xD
  1773                           
  1774                           
  1775                           ; 1 bytes @ 0xD
  1776  007D                     	ds	1
  1777                           
  1778                           	psect	cstackBANK0
  1779  0020                     __pcstackBANK0:
  1780  0020                     ?___aodiv:
  1781  0020                     ?___aomod:	
  1782                           ; 8 bytes @ 0x0
  1783                           
  1784  0020                     fputs@c:	
  1785                           ; 8 bytes @ 0x0
  1786                           
  1787  0020                     sumdigits@digit:	
  1788                           ; 1 bytes @ 0x0
  1789                           
  1790  0020                     ___aodiv@divisor:	
  1791                           ; 2 bytes @ 0x0
  1792                           
  1793  0020                     ___aomod@divisor:	
  1794                           ; 8 bytes @ 0x0
  1795                           
  1796                           
  1797                           ; 8 bytes @ 0x0
  1798  0020                     	ds	1
  1799  0021                     fputs@i:
  1800                           
  1801                           ; 2 bytes @ 0x1
  1802  0021                     	ds	1
  1803  0022                     sumdigits@SumDigits:
  1804                           
  1805                           ; 2 bytes @ 0x2
  1806  0022                     	ds	1
  1807  0023                     fputs@s:
  1808                           
  1809                           ; 1 bytes @ 0x3
  1810  0023                     	ds	1
  1811  0024                     ?_pad:
  1812  0024                     pad@buf:	
  1813                           ; 2 bytes @ 0x4
  1814                           
  1815                           
  1816                           ; 1 bytes @ 0x4
  1817  0024                     	ds	1
  1818  0025                     pad@p:
  1819                           
  1820                           ; 2 bytes @ 0x5
  1821  0025                     	ds	2
  1822  0027                     pad@i:
  1823                           
  1824                           ; 2 bytes @ 0x7
  1825  0027                     	ds	1
  1826  0028                     ___aodiv@dividend:
  1827  0028                     ___aomod@dividend:	
  1828                           ; 8 bytes @ 0x8
  1829                           
  1830                           
  1831                           ; 8 bytes @ 0x8
  1832  0028                     	ds	1
  1833  0029                     pad@w:
  1834                           
  1835                           ; 2 bytes @ 0x9
  1836  0029                     	ds	2
  1837  002B                     pad@fp:
  1838                           
  1839                           ; 1 bytes @ 0xB
  1840  002B                     	ds	5
  1841  0030                     ?_dtoa:
  1842  0030                     dtoa@d:	
  1843                           ; 2 bytes @ 0x10
  1844                           
  1845                           
  1846                           ; 8 bytes @ 0x10
  1847  0030                     	ds	8
  1848  0038                     ??_dtoa:
  1849                           
  1850                           ; 1 bytes @ 0x18
  1851  0038                     	ds	3
  1852  003B                     _dtoa$612:
  1853                           
  1854                           ; 2 bytes @ 0x1B
  1855  003B                     	ds	2
  1856  003D                     dtoa@fp:
  1857                           
  1858                           ; 1 bytes @ 0x1D
  1859  003D                     	ds	1
  1860  003E                     dtoa@p:
  1861                           
  1862                           ; 2 bytes @ 0x1E
  1863  003E                     	ds	2
  1864  0040                     dtoa@w:
  1865                           
  1866                           ; 2 bytes @ 0x20
  1867  0040                     	ds	2
  1868  0042                     dtoa@s:
  1869                           
  1870                           ; 2 bytes @ 0x22
  1871  0042                     	ds	2
  1872  0044                     dtoa@n:
  1873                           
  1874                           ; 8 bytes @ 0x24
  1875  0044                     	ds	8
  1876  004C                     dtoa@i:
  1877                           
  1878                           ; 2 bytes @ 0x2C
  1879  004C                     	ds	2
  1880  004E                     ?_vfpfcnvrt:
  1881  004E                     vfpfcnvrt@fmt:	
  1882                           ; 2 bytes @ 0x2E
  1883                           
  1884                           
  1885                           ; 1 bytes @ 0x2E
  1886  004E                     	ds	1
  1887  004F                     vfpfcnvrt@ap:
  1888                           
  1889                           ; 1 bytes @ 0x2F
  1890  004F                     	ds	1
  1891  0050                     ??_vfpfcnvrt:
  1892                           
  1893                           ; 1 bytes @ 0x30
  1894  0050                     	ds	5
  1895  0055                     vfpfcnvrt@ll:
  1896                           
  1897                           ; 8 bytes @ 0x35
  1898  0055                     	ds	8
  1899  005D                     vfpfcnvrt@fp:
  1900                           
  1901                           ; 1 bytes @ 0x3D
  1902  005D                     	ds	1
  1903  005E                     ?_vfprintf:
  1904  005E                     vfprintf@fmt:	
  1905                           ; 2 bytes @ 0x3E
  1906                           
  1907                           
  1908                           ; 2 bytes @ 0x3E
  1909  005E                     	ds	2
  1910  0060                     vfprintf@ap:
  1911                           
  1912                           ; 1 bytes @ 0x40
  1913  0060                     	ds	1
  1914  0061                     ??_vfprintf:
  1915                           
  1916                           ; 1 bytes @ 0x41
  1917  0061                     	ds	2
  1918  0063                     vfprintf@fp:
  1919                           
  1920                           ; 1 bytes @ 0x43
  1921  0063                     	ds	1
  1922  0064                     vfprintf@cfmt:
  1923                           
  1924                           ; 2 bytes @ 0x44
  1925  0064                     	ds	2
  1926  0066                     ?_sprintf:
  1927  0066                     sprintf@fmt:	
  1928                           ; 2 bytes @ 0x46
  1929                           
  1930                           
  1931                           ; 2 bytes @ 0x46
  1932  0066                     	ds	6
  1933                           
  1934                           	psect	maintext
  1935  05EC                     __pmaintext:	
  1936 ;;
  1937 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1938 ;;
  1939 ;; *************** function _main *****************
  1940 ;; Defined at:
  1941 ;;		line 32 in file "main.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  printchar      10   15[BANK1 ] unsigned char [10]
  1946 ;;  bin             8   29[BANK1 ] int [4]
  1947 ;;  Binary          4   25[BANK1 ] long 
  1948 ;;  SumDigits       2   47[BANK1 ] int 
  1949 ;;  number          2   45[BANK1 ] int 
  1950 ;;  i               2   43[BANK1 ] int 
  1951 ;;  SumPrime        2   41[BANK1 ] int 
  1952 ;;  carnet          2   39[BANK1 ] int 
  1953 ;;  prime           2   37[BANK1 ] int 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      void 
  1956 ;; Registers used:
  1957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : B1F/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1964 ;;      Locals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1965 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1966 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1967 ;;Total ram usage:       40 bytes
  1968 ;; Hardware stack levels required when called:    8
  1969 ;; This function calls:
  1970 ;;		_LCDClear
  1971 ;;		_LCDGoto
  1972 ;;		_LCDPutStr
  1973 ;;		_LCD_Initialize
  1974 ;;		_SYSTEM_Initialize
  1975 ;;		___awdiv
  1976 ;;		___awmod
  1977 ;;		___wmul
  1978 ;;		_sprintf
  1979 ;;		_sumdigits
  1980 ;; This function is called by:
  1981 ;;		Startup code after reset
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           
  1986                           ;psect for function _main
  1987  05EC                     _main:
  1988  05EC                     l1911:	
  1989                           ;incstack = 0
  1990                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1991                           
  1992                           
  1993                           ;main.c: 36:     SYSTEM_Initialize();
  1994  05EC  318E  263A  3185   	fcall	_SYSTEM_Initialize
  1995                           
  1996                           ;main.c: 37:     LCD_Initialize();
  1997  05EF  318F  270D  3185   	fcall	_LCD_Initialize
  1998                           
  1999                           ;main.c: 41:     const int label =1;;main.c: 42:     int carnet;;main.c: 46:     switch 
      +                          (label)
  2000  05F2  2E02               	goto	l1919
  2001  05F3                     l1913:
  2002                           
  2003                           ;main.c: 49:         {;main.c: 50:             carnet = last3digitsCarnet1;
  2004  05F3  30FF               	movlw	255
  2005  05F4  00C7               	movwf	main@carnet^(0+128)
  2006  05F5  3000               	movlw	0
  2007  05F6  00C8               	movwf	(main@carnet^(0+128)+1)
  2008                           
  2009                           ;main.c: 51:             break;
  2010  05F7  2E18               	goto	l1921
  2011  05F8                     l1915:
  2012                           
  2013                           ;main.c: 54:         {;main.c: 55:             carnet = last3digitsCarnet2;
  2014  05F8  30ED               	movlw	237
  2015  05F9  00C7               	movwf	main@carnet^(0+128)
  2016  05FA  3001               	movlw	1
  2017  05FB  00C8               	movwf	(main@carnet^(0+128)+1)
  2018                           
  2019                           ;main.c: 56:             break;
  2020  05FC  2E18               	goto	l1921
  2021  05FD                     l1917:
  2022                           
  2023                           ;main.c: 59:         {;main.c: 60:             carnet = last3digitsCarnet3;
  2024  05FD  30A4               	movlw	164
  2025  05FE  00C7               	movwf	main@carnet^(0+128)
  2026  05FF  3001               	movlw	1
  2027  0600  00C8               	movwf	(main@carnet^(0+128)+1)
  2028                           
  2029                           ;main.c: 61:         };main.c: 62:     }
  2030  0601  2E18               	goto	l1921
  2031  0602                     l1919:
  2032  0602  3000               	movlw	low (main@label| (0+32768))
  2033  0603  0084               	movwf	4
  2034  0604  3090               	movlw	high (main@label| (0+32768))
  2035  0605  0085               	movwf	5
  2036  0606  3F00               	moviw [0]fsr0
  2037  0607  0021               	movlb	1	; select bank1
  2038  0608  00A9               	movwf	??_main^(0+128)
  2039  0609  3F01               	moviw [1]fsr0
  2040  060A  00AA               	movwf	(??_main^(0+128)+1)
  2041                           
  2042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2043                           ; Switch size 1, requested type "simple"
  2044                           ; Number of cases is 1, Range of values is 0 to 0
  2045                           ; switch strategies available:
  2046                           ; Name         Instructions Cycles
  2047                           ; simple_byte            4     3 (average)
  2048                           ; direct_byte            8     6 (fixed)
  2049                           ; jumptable            260     6 (fixed)
  2050                           ;	Chosen strategy is simple_byte
  2051  060B  082A               	movf	(??_main+1)^(0+128),w
  2052  060C  3A00               	xorlw	0	; case 0
  2053  060D  1903               	skipnz
  2054  060E  2E10               	goto	l2049
  2055  060F  2DFD               	goto	l1917
  2056  0610                     l2049:
  2057                           
  2058                           ; Switch size 1, requested type "simple"
  2059                           ; Number of cases is 2, Range of values is 1 to 2
  2060                           ; switch strategies available:
  2061                           ; Name         Instructions Cycles
  2062                           ; simple_byte            7     4 (average)
  2063                           ; direct_byte           13     9 (fixed)
  2064                           ; jumptable            263     9 (fixed)
  2065                           ;	Chosen strategy is simple_byte
  2066  0610  0829               	movf	??_main^(0+128),w
  2067  0611  3A01               	xorlw	1	; case 1
  2068  0612  1903               	skipnz
  2069  0613  2DF3               	goto	l1913
  2070  0614  3A03               	xorlw	3	; case 2
  2071  0615  1903               	skipnz
  2072  0616  2DF8               	goto	l1915
  2073  0617  2DFD               	goto	l1917
  2074  0618                     l1921:
  2075                           
  2076                           ;main.c: 69:     int SumPrime = 0;
  2077  0618  01C9               	clrf	main@SumPrime^(0+128)
  2078  0619  01CA               	clrf	(main@SumPrime+1)^(0+128)
  2079  061A                     l1923:
  2080                           
  2081                           ;main.c: 73:     LCDGoto(0,0);
  2082  061A  01F7               	clrf	LCDGoto@ln
  2083  061B  3000               	movlw	0
  2084  061C  318F  277A  3185   	fcall	_LCDGoto
  2085  061F                     l1925:
  2086                           
  2087                           ;main.c: 74:     LCDPutStr("Calculando...");
  2088  061F  3013               	movlw	low (STR_1| (0+32768))
  2089  0620  00F7               	movwf	LCDPutStr@str
  2090  0621  3090               	movlw	high (STR_1| (0+32768))
  2091  0622  00F8               	movwf	LCDPutStr@str+1
  2092  0623  318F  2754  3185   	fcall	_LCDPutStr
  2093  0626                     l1927:
  2094                           
  2095                           ;main.c: 78:     int i,number=2, prime;
  2096  0626  3002               	movlw	2
  2097  0627  0021               	movlb	1	; select bank1
  2098  0628  00CD               	movwf	main@number^(0+128)
  2099  0629  3000               	movlw	0
  2100  062A  00CE               	movwf	(main@number^(0+128)+1)
  2101                           
  2102                           ;main.c: 79:     char printchar[10];;main.c: 83:     while(number<=carnet)
  2103  062B  2E7C               	goto	l1945
  2104  062C                     l1929:
  2105                           
  2106                           ;main.c: 84:     {;main.c: 85:       prime = 1;
  2107  062C  3001               	movlw	1
  2108  062D  0021               	movlb	1	; select bank1
  2109  062E  00C5               	movwf	main@prime^(0+128)
  2110  062F  3000               	movlw	0
  2111  0630  00C6               	movwf	(main@prime^(0+128)+1)
  2112                           
  2113                           ;main.c: 86:       for(i=2;i<=number/2;i++)
  2114  0631  3002               	movlw	2
  2115  0632  00CB               	movwf	main@i^(0+128)
  2116  0633  3000               	movlw	0
  2117  0634  00CC               	movwf	(main@i^(0+128)+1)
  2118  0635  2E51               	goto	l1937
  2119  0636                     l1931:
  2120                           
  2121                           ;main.c: 87:       {;main.c: 88:         if(number%i==0)
  2122  0636  0021               	movlb	1	; select bank1
  2123  0637  084C               	movf	(main@i+1)^(0+128),w
  2124  0638  00F1               	movwf	___awmod@divisor+1
  2125  0639  084B               	movf	main@i^(0+128),w
  2126  063A  00F0               	movwf	___awmod@divisor
  2127  063B  084E               	movf	(main@number+1)^(0+128),w
  2128  063C  00F3               	movwf	___awmod@dividend+1
  2129  063D  084D               	movf	main@number^(0+128),w
  2130  063E  00F2               	movwf	___awmod@dividend
  2131  063F  3180  20B9  3185   	fcall	___awmod
  2132  0642  0870               	movf	?___awmod,w
  2133  0643  0471               	iorwf	?___awmod+1,w
  2134  0644  1D03               	btfss	3,2
  2135  0645  2E47               	goto	u1761
  2136  0646  2E48               	goto	u1760
  2137  0647                     u1761:
  2138  0647  2E4C               	goto	l1935
  2139  0648                     u1760:
  2140  0648                     l1933:
  2141                           
  2142                           ;main.c: 89:         {;main.c: 90:           prime = 0;
  2143  0648  0021               	movlb	1	; select bank1
  2144  0649  01C5               	clrf	main@prime^(0+128)
  2145  064A  01C6               	clrf	(main@prime+1)^(0+128)
  2146                           
  2147                           ;main.c: 91:           break;
  2148  064B  2E6B               	goto	l1939
  2149  064C                     l1935:
  2150                           
  2151                           ;main.c: 93:       }
  2152  064C  3001               	movlw	1
  2153  064D  0021               	movlb	1	; select bank1
  2154  064E  07CB               	addwf	main@i^(0+128),f
  2155  064F  3000               	movlw	0
  2156  0650  3DCC               	addwfc	(main@i+1)^(0+128),f
  2157  0651                     l1937:
  2158  0651  3002               	movlw	2
  2159  0652  00F0               	movwf	___awdiv@divisor
  2160  0653  3000               	movlw	0
  2161  0654  00F1               	movwf	___awdiv@divisor+1
  2162  0655  084E               	movf	(main@number+1)^(0+128),w
  2163  0656  00F3               	movwf	___awdiv@dividend+1
  2164  0657  084D               	movf	main@number^(0+128),w
  2165  0658  00F2               	movwf	___awdiv@dividend
  2166  0659  3181  2162  3185   	fcall	___awdiv
  2167  065C  0871               	movf	?___awdiv+1,w
  2168  065D  3A80               	xorlw	128
  2169  065E  0021               	movlb	1	; select bank1
  2170  065F  00A9               	movwf	??_main^(0+128)
  2171  0660  084C               	movf	(main@i+1)^(0+128),w
  2172  0661  3A80               	xorlw	128
  2173  0662  0229               	subwf	??_main^(0+128),w
  2174  0663  1D03               	skipz
  2175  0664  2E67               	goto	u1775
  2176  0665  084B               	movf	main@i^(0+128),w
  2177  0666  0270               	subwf	?___awdiv,w
  2178  0667                     u1775:
  2179  0667  1803               	skipnc
  2180  0668  2E6A               	goto	u1771
  2181  0669  2E6B               	goto	u1770
  2182  066A                     u1771:
  2183  066A  2E36               	goto	l1931
  2184  066B                     u1770:
  2185  066B                     l1939:
  2186                           
  2187                           ;main.c: 94:       if(prime==1)
  2188  066B  0021               	movlb	1	; select bank1
  2189  066C  0345               	decf	main@prime^(0+128),w
  2190  066D  0446               	iorwf	(main@prime+1)^(0+128),w
  2191  066E  1D03               	btfss	3,2
  2192  066F  2E71               	goto	u1781
  2193  0670  2E72               	goto	u1780
  2194  0671                     u1781:
  2195  0671  2E78               	goto	l1943
  2196  0672                     u1780:
  2197  0672                     l1941:
  2198                           
  2199                           ;main.c: 95:       {;main.c: 96:         SumPrime= SumPrime+number;
  2200  0672  084D               	movf	main@number^(0+128),w
  2201  0673  0749               	addwf	main@SumPrime^(0+128),w
  2202  0674  00C9               	movwf	main@SumPrime^(0+128)
  2203  0675  084E               	movf	(main@number+1)^(0+128),w
  2204  0676  3D4A               	addwfc	(main@SumPrime+1)^(0+128),w
  2205  0677  00CA               	movwf	(main@SumPrime+1)^(0+128)
  2206  0678                     l1943:
  2207                           
  2208                           ;main.c: 98:       ++number;
  2209  0678  3001               	movlw	1
  2210  0679  07CD               	addwf	main@number^(0+128),f
  2211  067A  3000               	movlw	0
  2212  067B  3DCE               	addwfc	(main@number+1)^(0+128),f
  2213  067C                     l1945:
  2214                           
  2215                           ;main.c: 83:     while(number<=carnet)
  2216  067C  0848               	movf	(main@carnet+1)^(0+128),w
  2217  067D  3A80               	xorlw	128
  2218  067E  00A9               	movwf	??_main^(0+128)
  2219  067F  084E               	movf	(main@number+1)^(0+128),w
  2220  0680  3A80               	xorlw	128
  2221  0681  0229               	subwf	??_main^(0+128),w
  2222  0682  1D03               	skipz
  2223  0683  2E86               	goto	u1795
  2224  0684  084D               	movf	main@number^(0+128),w
  2225  0685  0247               	subwf	main@carnet^(0+128),w
  2226  0686                     u1795:
  2227  0686  1803               	skipnc
  2228  0687  2E89               	goto	u1791
  2229  0688  2E8A               	goto	u1790
  2230  0689                     u1791:
  2231  0689  2E2C               	goto	l1929
  2232  068A                     u1790:
  2233  068A                     l1947:
  2234                           
  2235                           ;main.c: 102:     LCDClear();
  2236  068A  318E  2644  3185   	fcall	_LCDClear
  2237  068D                     l1949:
  2238                           
  2239                           ;main.c: 103:     LCDGoto(0,0);
  2240  068D  01F7               	clrf	LCDGoto@ln
  2241  068E  3000               	movlw	0
  2242  068F  318F  277A  3185   	fcall	_LCDGoto
  2243  0692                     l1951:
  2244                           
  2245                           ;main.c: 104:     LCDPutStr("sumPrime=");
  2246  0692  302C               	movlw	low (STR_2| (0+32768))
  2247  0693  00F7               	movwf	LCDPutStr@str
  2248  0694  3090               	movlw	high (STR_2| (0+32768))
  2249  0695  00F8               	movwf	LCDPutStr@str+1
  2250  0696  318F  2754  3185   	fcall	_LCDPutStr
  2251  0699                     l1953:
  2252                           
  2253                           ;main.c: 105:     sprintf(printchar,"%d",SumPrime);
  2254  0699  303E               	movlw	low (STR_3| (0+32768))
  2255  069A  0020               	movlb	0	; select bank0
  2256  069B  00E6               	movwf	sprintf@fmt
  2257  069C  3090               	movlw	high (STR_3| (0+32768))
  2258  069D  00E7               	movwf	sprintf@fmt+1
  2259  069E  0021               	movlb	1	; select bank1
  2260  069F  084A               	movf	(main@SumPrime+1)^(0+128),w
  2261  06A0  0020               	movlb	0	; select bank0
  2262  06A1  00E9               	movwf	?_sprintf+3
  2263  06A2  0021               	movlb	1	; select bank1
  2264  06A3  0849               	movf	main@SumPrime^(0+128),w
  2265  06A4  0020               	movlb	0	; select bank0
  2266  06A5  00E8               	movwf	?_sprintf+2
  2267  06A6  30AF               	movlw	(low (main@printchar| 0))& (0+255)
  2268  06A7  318F  2730  3185   	fcall	_sprintf
  2269  06AA                     l1955:
  2270                           
  2271                           ;main.c: 106:     LCDGoto(0,1);
  2272  06AA  01F7               	clrf	LCDGoto@ln
  2273  06AB  0AF7               	incf	LCDGoto@ln,f
  2274  06AC  3000               	movlw	0
  2275  06AD  318F  277A  3185   	fcall	_LCDGoto
  2276  06B0                     l1957:
  2277                           
  2278                           ;main.c: 107:     LCDPutStr(printchar);
  2279  06B0  30AF               	movlw	low main@printchar
  2280  06B1  00F7               	movwf	LCDPutStr@str
  2281  06B2  3000               	movlw	high main@printchar
  2282  06B3  00F8               	movwf	LCDPutStr@str+1
  2283  06B4  318F  2754  3185   	fcall	_LCDPutStr
  2284  06B7                     l1959:
  2285                           
  2286                           ;main.c: 108:     _delay((unsigned long)((5000)*(500000/4000.0)));
  2287  06B7  3004               	movlw	4
  2288  06B8  0021               	movlb	1	; select bank1
  2289  06B9  00AA               	movwf	(??_main^(0+128)+1)
  2290  06BA  302C               	movlw	44
  2291  06BB  00A9               	movwf	??_main^(0+128)
  2292  06BC  30AB               	movlw	171
  2293  06BD                     u1837:
  2294  06BD  0B89               	decfsz	9,f
  2295  06BE  2EBD               	goto	u1837
  2296  06BF  0BA9               	decfsz	??_main^(0+128),f
  2297  06C0  2EBD               	goto	u1837
  2298  06C1  0BAA               	decfsz	(??_main^(0+128)+1),f
  2299  06C2  2EBD               	goto	u1837
  2300  06C3  3200               	nop2
  2301  06C4                     l1961:
  2302                           
  2303                           ;main.c: 109:     LCDClear();
  2304  06C4  318E  2644  3185   	fcall	_LCDClear
  2305  06C7                     l1963:
  2306  06C7                     l1965:
  2307                           
  2308                           ;main.c: 120:     LCDGoto(0,0);
  2309  06C7  01F7               	clrf	LCDGoto@ln
  2310  06C8  3000               	movlw	0
  2311  06C9  318F  277A  3185   	fcall	_LCDGoto
  2312  06CC                     l1967:
  2313                           
  2314                           ;main.c: 121:     LCDPutStr("sumDigits=");
  2315  06CC  3021               	movlw	low (STR_4| (0+32768))
  2316  06CD  00F7               	movwf	LCDPutStr@str
  2317  06CE  3090               	movlw	high (STR_4| (0+32768))
  2318  06CF  00F8               	movwf	LCDPutStr@str+1
  2319  06D0  318F  2754  3185   	fcall	_LCDPutStr
  2320  06D3                     l1969:
  2321                           
  2322                           ;main.c: 125:     number=SumPrime;
  2323  06D3  0021               	movlb	1	; select bank1
  2324  06D4  084A               	movf	(main@SumPrime+1)^(0+128),w
  2325  06D5  00CE               	movwf	(main@number+1)^(0+128)
  2326  06D6  0849               	movf	main@SumPrime^(0+128),w
  2327  06D7  00CD               	movwf	main@number^(0+128)
  2328  06D8                     l1971:
  2329                           
  2330                           ;main.c: 127:     {;main.c: 128:       SumDigits = sumdigits(number);
  2331  06D8  0021               	movlb	1	; select bank1
  2332  06D9  084E               	movf	(main@number+1)^(0+128),w
  2333  06DA  00FA               	movwf	sumdigits@number+1
  2334  06DB  084D               	movf	main@number^(0+128),w
  2335  06DC  00F9               	movwf	sumdigits@number
  2336  06DD  3180  202E  3185   	fcall	_sumdigits
  2337  06E0  087A               	movf	?_sumdigits+1,w
  2338  06E1  0021               	movlb	1	; select bank1
  2339  06E2  00D0               	movwf	(main@SumDigits+1)^(0+128)
  2340  06E3  0879               	movf	?_sumdigits,w
  2341  06E4  00CF               	movwf	main@SumDigits^(0+128)
  2342  06E5                     l1973:
  2343                           
  2344                           ;main.c: 129:       number = SumDigits;
  2345  06E5  0850               	movf	(main@SumDigits+1)^(0+128),w
  2346  06E6  00CE               	movwf	(main@number+1)^(0+128)
  2347  06E7  084F               	movf	main@SumDigits^(0+128),w
  2348  06E8  00CD               	movwf	main@number^(0+128)
  2349  06E9                     l1975:
  2350                           
  2351                           ;main.c: 130:     } while (SumDigits>10);
  2352  06E9  0850               	movf	(main@SumDigits+1)^(0+128),w
  2353  06EA  3A80               	xorlw	128
  2354  06EB  00A9               	movwf	??_main^(0+128)
  2355  06EC  3080               	movlw	128
  2356  06ED  0229               	subwf	??_main^(0+128),w
  2357  06EE  1D03               	skipz
  2358  06EF  2EF2               	goto	u1805
  2359  06F0  300B               	movlw	11
  2360  06F1  024F               	subwf	main@SumDigits^(0+128),w
  2361  06F2                     u1805:
  2362  06F2  1803               	skipnc
  2363  06F3  2EF5               	goto	u1801
  2364  06F4  2EF6               	goto	u1800
  2365  06F5                     u1801:
  2366  06F5  2ED8               	goto	l1971
  2367  06F6                     u1800:
  2368  06F6                     l1977:
  2369                           
  2370                           ;main.c: 134:     sprintf(printchar,"%d",SumDigits);
  2371  06F6  303E               	movlw	low (STR_3| (0+32768))
  2372  06F7  0020               	movlb	0	; select bank0
  2373  06F8  00E6               	movwf	sprintf@fmt
  2374  06F9  3090               	movlw	high (STR_3| (0+32768))
  2375  06FA  00E7               	movwf	sprintf@fmt+1
  2376  06FB  0021               	movlb	1	; select bank1
  2377  06FC  0850               	movf	(main@SumDigits+1)^(0+128),w
  2378  06FD  0020               	movlb	0	; select bank0
  2379  06FE  00E9               	movwf	?_sprintf+3
  2380  06FF  0021               	movlb	1	; select bank1
  2381  0700  084F               	movf	main@SumDigits^(0+128),w
  2382  0701  0020               	movlb	0	; select bank0
  2383  0702  00E8               	movwf	?_sprintf+2
  2384  0703  30AF               	movlw	(low (main@printchar| 0))& (0+255)
  2385  0704  318F  2730  3185   	fcall	_sprintf
  2386  0707                     l1979:
  2387                           
  2388                           ;main.c: 135:     LCDGoto(0,1);
  2389  0707  01F7               	clrf	LCDGoto@ln
  2390  0708  0AF7               	incf	LCDGoto@ln,f
  2391  0709  3000               	movlw	0
  2392  070A  318F  277A  3185   	fcall	_LCDGoto
  2393  070D                     l1981:
  2394                           
  2395                           ;main.c: 136:     LCDPutStr(printchar);
  2396  070D  30AF               	movlw	low main@printchar
  2397  070E  00F7               	movwf	LCDPutStr@str
  2398  070F  3000               	movlw	high main@printchar
  2399  0710  00F8               	movwf	LCDPutStr@str+1
  2400  0711  318F  2754  3185   	fcall	_LCDPutStr
  2401  0714                     l1983:
  2402                           
  2403                           ;main.c: 137:     _delay((unsigned long)((5000)*(500000/4000.0)));
  2404  0714  3004               	movlw	4
  2405  0715  0021               	movlb	1	; select bank1
  2406  0716  00AA               	movwf	(??_main^(0+128)+1)
  2407  0717  302C               	movlw	44
  2408  0718  00A9               	movwf	??_main^(0+128)
  2409  0719  30AB               	movlw	171
  2410  071A                     u1847:
  2411  071A  0B89               	decfsz	9,f
  2412  071B  2F1A               	goto	u1847
  2413  071C  0BA9               	decfsz	??_main^(0+128),f
  2414  071D  2F1A               	goto	u1847
  2415  071E  0BAA               	decfsz	(??_main^(0+128)+1),f
  2416  071F  2F1A               	goto	u1847
  2417  0720  3200               	nop2
  2418  0721                     l1985:
  2419                           
  2420                           ;main.c: 138:     LCDClear();
  2421  0721  318E  2644  3185   	fcall	_LCDClear
  2422  0724                     l1987:
  2423                           
  2424                           ;main.c: 150:     LCDGoto(0,0);
  2425  0724  01F7               	clrf	LCDGoto@ln
  2426  0725  3000               	movlw	0
  2427  0726  318F  277A  3185   	fcall	_LCDGoto
  2428  0729                     l1989:
  2429                           
  2430                           ;main.c: 151:     LCDPutStr("Binary=");
  2431  0729  3036               	movlw	low (STR_6| (0+32768))
  2432  072A  00F7               	movwf	LCDPutStr@str
  2433  072B  3090               	movlw	high (STR_6| (0+32768))
  2434  072C  00F8               	movwf	LCDPutStr@str+1
  2435  072D  318F  2754  3185   	fcall	_LCDPutStr
  2436  0730                     l1991:
  2437  0730                     l1993:
  2438                           
  2439                           ;main.c: 159:     int bin[4]={0,0,0,0};
  2440  0730  30BD               	movlw	low main@bin
  2441  0731  0086               	movwf	6
  2442  0732  3000               	movlw	high main@bin
  2443  0733  0087               	movwf	7
  2444  0734  3008               	movlw	8
  2445  0735  0021               	movlb	1	; select bank1
  2446  0736  00A9               	movwf	??_main^(0+128)
  2447  0737  3000               	movlw	0
  2448  0738                     u1810:
  2449  0738  001E               	movwi fsr1++
  2450  0739  0BA9               	decfsz	??_main^(0+128),f
  2451  073A  2F38               	goto	u1810
  2452  073B                     l1995:
  2453                           
  2454                           ;main.c: 160:     i=0;
  2455  073B  01CB               	clrf	main@i^(0+128)
  2456  073C  01CC               	clrf	(main@i+1)^(0+128)
  2457                           
  2458                           ;main.c: 161:       while (SumDigits>0)
  2459  073D  2F61               	goto	l2003
  2460  073E                     l1997:
  2461                           
  2462                           ;main.c: 162:       {;main.c: 163:         bin[i] = SumDigits%2;
  2463  073E  3001               	movlw	1
  2464  073F  0021               	movlb	1	; select bank1
  2465  0740  054F               	andwf	main@SumDigits^(0+128),w
  2466  0741  00A9               	movwf	??_main^(0+128)
  2467  0742  3000               	movlw	0
  2468  0743  0550               	andwf	(main@SumDigits+1)^(0+128),w
  2469  0744  00AA               	movwf	(??_main+1)^(0+128)
  2470  0745  354B               	lslf	main@i^(0+128),w
  2471  0746  3EBD               	addlw	(low (main@bin| 0))& (0+255)
  2472  0747  0086               	movwf	6
  2473  0748  0187               	clrf	7
  2474  0749  0829               	movf	??_main^(0+128),w
  2475  074A  3FC0               	movwi [0]fsr1
  2476  074B  082A               	movf	(??_main+1)^(0+128),w
  2477  074C  3FC1               	movwi [1]fsr1
  2478  074D                     l1999:
  2479                           
  2480                           ;main.c: 164:         SumDigits = SumDigits/2;
  2481  074D  3002               	movlw	2
  2482  074E  00F0               	movwf	___awdiv@divisor
  2483  074F  3000               	movlw	0
  2484  0750  00F1               	movwf	___awdiv@divisor+1
  2485  0751  0850               	movf	(main@SumDigits+1)^(0+128),w
  2486  0752  00F3               	movwf	___awdiv@dividend+1
  2487  0753  084F               	movf	main@SumDigits^(0+128),w
  2488  0754  00F2               	movwf	___awdiv@dividend
  2489  0755  3181  2162  3185   	fcall	___awdiv
  2490  0758  0871               	movf	?___awdiv+1,w
  2491  0759  0021               	movlb	1	; select bank1
  2492  075A  00D0               	movwf	(main@SumDigits+1)^(0+128)
  2493  075B  0870               	movf	?___awdiv,w
  2494  075C  00CF               	movwf	main@SumDigits^(0+128)
  2495  075D                     l2001:
  2496                           
  2497                           ;main.c: 165:         i++;
  2498  075D  3001               	movlw	1
  2499  075E  07CB               	addwf	main@i^(0+128),f
  2500  075F  3000               	movlw	0
  2501  0760  3DCC               	addwfc	(main@i+1)^(0+128),f
  2502  0761                     l2003:
  2503                           
  2504                           ;main.c: 161:       while (SumDigits>0)
  2505  0761  0850               	movf	(main@SumDigits+1)^(0+128),w
  2506  0762  3A80               	xorlw	128
  2507  0763  00A9               	movwf	??_main^(0+128)
  2508  0764  3080               	movlw	128
  2509  0765  0229               	subwf	??_main^(0+128),w
  2510  0766  1D03               	skipz
  2511  0767  2F6A               	goto	u1825
  2512  0768  3001               	movlw	1
  2513  0769  024F               	subwf	main@SumDigits^(0+128),w
  2514  076A                     u1825:
  2515  076A  1803               	skipnc
  2516  076B  2F6D               	goto	u1821
  2517  076C  2F6E               	goto	u1820
  2518  076D                     u1821:
  2519  076D  2F3E               	goto	l1997
  2520  076E                     u1820:
  2521  076E                     l2005:
  2522                           
  2523                           ;main.c: 167:     Binary= (1000*bin[3])+(100*bin[2])+(10*bin[1])+(1*bin[0]);
  2524  076E  0021               	movlb	1	; select bank1
  2525  076F  0844               	movf	((main@bin+1)^(0+128)+6),w
  2526  0770  00F1               	movwf	___wmul@multiplier+1
  2527  0771  0843               	movf	(main@bin^(0+128)+6),w
  2528  0772  00F0               	movwf	___wmul@multiplier
  2529  0773  30E8               	movlw	232
  2530  0774  00F2               	movwf	___wmul@multiplicand
  2531  0775  3003               	movlw	3
  2532  0776  00F3               	movwf	___wmul@multiplicand+1
  2533  0777  318E  26CE  3185   	fcall	___wmul
  2534  077A  0870               	movf	?___wmul,w
  2535  077B  0021               	movlb	1	; select bank1
  2536  077C  00A9               	movwf	??_main^(0+128)
  2537  077D  0871               	movf	?___wmul+1,w
  2538  077E  00AA               	movwf	(??_main^(0+128)+1)
  2539  077F  0842               	movf	((main@bin+1)^(0+128)+4),w
  2540  0780  00F1               	movwf	___wmul@multiplier+1
  2541  0781  0841               	movf	(main@bin^(0+128)+4),w
  2542  0782  00F0               	movwf	___wmul@multiplier
  2543  0783  3064               	movlw	100
  2544  0784  00F2               	movwf	___wmul@multiplicand
  2545  0785  3000               	movlw	0
  2546  0786  00F3               	movwf	___wmul@multiplicand+1
  2547  0787  318E  26CE  3185   	fcall	___wmul
  2548  078A  0870               	movf	?___wmul,w
  2549  078B  0021               	movlb	1	; select bank1
  2550  078C  0729               	addwf	??_main^(0+128),w
  2551  078D  00AB               	movwf	(??_main+2)^(0+128)
  2552  078E  0871               	movf	?___wmul+1,w
  2553  078F  3D2A               	addwfc	(??_main+1)^(0+128),w
  2554  0790  00AC               	movwf	(??_main+3)^(0+128)
  2555  0791  0840               	movf	((main@bin+1)^(0+128)+2),w
  2556  0792  00F1               	movwf	___wmul@multiplier+1
  2557  0793  083F               	movf	(main@bin^(0+128)+2),w
  2558  0794  00F0               	movwf	___wmul@multiplier
  2559  0795  300A               	movlw	10
  2560  0796  00F2               	movwf	___wmul@multiplicand
  2561  0797  3000               	movlw	0
  2562  0798  00F3               	movwf	___wmul@multiplicand+1
  2563  0799  318E  26CE  3185   	fcall	___wmul
  2564  079C  0870               	movf	?___wmul,w
  2565  079D  0021               	movlb	1	; select bank1
  2566  079E  072B               	addwf	(??_main+2)^(0+128),w
  2567  079F  00AD               	movwf	(??_main+4)^(0+128)
  2568  07A0  0871               	movf	?___wmul+1,w
  2569  07A1  3D2C               	addwfc	(??_main+3)^(0+128),w
  2570  07A2  00AE               	movwf	(??_main+5)^(0+128)
  2571  07A3  083D               	movf	main@bin^(0+128),w
  2572  07A4  072D               	addwf	(??_main+4)^(0+128),w
  2573  07A5  00B9               	movwf	main@Binary^(0+128)
  2574  07A6  083E               	movf	(main@bin+1)^(0+128),w
  2575  07A7  3D2E               	addwfc	(??_main+5)^(0+128),w
  2576  07A8  00BA               	movwf	(main@Binary+1)^(0+128)
  2577  07A9  01BB               	clrf	(main@Binary^(0+128)+2)
  2578  07AA  1BBA               	btfsc	(main@Binary^(0+128)+1),7
  2579  07AB  03BB               	decf	(main@Binary+2)^(0+128),f
  2580  07AC  083B               	movf	(main@Binary^(0+128)+2),w
  2581  07AD  00BC               	movwf	(main@Binary+3)^(0+128)
  2582  07AE                     l2007:
  2583                           
  2584                           ;main.c: 172:     sprintf(printchar,"%d",Binary);
  2585  07AE  303E               	movlw	low (STR_3| (0+32768))
  2586  07AF  0020               	movlb	0	; select bank0
  2587  07B0  00E6               	movwf	sprintf@fmt
  2588  07B1  3090               	movlw	high (STR_3| (0+32768))
  2589  07B2  00E7               	movwf	sprintf@fmt+1
  2590  07B3  0021               	movlb	1	; select bank1
  2591  07B4  083C               	movf	(main@Binary+3)^(0+128),w
  2592  07B5  0020               	movlb	0	; select bank0
  2593  07B6  00EB               	movwf	?_sprintf+5
  2594  07B7  0021               	movlb	1	; select bank1
  2595  07B8  083B               	movf	(main@Binary+2)^(0+128),w
  2596  07B9  0020               	movlb	0	; select bank0
  2597  07BA  00EA               	movwf	?_sprintf+4
  2598  07BB  0021               	movlb	1	; select bank1
  2599  07BC  083A               	movf	(main@Binary+1)^(0+128),w
  2600  07BD  0020               	movlb	0	; select bank0
  2601  07BE  00E9               	movwf	?_sprintf+3
  2602  07BF  0021               	movlb	1	; select bank1
  2603  07C0  0839               	movf	main@Binary^(0+128),w
  2604  07C1  0020               	movlb	0	; select bank0
  2605  07C2  00E8               	movwf	?_sprintf+2
  2606  07C3  30AF               	movlw	(low (main@printchar| 0))& (0+255)
  2607  07C4  318F  2730  3185   	fcall	_sprintf
  2608  07C7                     l2009:
  2609                           
  2610                           ;main.c: 173:     LCDGoto(0,1);
  2611  07C7  01F7               	clrf	LCDGoto@ln
  2612  07C8  0AF7               	incf	LCDGoto@ln,f
  2613  07C9  3000               	movlw	0
  2614  07CA  318F  277A  3185   	fcall	_LCDGoto
  2615  07CD                     l2011:
  2616                           
  2617                           ;main.c: 174:     LCDPutStr(printchar);
  2618  07CD  30AF               	movlw	low main@printchar
  2619  07CE  00F7               	movwf	LCDPutStr@str
  2620  07CF  3000               	movlw	high main@printchar
  2621  07D0  00F8               	movwf	LCDPutStr@str+1
  2622  07D1  318F  2754  3185   	fcall	_LCDPutStr
  2623  07D4                     l53:	
  2624                           ;main.c: 176:     while (1)
  2625                           
  2626  07D4                     l54:	
  2627                           ;main.c: 177:     {;main.c: 179:     }
  2628                           
  2629  07D4  2FD4               	goto	l53
  2630  07D5  3180  2802         	ljmp	start
  2631  07D7                     __end_of_main:
  2632                           
  2633                           	psect	text1
  2634  002E                     __ptext1:	
  2635 ;; *************** function _sumdigits *****************
  2636 ;; Defined at:
  2637 ;;		line 18 in file "main.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  number          2    9[COMMON] int 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  SumDigits       2    2[BANK0 ] int 
  2642 ;;  digit           2    0[BANK0 ] int 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  2    9[COMMON] int 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0, pclath, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2653 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2655 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2656 ;;Total ram usage:        7 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    1
  2659 ;; This function calls:
  2660 ;;		___awdiv
  2661 ;;		___awmod
  2662 ;; This function is called by:
  2663 ;;		_main
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           
  2668                           ;psect for function _sumdigits
  2669  002E                     _sumdigits:
  2670  002E                     l1847:	
  2671                           ;incstack = 0
  2672                           ; Regs used in _sumdigits: [wreg+status,2+status,0+pclath+cstack]
  2673                           
  2674                           
  2675                           ;main.c: 18: int sumdigits(int number);main.c: 19: {;main.c: 20:   int SumDigits = 0,dig
      +                          it;
  2676  002E  0020               	movlb	0	; select bank0
  2677  002F  01A2               	clrf	sumdigits@SumDigits
  2678  0030  01A3               	clrf	sumdigits@SumDigits+1
  2679                           
  2680                           ;main.c: 21:   while (number>0)
  2681  0031  2857               	goto	l1855
  2682  0032                     l1849:
  2683                           
  2684                           ;main.c: 22:   {;main.c: 23:     digit = number%10;
  2685  0032  300A               	movlw	10
  2686  0033  00F0               	movwf	___awmod@divisor
  2687  0034  3000               	movlw	0
  2688  0035  00F1               	movwf	___awmod@divisor+1
  2689  0036  087A               	movf	sumdigits@number+1,w
  2690  0037  00F3               	movwf	___awmod@dividend+1
  2691  0038  0879               	movf	sumdigits@number,w
  2692  0039  00F2               	movwf	___awmod@dividend
  2693  003A  3180  20B9  3180   	fcall	___awmod
  2694  003D  0871               	movf	?___awmod+1,w
  2695  003E  0020               	movlb	0	; select bank0
  2696  003F  00A1               	movwf	sumdigits@digit+1
  2697  0040  0870               	movf	?___awmod,w
  2698  0041  00A0               	movwf	sumdigits@digit
  2699  0042                     l1851:
  2700                           
  2701                           ;main.c: 24:     SumDigits = SumDigits + digit;
  2702  0042  0820               	movf	sumdigits@digit,w
  2703  0043  0722               	addwf	sumdigits@SumDigits,w
  2704  0044  00A2               	movwf	sumdigits@SumDigits
  2705  0045  0821               	movf	sumdigits@digit+1,w
  2706  0046  3D23               	addwfc	sumdigits@SumDigits+1,w
  2707  0047  00A3               	movwf	sumdigits@SumDigits+1
  2708  0048                     l1853:
  2709                           
  2710                           ;main.c: 25:     number = number /10;
  2711  0048  300A               	movlw	10
  2712  0049  00F0               	movwf	___awdiv@divisor
  2713  004A  3000               	movlw	0
  2714  004B  00F1               	movwf	___awdiv@divisor+1
  2715  004C  087A               	movf	sumdigits@number+1,w
  2716  004D  00F3               	movwf	___awdiv@dividend+1
  2717  004E  0879               	movf	sumdigits@number,w
  2718  004F  00F2               	movwf	___awdiv@dividend
  2719  0050  3181  2162  3180   	fcall	___awdiv
  2720  0053  0871               	movf	?___awdiv+1,w
  2721  0054  00FA               	movwf	sumdigits@number+1
  2722  0055  0870               	movf	?___awdiv,w
  2723  0056  00F9               	movwf	sumdigits@number
  2724  0057                     l1855:
  2725                           
  2726                           ;main.c: 21:   while (number>0)
  2727  0057  087A               	movf	sumdigits@number+1,w
  2728  0058  3A80               	xorlw	128
  2729  0059  00FB               	movwf	??_sumdigits
  2730  005A  3080               	movlw	128
  2731  005B  027B               	subwf	??_sumdigits,w
  2732  005C  1D03               	skipz
  2733  005D  2860               	goto	u1715
  2734  005E  3001               	movlw	1
  2735  005F  0279               	subwf	sumdigits@number,w
  2736  0060                     u1715:
  2737  0060  1803               	skipnc
  2738  0061  2863               	goto	u1711
  2739  0062  2864               	goto	u1710
  2740  0063                     u1711:
  2741  0063  2832               	goto	l1849
  2742  0064                     u1710:
  2743  0064                     l1857:
  2744                           
  2745                           ;main.c: 27:   return SumDigits;
  2746  0064  0020               	movlb	0	; select bank0
  2747  0065  0823               	movf	sumdigits@SumDigits+1,w
  2748  0066  00FA               	movwf	?_sumdigits+1
  2749  0067  0822               	movf	sumdigits@SumDigits,w
  2750  0068  00F9               	movwf	?_sumdigits
  2751  0069                     l26:
  2752  0069  0008               	return
  2753  006A                     __end_of_sumdigits:
  2754                           
  2755                           	psect	text2
  2756  00B9                     __ptext2:	
  2757 ;; *************** function ___awmod *****************
  2758 ;; Defined at:
  2759 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  divisor         2    0[COMMON] int 
  2762 ;;  dividend        2    2[COMMON] int 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  sign            1    6[COMMON] unsigned char 
  2765 ;;  counter         1    5[COMMON] unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  2    0[COMMON] int 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2775 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2777 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2778 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2779 ;;Total ram usage:        7 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_sumdigits
  2785 ;;		_main
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function ___awmod
  2791  00B9                     ___awmod:
  2792  00B9                     l1797:	
  2793                           ;incstack = 0
  2794                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2795                           
  2796  00B9  01F6               	clrf	___awmod@sign
  2797  00BA                     l1799:
  2798  00BA  1FF3               	btfss	___awmod@dividend+1,7
  2799  00BB  28BD               	goto	u1611
  2800  00BC  28BE               	goto	u1610
  2801  00BD                     u1611:
  2802  00BD  28C5               	goto	l1805
  2803  00BE                     u1610:
  2804  00BE                     l1801:
  2805  00BE  09F2               	comf	___awmod@dividend,f
  2806  00BF  09F3               	comf	___awmod@dividend+1,f
  2807  00C0  0AF2               	incf	___awmod@dividend,f
  2808  00C1  1903               	skipnz
  2809  00C2  0AF3               	incf	___awmod@dividend+1,f
  2810  00C3                     l1803:
  2811  00C3  01F6               	clrf	___awmod@sign
  2812  00C4  0AF6               	incf	___awmod@sign,f
  2813  00C5                     l1805:
  2814  00C5  1FF1               	btfss	___awmod@divisor+1,7
  2815  00C6  28C8               	goto	u1621
  2816  00C7  28C9               	goto	u1620
  2817  00C8                     u1621:
  2818  00C8  28CE               	goto	l1809
  2819  00C9                     u1620:
  2820  00C9                     l1807:
  2821  00C9  09F0               	comf	___awmod@divisor,f
  2822  00CA  09F1               	comf	___awmod@divisor+1,f
  2823  00CB  0AF0               	incf	___awmod@divisor,f
  2824  00CC  1903               	skipnz
  2825  00CD  0AF1               	incf	___awmod@divisor+1,f
  2826  00CE                     l1809:
  2827  00CE  0870               	movf	___awmod@divisor,w
  2828  00CF  0471               	iorwf	___awmod@divisor+1,w
  2829  00D0  1903               	btfsc	3,2
  2830  00D1  28D3               	goto	u1631
  2831  00D2  28D4               	goto	u1630
  2832  00D3                     u1631:
  2833  00D3  28FD               	goto	l1827
  2834  00D4                     u1630:
  2835  00D4                     l1811:
  2836  00D4  01F5               	clrf	___awmod@counter
  2837  00D5  0AF5               	incf	___awmod@counter,f
  2838  00D6  28E0               	goto	l1817
  2839  00D7                     l1813:
  2840  00D7  3001               	movlw	1
  2841  00D8                     u1645:
  2842  00D8  35F0               	lslf	___awmod@divisor,f
  2843  00D9  0DF1               	rlf	___awmod@divisor+1,f
  2844  00DA  0B89               	decfsz	9,f
  2845  00DB  28D8               	goto	u1645
  2846  00DC                     l1815:
  2847  00DC  3001               	movlw	1
  2848  00DD  00F4               	movwf	??___awmod
  2849  00DE  0874               	movf	??___awmod,w
  2850  00DF  07F5               	addwf	___awmod@counter,f
  2851  00E0                     l1817:
  2852  00E0  1FF1               	btfss	___awmod@divisor+1,7
  2853  00E1  28E3               	goto	u1651
  2854  00E2  28E4               	goto	u1650
  2855  00E3                     u1651:
  2856  00E3  28D7               	goto	l1813
  2857  00E4                     u1650:
  2858  00E4                     l1819:
  2859  00E4  0871               	movf	___awmod@divisor+1,w
  2860  00E5  0273               	subwf	___awmod@dividend+1,w
  2861  00E6  1D03               	skipz
  2862  00E7  28EA               	goto	u1665
  2863  00E8  0870               	movf	___awmod@divisor,w
  2864  00E9  0272               	subwf	___awmod@dividend,w
  2865  00EA                     u1665:
  2866  00EA  1C03               	skipc
  2867  00EB  28ED               	goto	u1661
  2868  00EC  28EE               	goto	u1660
  2869  00ED                     u1661:
  2870  00ED  28F2               	goto	l1823
  2871  00EE                     u1660:
  2872  00EE                     l1821:
  2873  00EE  0870               	movf	___awmod@divisor,w
  2874  00EF  02F2               	subwf	___awmod@dividend,f
  2875  00F0  0871               	movf	___awmod@divisor+1,w
  2876  00F1  3BF3               	subwfb	___awmod@dividend+1,f
  2877  00F2                     l1823:
  2878  00F2  3001               	movlw	1
  2879  00F3                     u1675:
  2880  00F3  36F1               	lsrf	___awmod@divisor+1,f
  2881  00F4  0CF0               	rrf	___awmod@divisor,f
  2882  00F5  0B89               	decfsz	9,f
  2883  00F6  28F3               	goto	u1675
  2884  00F7                     l1825:
  2885  00F7  3001               	movlw	1
  2886  00F8  02F5               	subwf	___awmod@counter,f
  2887  00F9  1D03               	btfss	3,2
  2888  00FA  28FC               	goto	u1681
  2889  00FB  28FD               	goto	u1680
  2890  00FC                     u1681:
  2891  00FC  28E4               	goto	l1819
  2892  00FD                     u1680:
  2893  00FD                     l1827:
  2894  00FD  0876               	movf	___awmod@sign,w
  2895  00FE  1903               	btfsc	3,2
  2896  00FF  2901               	goto	u1691
  2897  0100  2902               	goto	u1690
  2898  0101                     u1691:
  2899  0101  2907               	goto	l1831
  2900  0102                     u1690:
  2901  0102                     l1829:
  2902  0102  09F2               	comf	___awmod@dividend,f
  2903  0103  09F3               	comf	___awmod@dividend+1,f
  2904  0104  0AF2               	incf	___awmod@dividend,f
  2905  0105  1903               	skipnz
  2906  0106  0AF3               	incf	___awmod@dividend+1,f
  2907  0107                     l1831:
  2908  0107  0873               	movf	___awmod@dividend+1,w
  2909  0108  00F1               	movwf	?___awmod+1
  2910  0109  0872               	movf	___awmod@dividend,w
  2911  010A  00F0               	movwf	?___awmod
  2912  010B                     l410:
  2913  010B  0008               	return
  2914  010C                     __end_of___awmod:
  2915                           
  2916                           	psect	text3
  2917  0162                     __ptext3:	
  2918 ;; *************** function ___awdiv *****************
  2919 ;; Defined at:
  2920 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  divisor         2    0[COMMON] int 
  2923 ;;  dividend        2    2[COMMON] int 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  quotient        2    7[COMMON] int 
  2926 ;;  sign            1    6[COMMON] unsigned char 
  2927 ;;  counter         1    5[COMMON] unsigned char 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  2    0[COMMON] int 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2938 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2940 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2941 ;;Total ram usage:        9 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_sumdigits
  2947 ;;		_main
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           
  2952                           ;psect for function ___awdiv
  2953  0162                     ___awdiv:
  2954  0162                     l1753:	
  2955                           ;incstack = 0
  2956                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2957                           
  2958  0162  01F6               	clrf	___awdiv@sign
  2959  0163                     l1755:
  2960  0163  1FF1               	btfss	___awdiv@divisor+1,7
  2961  0164  2966               	goto	u1511
  2962  0165  2967               	goto	u1510
  2963  0166                     u1511:
  2964  0166  296E               	goto	l1761
  2965  0167                     u1510:
  2966  0167                     l1757:
  2967  0167  09F0               	comf	___awdiv@divisor,f
  2968  0168  09F1               	comf	___awdiv@divisor+1,f
  2969  0169  0AF0               	incf	___awdiv@divisor,f
  2970  016A  1903               	skipnz
  2971  016B  0AF1               	incf	___awdiv@divisor+1,f
  2972  016C                     l1759:
  2973  016C  01F6               	clrf	___awdiv@sign
  2974  016D  0AF6               	incf	___awdiv@sign,f
  2975  016E                     l1761:
  2976  016E  1FF3               	btfss	___awdiv@dividend+1,7
  2977  016F  2971               	goto	u1521
  2978  0170  2972               	goto	u1520
  2979  0171                     u1521:
  2980  0171  297B               	goto	l1767
  2981  0172                     u1520:
  2982  0172                     l1763:
  2983  0172  09F2               	comf	___awdiv@dividend,f
  2984  0173  09F3               	comf	___awdiv@dividend+1,f
  2985  0174  0AF2               	incf	___awdiv@dividend,f
  2986  0175  1903               	skipnz
  2987  0176  0AF3               	incf	___awdiv@dividend+1,f
  2988  0177                     l1765:
  2989  0177  3001               	movlw	1
  2990  0178  00F4               	movwf	??___awdiv
  2991  0179  0874               	movf	??___awdiv,w
  2992  017A  06F6               	xorwf	___awdiv@sign,f
  2993  017B                     l1767:
  2994  017B  01F7               	clrf	___awdiv@quotient
  2995  017C  01F8               	clrf	___awdiv@quotient+1
  2996  017D                     l1769:
  2997  017D  0870               	movf	___awdiv@divisor,w
  2998  017E  0471               	iorwf	___awdiv@divisor+1,w
  2999  017F  1903               	btfsc	3,2
  3000  0180  2982               	goto	u1531
  3001  0181  2983               	goto	u1530
  3002  0182                     u1531:
  3003  0182  29B2               	goto	l1789
  3004  0183                     u1530:
  3005  0183                     l1771:
  3006  0183  01F5               	clrf	___awdiv@counter
  3007  0184  0AF5               	incf	___awdiv@counter,f
  3008  0185  298F               	goto	l1777
  3009  0186                     l1773:
  3010  0186  3001               	movlw	1
  3011  0187                     u1545:
  3012  0187  35F0               	lslf	___awdiv@divisor,f
  3013  0188  0DF1               	rlf	___awdiv@divisor+1,f
  3014  0189  0B89               	decfsz	9,f
  3015  018A  2987               	goto	u1545
  3016  018B                     l1775:
  3017  018B  3001               	movlw	1
  3018  018C  00F4               	movwf	??___awdiv
  3019  018D  0874               	movf	??___awdiv,w
  3020  018E  07F5               	addwf	___awdiv@counter,f
  3021  018F                     l1777:
  3022  018F  1FF1               	btfss	___awdiv@divisor+1,7
  3023  0190  2992               	goto	u1551
  3024  0191  2993               	goto	u1550
  3025  0192                     u1551:
  3026  0192  2986               	goto	l1773
  3027  0193                     u1550:
  3028  0193                     l1779:
  3029  0193  3001               	movlw	1
  3030  0194                     u1565:
  3031  0194  35F7               	lslf	___awdiv@quotient,f
  3032  0195  0DF8               	rlf	___awdiv@quotient+1,f
  3033  0196  0B89               	decfsz	9,f
  3034  0197  2994               	goto	u1565
  3035  0198  0871               	movf	___awdiv@divisor+1,w
  3036  0199  0273               	subwf	___awdiv@dividend+1,w
  3037  019A  1D03               	skipz
  3038  019B  299E               	goto	u1575
  3039  019C  0870               	movf	___awdiv@divisor,w
  3040  019D  0272               	subwf	___awdiv@dividend,w
  3041  019E                     u1575:
  3042  019E  1C03               	skipc
  3043  019F  29A1               	goto	u1571
  3044  01A0  29A2               	goto	u1570
  3045  01A1                     u1571:
  3046  01A1  29A7               	goto	l1785
  3047  01A2                     u1570:
  3048  01A2                     l1781:
  3049  01A2  0870               	movf	___awdiv@divisor,w
  3050  01A3  02F2               	subwf	___awdiv@dividend,f
  3051  01A4  0871               	movf	___awdiv@divisor+1,w
  3052  01A5  3BF3               	subwfb	___awdiv@dividend+1,f
  3053  01A6                     l1783:
  3054  01A6  1477               	bsf	___awdiv@quotient,0
  3055  01A7                     l1785:
  3056  01A7  3001               	movlw	1
  3057  01A8                     u1585:
  3058  01A8  36F1               	lsrf	___awdiv@divisor+1,f
  3059  01A9  0CF0               	rrf	___awdiv@divisor,f
  3060  01AA  0B89               	decfsz	9,f
  3061  01AB  29A8               	goto	u1585
  3062  01AC                     l1787:
  3063  01AC  3001               	movlw	1
  3064  01AD  02F5               	subwf	___awdiv@counter,f
  3065  01AE  1D03               	btfss	3,2
  3066  01AF  29B1               	goto	u1591
  3067  01B0  29B2               	goto	u1590
  3068  01B1                     u1591:
  3069  01B1  2993               	goto	l1779
  3070  01B2                     u1590:
  3071  01B2                     l1789:
  3072  01B2  0876               	movf	___awdiv@sign,w
  3073  01B3  1903               	btfsc	3,2
  3074  01B4  29B6               	goto	u1601
  3075  01B5  29B7               	goto	u1600
  3076  01B6                     u1601:
  3077  01B6  29BC               	goto	l1793
  3078  01B7                     u1600:
  3079  01B7                     l1791:
  3080  01B7  09F7               	comf	___awdiv@quotient,f
  3081  01B8  09F8               	comf	___awdiv@quotient+1,f
  3082  01B9  0AF7               	incf	___awdiv@quotient,f
  3083  01BA  1903               	skipnz
  3084  01BB  0AF8               	incf	___awdiv@quotient+1,f
  3085  01BC                     l1793:
  3086  01BC  0878               	movf	___awdiv@quotient+1,w
  3087  01BD  00F1               	movwf	?___awdiv+1
  3088  01BE  0877               	movf	___awdiv@quotient,w
  3089  01BF  00F0               	movwf	?___awdiv
  3090  01C0                     l397:
  3091  01C0  0008               	return
  3092  01C1                     __end_of___awdiv:
  3093                           
  3094                           	psect	text4
  3095  0F30                     __ptext4:	
  3096 ;; *************** function _sprintf *****************
  3097 ;; Defined at:
  3098 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  s               1    wreg     PTR unsigned char 
  3101 ;;		 -> main@printchar(10), 
  3102 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  3103 ;;		 -> STR_7(3), STR_5(3), STR_3(3), 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  s               1    3[BANK1 ] PTR unsigned char 
  3106 ;;		 -> main@printchar(10), 
  3107 ;;  f               5    4[BANK1 ] struct _IO_FILE
  3108 ;;  ret             2    0        int 
  3109 ;;  ap              1    2[BANK1 ] PTR void [1]
  3110 ;;		 -> ?_sprintf(2), 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  2   70[BANK0 ] int 
  3113 ;; Registers used:
  3114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3120 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3121 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3122 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3123 ;;      Totals:         1       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3124 ;;Total ram usage:       16 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; Hardware stack levels required when called:    7
  3127 ;; This function calls:
  3128 ;;		_vfprintf
  3129 ;; This function is called by:
  3130 ;;		_main
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           
  3135                           ;psect for function _sprintf
  3136  0F30                     _sprintf:
  3137                           
  3138                           ;incstack = 0
  3139                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3140                           ;sprintf@s stored from wreg
  3141  0F30  0021               	movlb	1	; select bank1
  3142  0F31  00A3               	movwf	sprintf@s^(0+128)
  3143  0F32                     l1885:
  3144  0F32  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3145  0F33  00FD               	movwf	??_sprintf
  3146  0F34  087D               	movf	??_sprintf,w
  3147  0F35  00A2               	movwf	sprintf@ap^(0+128)
  3148  0F36  0823               	movf	sprintf@s^(0+128),w
  3149  0F37  00FD               	movwf	??_sprintf
  3150  0F38  087D               	movf	??_sprintf,w
  3151  0F39  00A4               	movwf	sprintf@f^(0+128)
  3152  0F3A                     l1887:
  3153  0F3A  01A5               	clrf	(sprintf@f^(0+128)+1)
  3154  0F3B  01A6               	clrf	((sprintf@f+1)^(0+128)+1)
  3155  0F3C                     l1889:
  3156  0F3C  01A7               	clrf	(sprintf@f^(0+128)+3)
  3157  0F3D  01A8               	clrf	((sprintf@f+1)^(0+128)+3)
  3158  0F3E                     l1891:
  3159  0F3E  0020               	movlb	0	; select bank0
  3160  0F3F  0867               	movf	sprintf@fmt+1,w
  3161  0F40  00DF               	movwf	vfprintf@fmt+1
  3162  0F41  0866               	movf	sprintf@fmt,w
  3163  0F42  00DE               	movwf	vfprintf@fmt
  3164  0F43  30A2               	movlw	(low (sprintf@ap| 0))& (0+255)
  3165  0F44  00FD               	movwf	??_sprintf
  3166  0F45  087D               	movf	??_sprintf,w
  3167  0F46  00E0               	movwf	vfprintf@ap
  3168  0F47  30A4               	movlw	(low (sprintf@f| 0))& (0+255)
  3169  0F48  318F  27CF  318F   	fcall	_vfprintf
  3170  0F4B                     l1893:
  3171  0F4B  0021               	movlb	1	; select bank1
  3172  0F4C  0825               	movf	(sprintf@f^(0+128)+1),w
  3173  0F4D  0723               	addwf	sprintf@s^(0+128),w
  3174  0F4E  00FD               	movwf	??_sprintf
  3175  0F4F  087D               	movf	??_sprintf,w
  3176  0F50  0086               	movwf	6
  3177  0F51  0187               	clrf	7
  3178  0F52  0181               	clrf	1
  3179  0F53                     l707:
  3180  0F53  0008               	return
  3181  0F54                     __end_of_sprintf:
  3182                           
  3183                           	psect	text5
  3184  0FCF                     __ptext5:	
  3185 ;; *************** function _vfprintf *****************
  3186 ;; Defined at:
  3187 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  fp              1    wreg     PTR struct _IO_FILE
  3190 ;;		 -> sprintf@f(5), 
  3191 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  3192 ;;		 -> STR_7(3), STR_5(3), STR_3(3), 
  3193 ;;  ap              1   64[BANK0 ] PTR PTR void 
  3194 ;;		 -> sprintf@ap(1), 
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  3197 ;;		 -> sprintf@f(5), 
  3198 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  3199 ;;		 -> STR_7(3), STR_5(3), STR_3(3), 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  2   62[BANK0 ] int 
  3202 ;; Registers used:
  3203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3209 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3210 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3211 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3212 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3213 ;;Total ram usage:        8 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    6
  3216 ;; This function calls:
  3217 ;;		_vfpfcnvrt
  3218 ;; This function is called by:
  3219 ;;		_sprintf
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           
  3224                           ;psect for function _vfprintf
  3225  0FCF                     _vfprintf:
  3226                           
  3227                           ;incstack = 0
  3228                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3229                           ;vfprintf@fp stored from wreg
  3230  0FCF  0020               	movlb	0	; select bank0
  3231  0FD0  00E3               	movwf	vfprintf@fp
  3232  0FD1                     l1835:
  3233                           
  3234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3235  0FD1  085F               	movf	vfprintf@fmt+1,w
  3236  0FD2  00E5               	movwf	vfprintf@cfmt+1
  3237  0FD3  085E               	movf	vfprintf@fmt,w
  3238  0FD4  00E4               	movwf	vfprintf@cfmt
  3239  0FD5                     l1837:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3242  0FD5  0021               	movlb	1	; select bank1
  3243  0FD6  01D9               	clrf	_nout^(0+128)
  3244  0FD7  01DA               	clrf	(_nout+1)^(0+128)
  3245                           
  3246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3247  0FD8  2FED               	goto	l1841
  3248  0FD9                     l1839:
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3251  0FD9  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3252  0FDA  00E1               	movwf	??_vfprintf
  3253  0FDB  0861               	movf	??_vfprintf,w
  3254  0FDC  00CE               	movwf	vfpfcnvrt@fmt
  3255  0FDD  0860               	movf	vfprintf@ap,w
  3256  0FDE  00E2               	movwf	??_vfprintf+1
  3257  0FDF  0862               	movf	??_vfprintf+1,w
  3258  0FE0  00CF               	movwf	vfpfcnvrt@ap
  3259  0FE1  0863               	movf	vfprintf@fp,w
  3260  0FE2  3181  21C1  318F   	fcall	_vfpfcnvrt
  3261  0FE5  0020               	movlb	0	; select bank0
  3262  0FE6  084E               	movf	?_vfpfcnvrt,w
  3263  0FE7  0021               	movlb	1	; select bank1
  3264  0FE8  07D9               	addwf	_nout^(0+128),f
  3265  0FE9  0020               	movlb	0	; select bank0
  3266  0FEA  084F               	movf	?_vfpfcnvrt+1,w
  3267  0FEB  0021               	movlb	1	; select bank1
  3268  0FEC  3DDA               	addwfc	(_nout+1)^(0+128),f
  3269  0FED                     l1841:
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3272  0FED  0020               	movlb	0	; select bank0
  3273  0FEE  0864               	movf	vfprintf@cfmt,w
  3274  0FEF  0084               	movwf	4
  3275  0FF0  0865               	movf	vfprintf@cfmt+1,w
  3276  0FF1  0085               	movwf	5
  3277  0FF2  0012               	moviw fsr0++
  3278  0FF3  1D03               	btfss	3,2
  3279  0FF4  2FF6               	goto	u1701
  3280  0FF5  2FF7               	goto	u1700
  3281  0FF6                     u1701:
  3282  0FF6  2FD9               	goto	l1839
  3283  0FF7                     u1700:
  3284  0FF7                     l1843:
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3287  0FF7  0021               	movlb	1	; select bank1
  3288  0FF8  085A               	movf	(_nout+1)^(0+128),w
  3289  0FF9  0020               	movlb	0	; select bank0
  3290  0FFA  00DF               	movwf	?_vfprintf+1
  3291  0FFB  0021               	movlb	1	; select bank1
  3292  0FFC  0859               	movf	_nout^(0+128),w
  3293  0FFD  0020               	movlb	0	; select bank0
  3294  0FFE  00DE               	movwf	?_vfprintf
  3295  0FFF                     l779:
  3296  0FFF  0008               	return
  3297  1000                     __end_of_vfprintf:
  3298                           
  3299                           	psect	text6
  3300  01C1                     __ptext6:	
  3301 ;; *************** function _vfpfcnvrt *****************
  3302 ;; Defined at:
  3303 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;  fp              1    wreg     PTR struct _IO_FILE
  3306 ;;		 -> sprintf@f(5), 
  3307 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3308 ;;		 -> vfprintf@cfmt(2), 
  3309 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3310 ;;		 -> sprintf@ap(1), 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  3313 ;;		 -> sprintf@f(5), 
  3314 ;;  ll              8   53[BANK0 ] long long 
  3315 ;;  llu             8    0        unsigned long long 
  3316 ;;  f               4    0        unsigned long long 
  3317 ;;  ct              3    0        unsigned char [3]
  3318 ;;  vp              2    0        PTR void 
  3319 ;;  i               2    0        int 
  3320 ;;  done            2    0        int 
  3321 ;;  cp              2    0        PTR unsigned char 
  3322 ;;  c               1    0        unsigned char 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  2   46[BANK0 ] int 
  3325 ;; Registers used:
  3326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3332 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3333 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3334 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3335 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3336 ;;Total ram usage:       16 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    5
  3339 ;; This function calls:
  3340 ;;		_dtoa
  3341 ;;		_fputc
  3342 ;; This function is called by:
  3343 ;;		_vfprintf
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           
  3348                           ;psect for function _vfpfcnvrt
  3349  01C1                     _vfpfcnvrt:
  3350                           
  3351                           ;incstack = 0
  3352                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3353                           ;vfpfcnvrt@fp stored from wreg
  3354  01C1  0020               	movlb	0	; select bank0
  3355  01C2  00DD               	movwf	vfpfcnvrt@fp
  3356  01C3                     l1651:
  3357                           
  3358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3359  01C3  084E               	movf	vfpfcnvrt@fmt,w
  3360  01C4  0086               	movwf	6
  3361  01C5  0187               	clrf	7
  3362  01C6  3F40               	moviw [0]fsr1
  3363  01C7  00D0               	movwf	??_vfpfcnvrt
  3364  01C8  3F41               	moviw [1]fsr1
  3365  01C9  00D1               	movwf	??_vfpfcnvrt+1
  3366  01CA  0850               	movf	??_vfpfcnvrt,w
  3367  01CB  0084               	movwf	4
  3368  01CC  0851               	movf	??_vfpfcnvrt+1,w
  3369  01CD  0085               	movwf	5
  3370  01CE  0012               	moviw fsr0++
  3371  01CF  3A25               	xorlw	37
  3372  01D0  1D03               	btfss	3,2
  3373  01D1  29D3               	goto	u1431
  3374  01D2  29D4               	goto	u1430
  3375  01D3                     u1431:
  3376  01D3  2A78               	goto	l1687
  3377  01D4                     u1430:
  3378  01D4                     l1653:
  3379                           
  3380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3381  01D4  084E               	movf	vfpfcnvrt@fmt,w
  3382  01D5  0086               	movwf	6
  3383  01D6  0187               	clrf	7
  3384  01D7  3001               	movlw	1
  3385  01D8  0781               	addwf	1,f
  3386  01D9  3141               	addfsr 1,1
  3387  01DA  1803               	skipnc
  3388  01DB  0A81               	incf	1,f
  3389  01DC                     l1655:
  3390                           
  3391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3392  01DC  0021               	movlb	1	; select bank1
  3393  01DD  01DB               	clrf	_width^(0+128)
  3394  01DE  01DC               	clrf	(_width+1)^(0+128)
  3395  01DF  0020               	movlb	0	; select bank0
  3396  01E0  01EE               	clrf	_flags
  3397  01E1  01EF               	clrf	_flags+1
  3398  01E2                     l1657:
  3399                           
  3400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3401  01E2  30FF               	movlw	255
  3402  01E3  00EC               	movwf	_prec
  3403  01E4  30FF               	movlw	255
  3404  01E5  00ED               	movwf	_prec+1
  3405  01E6                     l1659:
  3406                           
  3407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3408  01E6  084E               	movf	vfpfcnvrt@fmt,w
  3409  01E7  0086               	movwf	6
  3410  01E8  0187               	clrf	7
  3411  01E9  3F40               	moviw [0]fsr1
  3412  01EA  00D0               	movwf	??_vfpfcnvrt
  3413  01EB  3F41               	moviw [1]fsr1
  3414  01EC  00D1               	movwf	??_vfpfcnvrt+1
  3415  01ED  0850               	movf	??_vfpfcnvrt,w
  3416  01EE  0084               	movwf	4
  3417  01EF  0851               	movf	??_vfpfcnvrt+1,w
  3418  01F0  0085               	movwf	5
  3419  01F1  0012               	moviw fsr0++
  3420  01F2  3A64               	xorlw	100
  3421  01F3  1903               	btfsc	3,2
  3422  01F4  29F6               	goto	u1441
  3423  01F5  29F7               	goto	u1440
  3424  01F6                     u1441:
  3425  01F6  2A08               	goto	l1663
  3426  01F7                     u1440:
  3427  01F7                     l1661:
  3428  01F7  084E               	movf	vfpfcnvrt@fmt,w
  3429  01F8  0086               	movwf	6
  3430  01F9  0187               	clrf	7
  3431  01FA  3F40               	moviw [0]fsr1
  3432  01FB  00D0               	movwf	??_vfpfcnvrt
  3433  01FC  3F41               	moviw [1]fsr1
  3434  01FD  00D1               	movwf	??_vfpfcnvrt+1
  3435  01FE  0850               	movf	??_vfpfcnvrt,w
  3436  01FF  0084               	movwf	4
  3437  0200  0851               	movf	??_vfpfcnvrt+1,w
  3438  0201  0085               	movwf	5
  3439  0202  0012               	moviw fsr0++
  3440  0203  3A69               	xorlw	105
  3441  0204  1D03               	btfss	3,2
  3442  0205  2A07               	goto	u1451
  3443  0206  2A08               	goto	u1450
  3444  0207                     u1451:
  3445  0207  2A43               	goto	l1671
  3446  0208                     u1450:
  3447  0208                     l1663:
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3450  0208  084E               	movf	vfpfcnvrt@fmt,w
  3451  0209  0086               	movwf	6
  3452  020A  0187               	clrf	7
  3453  020B  3001               	movlw	1
  3454  020C  0781               	addwf	1,f
  3455  020D  3141               	addfsr 1,1
  3456  020E  1803               	skipnc
  3457  020F  0A81               	incf	1,f
  3458  0210                     l1665:
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3461  0210  084F               	movf	vfpfcnvrt@ap,w
  3462  0211  0086               	movwf	6
  3463  0212  0187               	clrf	7
  3464  0213  0801               	movf	1,w
  3465  0214  0084               	movwf	4
  3466  0215  0185               	clrf	5
  3467  0216  3002               	movlw	2
  3468  0217  0781               	addwf	1,f
  3469  0218  3F00               	moviw [0]fsr0
  3470  0219  00D0               	movwf	??_vfpfcnvrt
  3471  021A  3F01               	moviw [1]fsr0
  3472  021B  00D1               	movwf	??_vfpfcnvrt+1
  3473  021C  0850               	movf	??_vfpfcnvrt,w
  3474  021D  00D5               	movwf	vfpfcnvrt@ll
  3475  021E  0851               	movf	??_vfpfcnvrt+1,w
  3476  021F  00D6               	movwf	vfpfcnvrt@ll+1
  3477  0220  0D89               	rlf	9,f
  3478  0221  3B89               	subwfb	9,f
  3479  0222  0989               	comf	9,f
  3480  0223  00D7               	movwf	vfpfcnvrt@ll+2
  3481  0224  00D8               	movwf	vfpfcnvrt@ll+3
  3482  0225  00D9               	movwf	vfpfcnvrt@ll+4
  3483  0226  00DA               	movwf	vfpfcnvrt@ll+5
  3484  0227  00DB               	movwf	vfpfcnvrt@ll+6
  3485  0228  00DC               	movwf	vfpfcnvrt@ll+7
  3486  0229                     l1667:
  3487                           
  3488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3489  0229  0855               	movf	vfpfcnvrt@ll,w
  3490  022A  00B0               	movwf	dtoa@d
  3491  022B  0856               	movf	vfpfcnvrt@ll+1,w
  3492  022C  00B1               	movwf	dtoa@d+1
  3493  022D  0857               	movf	vfpfcnvrt@ll+2,w
  3494  022E  00B2               	movwf	dtoa@d+2
  3495  022F  0858               	movf	vfpfcnvrt@ll+3,w
  3496  0230  00B3               	movwf	dtoa@d+3
  3497  0231  0859               	movf	vfpfcnvrt@ll+4,w
  3498  0232  00B4               	movwf	dtoa@d+4
  3499  0233  085A               	movf	vfpfcnvrt@ll+5,w
  3500  0234  00B5               	movwf	dtoa@d+5
  3501  0235  085B               	movf	vfpfcnvrt@ll+6,w
  3502  0236  00B6               	movwf	dtoa@d+6
  3503  0237  085C               	movf	vfpfcnvrt@ll+7,w
  3504  0238  00B7               	movwf	dtoa@d+7
  3505  0239  085D               	movf	vfpfcnvrt@fp,w
  3506  023A  3184  2487  3181   	fcall	_dtoa
  3507  023D  0020               	movlb	0	; select bank0
  3508  023E  0831               	movf	?_dtoa+1,w
  3509  023F  00CF               	movwf	?_vfpfcnvrt+1
  3510  0240  0830               	movf	?_dtoa,w
  3511  0241  00CE               	movwf	?_vfpfcnvrt
  3512  0242  2A9B               	goto	l772
  3513  0243                     l1671:
  3514                           
  3515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3516  0243  084E               	movf	vfpfcnvrt@fmt,w
  3517  0244  0086               	movwf	6
  3518  0245  0187               	clrf	7
  3519  0246  3F40               	moviw [0]fsr1
  3520  0247  00D0               	movwf	??_vfpfcnvrt
  3521  0248  3F41               	moviw [1]fsr1
  3522  0249  00D1               	movwf	??_vfpfcnvrt+1
  3523  024A  0850               	movf	??_vfpfcnvrt,w
  3524  024B  0084               	movwf	4
  3525  024C  0851               	movf	??_vfpfcnvrt+1,w
  3526  024D  0085               	movwf	5
  3527  024E  0012               	moviw fsr0++
  3528  024F  3A25               	xorlw	37
  3529  0250  1D03               	btfss	3,2
  3530  0251  2A53               	goto	u1461
  3531  0252  2A54               	goto	u1460
  3532  0253                     u1461:
  3533  0253  2A6D               	goto	l1681
  3534  0254                     u1460:
  3535  0254                     l1673:
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3538  0254  084E               	movf	vfpfcnvrt@fmt,w
  3539  0255  0086               	movwf	6
  3540  0256  0187               	clrf	7
  3541  0257  3001               	movlw	1
  3542  0258  0781               	addwf	1,f
  3543  0259  3141               	addfsr 1,1
  3544  025A  1803               	skipnc
  3545  025B  0A81               	incf	1,f
  3546  025C                     l1675:
  3547                           
  3548                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3549  025C  3025               	movlw	37
  3550  025D  00F0               	movwf	fputc@c
  3551  025E  3000               	movlw	0
  3552  025F  00F1               	movwf	fputc@c+1
  3553  0260  085D               	movf	vfpfcnvrt@fp,w
  3554  0261  00D0               	movwf	??_vfpfcnvrt
  3555  0262  0850               	movf	??_vfpfcnvrt,w
  3556  0263  00F2               	movwf	fputc@fp
  3557  0264  3180  206A  3181   	fcall	_fputc
  3558  0267                     l1677:
  3559                           
  3560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3561  0267  3001               	movlw	1
  3562  0268  0020               	movlb	0	; select bank0
  3563  0269  00CE               	movwf	?_vfpfcnvrt
  3564  026A  3000               	movlw	0
  3565  026B  00CF               	movwf	?_vfpfcnvrt+1
  3566  026C  2A9B               	goto	l772
  3567  026D                     l1681:
  3568                           
  3569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3570  026D  084E               	movf	vfpfcnvrt@fmt,w
  3571  026E  0086               	movwf	6
  3572  026F  0187               	clrf	7
  3573  0270  3001               	movlw	1
  3574  0271  0781               	addwf	1,f
  3575  0272  3141               	addfsr 1,1
  3576  0273  1803               	skipnc
  3577  0274  0A81               	incf	1,f
  3578  0275                     l1683:
  3579                           
  3580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3581  0275  01CE               	clrf	?_vfpfcnvrt
  3582  0276  01CF               	clrf	?_vfpfcnvrt+1
  3583  0277  2A9B               	goto	l772
  3584  0278                     l1687:
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3587  0278  084E               	movf	vfpfcnvrt@fmt,w
  3588  0279  0086               	movwf	6
  3589  027A  0187               	clrf	7
  3590  027B  3F40               	moviw [0]fsr1
  3591  027C  00D0               	movwf	??_vfpfcnvrt
  3592  027D  3F41               	moviw [1]fsr1
  3593  027E  00D1               	movwf	??_vfpfcnvrt+1
  3594  027F  0850               	movf	??_vfpfcnvrt,w
  3595  0280  0084               	movwf	4
  3596  0281  0851               	movf	??_vfpfcnvrt+1,w
  3597  0282  0085               	movwf	5
  3598  0283  0800               	movf	0,w	;code access
  3599  0284  00D2               	movwf	??_vfpfcnvrt+2
  3600  0285  01D3               	clrf	??_vfpfcnvrt+3
  3601  0286  0852               	movf	??_vfpfcnvrt+2,w
  3602  0287  00F0               	movwf	fputc@c
  3603  0288  0853               	movf	??_vfpfcnvrt+3,w
  3604  0289  00F1               	movwf	fputc@c+1
  3605  028A  085D               	movf	vfpfcnvrt@fp,w
  3606  028B  00D4               	movwf	??_vfpfcnvrt+4
  3607  028C  0854               	movf	??_vfpfcnvrt+4,w
  3608  028D  00F2               	movwf	fputc@fp
  3609  028E  3180  206A  3181   	fcall	_fputc
  3610  0291                     l1689:
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3613  0291  0020               	movlb	0	; select bank0
  3614  0292  084E               	movf	vfpfcnvrt@fmt,w
  3615  0293  0086               	movwf	6
  3616  0294  0187               	clrf	7
  3617  0295  3001               	movlw	1
  3618  0296  0781               	addwf	1,f
  3619  0297  3141               	addfsr 1,1
  3620  0298  1803               	skipnc
  3621  0299  0A81               	incf	1,f
  3622  029A  2A67               	goto	l1677
  3623  029B                     l772:
  3624  029B  0008               	return
  3625  029C                     __end_of_vfpfcnvrt:
  3626                           
  3627                           	psect	text7
  3628  0487                     __ptext7:	
  3629 ;; *************** function _dtoa *****************
  3630 ;; Defined at:
  3631 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  fp              1    wreg     PTR struct _IO_FILE
  3634 ;;		 -> sprintf@f(5), 
  3635 ;;  d               8   16[BANK0 ] long long 
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  3638 ;;		 -> sprintf@f(5), 
  3639 ;;  n               8   36[BANK0 ] long long 
  3640 ;;  i               2   44[BANK0 ] int 
  3641 ;;  s               2   34[BANK0 ] int 
  3642 ;;  w               2   32[BANK0 ] int 
  3643 ;;  p               2   30[BANK0 ] int 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  2   16[BANK0 ] int 
  3646 ;; Registers used:
  3647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3653 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3654 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3655 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3656 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3657 ;;Total ram usage:       30 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    4
  3660 ;; This function calls:
  3661 ;;		___aodiv
  3662 ;;		___aomod
  3663 ;;		_abs
  3664 ;;		_pad
  3665 ;; This function is called by:
  3666 ;;		_vfpfcnvrt
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           
  3671                           ;psect for function _dtoa
  3672  0487                     _dtoa:
  3673                           
  3674                           ;incstack = 0
  3675                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3676                           ;dtoa@fp stored from wreg
  3677  0487  0020               	movlb	0	; select bank0
  3678  0488  00BD               	movwf	dtoa@fp
  3679  0489                     l1575:
  3680                           
  3681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3682  0489  0830               	movf	dtoa@d,w
  3683  048A  00C4               	movwf	dtoa@n
  3684  048B  0831               	movf	dtoa@d+1,w
  3685  048C  00C5               	movwf	dtoa@n+1
  3686  048D  0832               	movf	dtoa@d+2,w
  3687  048E  00C6               	movwf	dtoa@n+2
  3688  048F  0833               	movf	dtoa@d+3,w
  3689  0490  00C7               	movwf	dtoa@n+3
  3690  0491  0834               	movf	dtoa@d+4,w
  3691  0492  00C8               	movwf	dtoa@n+4
  3692  0493  0835               	movf	dtoa@d+5,w
  3693  0494  00C9               	movwf	dtoa@n+5
  3694  0495  0836               	movf	dtoa@d+6,w
  3695  0496  00CA               	movwf	dtoa@n+6
  3696  0497  0837               	movf	dtoa@d+7,w
  3697  0498  00CB               	movwf	dtoa@n+7
  3698  0499                     l1577:
  3699                           
  3700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3701  0499  3044               	movlw	low dtoa@n
  3702  049A  0086               	movwf	6
  3703  049B  3000               	movlw	high dtoa@n
  3704  049C  0087               	movwf	7
  3705  049D  3F47               	moviw [7]fsr1
  3706  049E  00B8               	movwf	??_dtoa
  3707  049F  1BB8               	btfsc	??_dtoa,7
  3708  04A0  2CA2               	goto	u1251
  3709  04A1  2CA4               	goto	u1250
  3710  04A2                     u1251:
  3711  04A2  3001               	movlw	1
  3712  04A3  2CA5               	goto	u1260
  3713  04A4                     u1250:
  3714  04A4  3000               	movlw	0
  3715  04A5                     u1260:
  3716  04A5  0020               	movlb	0	; select bank0
  3717  04A6  00B9               	movwf	??_dtoa+1
  3718  04A7  01BA               	clrf	??_dtoa+2
  3719  04A8  0839               	movf	??_dtoa+1,w
  3720  04A9  00C2               	movwf	dtoa@s
  3721  04AA  083A               	movf	??_dtoa+2,w
  3722  04AB  00C3               	movwf	dtoa@s+1
  3723  04AC                     l1579:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3726  04AC  0842               	movf	dtoa@s,w
  3727  04AD  0443               	iorwf	dtoa@s+1,w
  3728  04AE  1903               	btfsc	3,2
  3729  04AF  2CB1               	goto	u1271
  3730  04B0  2CB2               	goto	u1270
  3731  04B1                     u1271:
  3732  04B1  2CD0               	goto	l742
  3733  04B2                     u1270:
  3734  04B2                     l1581:
  3735                           
  3736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3737  04B2  09C4               	comf	dtoa@n,f
  3738  04B3  09C5               	comf	dtoa@n+1,f
  3739  04B4  09C6               	comf	dtoa@n+2,f
  3740  04B5  09C7               	comf	dtoa@n+3,f
  3741  04B6  09C8               	comf	dtoa@n+4,f
  3742  04B7  09C9               	comf	dtoa@n+5,f
  3743  04B8  09CA               	comf	dtoa@n+6,f
  3744  04B9  09CB               	comf	dtoa@n+7,f
  3745  04BA  0AC4               	incf	dtoa@n,f
  3746  04BB  1D03               	skipz
  3747  04BC  2CD0               	goto	u128lld
  3748  04BD  0AC5               	incf	dtoa@n+1,f
  3749  04BE  1D03               	skipz
  3750  04BF  2CD0               	goto	u128lld
  3751  04C0  0AC6               	incf	dtoa@n+2,f
  3752  04C1  1D03               	skipz
  3753  04C2  2CD0               	goto	u128lld
  3754  04C3  0AC7               	incf	dtoa@n+3,f
  3755  04C4  1D03               	skipz
  3756  04C5  2CD0               	goto	u128lld
  3757  04C6  0AC8               	incf	dtoa@n+4,f
  3758  04C7  1D03               	skipz
  3759  04C8  2CD0               	goto	u128lld
  3760  04C9  0AC9               	incf	dtoa@n+5,f
  3761  04CA  1D03               	skipz
  3762  04CB  2CD0               	goto	u128lld
  3763  04CC  0ACA               	incf	dtoa@n+6,f
  3764  04CD  1D03               	skipz
  3765  04CE  2CD0               	goto	u128lld
  3766  04CF  0ACB               	incf	dtoa@n+7,f
  3767  04D0                     u128lld:
  3768  04D0                     l742:	
  3769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
  3770                           
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3773  04D0  0020               	movlb	0	; select bank0
  3774  04D1  1BED               	btfsc	_prec+1,7
  3775  04D2  2CD4               	goto	u1291
  3776  04D3  2CD5               	goto	u1290
  3777  04D4                     u1291:
  3778  04D4  2CD9               	goto	l743
  3779  04D5                     u1290:
  3780  04D5                     l1583:
  3781                           
  3782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3783  04D5  30FD               	movlw	253
  3784  04D6  05EE               	andwf	_flags,f
  3785  04D7  30FF               	movlw	255
  3786  04D8  05EF               	andwf	_flags+1,f
  3787  04D9                     l743:	
  3788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
  3789                           
  3790                           
  3791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3792  04D9  086D               	movf	_prec+1,w
  3793  04DA  3A80               	xorlw	128
  3794  04DB  00B8               	movwf	??_dtoa
  3795  04DC  3080               	movlw	128
  3796  04DD  0238               	subwf	??_dtoa,w
  3797  04DE  1D03               	skipz
  3798  04DF  2CE2               	goto	u1305
  3799  04E0  3001               	movlw	1
  3800  04E1  026C               	subwf	_prec,w
  3801  04E2                     u1305:
  3802  04E2  1803               	skipnc
  3803  04E3  2CE5               	goto	u1301
  3804  04E4  2CE6               	goto	u1300
  3805  04E5                     u1301:
  3806  04E5  2CEC               	goto	l1587
  3807  04E6                     u1300:
  3808  04E6                     l1585:
  3809  04E6  3001               	movlw	1
  3810  04E7  0020               	movlb	0	; select bank0
  3811  04E8  00BE               	movwf	dtoa@p
  3812  04E9  3000               	movlw	0
  3813  04EA  00BF               	movwf	dtoa@p+1
  3814  04EB  2CF1               	goto	l747
  3815  04EC                     l1587:
  3816  04EC  0020               	movlb	0	; select bank0
  3817  04ED  086D               	movf	_prec+1,w
  3818  04EE  00BF               	movwf	dtoa@p+1
  3819  04EF  086C               	movf	_prec,w
  3820  04F0  00BE               	movwf	dtoa@p
  3821  04F1                     l747:
  3822                           
  3823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3824  04F1  0021               	movlb	1	; select bank1
  3825  04F2  085C               	movf	(_width+1)^(0+128),w
  3826  04F3  0020               	movlb	0	; select bank0
  3827  04F4  00C1               	movwf	dtoa@w+1
  3828  04F5  0021               	movlb	1	; select bank1
  3829  04F6  085B               	movf	_width^(0+128),w
  3830  04F7  0020               	movlb	0	; select bank0
  3831  04F8  00C0               	movwf	dtoa@w
  3832  04F9                     l1589:
  3833                           
  3834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3835  04F9  0842               	movf	dtoa@s,w
  3836  04FA  0443               	iorwf	dtoa@s+1,w
  3837  04FB  1D03               	btfss	3,2
  3838  04FC  2CFE               	goto	u1311
  3839  04FD  2CFF               	goto	u1310
  3840  04FE                     u1311:
  3841  04FE  2D03               	goto	l1593
  3842  04FF                     u1310:
  3843  04FF                     l1591:
  3844  04FF  1D6E               	btfss	_flags,2
  3845  0500  2D02               	goto	u1321
  3846  0501  2D03               	goto	u1320
  3847  0502                     u1321:
  3848  0502  2D07               	goto	l748
  3849  0503                     u1320:
  3850  0503                     l1593:
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  3853  0503  30FF               	movlw	255
  3854  0504  07C0               	addwf	dtoa@w,f
  3855  0505  30FF               	movlw	255
  3856  0506  3DC1               	addwfc	dtoa@w+1,f
  3857  0507                     l748:	
  3858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
  3859                           
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3862  0507  301F               	movlw	31
  3863  0508  00CC               	movwf	dtoa@i
  3864  0509  3000               	movlw	0
  3865  050A  00CD               	movwf	dtoa@i+1
  3866  050B                     l1595:
  3867                           
  3868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3869  050B  0022               	movlb	2	; select bank2
  3870  050C  01BF               	clrf	(_dbuf^(0+256)+31)
  3871                           
  3872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3873  050D  2D77               	goto	l751
  3874  050E                     l1597:
  3875                           
  3876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  3877  050E  30FF               	movlw	255
  3878  050F  0020               	movlb	0	; select bank0
  3879  0510  07CC               	addwf	dtoa@i,f
  3880  0511  30FF               	movlw	255
  3881  0512  3DCD               	addwfc	dtoa@i+1,f
  3882  0513                     l1599:
  3883                           
  3884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3885  0513  300A               	movlw	10
  3886  0514  00A0               	movwf	___aomod@divisor
  3887  0515  01A1               	clrf	___aomod@divisor+1
  3888  0516  01A2               	clrf	___aomod@divisor+2
  3889  0517  01A3               	clrf	___aomod@divisor+3
  3890  0518  01A4               	clrf	___aomod@divisor+4
  3891  0519  01A5               	clrf	___aomod@divisor+5
  3892  051A  01A6               	clrf	___aomod@divisor+6
  3893  051B  01A7               	clrf	___aomod@divisor+7
  3894  051C  0844               	movf	dtoa@n,w
  3895  051D  00A8               	movwf	___aomod@dividend
  3896  051E  0845               	movf	dtoa@n+1,w
  3897  051F  00A9               	movwf	___aomod@dividend+1
  3898  0520  0846               	movf	dtoa@n+2,w
  3899  0521  00AA               	movwf	___aomod@dividend+2
  3900  0522  0847               	movf	dtoa@n+3,w
  3901  0523  00AB               	movwf	___aomod@dividend+3
  3902  0524  0848               	movf	dtoa@n+4,w
  3903  0525  00AC               	movwf	___aomod@dividend+4
  3904  0526  0849               	movf	dtoa@n+5,w
  3905  0527  00AD               	movwf	___aomod@dividend+5
  3906  0528  084A               	movf	dtoa@n+6,w
  3907  0529  00AE               	movwf	___aomod@dividend+6
  3908  052A  084B               	movf	dtoa@n+7,w
  3909  052B  00AF               	movwf	___aomod@dividend+7
  3910  052C  3182  229C  3184   	fcall	___aomod
  3911  052F  0020               	movlb	0	; select bank0
  3912  0530  0821               	movf	?___aomod+1,w
  3913  0531  00F4               	movwf	abs@a+1
  3914  0532  0820               	movf	?___aomod,w
  3915  0533  00F3               	movwf	abs@a
  3916  0534  318E  265E  3184   	fcall	_abs
  3917  0537  0873               	movf	?_abs,w
  3918  0538  3E30               	addlw	48
  3919  0539  0020               	movlb	0	; select bank0
  3920  053A  00B8               	movwf	??_dtoa
  3921  053B  084C               	movf	dtoa@i,w
  3922  053C  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3923  053D  0086               	movwf	6
  3924  053E  3001               	movlw	1	; select bank2/3
  3925  053F  0087               	movwf	7
  3926  0540  0838               	movf	??_dtoa,w
  3927  0541  0081               	movwf	1
  3928  0542                     l1601:
  3929                           
  3930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  3931  0542  30FF               	movlw	255
  3932  0543  07BE               	addwf	dtoa@p,f
  3933  0544  30FF               	movlw	255
  3934  0545  3DBF               	addwfc	dtoa@p+1,f
  3935  0546                     l1603:
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  3938  0546  30FF               	movlw	255
  3939  0547  07C0               	addwf	dtoa@w,f
  3940  0548  30FF               	movlw	255
  3941  0549  3DC1               	addwfc	dtoa@w+1,f
  3942  054A                     l1605:
  3943                           
  3944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3945  054A  300A               	movlw	10
  3946  054B  00A0               	movwf	___aodiv@divisor
  3947  054C  01A1               	clrf	___aodiv@divisor+1
  3948  054D  01A2               	clrf	___aodiv@divisor+2
  3949  054E  01A3               	clrf	___aodiv@divisor+3
  3950  054F  01A4               	clrf	___aodiv@divisor+4
  3951  0550  01A5               	clrf	___aodiv@divisor+5
  3952  0551  01A6               	clrf	___aodiv@divisor+6
  3953  0552  01A7               	clrf	___aodiv@divisor+7
  3954  0553  0844               	movf	dtoa@n,w
  3955  0554  00A8               	movwf	___aodiv@dividend
  3956  0555  0845               	movf	dtoa@n+1,w
  3957  0556  00A9               	movwf	___aodiv@dividend+1
  3958  0557  0846               	movf	dtoa@n+2,w
  3959  0558  00AA               	movwf	___aodiv@dividend+2
  3960  0559  0847               	movf	dtoa@n+3,w
  3961  055A  00AB               	movwf	___aodiv@dividend+3
  3962  055B  0848               	movf	dtoa@n+4,w
  3963  055C  00AC               	movwf	___aodiv@dividend+4
  3964  055D  0849               	movf	dtoa@n+5,w
  3965  055E  00AD               	movwf	___aodiv@dividend+5
  3966  055F  084A               	movf	dtoa@n+6,w
  3967  0560  00AE               	movwf	___aodiv@dividend+6
  3968  0561  084B               	movf	dtoa@n+7,w
  3969  0562  00AF               	movwf	___aodiv@dividend+7
  3970  0563  3183  2386  3184   	fcall	___aodiv
  3971  0566  0020               	movlb	0	; select bank0
  3972  0567  0820               	movf	?___aodiv,w
  3973  0568  00C4               	movwf	dtoa@n
  3974  0569  0821               	movf	?___aodiv+1,w
  3975  056A  00C5               	movwf	dtoa@n+1
  3976  056B  0822               	movf	?___aodiv+2,w
  3977  056C  00C6               	movwf	dtoa@n+2
  3978  056D  0823               	movf	?___aodiv+3,w
  3979  056E  00C7               	movwf	dtoa@n+3
  3980  056F  0824               	movf	?___aodiv+4,w
  3981  0570  00C8               	movwf	dtoa@n+4
  3982  0571  0825               	movf	?___aodiv+5,w
  3983  0572  00C9               	movwf	dtoa@n+5
  3984  0573  0826               	movf	?___aodiv+6,w
  3985  0574  00CA               	movwf	dtoa@n+6
  3986  0575  0827               	movf	?___aodiv+7,w
  3987  0576  00CB               	movwf	dtoa@n+7
  3988  0577                     l751:	
  3989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
  3990                           
  3991                           
  3992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3993  0577  0020               	movlb	0	; select bank0
  3994  0578  084D               	movf	dtoa@i+1,w
  3995  0579  3A80               	xorlw	128
  3996  057A  00B8               	movwf	??_dtoa
  3997  057B  3080               	movlw	128
  3998  057C  0238               	subwf	??_dtoa,w
  3999  057D  1D03               	skipz
  4000  057E  2D81               	goto	u1335
  4001  057F  3001               	movlw	1
  4002  0580  024C               	subwf	dtoa@i,w
  4003  0581                     u1335:
  4004  0581  1C03               	skipc
  4005  0582  2D84               	goto	u1331
  4006  0583  2D85               	goto	u1330
  4007  0584                     u1331:
  4008  0584  2DB2               	goto	l1615
  4009  0585                     u1330:
  4010  0585                     l1607:
  4011  0585  0020               	movlb	0	; select bank0
  4012  0586  0844               	movf	dtoa@n,w
  4013  0587  0445               	iorwf	dtoa@n+1,w
  4014  0588  0446               	iorwf	dtoa@n+2,w
  4015  0589  0447               	iorwf	dtoa@n+3,w
  4016  058A  0448               	iorwf	dtoa@n+4,w
  4017  058B  0449               	iorwf	dtoa@n+5,w
  4018  058C  044A               	iorwf	dtoa@n+6,w
  4019  058D  044B               	iorwf	dtoa@n+7,w
  4020  058E  1D03               	skipz
  4021  058F  2D91               	goto	u1341
  4022  0590  2D92               	goto	u1340
  4023  0591                     u1341:
  4024  0591  2D0E               	goto	l1597
  4025  0592                     u1340:
  4026  0592                     l1609:
  4027  0592  083F               	movf	dtoa@p+1,w
  4028  0593  3A80               	xorlw	128
  4029  0594  00B8               	movwf	??_dtoa
  4030  0595  3080               	movlw	128
  4031  0596  0238               	subwf	??_dtoa,w
  4032  0597  1D03               	skipz
  4033  0598  2D9B               	goto	u1355
  4034  0599  3001               	movlw	1
  4035  059A  023E               	subwf	dtoa@p,w
  4036  059B                     u1355:
  4037  059B  1803               	skipnc
  4038  059C  2D9E               	goto	u1351
  4039  059D  2D9F               	goto	u1350
  4040  059E                     u1351:
  4041  059E  2D0E               	goto	l1597
  4042  059F                     u1350:
  4043  059F                     l1611:
  4044  059F  0020               	movlb	0	; select bank0
  4045  05A0  0841               	movf	dtoa@w+1,w
  4046  05A1  3A80               	xorlw	128
  4047  05A2  00B8               	movwf	??_dtoa
  4048  05A3  3080               	movlw	128
  4049  05A4  0238               	subwf	??_dtoa,w
  4050  05A5  1D03               	skipz
  4051  05A6  2DA9               	goto	u1365
  4052  05A7  3001               	movlw	1
  4053  05A8  0240               	subwf	dtoa@w,w
  4054  05A9                     u1365:
  4055  05A9  1C03               	skipc
  4056  05AA  2DAC               	goto	u1361
  4057  05AB  2DAD               	goto	u1360
  4058  05AC                     u1361:
  4059  05AC  2DB2               	goto	l1615
  4060  05AD                     u1360:
  4061  05AD                     l1613:
  4062  05AD  0020               	movlb	0	; select bank0
  4063  05AE  18EE               	btfsc	_flags,1
  4064  05AF  2DB1               	goto	u1371
  4065  05B0  2DB2               	goto	u1370
  4066  05B1                     u1371:
  4067  05B1  2D0E               	goto	l1597
  4068  05B2                     u1370:
  4069  05B2                     l1615:
  4070                           
  4071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4072  05B2  0020               	movlb	0	; select bank0
  4073  05B3  0842               	movf	dtoa@s,w
  4074  05B4  0443               	iorwf	dtoa@s+1,w
  4075  05B5  1D03               	btfss	3,2
  4076  05B6  2DB8               	goto	u1381
  4077  05B7  2DB9               	goto	u1380
  4078  05B8                     u1381:
  4079  05B8  2DBD               	goto	l1619
  4080  05B9                     u1380:
  4081  05B9                     l1617:
  4082  05B9  1D6E               	btfss	_flags,2
  4083  05BA  2DBC               	goto	u1391
  4084  05BB  2DBD               	goto	u1390
  4085  05BC                     u1391:
  4086  05BC  2DD9               	goto	l1629
  4087  05BD                     u1390:
  4088  05BD                     l1619:
  4089                           
  4090                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  4091  05BD  30FF               	movlw	255
  4092  05BE  07CC               	addwf	dtoa@i,f
  4093  05BF  30FF               	movlw	255
  4094  05C0  3DCD               	addwfc	dtoa@i+1,f
  4095  05C1                     l1621:
  4096                           
  4097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4098  05C1  0842               	movf	dtoa@s,w
  4099  05C2  0443               	iorwf	dtoa@s+1,w
  4100  05C3  1D03               	btfss	3,2
  4101  05C4  2DC6               	goto	u1401
  4102  05C5  2DC7               	goto	u1400
  4103  05C6                     u1401:
  4104  05C6  2DCC               	goto	l1625
  4105  05C7                     u1400:
  4106  05C7                     l1623:
  4107  05C7  302B               	movlw	43
  4108  05C8  00BB               	movwf	_dtoa$612
  4109  05C9  3000               	movlw	0
  4110  05CA  00BC               	movwf	_dtoa$612+1
  4111  05CB  2DD0               	goto	l1627
  4112  05CC                     l1625:
  4113  05CC  302D               	movlw	45
  4114  05CD  00BB               	movwf	_dtoa$612
  4115  05CE  3000               	movlw	0
  4116  05CF  00BC               	movwf	_dtoa$612+1
  4117  05D0                     l1627:
  4118  05D0  083B               	movf	_dtoa$612,w
  4119  05D1  00B8               	movwf	??_dtoa
  4120  05D2  084C               	movf	dtoa@i,w
  4121  05D3  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4122  05D4  0086               	movwf	6
  4123  05D5  3001               	movlw	1	; select bank2/3
  4124  05D6  0087               	movwf	7
  4125  05D7  0838               	movf	??_dtoa,w
  4126  05D8  0081               	movwf	1
  4127  05D9                     l1629:
  4128                           
  4129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4130  05D9  084C               	movf	dtoa@i,w
  4131  05DA  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4132  05DB  00B8               	movwf	??_dtoa
  4133  05DC  0838               	movf	??_dtoa,w
  4134  05DD  00A4               	movwf	pad@buf
  4135  05DE  0841               	movf	dtoa@w+1,w
  4136  05DF  00A6               	movwf	pad@p+1
  4137  05E0  0840               	movf	dtoa@w,w
  4138  05E1  00A5               	movwf	pad@p
  4139  05E2  083D               	movf	dtoa@fp,w
  4140  05E3  3181  210C  3184   	fcall	_pad
  4141  05E6  0020               	movlb	0	; select bank0
  4142  05E7  0825               	movf	?_pad+1,w
  4143  05E8  00B1               	movwf	?_dtoa+1
  4144  05E9  0824               	movf	?_pad,w
  4145  05EA  00B0               	movwf	?_dtoa
  4146  05EB                     l765:
  4147  05EB  0008               	return
  4148  05EC                     __end_of_dtoa:
  4149                           
  4150                           	psect	text8
  4151  010C                     __ptext8:	
  4152 ;; *************** function _pad *****************
  4153 ;; Defined at:
  4154 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  fp              1    wreg     PTR struct _IO_FILE
  4157 ;;		 -> sprintf@f(5), 
  4158 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  4159 ;;		 -> dbuf(32), 
  4160 ;;  p               2    5[BANK0 ] int 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  4163 ;;		 -> sprintf@f(5), 
  4164 ;;  w               2    9[BANK0 ] int 
  4165 ;;  i               2    7[BANK0 ] int 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  2    4[BANK0 ] int 
  4168 ;; Registers used:
  4169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4175 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4176 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4178 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4179 ;;Total ram usage:        9 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; Hardware stack levels required when called:    3
  4182 ;; This function calls:
  4183 ;;		_fputc
  4184 ;;		_fputs
  4185 ;;		_strlen
  4186 ;; This function is called by:
  4187 ;;		_dtoa
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           
  4192                           ;psect for function _pad
  4193  010C                     _pad:
  4194                           
  4195                           ;incstack = 0
  4196                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4197                           ;pad@fp stored from wreg
  4198  010C  0020               	movlb	0	; select bank0
  4199  010D  00AB               	movwf	pad@fp
  4200  010E                     l1535:
  4201                           
  4202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4203  010E  1C6E               	btfss	_flags,0
  4204  010F  2911               	goto	u1191
  4205  0110  2912               	goto	u1190
  4206  0111                     u1191:
  4207  0111  291A               	goto	l1539
  4208  0112                     u1190:
  4209  0112                     l1537:
  4210                           
  4211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4212  0112  082B               	movf	pad@fp,w
  4213  0113  00FC               	movwf	??_pad
  4214  0114  087C               	movf	??_pad,w
  4215  0115  00F8               	movwf	fputs@fp
  4216  0116  0824               	movf	pad@buf,w
  4217  0117  3180  2005  3181   	fcall	_fputs
  4218  011A                     l1539:
  4219                           
  4220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4221  011A  0020               	movlb	0	; select bank0
  4222  011B  1BA6               	btfsc	pad@p+1,7
  4223  011C  291E               	goto	u1201
  4224  011D  291F               	goto	u1200
  4225  011E                     u1201:
  4226  011E  2924               	goto	l1543
  4227  011F                     u1200:
  4228  011F                     l1541:
  4229  011F  0826               	movf	pad@p+1,w
  4230  0120  00AA               	movwf	pad@w+1
  4231  0121  0825               	movf	pad@p,w
  4232  0122  00A9               	movwf	pad@w
  4233  0123  2926               	goto	l734
  4234  0124                     l1543:
  4235  0124  01A9               	clrf	pad@w
  4236  0125  01AA               	clrf	pad@w+1
  4237  0126                     l734:
  4238                           
  4239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4240  0126  01A7               	clrf	pad@i
  4241  0127  01A8               	clrf	pad@i+1
  4242                           
  4243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4244  0128  293A               	goto	l1549
  4245  0129                     l1545:
  4246                           
  4247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4248  0129  3020               	movlw	32
  4249  012A  00F0               	movwf	fputc@c
  4250  012B  3000               	movlw	0
  4251  012C  00F1               	movwf	fputc@c+1
  4252  012D  0020               	movlb	0	; select bank0
  4253  012E  082B               	movf	pad@fp,w
  4254  012F  00FC               	movwf	??_pad
  4255  0130  087C               	movf	??_pad,w
  4256  0131  00F2               	movwf	fputc@fp
  4257  0132  3180  206A  3181   	fcall	_fputc
  4258  0135                     l1547:
  4259                           
  4260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4261  0135  3001               	movlw	1
  4262  0136  0020               	movlb	0	; select bank0
  4263  0137  07A7               	addwf	pad@i,f
  4264  0138  3000               	movlw	0
  4265  0139  3DA8               	addwfc	pad@i+1,f
  4266  013A                     l1549:
  4267                           
  4268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4269  013A  0828               	movf	pad@i+1,w
  4270  013B  3A80               	xorlw	128
  4271  013C  00FC               	movwf	??_pad
  4272  013D  082A               	movf	pad@w+1,w
  4273  013E  3A80               	xorlw	128
  4274  013F  027C               	subwf	??_pad,w
  4275  0140  1D03               	skipz
  4276  0141  2944               	goto	u1215
  4277  0142  0829               	movf	pad@w,w
  4278  0143  0227               	subwf	pad@i,w
  4279  0144                     u1215:
  4280  0144  1C03               	skipc
  4281  0145  2947               	goto	u1211
  4282  0146  2948               	goto	u1210
  4283  0147                     u1211:
  4284  0147  2929               	goto	l1545
  4285  0148                     u1210:
  4286  0148                     l737:
  4287                           
  4288                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4289  0148  0020               	movlb	0	; select bank0
  4290  0149  186E               	btfsc	_flags,0
  4291  014A  294C               	goto	u1221
  4292  014B  294D               	goto	u1220
  4293  014C                     u1221:
  4294  014C  2955               	goto	l1553
  4295  014D                     u1220:
  4296  014D                     l1551:
  4297                           
  4298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4299  014D  082B               	movf	pad@fp,w
  4300  014E  00FC               	movwf	??_pad
  4301  014F  087C               	movf	??_pad,w
  4302  0150  00F8               	movwf	fputs@fp
  4303  0151  0824               	movf	pad@buf,w
  4304  0152  3180  2005  3181   	fcall	_fputs
  4305  0155                     l1553:
  4306                           
  4307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4308  0155  0020               	movlb	0	; select bank0
  4309  0156  0824               	movf	pad@buf,w
  4310  0157  318E  2678  3181   	fcall	_strlen
  4311  015A  0020               	movlb	0	; select bank0
  4312  015B  0829               	movf	pad@w,w
  4313  015C  0770               	addwf	?_strlen,w
  4314  015D  00A4               	movwf	?_pad
  4315  015E  082A               	movf	pad@w+1,w
  4316  015F  3D71               	addwfc	?_strlen+1,w
  4317  0160  00A5               	movwf	?_pad+1
  4318  0161                     l739:
  4319  0161  0008               	return
  4320  0162                     __end_of_pad:
  4321                           
  4322                           	psect	text9
  4323  0E78                     __ptext9:	
  4324 ;; *************** function _strlen *****************
  4325 ;; Defined at:
  4326 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  s               1    wreg     PTR const unsigned char 
  4329 ;;		 -> dbuf(32), 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  s               1    4[COMMON] PTR const unsigned char 
  4332 ;;		 -> dbuf(32), 
  4333 ;;  a               1    3[COMMON] PTR const unsigned char 
  4334 ;;		 -> dbuf(32), 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  2    0[COMMON] unsigned int 
  4337 ;; Registers used:
  4338 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4345 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4347 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4348 ;;Total ram usage:        5 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; This function calls:
  4351 ;;		Nothing
  4352 ;; This function is called by:
  4353 ;;		_pad
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           
  4358                           ;psect for function _strlen
  4359  0E78                     _strlen:
  4360                           
  4361                           ;incstack = 0
  4362                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4363                           ;strlen@s stored from wreg
  4364  0E78  00F4               	movwf	strlen@s
  4365  0E79                     l1457:
  4366  0E79  0874               	movf	strlen@s,w
  4367  0E7A  00F2               	movwf	??_strlen
  4368  0E7B  0872               	movf	??_strlen,w
  4369  0E7C  00F3               	movwf	strlen@a
  4370  0E7D  2E82               	goto	l1461
  4371  0E7E                     l1459:
  4372  0E7E  3001               	movlw	1
  4373  0E7F  00F2               	movwf	??_strlen
  4374  0E80  0872               	movf	??_strlen,w
  4375  0E81  07F4               	addwf	strlen@s,f
  4376  0E82                     l1461:
  4377  0E82  0874               	movf	strlen@s,w
  4378  0E83  0086               	movwf	6
  4379  0E84  3001               	movlw	1	; select bank2/3
  4380  0E85  0087               	movwf	7
  4381  0E86  0801               	movf	1,w
  4382  0E87  1D03               	btfss	3,2
  4383  0E88  2E8A               	goto	u971
  4384  0E89  2E8B               	goto	u970
  4385  0E8A                     u971:
  4386  0E8A  2E7E               	goto	l1459
  4387  0E8B                     u970:
  4388  0E8B                     l1463:
  4389  0E8B  0873               	movf	strlen@a,w
  4390  0E8C  0274               	subwf	strlen@s,w
  4391  0E8D  00F0               	movwf	?_strlen
  4392  0E8E  01F1               	clrf	?_strlen+1
  4393  0E8F  1BF0               	btfsc	?_strlen,7
  4394  0E90  03F1               	decf	?_strlen+1,f
  4395  0E91                     l815:
  4396  0E91  0008               	return
  4397  0E92                     __end_of_strlen:
  4398                           
  4399                           	psect	text10
  4400  0005                     __ptext10:	
  4401 ;; *************** function _fputs *****************
  4402 ;; Defined at:
  4403 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  s               1    wreg     PTR const unsigned char 
  4406 ;;		 -> dbuf(32), 
  4407 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  4408 ;;		 -> sprintf@f(5), 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4411 ;;		 -> dbuf(32), 
  4412 ;;  i               2    1[BANK0 ] int 
  4413 ;;  c               1    0[BANK0 ] unsigned char 
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  2    8[COMMON] int 
  4416 ;; Registers used:
  4417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4423 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4424 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4425 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4426 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4427 ;;Total ram usage:        8 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    2
  4430 ;; This function calls:
  4431 ;;		_fputc
  4432 ;; This function is called by:
  4433 ;;		_pad
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           
  4438                           ;psect for function _fputs
  4439  0005                     _fputs:
  4440                           
  4441                           ;incstack = 0
  4442                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4443                           ;fputs@s stored from wreg
  4444  0005  0020               	movlb	0	; select bank0
  4445  0006  00A3               	movwf	fputs@s
  4446  0007                     l1449:
  4447  0007  01A1               	clrf	fputs@i
  4448  0008  01A2               	clrf	fputs@i+1
  4449  0009  281D               	goto	l1455
  4450  000A                     l1451:
  4451  000A  0820               	movf	fputs@c,w
  4452  000B  00F9               	movwf	??_fputs
  4453  000C  01FA               	clrf	??_fputs+1
  4454  000D  0879               	movf	??_fputs,w
  4455  000E  00F0               	movwf	fputc@c
  4456  000F  087A               	movf	??_fputs+1,w
  4457  0010  00F1               	movwf	fputc@c+1
  4458  0011  0878               	movf	fputs@fp,w
  4459  0012  00FB               	movwf	??_fputs+2
  4460  0013  087B               	movf	??_fputs+2,w
  4461  0014  00F2               	movwf	fputc@fp
  4462  0015  3180  206A  3180   	fcall	_fputc
  4463  0018                     l1453:
  4464  0018  3001               	movlw	1
  4465  0019  0020               	movlb	0	; select bank0
  4466  001A  07A1               	addwf	fputs@i,f
  4467  001B  3000               	movlw	0
  4468  001C  3DA2               	addwfc	fputs@i+1,f
  4469  001D                     l1455:
  4470  001D  0821               	movf	fputs@i,w
  4471  001E  0723               	addwf	fputs@s,w
  4472  001F  00F9               	movwf	??_fputs
  4473  0020  0879               	movf	??_fputs,w
  4474  0021  0086               	movwf	6
  4475  0022  3001               	movlw	1	; select bank2/3
  4476  0023  0087               	movwf	7
  4477  0024  0801               	movf	1,w
  4478  0025  00FA               	movwf	??_fputs+1
  4479  0026  087A               	movf	??_fputs+1,w
  4480  0027  00A0               	movwf	fputs@c
  4481  0028  0820               	movf	fputs@c,w
  4482  0029  1D03               	btfss	3,2
  4483  002A  282C               	goto	u961
  4484  002B  282D               	goto	u960
  4485  002C                     u961:
  4486  002C  280A               	goto	l1451
  4487  002D                     u960:
  4488  002D                     l806:
  4489  002D  0008               	return
  4490  002E                     __end_of_fputs:
  4491                           
  4492                           	psect	text11
  4493  006A                     __ptext11:	
  4494 ;; *************** function _fputc *****************
  4495 ;; Defined at:
  4496 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  c               2    0[COMMON] int 
  4499 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  4500 ;;		 -> sprintf@f(5), 
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;		None
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  2    0[COMMON] int 
  4505 ;; Registers used:
  4506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4512 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4514 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4515 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4516 ;;Total ram usage:        8 bytes
  4517 ;; Hardware stack levels used:    1
  4518 ;; Hardware stack levels required when called:    1
  4519 ;; This function calls:
  4520 ;;		_putch
  4521 ;; This function is called by:
  4522 ;;		_pad
  4523 ;;		_vfpfcnvrt
  4524 ;;		_fputs
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           
  4529                           ;psect for function _fputc
  4530  006A                     _fputc:
  4531  006A                     l1433:	
  4532                           ;incstack = 0
  4533                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4534                           
  4535  006A  0872               	movf	fputc@fp,w
  4536  006B  1903               	btfsc	3,2
  4537  006C  286E               	goto	u921
  4538  006D  286F               	goto	u920
  4539  006E                     u921:
  4540  006E  2874               	goto	l1437
  4541  006F                     u920:
  4542  006F                     l1435:
  4543  006F  0872               	movf	fputc@fp,w
  4544  0070  1D03               	btfss	3,2
  4545  0071  2873               	goto	u931
  4546  0072  2874               	goto	u930
  4547  0073                     u931:
  4548  0073  2879               	goto	l1439
  4549  0074                     u930:
  4550  0074                     l1437:
  4551  0074  0870               	movf	fputc@c,w
  4552  0075  3180  2004  3180   	fcall	_putch
  4553  0078  28B8               	goto	l798
  4554  0079                     l1439:
  4555  0079  0872               	movf	fputc@fp,w
  4556  007A  3E03               	addlw	3
  4557  007B  0086               	movwf	6
  4558  007C  0187               	clrf	7
  4559  007D  0016               	moviw fsr1++
  4560  007E  0401               	iorwf	1,w
  4561  007F  1903               	btfsc	3,2
  4562  0080  2882               	goto	u941
  4563  0081  2883               	goto	u940
  4564  0082                     u941:
  4565  0082  28A0               	goto	l1443
  4566  0083                     u940:
  4567  0083                     l1441:
  4568  0083  0872               	movf	fputc@fp,w
  4569  0084  3E03               	addlw	3
  4570  0085  0086               	movwf	6
  4571  0086  0187               	clrf	7
  4572  0087  3F40               	moviw [0]fsr1
  4573  0088  00F3               	movwf	??_fputc
  4574  0089  3F41               	moviw [1]fsr1
  4575  008A  00F4               	movwf	??_fputc+1
  4576  008B  0A72               	incf	fputc@fp,w
  4577  008C  0086               	movwf	6
  4578  008D  0187               	clrf	7
  4579  008E  3F40               	moviw [0]fsr1
  4580  008F  00F5               	movwf	??_fputc+2
  4581  0090  3F41               	moviw [1]fsr1
  4582  0091  00F6               	movwf	??_fputc+3
  4583  0092  0876               	movf	??_fputc+3,w
  4584  0093  3A80               	xorlw	128
  4585  0094  00F7               	movwf	??_fputc+4
  4586  0095  0874               	movf	??_fputc+1,w
  4587  0096  3A80               	xorlw	128
  4588  0097  0277               	subwf	??_fputc+4,w
  4589  0098  1D03               	skipz
  4590  0099  289C               	goto	u955
  4591  009A  0873               	movf	??_fputc,w
  4592  009B  0275               	subwf	??_fputc+2,w
  4593  009C                     u955:
  4594  009C  1803               	skipnc
  4595  009D  289F               	goto	u951
  4596  009E  28A0               	goto	u950
  4597  009F                     u951:
  4598  009F  28B8               	goto	l798
  4599  00A0                     u950:
  4600  00A0                     l1443:
  4601  00A0  0870               	movf	fputc@c,w
  4602  00A1  00F3               	movwf	??_fputc
  4603  00A2  0872               	movf	fputc@fp,w
  4604  00A3  0086               	movwf	6
  4605  00A4  0187               	clrf	7
  4606  00A5  0A72               	incf	fputc@fp,w
  4607  00A6  0084               	movwf	4
  4608  00A7  0185               	clrf	5
  4609  00A8  0800               	movf	0,w
  4610  00A9  0701               	addwf	1,w
  4611  00AA  00F4               	movwf	??_fputc+1
  4612  00AB  0874               	movf	??_fputc+1,w
  4613  00AC  0086               	movwf	6
  4614  00AD  0187               	clrf	7
  4615  00AE  0873               	movf	??_fputc,w
  4616  00AF  0081               	movwf	1
  4617  00B0                     l1445:
  4618  00B0  0A72               	incf	fputc@fp,w
  4619  00B1  0086               	movwf	6
  4620  00B2  0187               	clrf	7
  4621  00B3  3001               	movlw	1
  4622  00B4  0781               	addwf	1,f
  4623  00B5  3141               	addfsr 1,1
  4624  00B6  1803               	skipnc
  4625  00B7  0A81               	incf	1,f
  4626  00B8                     l798:
  4627  00B8  0008               	return
  4628  00B9                     __end_of_fputc:
  4629                           
  4630                           	psect	text12
  4631  0004                     __ptext12:	
  4632 ;; *************** function _putch *****************
  4633 ;; Defined at:
  4634 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  c               1    wreg     unsigned char 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  c               1    0[COMMON] unsigned char 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4652 ;;Total ram usage:        0 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		_fputc
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           
  4662                           ;psect for function _putch
  4663  0004                     _putch:
  4664  0004                     l809:	
  4665                           ;incstack = 0
  4666                           ; Regs used in _putch: [wreg]
  4667                           
  4668  0004  0008               	return
  4669  0005                     __end_of_putch:
  4670                           
  4671                           	psect	text13
  4672  0E5E                     __ptext13:	
  4673 ;; *************** function _abs *****************
  4674 ;; Defined at:
  4675 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  a               2    3[COMMON] int 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  2    3[COMMON] int 
  4682 ;; Registers used:
  4683 ;;		wreg, status,2, status,0
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4691 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4692 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4693 ;;Total ram usage:        4 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		_dtoa
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           
  4703                           ;psect for function _abs
  4704  0E5E                     _abs:
  4705  0E5E                     l1557:	
  4706                           ;incstack = 0
  4707                           ; Regs used in _abs: [wreg+status,2+status,0]
  4708                           
  4709  0E5E  0874               	movf	abs@a+1,w
  4710  0E5F  3A80               	xorlw	128
  4711  0E60  00F5               	movwf	??_abs
  4712  0E61  3080               	movlw	128
  4713  0E62  0275               	subwf	??_abs,w
  4714  0E63  1D03               	skipz
  4715  0E64  2E67               	goto	u1235
  4716  0E65  3001               	movlw	1
  4717  0E66  0273               	subwf	abs@a,w
  4718  0E67                     u1235:
  4719  0E67  1803               	skipnc
  4720  0E68  2E6A               	goto	u1231
  4721  0E69  2E6B               	goto	u1230
  4722  0E6A                     u1231:
  4723  0E6A  2E77               	goto	l783
  4724  0E6B                     u1230:
  4725  0E6B                     l1559:
  4726  0E6B  0973               	comf	abs@a,w
  4727  0E6C  00F5               	movwf	??_abs
  4728  0E6D  0974               	comf	abs@a+1,w
  4729  0E6E  00F6               	movwf	??_abs+1
  4730  0E6F  0AF5               	incf	??_abs,f
  4731  0E70  1903               	skipnz
  4732  0E71  0AF6               	incf	??_abs+1,f
  4733  0E72  0875               	movf	??_abs,w
  4734  0E73  00F3               	movwf	?_abs
  4735  0E74  0876               	movf	??_abs+1,w
  4736  0E75  00F4               	movwf	?_abs+1
  4737  0E76  2E77               	goto	l786
  4738  0E77                     l783:
  4739  0E77                     l786:
  4740  0E77  0008               	return
  4741  0E78                     __end_of_abs:
  4742                           
  4743                           	psect	text14
  4744  029C                     __ptext14:	
  4745 ;; *************** function ___aomod *****************
  4746 ;; Defined at:
  4747 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;  divisor         8    0[BANK0 ] long long 
  4750 ;;  dividend        8    8[BANK0 ] long long 
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;  sign            1    2[COMMON] unsigned char 
  4753 ;;  counter         1    1[COMMON] unsigned char 
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  8    0[BANK0 ] long long 
  4756 ;; Registers used:
  4757 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4763 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4766 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4767 ;;Total ram usage:       19 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; This function calls:
  4770 ;;		Nothing
  4771 ;; This function is called by:
  4772 ;;		_dtoa
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           
  4777                           ;psect for function ___aomod
  4778  029C                     ___aomod:
  4779  029C                     l1505:	
  4780                           ;incstack = 0
  4781                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4782                           
  4783  029C  01F2               	clrf	___aomod@sign
  4784  029D                     l1507:
  4785  029D  3028               	movlw	low ___aomod@dividend
  4786  029E  0086               	movwf	6
  4787  029F  3000               	movlw	high ___aomod@dividend
  4788  02A0  0087               	movwf	7
  4789  02A1  3F47               	moviw [7]fsr1
  4790  02A2  00F0               	movwf	??___aomod
  4791  02A3  1FF0               	btfss	??___aomod,7
  4792  02A4  2AA6               	goto	u1091
  4793  02A5  2AA7               	goto	u1090
  4794  02A6                     u1091:
  4795  02A6  2AC8               	goto	l1511
  4796  02A7                     u1090:
  4797  02A7                     l1509:
  4798  02A7  0020               	movlb	0	; select bank0
  4799  02A8  09A8               	comf	___aomod@dividend,f
  4800  02A9  09A9               	comf	___aomod@dividend+1,f
  4801  02AA  09AA               	comf	___aomod@dividend+2,f
  4802  02AB  09AB               	comf	___aomod@dividend+3,f
  4803  02AC  09AC               	comf	___aomod@dividend+4,f
  4804  02AD  09AD               	comf	___aomod@dividend+5,f
  4805  02AE  09AE               	comf	___aomod@dividend+6,f
  4806  02AF  09AF               	comf	___aomod@dividend+7,f
  4807  02B0  0AA8               	incf	___aomod@dividend,f
  4808  02B1  1D03               	skipz
  4809  02B2  2AC6               	goto	u110lld
  4810  02B3  0AA9               	incf	___aomod@dividend+1,f
  4811  02B4  1D03               	skipz
  4812  02B5  2AC6               	goto	u110lld
  4813  02B6  0AAA               	incf	___aomod@dividend+2,f
  4814  02B7  1D03               	skipz
  4815  02B8  2AC6               	goto	u110lld
  4816  02B9  0AAB               	incf	___aomod@dividend+3,f
  4817  02BA  1D03               	skipz
  4818  02BB  2AC6               	goto	u110lld
  4819  02BC  0AAC               	incf	___aomod@dividend+4,f
  4820  02BD  1D03               	skipz
  4821  02BE  2AC6               	goto	u110lld
  4822  02BF  0AAD               	incf	___aomod@dividend+5,f
  4823  02C0  1D03               	skipz
  4824  02C1  2AC6               	goto	u110lld
  4825  02C2  0AAE               	incf	___aomod@dividend+6,f
  4826  02C3  1D03               	skipz
  4827  02C4  2AC6               	goto	u110lld
  4828  02C5  0AAF               	incf	___aomod@dividend+7,f
  4829  02C6                     u110lld:
  4830  02C6  01F2               	clrf	___aomod@sign
  4831  02C7  0AF2               	incf	___aomod@sign,f
  4832  02C8                     l1511:
  4833  02C8  3020               	movlw	low ___aomod@divisor
  4834  02C9  0086               	movwf	6
  4835  02CA  3000               	movlw	high ___aomod@divisor
  4836  02CB  0087               	movwf	7
  4837  02CC  3F47               	moviw [7]fsr1
  4838  02CD  00F0               	movwf	??___aomod
  4839  02CE  1FF0               	btfss	??___aomod,7
  4840  02CF  2AD1               	goto	u1111
  4841  02D0  2AD2               	goto	u1110
  4842  02D1                     u1111:
  4843  02D1  2AF1               	goto	l1515
  4844  02D2                     u1110:
  4845  02D2                     l1513:
  4846  02D2  0020               	movlb	0	; select bank0
  4847  02D3  09A0               	comf	___aomod@divisor,f
  4848  02D4  09A1               	comf	___aomod@divisor+1,f
  4849  02D5  09A2               	comf	___aomod@divisor+2,f
  4850  02D6  09A3               	comf	___aomod@divisor+3,f
  4851  02D7  09A4               	comf	___aomod@divisor+4,f
  4852  02D8  09A5               	comf	___aomod@divisor+5,f
  4853  02D9  09A6               	comf	___aomod@divisor+6,f
  4854  02DA  09A7               	comf	___aomod@divisor+7,f
  4855  02DB  0AA0               	incf	___aomod@divisor,f
  4856  02DC  1D03               	skipz
  4857  02DD  2AF1               	goto	u112lld
  4858  02DE  0AA1               	incf	___aomod@divisor+1,f
  4859  02DF  1D03               	skipz
  4860  02E0  2AF1               	goto	u112lld
  4861  02E1  0AA2               	incf	___aomod@divisor+2,f
  4862  02E2  1D03               	skipz
  4863  02E3  2AF1               	goto	u112lld
  4864  02E4  0AA3               	incf	___aomod@divisor+3,f
  4865  02E5  1D03               	skipz
  4866  02E6  2AF1               	goto	u112lld
  4867  02E7  0AA4               	incf	___aomod@divisor+4,f
  4868  02E8  1D03               	skipz
  4869  02E9  2AF1               	goto	u112lld
  4870  02EA  0AA5               	incf	___aomod@divisor+5,f
  4871  02EB  1D03               	skipz
  4872  02EC  2AF1               	goto	u112lld
  4873  02ED  0AA6               	incf	___aomod@divisor+6,f
  4874  02EE  1D03               	skipz
  4875  02EF  2AF1               	goto	u112lld
  4876  02F0  0AA7               	incf	___aomod@divisor+7,f
  4877  02F1                     u112lld:
  4878  02F1                     l1515:
  4879  02F1  0020               	movlb	0	; select bank0
  4880  02F2  0820               	movf	___aomod@divisor,w
  4881  02F3  0421               	iorwf	___aomod@divisor+1,w
  4882  02F4  0422               	iorwf	___aomod@divisor+2,w
  4883  02F5  0423               	iorwf	___aomod@divisor+3,w
  4884  02F6  0424               	iorwf	___aomod@divisor+4,w
  4885  02F7  0425               	iorwf	___aomod@divisor+5,w
  4886  02F8  0426               	iorwf	___aomod@divisor+6,w
  4887  02F9  0427               	iorwf	___aomod@divisor+7,w
  4888  02FA  1903               	skipnz
  4889  02FB  2AFD               	goto	u1131
  4890  02FC  2AFE               	goto	u1130
  4891  02FD                     u1131:
  4892  02FD  2B51               	goto	l1531
  4893  02FE                     u1130:
  4894  02FE                     l1517:
  4895  02FE  01F1               	clrf	___aomod@counter
  4896  02FF  0AF1               	incf	___aomod@counter,f
  4897  0300  2B0D               	goto	l1523
  4898  0301                     l1519:
  4899  0301  35A0               	lslf	___aomod@divisor,f
  4900  0302  0DA1               	rlf	___aomod@divisor+1,f
  4901  0303  0DA2               	rlf	___aomod@divisor+2,f
  4902  0304  0DA3               	rlf	___aomod@divisor+3,f
  4903  0305  0DA4               	rlf	___aomod@divisor+4,f
  4904  0306  0DA5               	rlf	___aomod@divisor+5,f
  4905  0307  0DA6               	rlf	___aomod@divisor+6,f
  4906  0308  0DA7               	rlf	___aomod@divisor+7,f
  4907  0309                     l1521:
  4908  0309  3001               	movlw	1
  4909  030A  00F0               	movwf	??___aomod
  4910  030B  0870               	movf	??___aomod,w
  4911  030C  07F1               	addwf	___aomod@counter,f
  4912  030D                     l1523:
  4913  030D  1FA7               	btfss	___aomod@divisor+7,7
  4914  030E  2B10               	goto	u1141
  4915  030F  2B11               	goto	u1140
  4916  0310                     u1141:
  4917  0310  2B01               	goto	l1519
  4918  0311                     u1140:
  4919  0311                     l1525:
  4920  0311  0827               	movf	___aomod@divisor+7,w
  4921  0312  022F               	subwf	___aomod@dividend+7,w
  4922  0313  1D03               	skipz
  4923  0314  2B2F               	goto	u1155
  4924  0315  0826               	movf	___aomod@divisor+6,w
  4925  0316  022E               	subwf	___aomod@dividend+6,w
  4926  0317  1D03               	skipz
  4927  0318  2B2F               	goto	u1155
  4928  0319  0825               	movf	___aomod@divisor+5,w
  4929  031A  022D               	subwf	___aomod@dividend+5,w
  4930  031B  1D03               	skipz
  4931  031C  2B2F               	goto	u1155
  4932  031D  0824               	movf	___aomod@divisor+4,w
  4933  031E  022C               	subwf	___aomod@dividend+4,w
  4934  031F  1D03               	skipz
  4935  0320  2B2F               	goto	u1155
  4936  0321  0823               	movf	___aomod@divisor+3,w
  4937  0322  022B               	subwf	___aomod@dividend+3,w
  4938  0323  1D03               	skipz
  4939  0324  2B2F               	goto	u1155
  4940  0325  0822               	movf	___aomod@divisor+2,w
  4941  0326  022A               	subwf	___aomod@dividend+2,w
  4942  0327  1D03               	skipz
  4943  0328  2B2F               	goto	u1155
  4944  0329  0821               	movf	___aomod@divisor+1,w
  4945  032A  0229               	subwf	___aomod@dividend+1,w
  4946  032B  1D03               	skipz
  4947  032C  2B2F               	goto	u1155
  4948  032D  0820               	movf	___aomod@divisor,w
  4949  032E  0228               	subwf	___aomod@dividend,w
  4950  032F                     u1155:
  4951  032F  1C03               	skipc
  4952  0330  2B32               	goto	u1151
  4953  0331  2B33               	goto	u1150
  4954  0332                     u1151:
  4955  0332  2B43               	goto	l1529
  4956  0333                     u1150:
  4957  0333                     l1527:
  4958  0333  0820               	movf	___aomod@divisor,w
  4959  0334  02A8               	subwf	___aomod@dividend,f
  4960  0335  0821               	movf	___aomod@divisor+1,w
  4961  0336  3BA9               	subwfb	___aomod@dividend+1,f
  4962  0337  0822               	movf	___aomod@divisor+2,w
  4963  0338  3BAA               	subwfb	___aomod@dividend+2,f
  4964  0339  0823               	movf	___aomod@divisor+3,w
  4965  033A  3BAB               	subwfb	___aomod@dividend+3,f
  4966  033B  0824               	movf	___aomod@divisor+4,w
  4967  033C  3BAC               	subwfb	___aomod@dividend+4,f
  4968  033D  0825               	movf	___aomod@divisor+5,w
  4969  033E  3BAD               	subwfb	___aomod@dividend+5,f
  4970  033F  0826               	movf	___aomod@divisor+6,w
  4971  0340  3BAE               	subwfb	___aomod@dividend+6,f
  4972  0341  0827               	movf	___aomod@divisor+7,w
  4973  0342  3BAF               	subwfb	___aomod@dividend+7,f
  4974  0343                     l1529:
  4975  0343  36A7               	lsrf	___aomod@divisor+7,f
  4976  0344  0CA6               	rrf	___aomod@divisor+6,f
  4977  0345  0CA5               	rrf	___aomod@divisor+5,f
  4978  0346  0CA4               	rrf	___aomod@divisor+4,f
  4979  0347  0CA3               	rrf	___aomod@divisor+3,f
  4980  0348  0CA2               	rrf	___aomod@divisor+2,f
  4981  0349  0CA1               	rrf	___aomod@divisor+1,f
  4982  034A  0CA0               	rrf	___aomod@divisor,f
  4983  034B  3001               	movlw	1
  4984  034C  02F1               	subwf	___aomod@counter,f
  4985  034D  1D03               	btfss	3,2
  4986  034E  2B50               	goto	u1161
  4987  034F  2B51               	goto	u1160
  4988  0350                     u1161:
  4989  0350  2B11               	goto	l1525
  4990  0351                     u1160:
  4991  0351                     l1531:
  4992  0351  0872               	movf	___aomod@sign,w
  4993  0352  1903               	btfsc	3,2
  4994  0353  2B55               	goto	u1171
  4995  0354  2B56               	goto	u1170
  4996  0355                     u1171:
  4997  0355  2B74               	goto	l357
  4998  0356                     u1170:
  4999  0356                     l1533:
  5000  0356  09A8               	comf	___aomod@dividend,f
  5001  0357  09A9               	comf	___aomod@dividend+1,f
  5002  0358  09AA               	comf	___aomod@dividend+2,f
  5003  0359  09AB               	comf	___aomod@dividend+3,f
  5004  035A  09AC               	comf	___aomod@dividend+4,f
  5005  035B  09AD               	comf	___aomod@dividend+5,f
  5006  035C  09AE               	comf	___aomod@dividend+6,f
  5007  035D  09AF               	comf	___aomod@dividend+7,f
  5008  035E  0AA8               	incf	___aomod@dividend,f
  5009  035F  1D03               	skipz
  5010  0360  2B74               	goto	u118lld
  5011  0361  0AA9               	incf	___aomod@dividend+1,f
  5012  0362  1D03               	skipz
  5013  0363  2B74               	goto	u118lld
  5014  0364  0AAA               	incf	___aomod@dividend+2,f
  5015  0365  1D03               	skipz
  5016  0366  2B74               	goto	u118lld
  5017  0367  0AAB               	incf	___aomod@dividend+3,f
  5018  0368  1D03               	skipz
  5019  0369  2B74               	goto	u118lld
  5020  036A  0AAC               	incf	___aomod@dividend+4,f
  5021  036B  1D03               	skipz
  5022  036C  2B74               	goto	u118lld
  5023  036D  0AAD               	incf	___aomod@dividend+5,f
  5024  036E  1D03               	skipz
  5025  036F  2B74               	goto	u118lld
  5026  0370  0AAE               	incf	___aomod@dividend+6,f
  5027  0371  1D03               	skipz
  5028  0372  2B74               	goto	u118lld
  5029  0373  0AAF               	incf	___aomod@dividend+7,f
  5030  0374                     u118lld:
  5031  0374                     l357:
  5032  0374  0020               	movlb	0	; select bank0
  5033  0375  0828               	movf	___aomod@dividend,w
  5034  0376  00A0               	movwf	?___aomod
  5035  0377  0829               	movf	___aomod@dividend+1,w
  5036  0378  00A1               	movwf	?___aomod+1
  5037  0379  082A               	movf	___aomod@dividend+2,w
  5038  037A  00A2               	movwf	?___aomod+2
  5039  037B  082B               	movf	___aomod@dividend+3,w
  5040  037C  00A3               	movwf	?___aomod+3
  5041  037D  082C               	movf	___aomod@dividend+4,w
  5042  037E  00A4               	movwf	?___aomod+4
  5043  037F  082D               	movf	___aomod@dividend+5,w
  5044  0380  00A5               	movwf	?___aomod+5
  5045  0381  082E               	movf	___aomod@dividend+6,w
  5046  0382  00A6               	movwf	?___aomod+6
  5047  0383  082F               	movf	___aomod@dividend+7,w
  5048  0384  00A7               	movwf	?___aomod+7
  5049  0385                     l358:
  5050  0385  0008               	return
  5051  0386                     __end_of___aomod:
  5052                           
  5053                           	psect	text15
  5054  0386                     __ptext15:	
  5055 ;; *************** function ___aodiv *****************
  5056 ;; Defined at:
  5057 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  divisor         8    0[BANK0 ] long long 
  5060 ;;  dividend        8    8[BANK0 ] long long 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  quotient        8    3[COMMON] long long 
  5063 ;;  sign            1    2[COMMON] unsigned char 
  5064 ;;  counter         1    1[COMMON] unsigned char 
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  8    0[BANK0 ] long long 
  5067 ;; Registers used:
  5068 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5074 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5075 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5077 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5078 ;;Total ram usage:       27 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_dtoa
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           
  5088                           ;psect for function ___aodiv
  5089  0386                     ___aodiv:
  5090  0386                     l1467:	
  5091                           ;incstack = 0
  5092                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  5093                           
  5094  0386  01F2               	clrf	___aodiv@sign
  5095  0387                     l1469:
  5096  0387  3020               	movlw	low ___aodiv@divisor
  5097  0388  0086               	movwf	6
  5098  0389  3000               	movlw	high ___aodiv@divisor
  5099  038A  0087               	movwf	7
  5100  038B  3F47               	moviw [7]fsr1
  5101  038C  00F0               	movwf	??___aodiv
  5102  038D  1FF0               	btfss	??___aodiv,7
  5103  038E  2B90               	goto	u981
  5104  038F  2B91               	goto	u980
  5105  0390                     u981:
  5106  0390  2BB2               	goto	l1473
  5107  0391                     u980:
  5108  0391                     l1471:
  5109  0391  0020               	movlb	0	; select bank0
  5110  0392  09A0               	comf	___aodiv@divisor,f
  5111  0393  09A1               	comf	___aodiv@divisor+1,f
  5112  0394  09A2               	comf	___aodiv@divisor+2,f
  5113  0395  09A3               	comf	___aodiv@divisor+3,f
  5114  0396  09A4               	comf	___aodiv@divisor+4,f
  5115  0397  09A5               	comf	___aodiv@divisor+5,f
  5116  0398  09A6               	comf	___aodiv@divisor+6,f
  5117  0399  09A7               	comf	___aodiv@divisor+7,f
  5118  039A  0AA0               	incf	___aodiv@divisor,f
  5119  039B  1D03               	skipz
  5120  039C  2BB0               	goto	u99lld
  5121  039D  0AA1               	incf	___aodiv@divisor+1,f
  5122  039E  1D03               	skipz
  5123  039F  2BB0               	goto	u99lld
  5124  03A0  0AA2               	incf	___aodiv@divisor+2,f
  5125  03A1  1D03               	skipz
  5126  03A2  2BB0               	goto	u99lld
  5127  03A3  0AA3               	incf	___aodiv@divisor+3,f
  5128  03A4  1D03               	skipz
  5129  03A5  2BB0               	goto	u99lld
  5130  03A6  0AA4               	incf	___aodiv@divisor+4,f
  5131  03A7  1D03               	skipz
  5132  03A8  2BB0               	goto	u99lld
  5133  03A9  0AA5               	incf	___aodiv@divisor+5,f
  5134  03AA  1D03               	skipz
  5135  03AB  2BB0               	goto	u99lld
  5136  03AC  0AA6               	incf	___aodiv@divisor+6,f
  5137  03AD  1D03               	skipz
  5138  03AE  2BB0               	goto	u99lld
  5139  03AF  0AA7               	incf	___aodiv@divisor+7,f
  5140  03B0                     u99lld:
  5141  03B0  01F2               	clrf	___aodiv@sign
  5142  03B1  0AF2               	incf	___aodiv@sign,f
  5143  03B2                     l1473:
  5144  03B2  3028               	movlw	low ___aodiv@dividend
  5145  03B3  0086               	movwf	6
  5146  03B4  3000               	movlw	high ___aodiv@dividend
  5147  03B5  0087               	movwf	7
  5148  03B6  3F47               	moviw [7]fsr1
  5149  03B7  00F0               	movwf	??___aodiv
  5150  03B8  1FF0               	btfss	??___aodiv,7
  5151  03B9  2BBB               	goto	u1001
  5152  03BA  2BBC               	goto	u1000
  5153  03BB                     u1001:
  5154  03BB  2BDF               	goto	l1479
  5155  03BC                     u1000:
  5156  03BC                     l1475:
  5157  03BC  0020               	movlb	0	; select bank0
  5158  03BD  09A8               	comf	___aodiv@dividend,f
  5159  03BE  09A9               	comf	___aodiv@dividend+1,f
  5160  03BF  09AA               	comf	___aodiv@dividend+2,f
  5161  03C0  09AB               	comf	___aodiv@dividend+3,f
  5162  03C1  09AC               	comf	___aodiv@dividend+4,f
  5163  03C2  09AD               	comf	___aodiv@dividend+5,f
  5164  03C3  09AE               	comf	___aodiv@dividend+6,f
  5165  03C4  09AF               	comf	___aodiv@dividend+7,f
  5166  03C5  0AA8               	incf	___aodiv@dividend,f
  5167  03C6  1D03               	skipz
  5168  03C7  2BDB               	goto	u101lld
  5169  03C8  0AA9               	incf	___aodiv@dividend+1,f
  5170  03C9  1D03               	skipz
  5171  03CA  2BDB               	goto	u101lld
  5172  03CB  0AAA               	incf	___aodiv@dividend+2,f
  5173  03CC  1D03               	skipz
  5174  03CD  2BDB               	goto	u101lld
  5175  03CE  0AAB               	incf	___aodiv@dividend+3,f
  5176  03CF  1D03               	skipz
  5177  03D0  2BDB               	goto	u101lld
  5178  03D1  0AAC               	incf	___aodiv@dividend+4,f
  5179  03D2  1D03               	skipz
  5180  03D3  2BDB               	goto	u101lld
  5181  03D4  0AAD               	incf	___aodiv@dividend+5,f
  5182  03D5  1D03               	skipz
  5183  03D6  2BDB               	goto	u101lld
  5184  03D7  0AAE               	incf	___aodiv@dividend+6,f
  5185  03D8  1D03               	skipz
  5186  03D9  2BDB               	goto	u101lld
  5187  03DA  0AAF               	incf	___aodiv@dividend+7,f
  5188  03DB                     u101lld:
  5189  03DB                     l1477:
  5190  03DB  3001               	movlw	1
  5191  03DC  00F0               	movwf	??___aodiv
  5192  03DD  0870               	movf	??___aodiv,w
  5193  03DE  06F2               	xorwf	___aodiv@sign,f
  5194  03DF                     l1479:
  5195  03DF  3073               	movlw	low ___aodiv@quotient
  5196  03E0  0086               	movwf	6
  5197  03E1  3000               	movlw	high ___aodiv@quotient
  5198  03E2  0087               	movwf	7
  5199  03E3  3008               	movlw	8
  5200  03E4  00F0               	movwf	??___aodiv
  5201  03E5  3000               	movlw	0
  5202  03E6                     u1020:
  5203  03E6  001E               	movwi fsr1++
  5204  03E7  0BF0               	decfsz	??___aodiv,f
  5205  03E8  2BE6               	goto	u1020
  5206  03E9                     l1481:
  5207  03E9  0020               	movlb	0	; select bank0
  5208  03EA  0820               	movf	___aodiv@divisor,w
  5209  03EB  0421               	iorwf	___aodiv@divisor+1,w
  5210  03EC  0422               	iorwf	___aodiv@divisor+2,w
  5211  03ED  0423               	iorwf	___aodiv@divisor+3,w
  5212  03EE  0424               	iorwf	___aodiv@divisor+4,w
  5213  03EF  0425               	iorwf	___aodiv@divisor+5,w
  5214  03F0  0426               	iorwf	___aodiv@divisor+6,w
  5215  03F1  0427               	iorwf	___aodiv@divisor+7,w
  5216  03F2  1903               	skipnz
  5217  03F3  2BF5               	goto	u1031
  5218  03F4  2BF6               	goto	u1030
  5219  03F5                     u1031:
  5220  03F5  2C52               	goto	l1501
  5221  03F6                     u1030:
  5222  03F6                     l1483:
  5223  03F6  01F1               	clrf	___aodiv@counter
  5224  03F7  0AF1               	incf	___aodiv@counter,f
  5225  03F8  2C05               	goto	l1489
  5226  03F9                     l1485:
  5227  03F9  35A0               	lslf	___aodiv@divisor,f
  5228  03FA  0DA1               	rlf	___aodiv@divisor+1,f
  5229  03FB  0DA2               	rlf	___aodiv@divisor+2,f
  5230  03FC  0DA3               	rlf	___aodiv@divisor+3,f
  5231  03FD  0DA4               	rlf	___aodiv@divisor+4,f
  5232  03FE  0DA5               	rlf	___aodiv@divisor+5,f
  5233  03FF  0DA6               	rlf	___aodiv@divisor+6,f
  5234  0400  0DA7               	rlf	___aodiv@divisor+7,f
  5235  0401                     l1487:
  5236  0401  3001               	movlw	1
  5237  0402  00F0               	movwf	??___aodiv
  5238  0403  0870               	movf	??___aodiv,w
  5239  0404  07F1               	addwf	___aodiv@counter,f
  5240  0405                     l1489:
  5241  0405  1FA7               	btfss	___aodiv@divisor+7,7
  5242  0406  2C08               	goto	u1041
  5243  0407  2C09               	goto	u1040
  5244  0408                     u1041:
  5245  0408  2BF9               	goto	l1485
  5246  0409                     u1040:
  5247  0409                     l1491:
  5248  0409  35F3               	lslf	___aodiv@quotient,f
  5249  040A  0DF4               	rlf	___aodiv@quotient+1,f
  5250  040B  0DF5               	rlf	___aodiv@quotient+2,f
  5251  040C  0DF6               	rlf	___aodiv@quotient+3,f
  5252  040D  0DF7               	rlf	___aodiv@quotient+4,f
  5253  040E  0DF8               	rlf	___aodiv@quotient+5,f
  5254  040F  0DF9               	rlf	___aodiv@quotient+6,f
  5255  0410  0DFA               	rlf	___aodiv@quotient+7,f
  5256  0411                     l1493:
  5257  0411  0827               	movf	___aodiv@divisor+7,w
  5258  0412  022F               	subwf	___aodiv@dividend+7,w
  5259  0413  1D03               	skipz
  5260  0414  2C2F               	goto	u1055
  5261  0415  0826               	movf	___aodiv@divisor+6,w
  5262  0416  022E               	subwf	___aodiv@dividend+6,w
  5263  0417  1D03               	skipz
  5264  0418  2C2F               	goto	u1055
  5265  0419  0825               	movf	___aodiv@divisor+5,w
  5266  041A  022D               	subwf	___aodiv@dividend+5,w
  5267  041B  1D03               	skipz
  5268  041C  2C2F               	goto	u1055
  5269  041D  0824               	movf	___aodiv@divisor+4,w
  5270  041E  022C               	subwf	___aodiv@dividend+4,w
  5271  041F  1D03               	skipz
  5272  0420  2C2F               	goto	u1055
  5273  0421  0823               	movf	___aodiv@divisor+3,w
  5274  0422  022B               	subwf	___aodiv@dividend+3,w
  5275  0423  1D03               	skipz
  5276  0424  2C2F               	goto	u1055
  5277  0425  0822               	movf	___aodiv@divisor+2,w
  5278  0426  022A               	subwf	___aodiv@dividend+2,w
  5279  0427  1D03               	skipz
  5280  0428  2C2F               	goto	u1055
  5281  0429  0821               	movf	___aodiv@divisor+1,w
  5282  042A  0229               	subwf	___aodiv@dividend+1,w
  5283  042B  1D03               	skipz
  5284  042C  2C2F               	goto	u1055
  5285  042D  0820               	movf	___aodiv@divisor,w
  5286  042E  0228               	subwf	___aodiv@dividend,w
  5287  042F                     u1055:
  5288  042F  1C03               	skipc
  5289  0430  2C32               	goto	u1051
  5290  0431  2C33               	goto	u1050
  5291  0432                     u1051:
  5292  0432  2C44               	goto	l1499
  5293  0433                     u1050:
  5294  0433                     l1495:
  5295  0433  0820               	movf	___aodiv@divisor,w
  5296  0434  02A8               	subwf	___aodiv@dividend,f
  5297  0435  0821               	movf	___aodiv@divisor+1,w
  5298  0436  3BA9               	subwfb	___aodiv@dividend+1,f
  5299  0437  0822               	movf	___aodiv@divisor+2,w
  5300  0438  3BAA               	subwfb	___aodiv@dividend+2,f
  5301  0439  0823               	movf	___aodiv@divisor+3,w
  5302  043A  3BAB               	subwfb	___aodiv@dividend+3,f
  5303  043B  0824               	movf	___aodiv@divisor+4,w
  5304  043C  3BAC               	subwfb	___aodiv@dividend+4,f
  5305  043D  0825               	movf	___aodiv@divisor+5,w
  5306  043E  3BAD               	subwfb	___aodiv@dividend+5,f
  5307  043F  0826               	movf	___aodiv@divisor+6,w
  5308  0440  3BAE               	subwfb	___aodiv@dividend+6,f
  5309  0441  0827               	movf	___aodiv@divisor+7,w
  5310  0442  3BAF               	subwfb	___aodiv@dividend+7,f
  5311  0443                     l1497:
  5312  0443  1473               	bsf	___aodiv@quotient,0
  5313  0444                     l1499:
  5314  0444  36A7               	lsrf	___aodiv@divisor+7,f
  5315  0445  0CA6               	rrf	___aodiv@divisor+6,f
  5316  0446  0CA5               	rrf	___aodiv@divisor+5,f
  5317  0447  0CA4               	rrf	___aodiv@divisor+4,f
  5318  0448  0CA3               	rrf	___aodiv@divisor+3,f
  5319  0449  0CA2               	rrf	___aodiv@divisor+2,f
  5320  044A  0CA1               	rrf	___aodiv@divisor+1,f
  5321  044B  0CA0               	rrf	___aodiv@divisor,f
  5322  044C  3001               	movlw	1
  5323  044D  02F1               	subwf	___aodiv@counter,f
  5324  044E  1D03               	btfss	3,2
  5325  044F  2C51               	goto	u1061
  5326  0450  2C52               	goto	u1060
  5327  0451                     u1061:
  5328  0451  2C09               	goto	l1491
  5329  0452                     u1060:
  5330  0452                     l1501:
  5331  0452  0872               	movf	___aodiv@sign,w
  5332  0453  1903               	btfsc	3,2
  5333  0454  2C56               	goto	u1071
  5334  0455  2C57               	goto	u1070
  5335  0456                     u1071:
  5336  0456  2C75               	goto	l344
  5337  0457                     u1070:
  5338  0457                     l1503:
  5339  0457  09F3               	comf	___aodiv@quotient,f
  5340  0458  09F4               	comf	___aodiv@quotient+1,f
  5341  0459  09F5               	comf	___aodiv@quotient+2,f
  5342  045A  09F6               	comf	___aodiv@quotient+3,f
  5343  045B  09F7               	comf	___aodiv@quotient+4,f
  5344  045C  09F8               	comf	___aodiv@quotient+5,f
  5345  045D  09F9               	comf	___aodiv@quotient+6,f
  5346  045E  09FA               	comf	___aodiv@quotient+7,f
  5347  045F  0AF3               	incf	___aodiv@quotient,f
  5348  0460  1D03               	skipz
  5349  0461  2C75               	goto	u108lld
  5350  0462  0AF4               	incf	___aodiv@quotient+1,f
  5351  0463  1D03               	skipz
  5352  0464  2C75               	goto	u108lld
  5353  0465  0AF5               	incf	___aodiv@quotient+2,f
  5354  0466  1D03               	skipz
  5355  0467  2C75               	goto	u108lld
  5356  0468  0AF6               	incf	___aodiv@quotient+3,f
  5357  0469  1D03               	skipz
  5358  046A  2C75               	goto	u108lld
  5359  046B  0AF7               	incf	___aodiv@quotient+4,f
  5360  046C  1D03               	skipz
  5361  046D  2C75               	goto	u108lld
  5362  046E  0AF8               	incf	___aodiv@quotient+5,f
  5363  046F  1D03               	skipz
  5364  0470  2C75               	goto	u108lld
  5365  0471  0AF9               	incf	___aodiv@quotient+6,f
  5366  0472  1D03               	skipz
  5367  0473  2C75               	goto	u108lld
  5368  0474  0AFA               	incf	___aodiv@quotient+7,f
  5369  0475                     u108lld:
  5370  0475                     l344:
  5371  0475  0873               	movf	___aodiv@quotient,w
  5372  0476  0020               	movlb	0	; select bank0
  5373  0477  00A0               	movwf	?___aodiv
  5374  0478  0874               	movf	___aodiv@quotient+1,w
  5375  0479  00A1               	movwf	?___aodiv+1
  5376  047A  0875               	movf	___aodiv@quotient+2,w
  5377  047B  00A2               	movwf	?___aodiv+2
  5378  047C  0876               	movf	___aodiv@quotient+3,w
  5379  047D  00A3               	movwf	?___aodiv+3
  5380  047E  0877               	movf	___aodiv@quotient+4,w
  5381  047F  00A4               	movwf	?___aodiv+4
  5382  0480  0878               	movf	___aodiv@quotient+5,w
  5383  0481  00A5               	movwf	?___aodiv+5
  5384  0482  0879               	movf	___aodiv@quotient+6,w
  5385  0483  00A6               	movwf	?___aodiv+6
  5386  0484  087A               	movf	___aodiv@quotient+7,w
  5387  0485  00A7               	movwf	?___aodiv+7
  5388  0486                     l345:
  5389  0486  0008               	return
  5390  0487                     __end_of___aodiv:
  5391                           
  5392                           	psect	text16
  5393  0ECE                     __ptext16:	
  5394 ;; *************** function ___wmul *****************
  5395 ;; Defined at:
  5396 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  multiplier      2    0[COMMON] unsigned int 
  5399 ;;  multiplicand    2    2[COMMON] unsigned int 
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;  product         2    4[COMMON] unsigned int 
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  2    0[COMMON] unsigned int 
  5404 ;; Registers used:
  5405 ;;		wreg, status,2, status,0
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5414 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5415 ;;Total ram usage:        6 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; This function calls:
  5418 ;;		Nothing
  5419 ;; This function is called by:
  5420 ;;		_main
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           
  5425                           ;psect for function ___wmul
  5426  0ECE                     ___wmul:
  5427  0ECE                     l1897:	
  5428                           ;incstack = 0
  5429                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5430                           
  5431  0ECE  01F4               	clrf	___wmul@product
  5432  0ECF  01F5               	clrf	___wmul@product+1
  5433  0ED0                     l1899:
  5434  0ED0  1C70               	btfss	___wmul@multiplier,0
  5435  0ED1  2ED3               	goto	u1721
  5436  0ED2  2ED4               	goto	u1720
  5437  0ED3                     u1721:
  5438  0ED3  2ED8               	goto	l244
  5439  0ED4                     u1720:
  5440  0ED4                     l1901:
  5441  0ED4  0872               	movf	___wmul@multiplicand,w
  5442  0ED5  07F4               	addwf	___wmul@product,f
  5443  0ED6  0873               	movf	___wmul@multiplicand+1,w
  5444  0ED7  3DF5               	addwfc	___wmul@product+1,f
  5445  0ED8                     l244:
  5446  0ED8  3001               	movlw	1
  5447  0ED9                     u1735:
  5448  0ED9  35F2               	lslf	___wmul@multiplicand,f
  5449  0EDA  0DF3               	rlf	___wmul@multiplicand+1,f
  5450  0EDB  0B89               	decfsz	9,f
  5451  0EDC  2ED9               	goto	u1735
  5452  0EDD                     l1903:
  5453  0EDD  3001               	movlw	1
  5454  0EDE                     u1745:
  5455  0EDE  36F1               	lsrf	___wmul@multiplier+1,f
  5456  0EDF  0CF0               	rrf	___wmul@multiplier,f
  5457  0EE0  0B89               	decfsz	9,f
  5458  0EE1  2EDE               	goto	u1745
  5459  0EE2                     l1905:
  5460  0EE2  0870               	movf	___wmul@multiplier,w
  5461  0EE3  0471               	iorwf	___wmul@multiplier+1,w
  5462  0EE4  1D03               	btfss	3,2
  5463  0EE5  2EE7               	goto	u1751
  5464  0EE6  2EE8               	goto	u1750
  5465  0EE7                     u1751:
  5466  0EE7  2ED0               	goto	l1899
  5467  0EE8                     u1750:
  5468  0EE8                     l1907:
  5469  0EE8  0875               	movf	___wmul@product+1,w
  5470  0EE9  00F1               	movwf	?___wmul+1
  5471  0EEA  0874               	movf	___wmul@product,w
  5472  0EEB  00F0               	movwf	?___wmul
  5473  0EEC                     l246:
  5474  0EEC  0008               	return
  5475  0EED                     __end_of___wmul:
  5476                           
  5477                           	psect	text17
  5478  0E3A                     __ptext17:	
  5479 ;; *************** function _SYSTEM_Initialize *****************
  5480 ;; Defined at:
  5481 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;		None
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;		None
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      void 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2, status,0, pclath, cstack
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5499 ;;Total ram usage:        0 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    1
  5502 ;; This function calls:
  5503 ;;		_OSCILLATOR_Initialize
  5504 ;;		_PIN_MANAGER_Initialize
  5505 ;;		_WDT_Initialize
  5506 ;; This function is called by:
  5507 ;;		_main
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           
  5512                           ;psect for function _SYSTEM_Initialize
  5513  0E3A                     _SYSTEM_Initialize:
  5514  0E3A                     l1861:	
  5515                           ;incstack = 0
  5516                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5517                           
  5518                           
  5519                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5520  0E3A  318F  27A1  318E   	fcall	_PIN_MANAGER_Initialize
  5521                           
  5522                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5523  0E3D  318E  2633  318E   	fcall	_OSCILLATOR_Initialize
  5524                           
  5525                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  5526  0E40  318E  2623  318E   	fcall	_WDT_Initialize
  5527  0E43                     l129:
  5528  0E43  0008               	return
  5529  0E44                     __end_of_SYSTEM_Initialize:
  5530                           
  5531                           	psect	text18
  5532  0E23                     __ptext18:	
  5533 ;; *************** function _WDT_Initialize *****************
  5534 ;; Defined at:
  5535 ;;		line 68 in file "mcc_generated_files/mcc.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;		None
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  1    wreg      void 
  5542 ;; Registers used:
  5543 ;;		wreg
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5553 ;;Total ram usage:        0 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_SYSTEM_Initialize
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           
  5563                           ;psect for function _WDT_Initialize
  5564  0E23                     _WDT_Initialize:
  5565  0E23                     l1751:	
  5566                           ;incstack = 0
  5567                           ; Regs used in _WDT_Initialize: [wreg]
  5568                           
  5569                           
  5570                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  5571  0E23  3016               	movlw	22
  5572  0E24  0021               	movlb	1	; select bank1
  5573  0E25  0097               	movwf	23	;volatile
  5574  0E26                     l135:
  5575  0E26  0008               	return
  5576  0E27                     __end_of_WDT_Initialize:
  5577                           
  5578                           	psect	text19
  5579  0FA1                     __ptext19:	
  5580 ;; *************** function _PIN_MANAGER_Initialize *****************
  5581 ;; Defined at:
  5582 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;		None
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;		None
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  1    wreg      void 
  5589 ;; Registers used:
  5590 ;;		wreg, status,2
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5600 ;;Total ram usage:        0 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; This function calls:
  5603 ;;		Nothing
  5604 ;; This function is called by:
  5605 ;;		_SYSTEM_Initialize
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           
  5610                           ;psect for function _PIN_MANAGER_Initialize
  5611  0FA1                     _PIN_MANAGER_Initialize:
  5612  0FA1                     l1717:	
  5613                           ;incstack = 0
  5614                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5615                           
  5616                           
  5617                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5618  0FA1  0022               	movlb	2	; select bank2
  5619  0FA2  018C               	clrf	12	;volatile
  5620                           
  5621                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5622  0FA3  018D               	clrf	13	;volatile
  5623                           
  5624                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5625  0FA4  018E               	clrf	14	;volatile
  5626  0FA5                     l1719:
  5627                           
  5628                           ;mcc_generated_files/pin_manager.c: 67:     TRISE = 0x08;
  5629  0FA5  3008               	movlw	8
  5630  0FA6  0021               	movlb	1	; select bank1
  5631  0FA7  0090               	movwf	16	;volatile
  5632  0FA8                     l1721:
  5633                           
  5634                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0xFF;
  5635  0FA8  30FF               	movlw	255
  5636  0FA9  008C               	movwf	12	;volatile
  5637                           
  5638                           ;mcc_generated_files/pin_manager.c: 69:     TRISB = 0x00;
  5639  0FAA  018D               	clrf	13	;volatile
  5640  0FAB                     l1723:
  5641                           
  5642                           ;mcc_generated_files/pin_manager.c: 70:     TRISC = 0xFF;
  5643  0FAB  30FF               	movlw	255
  5644  0FAC  008E               	movwf	14	;volatile
  5645  0FAD                     l1725:
  5646                           
  5647                           ;mcc_generated_files/pin_manager.c: 75:     ANSELC = 0xFC;
  5648  0FAD  30FC               	movlw	252
  5649  0FAE  0023               	movlb	3	; select bank3
  5650  0FAF  008E               	movwf	14	;volatile
  5651                           
  5652                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x00;
  5653  0FB0  018D               	clrf	13	;volatile
  5654  0FB1                     l1727:
  5655                           
  5656                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x3F;
  5657  0FB1  303F               	movlw	63
  5658  0FB2  008C               	movwf	12	;volatile
  5659  0FB3                     l1729:
  5660                           
  5661                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  5662  0FB3  0024               	movlb	4	; select bank4
  5663  0FB4  0190               	clrf	16	;volatile
  5664  0FB5                     l1731:
  5665                           
  5666                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  5667  0FB5  018D               	clrf	13	;volatile
  5668  0FB6                     l1733:
  5669                           
  5670                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  5671  0FB6  018C               	clrf	12	;volatile
  5672  0FB7                     l1735:
  5673                           
  5674                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  5675  0FB7  018E               	clrf	14	;volatile
  5676  0FB8                     l1737:
  5677                           
  5678                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  5679  0FB8  0021               	movlb	1	; select bank1
  5680  0FB9  1795               	bsf	21,7	;volatile
  5681  0FBA                     l1739:
  5682                           
  5683                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  5684  0FBA  0025               	movlb	5	; select bank5
  5685  0FBB  018C               	clrf	12	;volatile
  5686  0FBC                     l1741:
  5687                           
  5688                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  5689  0FBC  018D               	clrf	13	;volatile
  5690  0FBD                     l1743:
  5691                           
  5692                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  5693  0FBD  018E               	clrf	14	;volatile
  5694                           
  5695                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0xFF;
  5696  0FBE  30FF               	movlw	255
  5697  0FBF  0026               	movlb	6	; select bank6
  5698  0FC0  008C               	movwf	12	;volatile
  5699                           
  5700                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xFF;
  5701  0FC1  30FF               	movlw	255
  5702  0FC2  008D               	movwf	13	;volatile
  5703                           
  5704                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  5705  0FC3  30FF               	movlw	255
  5706  0FC4  008E               	movwf	14	;volatile
  5707                           
  5708                           ;mcc_generated_files/pin_manager.c: 105:     INLVLA = 0xFF;
  5709  0FC5  30FF               	movlw	255
  5710  0FC6  0027               	movlb	7	; select bank7
  5711  0FC7  008C               	movwf	12	;volatile
  5712                           
  5713                           ;mcc_generated_files/pin_manager.c: 106:     INLVLB = 0xFF;
  5714  0FC8  30FF               	movlw	255
  5715  0FC9  008D               	movwf	13	;volatile
  5716                           
  5717                           ;mcc_generated_files/pin_manager.c: 107:     INLVLC = 0xFF;
  5718  0FCA  30FF               	movlw	255
  5719  0FCB  008E               	movwf	14	;volatile
  5720                           
  5721                           ;mcc_generated_files/pin_manager.c: 108:     INLVLE = 0x08;
  5722  0FCC  3008               	movlw	8
  5723  0FCD  0090               	movwf	16	;volatile
  5724  0FCE                     l109:
  5725  0FCE  0008               	return
  5726  0FCF                     __end_of_PIN_MANAGER_Initialize:
  5727                           
  5728                           	psect	text20
  5729  0E33                     __ptext20:	
  5730 ;; *************** function _OSCILLATOR_Initialize *****************
  5731 ;; Defined at:
  5732 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;		None
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		wreg, status,2
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5750 ;;Total ram usage:        0 bytes
  5751 ;; Hardware stack levels used:    1
  5752 ;; This function calls:
  5753 ;;		Nothing
  5754 ;; This function is called by:
  5755 ;;		_SYSTEM_Initialize
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           
  5760                           ;psect for function _OSCILLATOR_Initialize
  5761  0E33                     _OSCILLATOR_Initialize:
  5762  0E33                     l1745:	
  5763                           ;incstack = 0
  5764                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5765                           
  5766                           
  5767                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x38;
  5768  0E33  3038               	movlw	56
  5769  0E34  0021               	movlb	1	; select bank1
  5770  0E35  0099               	movwf	25	;volatile
  5771  0E36                     l1747:
  5772                           
  5773                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  5774  0E36  0198               	clrf	24	;volatile
  5775  0E37                     l1749:
  5776                           
  5777                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  5778  0E37  0022               	movlb	2	; select bank2
  5779  0E38  0196               	clrf	22	;volatile
  5780  0E39                     l132:
  5781  0E39  0008               	return
  5782  0E3A                     __end_of_OSCILLATOR_Initialize:
  5783                           
  5784                           	psect	text21
  5785  0F0D                     __ptext21:	
  5786 ;; *************** function _LCD_Initialize *****************
  5787 ;; Defined at:
  5788 ;;		line 46 in file "lcd.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;		None
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      void 
  5795 ;; Registers used:
  5796 ;;		wreg, status,2, status,0, pclath, cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5804 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5806 ;;Total ram usage:        1 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    2
  5809 ;; This function calls:
  5810 ;;		_LCDPutCmd
  5811 ;; This function is called by:
  5812 ;;		_main
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           
  5817                           ;psect for function _LCD_Initialize
  5818  0F0D                     _LCD_Initialize:
  5819  0F0D                     l1863:	
  5820                           ;incstack = 0
  5821                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5822                           
  5823                           
  5824                           ;lcd.c: 49:   PORTB = 0;
  5825  0F0D  0020               	movlb	0	; select bank0
  5826  0F0E  018D               	clrf	13	;volatile
  5827                           
  5828                           ;lcd.c: 51:   TRISB = 0x00;
  5829  0F0F  0021               	movlb	1	; select bank1
  5830  0F10  018D               	clrf	13	;volatile
  5831  0F11                     l1865:
  5832                           
  5833                           ;lcd.c: 54:   PORTBbits.RB7 = 1;
  5834  0F11  0020               	movlb	0	; select bank0
  5835  0F12  178D               	bsf	13,7	;volatile
  5836  0F13                     l1867:
  5837                           
  5838                           ;lcd.c: 57:   _delay((unsigned long)((15)*(500000/4000.0)));
  5839  0F13  3003               	movlw	3
  5840  0F14  00F7               	movwf	??_LCD_Initialize
  5841  0F15  306E               	movlw	110
  5842  0F16                     u1857:
  5843  0F16  0B89               	decfsz	9,f
  5844  0F17  2F16               	goto	u1857
  5845  0F18  0BF7               	decfsz	??_LCD_Initialize,f
  5846  0F19  2F16               	goto	u1857
  5847  0F1A  0000               	nop
  5848  0F1B                     l1869:
  5849                           
  5850                           ;lcd.c: 60:   LCDPutCmd(0x32);
  5851  0F1B  3032               	movlw	50
  5852  0F1C  318E  26AF  318F   	fcall	_LCDPutCmd
  5853  0F1F                     l1871:
  5854                           
  5855                           ;lcd.c: 63:   LCDPutCmd(0x28);
  5856  0F1F  3028               	movlw	40
  5857  0F20  318E  26AF  318F   	fcall	_LCDPutCmd
  5858  0F23                     l1873:
  5859                           
  5860                           ;lcd.c: 66:   LCDPutCmd(0x0C);
  5861  0F23  300C               	movlw	12
  5862  0F24  318E  26AF  318F   	fcall	_LCDPutCmd
  5863  0F27                     l1875:
  5864                           
  5865                           ;lcd.c: 68:   LCDPutCmd(0x01);
  5866  0F27  3001               	movlw	1
  5867  0F28  318E  26AF  318F   	fcall	_LCDPutCmd
  5868  0F2B                     l1877:
  5869                           
  5870                           ;lcd.c: 71:   LCDPutCmd(0x06);
  5871  0F2B  3006               	movlw	6
  5872  0F2C  318E  26AF  318F   	fcall	_LCDPutCmd
  5873  0F2F                     l148:
  5874  0F2F  0008               	return
  5875  0F30                     __end_of_LCD_Initialize:
  5876                           
  5877                           	psect	text22
  5878  0E44                     __ptext22:	
  5879 ;; *************** function _LCDClear *****************
  5880 ;; Defined at:
  5881 ;;		line 159 in file "lcd.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;		None
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      void 
  5888 ;; Registers used:
  5889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5899 ;;Total ram usage:        0 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    3
  5902 ;; This function calls:
  5903 ;;		_LCDGoto
  5904 ;;		_LCDPutStr
  5905 ;; This function is called by:
  5906 ;;		_main
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           
  5911                           ;psect for function _LCDClear
  5912  0E44                     _LCDClear:
  5913  0E44                     l1879:	
  5914                           ;incstack = 0
  5915                           ; Regs used in _LCDClear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5916                           
  5917                           
  5918                           ;lcd.c: 161:   LCDGoto(0, 0);
  5919  0E44  01F7               	clrf	LCDGoto@ln
  5920  0E45  3000               	movlw	0
  5921  0E46  318F  277A  318E   	fcall	_LCDGoto
  5922  0E49                     l1881:
  5923                           
  5924                           ;lcd.c: 162:   LCDPutStr("                ");
  5925  0E49  3002               	movlw	low (STR_8| (0+32768))
  5926  0E4A  00F7               	movwf	LCDPutStr@str
  5927  0E4B  3090               	movlw	high (STR_8| (0+32768))
  5928  0E4C  00F8               	movwf	LCDPutStr@str+1
  5929  0E4D  318F  2754  318E   	fcall	_LCDPutStr
  5930  0E50                     l1883:
  5931                           
  5932                           ;lcd.c: 163:   LCDGoto(0, 1);
  5933  0E50  01F7               	clrf	LCDGoto@ln
  5934  0E51  0AF7               	incf	LCDGoto@ln,f
  5935  0E52  3000               	movlw	0
  5936  0E53  318F  277A  318E   	fcall	_LCDGoto
  5937                           
  5938                           ;lcd.c: 164:   LCDPutStr("                ");
  5939  0E56  3002               	movlw	low (STR_8| (0+32768))
  5940  0E57  00F7               	movwf	LCDPutStr@str
  5941  0E58  3090               	movlw	high (STR_8| (0+32768))
  5942  0E59  00F8               	movwf	LCDPutStr@str+1
  5943  0E5A  318F  2754  318E   	fcall	_LCDPutStr
  5944  0E5D                     l176:
  5945  0E5D  0008               	return
  5946  0E5E                     __end_of_LCDClear:
  5947                           
  5948                           	psect	text23
  5949  0F54                     __ptext23:	
  5950 ;; *************** function _LCDPutStr *****************
  5951 ;; Defined at:
  5952 ;;		line 131 in file "lcd.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;  str             2    7[COMMON] PTR const unsigned char 
  5955 ;;		 -> STR_9(17), STR_8(17), STR_6(8), STR_4(11), 
  5956 ;;		 -> main@printchar(10), STR_2(10), STR_1(14), 
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;  i               1   12[COMMON] unsigned char 
  5959 ;; Return value:  Size  Location     Type
  5960 ;;                  1    wreg      void 
  5961 ;; Registers used:
  5962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5969 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5970 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5971 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5972 ;;Total ram usage:        6 bytes
  5973 ;; Hardware stack levels used:    1
  5974 ;; Hardware stack levels required when called:    2
  5975 ;; This function calls:
  5976 ;;		_LCDPutChar
  5977 ;; This function is called by:
  5978 ;;		_main
  5979 ;;		_LCDClear
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           
  5984                           ;psect for function _LCDPutStr
  5985  0F54                     _LCDPutStr:
  5986  0F54                     l1709:	
  5987                           ;incstack = 0
  5988                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5989                           
  5990                           
  5991                           ;lcd.c: 131: void LCDPutStr(const char *str);lcd.c: 132: {;lcd.c: 133:   uint8_t i = 0;
  5992  0F54  01FC               	clrf	LCDPutStr@i
  5993                           
  5994                           ;lcd.c: 136:   while (str[i])
  5995  0F55  2F69               	goto	l1715
  5996  0F56                     l1711:
  5997                           
  5998                           ;lcd.c: 137:   {;lcd.c: 139:     LCDPutChar(str[i++]);
  5999  0F56  0878               	movf	LCDPutStr@str+1,w
  6000  0F57  00FA               	movwf	??_LCDPutStr+1
  6001  0F58  0877               	movf	LCDPutStr@str,w
  6002  0F59  00F9               	movwf	??_LCDPutStr
  6003  0F5A  087C               	movf	LCDPutStr@i,w
  6004  0F5B  0779               	addwf	??_LCDPutStr,w
  6005  0F5C  0084               	movwf	4
  6006  0F5D  087A               	movf	??_LCDPutStr+1,w
  6007  0F5E  1803               	skipnc
  6008  0F5F  0A7A               	incf	??_LCDPutStr+1,w
  6009  0F60  0085               	movwf	5
  6010  0F61  0800               	movf	0,w	;code access
  6011  0F62  318E  2692  318F   	fcall	_LCDPutChar
  6012  0F65                     l1713:
  6013  0F65  3001               	movlw	1
  6014  0F66  00F9               	movwf	??_LCDPutStr
  6015  0F67  0879               	movf	??_LCDPutStr,w
  6016  0F68  07FC               	addwf	LCDPutStr@i,f
  6017  0F69                     l1715:
  6018                           
  6019                           ;lcd.c: 136:   while (str[i])
  6020  0F69  0878               	movf	LCDPutStr@str+1,w
  6021  0F6A  00FA               	movwf	??_LCDPutStr+1
  6022  0F6B  0877               	movf	LCDPutStr@str,w
  6023  0F6C  00F9               	movwf	??_LCDPutStr
  6024  0F6D  087C               	movf	LCDPutStr@i,w
  6025  0F6E  0779               	addwf	??_LCDPutStr,w
  6026  0F6F  0084               	movwf	4
  6027  0F70  087A               	movf	??_LCDPutStr+1,w
  6028  0F71  1803               	skipnc
  6029  0F72  0A7A               	incf	??_LCDPutStr+1,w
  6030  0F73  0085               	movwf	5
  6031  0F74  0012               	moviw fsr0++
  6032  0F75  1D03               	btfss	3,2
  6033  0F76  2F78               	goto	u1501
  6034  0F77  2F79               	goto	u1500
  6035  0F78                     u1501:
  6036  0F78  2F56               	goto	l1711
  6037  0F79                     u1500:
  6038  0F79                     l163:
  6039  0F79  0008               	return
  6040  0F7A                     __end_of_LCDPutStr:
  6041                           
  6042                           	psect	text24
  6043  0E92                     __ptext24:	
  6044 ;; *************** function _LCDPutChar *****************
  6045 ;; Defined at:
  6046 ;;		line 101 in file "lcd.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  ch              1    wreg     unsigned char 
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;  ch              1    6[COMMON] unsigned char 
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  1    wreg      void 
  6053 ;; Registers used:
  6054 ;;		wreg, status,2, status,0, pclath, cstack
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6061 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6062 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6063 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6064 ;;Total ram usage:        3 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:    1
  6067 ;; This function calls:
  6068 ;;		_LCDWriteNibble
  6069 ;; This function is called by:
  6070 ;;		_LCDPutStr
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           
  6075                           ;psect for function _LCDPutChar
  6076  0E92                     _LCDPutChar:
  6077                           
  6078                           ;incstack = 0
  6079                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  6080                           ;LCDPutChar@ch stored from wreg
  6081  0E92  00F6               	movwf	LCDPutChar@ch
  6082  0E93                     l1643:
  6083                           
  6084                           ;lcd.c: 101: void LCDPutChar(uint8_t ch);lcd.c: 102: {;lcd.c: 103:   _delay((unsigned lo
      +                          ng)((5)*(500000/4000.0)));
  6085  0E93  30D0               	movlw	208
  6086  0E94                     u1867:
  6087  0E94  0B89               	decfsz	9,f
  6088  0E95  2E94               	goto	u1867
  6089  0E96  0000               	nop
  6090  0E97                     l1645:
  6091                           
  6092                           ;lcd.c: 106:   LCDWriteNibble(ch, 1);
  6093  0E97  01F0               	clrf	LCDWriteNibble@rs
  6094  0E98  0AF0               	incf	LCDWriteNibble@rs,f
  6095  0E99  0876               	movf	LCDPutChar@ch,w
  6096  0E9A  318E  26ED  318E   	fcall	_LCDWriteNibble
  6097  0E9D                     l1647:
  6098                           
  6099                           ;lcd.c: 109:   ch = (uint8_t)(ch << 4);
  6100  0E9D  0876               	movf	LCDPutChar@ch,w
  6101  0E9E  00F4               	movwf	??_LCDPutChar
  6102  0E9F  3003               	movlw	3
  6103  0EA0                     u1425:
  6104  0EA0  35F4               	lslf	??_LCDPutChar,f
  6105  0EA1  3EFF               	addlw	-1
  6106  0EA2  1D03               	skipz
  6107  0EA3  2EA0               	goto	u1425
  6108  0EA4  3574               	lslf	??_LCDPutChar,w
  6109  0EA5  00F5               	movwf	??_LCDPutChar+1
  6110  0EA6  0875               	movf	??_LCDPutChar+1,w
  6111  0EA7  00F6               	movwf	LCDPutChar@ch
  6112  0EA8                     l1649:
  6113                           
  6114                           ;lcd.c: 112:   LCDWriteNibble(ch, 1);
  6115  0EA8  01F0               	clrf	LCDWriteNibble@rs
  6116  0EA9  0AF0               	incf	LCDWriteNibble@rs,f
  6117  0EAA  0876               	movf	LCDPutChar@ch,w
  6118  0EAB  318E  26ED  318E   	fcall	_LCDWriteNibble
  6119  0EAE                     l154:
  6120  0EAE  0008               	return
  6121  0EAF                     __end_of_LCDPutChar:
  6122                           
  6123                           	psect	text25
  6124  0F7A                     __ptext25:	
  6125 ;; *************** function _LCDGoto *****************
  6126 ;; Defined at:
  6127 ;;		line 143 in file "lcd.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  pos             1    wreg     unsigned char 
  6130 ;;  ln              1    7[COMMON] unsigned char 
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;  pos             1   10[COMMON] unsigned char 
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      void 
  6135 ;; Registers used:
  6136 ;;		wreg, status,2, status,0, pclath, cstack
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6142 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6143 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6145 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6146 ;;Total ram usage:        4 bytes
  6147 ;; Hardware stack levels used:    1
  6148 ;; Hardware stack levels required when called:    2
  6149 ;; This function calls:
  6150 ;;		_LCDPutCmd
  6151 ;; This function is called by:
  6152 ;;		_main
  6153 ;;		_LCDClear
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           
  6158                           ;psect for function _LCDGoto
  6159  0F7A                     _LCDGoto:
  6160                           
  6161                           ;incstack = 0
  6162                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  6163                           ;LCDGoto@pos stored from wreg
  6164  0F7A  00FA               	movwf	LCDGoto@pos
  6165  0F7B                     l1695:
  6166                           
  6167                           ;lcd.c: 143: void LCDGoto(uint8_t pos, uint8_t ln);lcd.c: 144: {;lcd.c: 146:   if ((ln >
      +                           (2 - 1)) || (pos > (16 - 1)))
  6168  0F7B  3002               	movlw	2
  6169  0F7C  0277               	subwf	LCDGoto@ln,w
  6170  0F7D  1803               	skipnc
  6171  0F7E  2F80               	goto	u1471
  6172  0F7F  2F81               	goto	u1470
  6173  0F80                     u1471:
  6174  0F80  2FA0               	goto	l169
  6175  0F81                     u1470:
  6176  0F81                     l1697:
  6177  0F81  3010               	movlw	16
  6178  0F82  027A               	subwf	LCDGoto@pos,w
  6179  0F83  1C03               	skipc
  6180  0F84  2F86               	goto	u1481
  6181  0F85  2F87               	goto	u1480
  6182  0F86                     u1481:
  6183  0F86  2F88               	goto	l1699
  6184  0F87                     u1480:
  6185  0F87  2FA0               	goto	l169
  6186  0F88                     l1699:
  6187                           
  6188                           ;lcd.c: 153:   LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  6189  0F88  0377               	decf	LCDGoto@ln,w
  6190  0F89  1903               	btfsc	3,2
  6191  0F8A  2F8C               	goto	u1491
  6192  0F8B  2F8D               	goto	u1490
  6193  0F8C                     u1491:
  6194  0F8C  2F93               	goto	l1703
  6195  0F8D                     u1490:
  6196  0F8D                     l1701:
  6197  0F8D  3080               	movlw	128
  6198  0F8E  047A               	iorwf	LCDGoto@pos,w
  6199  0F8F  00F8               	movwf	_LCDGoto$223
  6200  0F90  3000               	movlw	0
  6201  0F91  00F9               	movwf	_LCDGoto$223+1
  6202  0F92  2F98               	goto	l1705
  6203  0F93                     l1703:
  6204  0F93  30C0               	movlw	192
  6205  0F94  047A               	iorwf	LCDGoto@pos,w
  6206  0F95  00F8               	movwf	_LCDGoto$223
  6207  0F96  3000               	movlw	0
  6208  0F97  00F9               	movwf	_LCDGoto$223+1
  6209  0F98                     l1705:
  6210  0F98  0878               	movf	_LCDGoto$223,w
  6211  0F99  318E  26AF  318F   	fcall	_LCDPutCmd
  6212  0F9C                     l1707:
  6213                           
  6214                           ;lcd.c: 156:   _delay((unsigned long)((5)*(500000/4000.0)));
  6215  0F9C  30D0               	movlw	208
  6216  0F9D                     u1877:
  6217  0F9D  0B89               	decfsz	9,f
  6218  0F9E  2F9D               	goto	u1877
  6219  0F9F  0000               	nop
  6220  0FA0                     l169:
  6221  0FA0  0008               	return
  6222  0FA1                     __end_of_LCDGoto:
  6223                           
  6224                           	psect	text26
  6225  0EAF                     __ptext26:	
  6226 ;; *************** function _LCDPutCmd *****************
  6227 ;; Defined at:
  6228 ;;		line 115 in file "lcd.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  ch              1    wreg     unsigned char 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  ch              1    6[COMMON] unsigned char 
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  1    wreg      void 
  6235 ;; Registers used:
  6236 ;;		wreg, status,2, status,0, pclath, cstack
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6245 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6246 ;;Total ram usage:        3 bytes
  6247 ;; Hardware stack levels used:    1
  6248 ;; Hardware stack levels required when called:    1
  6249 ;; This function calls:
  6250 ;;		_LCDWriteNibble
  6251 ;; This function is called by:
  6252 ;;		_LCD_Initialize
  6253 ;;		_LCDGoto
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           
  6258                           ;psect for function _LCDPutCmd
  6259  0EAF                     _LCDPutCmd:
  6260                           
  6261                           ;incstack = 0
  6262                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  6263                           ;LCDPutCmd@ch stored from wreg
  6264  0EAF  00F6               	movwf	LCDPutCmd@ch
  6265  0EB0                     l1633:
  6266                           
  6267                           ;lcd.c: 115: void LCDPutCmd(uint8_t ch);lcd.c: 116: {;lcd.c: 117:   _delay((unsigned lon
      +                          g)((5)*(500000/4000.0)));
  6268  0EB0  30D0               	movlw	208
  6269  0EB1                     u1887:
  6270  0EB1  0B89               	decfsz	9,f
  6271  0EB2  2EB1               	goto	u1887
  6272  0EB3  0000               	nop
  6273  0EB4                     l1635:
  6274                           
  6275                           ;lcd.c: 120:   LCDWriteNibble(ch, 0);
  6276  0EB4  01F0               	clrf	LCDWriteNibble@rs
  6277  0EB5  0876               	movf	LCDPutCmd@ch,w
  6278  0EB6  318E  26ED  318E   	fcall	_LCDWriteNibble
  6279  0EB9                     l1637:
  6280                           
  6281                           ;lcd.c: 123:   ch = (uint8_t)(ch << 4);
  6282  0EB9  0876               	movf	LCDPutCmd@ch,w
  6283  0EBA  00F4               	movwf	??_LCDPutCmd
  6284  0EBB  3003               	movlw	3
  6285  0EBC                     u1415:
  6286  0EBC  35F4               	lslf	??_LCDPutCmd,f
  6287  0EBD  3EFF               	addlw	-1
  6288  0EBE  1D03               	skipz
  6289  0EBF  2EBC               	goto	u1415
  6290  0EC0  3574               	lslf	??_LCDPutCmd,w
  6291  0EC1  00F5               	movwf	??_LCDPutCmd+1
  6292  0EC2  0875               	movf	??_LCDPutCmd+1,w
  6293  0EC3  00F6               	movwf	LCDPutCmd@ch
  6294  0EC4                     l1639:
  6295                           
  6296                           ;lcd.c: 125:   _delay((unsigned long)((1)*(500000/4000.0)));
  6297  0EC4  3029               	movlw	41
  6298  0EC5                     u1897:
  6299  0EC5  0B89               	decfsz	9,f
  6300  0EC6  2EC5               	goto	u1897
  6301  0EC7  3200               	nop2
  6302  0EC8                     l1641:
  6303                           
  6304                           ;lcd.c: 128:   LCDWriteNibble(ch, 0);
  6305  0EC8  01F0               	clrf	LCDWriteNibble@rs
  6306  0EC9  0876               	movf	LCDPutCmd@ch,w
  6307  0ECA  318E  26ED  318E   	fcall	_LCDWriteNibble
  6308  0ECD                     l157:
  6309  0ECD  0008               	return
  6310  0ECE                     __end_of_LCDPutCmd:
  6311                           
  6312                           	psect	text27
  6313  0EED                     __ptext27:	
  6314 ;; *************** function _LCDWriteNibble *****************
  6315 ;; Defined at:
  6316 ;;		line 74 in file "lcd.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;  ch              1    wreg     unsigned char 
  6319 ;;  rs              1    0[COMMON] unsigned char 
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;  ch              1    3[COMMON] unsigned char 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  1    wreg      void 
  6324 ;; Registers used:
  6325 ;;		wreg, status,2, status,0
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6331 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6332 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6333 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6334 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6335 ;;Total ram usage:        4 bytes
  6336 ;; Hardware stack levels used:    1
  6337 ;; This function calls:
  6338 ;;		Nothing
  6339 ;; This function is called by:
  6340 ;;		_LCDPutChar
  6341 ;;		_LCDPutCmd
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           
  6346                           ;psect for function _LCDWriteNibble
  6347  0EED                     _LCDWriteNibble:
  6348                           
  6349                           ;incstack = 0
  6350                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
  6351                           ;LCDWriteNibble@ch stored from wreg
  6352  0EED  00F3               	movwf	LCDWriteNibble@ch
  6353  0EEE                     l1561:
  6354                           
  6355                           ;lcd.c: 74: void LCDWriteNibble(uint8_t ch, uint8_t rs);lcd.c: 75: {;lcd.c: 77:   ch = (
      +                          ch >> 4);
  6356  0EEE  0873               	movf	LCDWriteNibble@ch,w
  6357  0EEF  00F1               	movwf	??_LCDWriteNibble
  6358  0EF0  3004               	movlw	4
  6359  0EF1                     u1245:
  6360  0EF1  36F1               	lsrf	??_LCDWriteNibble,f
  6361  0EF2  0B89               	decfsz	9,f
  6362  0EF3  2EF1               	goto	u1245
  6363  0EF4  0871               	movf	??_LCDWriteNibble,w
  6364  0EF5  00F2               	movwf	??_LCDWriteNibble+1
  6365  0EF6  0872               	movf	??_LCDWriteNibble+1,w
  6366  0EF7  00F3               	movwf	LCDWriteNibble@ch
  6367  0EF8                     l1563:
  6368                           
  6369                           ;lcd.c: 80:   ch = (ch & 0x0F);
  6370  0EF8  0873               	movf	LCDWriteNibble@ch,w
  6371  0EF9  390F               	andlw	15
  6372  0EFA  00F1               	movwf	??_LCDWriteNibble
  6373  0EFB  0871               	movf	??_LCDWriteNibble,w
  6374  0EFC  00F3               	movwf	LCDWriteNibble@ch
  6375  0EFD                     l1565:
  6376                           
  6377                           ;lcd.c: 83:   PORTB = (PORTB & 0xF0);
  6378  0EFD  0020               	movlb	0	; select bank0
  6379  0EFE  080D               	movf	13,w	;volatile
  6380  0EFF  39F0               	andlw	240
  6381  0F00  008D               	movwf	13	;volatile
  6382                           
  6383                           ;lcd.c: 86:   PORTB = (PORTB | ch);
  6384  0F01  080D               	movf	13,w	;volatile
  6385  0F02  0473               	iorwf	LCDWriteNibble@ch,w
  6386  0F03  008D               	movwf	13	;volatile
  6387  0F04                     l1567:
  6388                           
  6389                           ;lcd.c: 89:   PORTBbits.RB5 = rs;
  6390  0F04  0C70               	rrf	LCDWriteNibble@rs,w
  6391  0F05  1C03               	skipc
  6392  0F06  128D               	bcf	13,5	;volatile
  6393  0F07  1803               	skipnc
  6394  0F08  168D               	bsf	13,5	;volatile
  6395  0F09                     l1569:
  6396                           
  6397                           ;lcd.c: 92:   PORTBbits.RB6 = 0;
  6398  0F09  130D               	bcf	13,6	;volatile
  6399  0F0A                     l1571:
  6400                           
  6401                           ;lcd.c: 95:   PORTBbits.RB4 = 1;
  6402  0F0A  160D               	bsf	13,4	;volatile
  6403  0F0B                     l1573:
  6404                           
  6405                           ;lcd.c: 98:   PORTBbits.RB4 = 0;
  6406  0F0B  120D               	bcf	13,4	;volatile
  6407  0F0C                     l151:
  6408  0F0C  0008               	return
  6409  0F0D                     __end_of_LCDWriteNibble:
  6410  007E                     btemp	set	126	;btemp
  6411  007E                     wtemp0	set	126
  6412                           
  6413                           	psect	config
  6414                           
  6415                           ;Config register CONFIG1 @ 0x8007
  6416                           ;	Oscillator Selection Bits
  6417                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6418                           ;	Watchdog Timer Enable
  6419                           ;	WDTE = OFF, WDT disabled
  6420                           ;	Power-up Timer Enable
  6421                           ;	PWRTE = OFF, PWRT disabled
  6422                           ;	MCLR Pin Function Select
  6423                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6424                           ;	Flash Program Memory Code Protection
  6425                           ;	CP = OFF, Program memory code protection is disabled
  6426                           ;	Brown-out Reset Enable
  6427                           ;	BOREN = ON, Brown-out Reset enabled
  6428                           ;	Clock Out Enable
  6429                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6430                           ;	Internal/External Switchover Mode
  6431                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  6432                           ;	Fail-Safe Clock Monitor Enable
  6433                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6434  8007                     	org	32775
  6435  8007  3FE4               	dw	16356
  6436                           
  6437                           ;Config register CONFIG2 @ 0x8008
  6438                           ;	Flash Memory Self-Write Protection
  6439                           ;	WRT = OFF, Write protection off
  6440                           ;	Peripheral Pin Select one-way control
  6441                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  6442                           ;	Zero-cross detect disable
  6443                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR and can be enabled with ZCDS
      +                          EN bit.
  6444                           ;	Phase Lock Loop enable
  6445                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  6446                           ;	Stack Overflow/Underflow Reset Enable
  6447                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6448                           ;	Brown-out Reset Voltage Selection
  6449                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6450                           ;	Low-Power Brown Out Reset
  6451                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6452                           ;	Low-Voltage Programming Enable
  6453                           ;	LVP = ON, Low-voltage programming enabled
  6454  8008                     	org	32776
  6455  8008  3EFF               	dw	16127

Data Sizes:
    Strings     63
    Constant    2
    Data        6
    BSS         48
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     49      67
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S539_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@printchar(BANK1[10]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_6(CODE[8]), STR_4(CODE[11]), 
		 -> main@printchar(BANK1[10]), STR_2(CODE[10]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _sumdigits->___awdiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_Initialize->_LCDPutCmd
    _LCDClear->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   16005
                                              9 BANK1     40    40      0
                           _LCDClear
                            _LCDGoto
                          _LCDPutStr
                     _LCD_Initialize
                  _SYSTEM_Initialize
                            ___awdiv
                            ___awmod
                             ___wmul
                            _sprintf
                          _sumdigits
 ---------------------------------------------------------------------------------
 (1) _sumdigits                                            7     5      2    1568
                                              9 COMMON     3     1      2
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6330
                                             13 COMMON     1     1      0
                                             70 BANK0      6     0      6
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     461
                                              7 COMMON     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDClear                                             0     0      0    2514
                            _LCDGoto
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            6     4      2    1235
                                              7 COMMON     6     4      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              4     3      1    1279
                                              7 COMMON     4     3      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       4     3      1     394
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDClear
     _LCDGoto
       _LCDPutCmd
         _LCDWriteNibble
     _LCDPutStr
       _LCDPutChar
         _LCDWriteNibble
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
       _LCDWriteNibble
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   ___awdiv
   ___awmod
   ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   _sumdigits
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     31      43       7       83.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      C1      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      C1      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jun 02 15:09:21 2021

                 _LCD_Initialize 0F0D                               l26 0069                      ?_LCDPutChar 0070  
                             l53 07D4                               l54 07D4                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072                              l132 0E39                              l109 0FCE  
                            l151 0F0C                              l135 0E26                              l129 0E43  
                            l154 0EAE                              l410 010B                              l163 0F79  
                            l148 0F2F                              l244 0ED8                              l157 0ECD  
                            l246 0EEC                              l176 0E5D                              l344 0475  
                            l169 0FA0                              l345 0486                              l357 0374  
                            l358 0385                              l707 0F53                              l397 01C0  
                            l806 002D                              l734 0126                              l742 04D0  
                            l815 0E91                              l751 0577                              l743 04D9  
                            l809 0004                              l737 0148                              l739 0161  
                            l747 04F1                              l748 0507                              l772 029B  
                            l765 05EB                              l783 0E77                              l786 0E77  
                            l779 0FFF                              l798 00B8                              u920 006F  
                            u921 006E                              u930 0074                              u931 0073  
                            u940 0083                              u941 0082                              u950 00A0  
                            u951 009F                              u960 002D                              u961 002C  
                            u970 0E8B                              u955 009C                              u971 0E8A  
                            u980 0391                              u981 0390                              _abs 0E5E  
                            _pad 010C                     ___awmod@sign 0076                              wreg 0009  
                __end_of_LCDGoto 0FA1                             l2001 075D                             l2011 07CD  
                           l2003 0761                             ?_abs 0073                             l2005 076E  
                           l2007 07AE                             l2009 07C7                             l1501 0452  
                           l1503 0457                             l1511 02C8                             l1521 0309  
                           l1513 02D2                             l1505 029C                             l1441 0083  
                           l1433 006A                             l1601 0542                             l2049 0610  
                           l1523 030D                             l1531 0351                             l1515 02F1  
                           l1507 029D                             l1443 00A0                             l1435 006F  
                           l1451 000A                             l1611 059F                             l1603 0546  
                           l1701 0F8D                             l1533 0356                             l1525 0311  
                           l1517 02FE                             l1509 02A7                             l1445 00B0  
                           l1437 0074                             l1453 0018                             l1461 0E82  
                           l1541 011F                             l1621 05C1                             l1613 05AD  
                           l1605 054A                             l1703 0F93                             l1711 0F56  
                           l1471 0391                             l1527 0333                             l1519 0301  
                           l1439 0079                             l1455 001D                             l1463 0E8B  
                           l1551 014D                             l1543 0124                             l1535 010E  
                           l1623 05C7                             l1607 0585                             l1615 05B2  
                           l1561 0EEE                             l1641 0EC8                             l1633 0EB0  
                           l1705 0F98                             l1713 0F65                             l1721 0FA8  
                           l1481 03E9                             l1473 03B2                             l1529 0343  
                           l1449 0007                             l1457 0E79                             l1553 0155  
                           l1545 0129                             l1537 0112                             l1625 05CC  
                           l1617 05B9                             l1609 0592                             l1801 00BE  
                           l1571 0F0A                             l1563 0EF8                             l1635 0EB4  
                           l1707 0F9C                             l1643 0E93                             l1715 0F69  
                           l1731 0FB5                             l1723 0FAB                             l1491 0409  
                           l1483 03F6                             l1475 03BC                             l1467 0386  
                           l1459 0E7E                             l1547 0135                             l1539 011A  
                           l1627 05D0                             l1619 05BD                             l1651 01C3  
                           l1811 00D4                             l1803 00C3                             l1573 0F0B  
                           l1565 0EFD                             l1637 0EB9                             l1645 0E97  
                           l1709 0F54                             l1741 0FBC                             l1733 0FB6  
                           l1725 0FAD                             l1717 0FA1                             l1901 0ED4  
                           l1493 0411                             l1485 03F9                             l1477 03DB  
                           l1469 0387                             l1557 0E5E                             l1549 013A  
                           l1629 05D9                             l1581 04B2                             l1661 01F7  
                           l1653 01D4                             l1821 00EE                             l1813 00D7  
                           l1805 00C5                             l1567 0F04                             l1639 0EC4  
                           l1647 0E9D                             l1743 0FBD                             l1735 0FB7  
                           l1727 0FB1                             l1719 0FA5                             l1751 0E23  
                           l1903 0EDD                             l1495 0433                             l1487 0401  
                           l1479 03DF                             l1559 0E6B                             l1591 04FF  
                           l1583 04D5                             l1575 0489                             l1671 0243  
                           l1663 0208                             l1655 01DC                             l1831 0107  
                           l1823 00F2                             l1815 00DC                             l1807 00C9  
                           l1911 05EC                             l1569 0F09                             l1649 0EA8  
                           l1745 0E33                             l1737 0FB8                             l1729 0FB3  
                           l1905 0EE2                             l1497 0443                             l1489 0405  
                           l1593 0503                             l1585 04E6                             l1577 0499  
                           l1673 0254                             l1681 026D                             l1665 0210  
                           l1657 01E2                             l1841 0FED                             l1761 016E  
                           l1753 0162                             l1825 00F7                             l1817 00E0  
                           l1809 00CE                             l1921 0618                             l1913 05F3  
                           l1747 0E36                             l1739 0FBA                             l1907 0EE8  
                           l1499 0444                             l1595 050B                             l1587 04EC  
                           l1579 04AC                             l1683 0275                             l1675 025C  
                           l1667 0229                             l1659 01E6                             l1843 0FF7  
                           l1835 0FD1                             l1771 0183                             l1763 0172  
                           l1755 0163                             l1819 00E4                             l1827 00FD  
                           l1851 0042                             l1931 0636                             l1923 061A  
                           l1915 05F8                             l1749 0E37                             l1861 0E3A  
                           l1597 050E                             l1589 04F9                             l1677 0267  
                           l1837 0FD5                             l1781 01A2                             l1773 0186  
                           l1765 0177                             l1757 0167                             l1829 0102  
                           l1853 0048                             l1941 0672                             l1933 0648  
                           l1925 061F                             l1917 05FD                             l1695 0F7B  
                           l1871 0F1F                             l1863 0F0D                             l1599 0513  
                           l1687 0278                             l1839 0FD9                             l1791 01B7  
                           l1783 01A6                             l1775 018B                             l1767 017B  
                           l1759 016C                             l1855 0057                             l1847 002E  
                           l1951 0692                             l1943 0678                             l1935 064C  
                           l1927 0626                             l1919 0602                             l1697 0F81  
                           l1881 0E49                             l1873 0F23                             l1865 0F11  
                           l1689 0291                             l1793 01BC                             l1785 01A7  
                           l1777 018F                             l1769 017D                             l1857 0064  
                           l1849 0032                             l1961 06C4                             l1953 0699  
                           l1937 0651                             l1929 062C                             l1945 067C  
                           l1699 0F88                             l1883 0E50                             l1875 0F27  
                           l1867 0F13                             l1891 0F3E                             l1787 01AC  
                           l1779 0193                             l1971 06D8                             l1963 06C7  
                           l1955 06AA                             l1947 068A                             l1939 066B  
                           l1877 0F2B                             l1869 0F1B                             l1893 0F4B  
                           l1885 0F32                             l1789 01B2                             l1797 00B9  
                           l1981 070D                             l1973 06E5                             l1965 06C7  
                           l1957 06B0                             l1949 068D                             ?_pad 0024  
                           l1879 0E44                             l1887 0F3A                             l1799 00BA  
                           l1991 0730                             l1983 0714                             l1975 06E9  
                           l1967 06CC                             l1959 06B7                             l1897 0ECE  
                           l1889 0F3C                             l1993 0730                             l1985 0721  
                           l1977 06F6                             l1969 06D3                             l1899 0ED0  
                           l1995 073B                             l1987 0724                             l1979 0707  
                           l1997 073E                             l1989 0729                             l1999 074D  
                           STR_1 1013                             STR_2 102C                             STR_3 103E  
                           STR_4 1021                             STR_5 103E                             STR_6 1036  
                           STR_7 103E                             STR_8 1002                             STR_9 1002  
                           u1000 03BC                             u1001 03BB                             u1020 03E6  
                           u1030 03F6                             u1110 02D2                             u1031 03F5  
                           u1111 02D1                             u1040 0409                             u1200 011F  
                           u1041 0408                             u1201 011E                             u1050 0433  
                           u1130 02FE                             u1210 0148                             u1051 0432  
                           u1131 02FD                             u1211 0147                             u1060 0452  
                           u1140 0311                             u1220 014D                             u1300 04E6  
                           u1061 0451                             u1141 0310                             u1221 014C  
                           u1301 04E5                             u1070 0457                             u1150 0333  
                           u1230 0E6B                             u1310 04FF                             u1071 0456  
                           u1055 042F                             u1151 0332                             u1231 0E6A  
                           u1215 0144                             u1311 04FE                             u1160 0351  
                           u1400 05C7                             u1320 0503                             u1161 0350  
                           u1401 05C6                             u1321 0502                             u1305 04E2  
                           u1170 0356                             u1090 02A7                             u1330 0585  
                           u1250 04A4                             u1171 0355                             u1155 032F  
                           u1091 02A6                             u1235 0E67                             u1331 0584  
                           u1251 04A2                             u1500 0F79                             u1340 0592  
                           u1260 04A5                             u1245 0EF1                             u1501 0F78  
                           u1341 0591                             _LATA 010C                             u1190 0112  
                           u1350 059F                             u1270 04B2                             u1430 01D4  
                           u1510 0167                             _LATB 010D                             u1415 0EBC  
                           u1191 0111                             u1351 059E                             u1335 0581  
                           u1271 04B1                             u1431 01D3                             u1511 0166  
                           _LATC 010E                             u1360 05AD                             u1440 01F7  
                           u1600 01B7                             u1520 0172                             u1425 0EA0  
                           u1361 05AC                             u1441 01F6                             u1601 01B6  
                           u1521 0171                             u1370 05B2                             u1290 04D5  
                           u1450 0208                             u1530 0183                             u1610 00BE  
                           u1371 05B1                             u1355 059B                             u1291 04D4  
                           u1451 0207                             u1531 0182                             u1611 00BD  
                           u1380 05B9                             u1460 0254                             u1700 0FF7  
                           u1620 00C9                             u1381 05B8                             u1365 05A9  
                           u1461 0253                             u1701 0FF6                             u1621 00C8  
                           u1470 0F81                             u1390 05BD                             u1550 0193  
                           u1630 00D4                             u1710 0064                             u1471 0F80  
                           u1391 05BC                             u1551 0192                             u1631 00D3  
                           u1711 0063                             u1480 0F87                             u1720 0ED4  
                           u1800 06F6                             u1481 0F86                             u1721 0ED3  
                           u1545 0187                             u1801 06F5                             u1490 0F8D  
                           u1570 01A2                             u1650 00E4                             u1810 0738  
                           u1491 0F8C                             u1571 01A1                             u1651 00E3  
                           u1715 0060                             u1660 00EE                             u1820 076E  
                           u1565 0194                             u1661 00ED                             u1645 00D8  
                           u1821 076D                             u1805 06F2                             u1750 0EE8  
                           u1590 01B2                             u1751 0EE7                             u1735 0ED9  
                           u1591 01B1                             u1575 019E                             u1680 00FD  
                           u1760 0648                             u1745 0EDE                             u1585 01A8  
                           u1681 00FC                             u1665 00EA                             u1825 076A  
                           u1761 0647                             u1690 0102                             u1770 066B  
                           u1691 0101                             u1675 00F3                             u1771 066A  
                           u1780 0672                             u1837 06BD                             u1781 0671  
                           u1790 068A                             u1847 071A                             u1791 0689  
                           u1775 0667                             u1857 0F16                             u1867 0E94  
                           u1795 0686                             u1877 0F9D                             u1887 0EB1  
                           u1897 0EC5                             _WPUA 020C                             _WPUB 020D  
                           _WPUC 020E                             _WPUE 0210                     main@SumPrime 00C9  
                           abs@a 0073                             _dbuf 0120                             _main 05EC  
                           _dtoa 0487                             _prec 006C                             _nout 00D9  
                           pad@i 0027                             pad@p 0025                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             pad@w 0029  
                           btemp 007E               __size_of_LCDPutCmd 001F                             start 0002  
             __size_of_LCDPutStr 0026           __end_of_LCD_Initialize 0F30                 __end_of_LCDClear 0E5E  
                          ??_abs 0075                            ??_pad 007C                      LCDPutCmd@ch 0076  
 __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 0E3A                  __end_of___aodiv 0487  
                          ?_main 0070                            ?_dtoa 0030                  __end_of___aomod 0386  
                __end_of___awdiv 01C1                  __end_of___awmod 010C                  ___awdiv@divisor 0070  
                ___awdiv@counter 0075                     vfpfcnvrt@fmt 004E                            _PORTB 000D  
                  main@SumDigits 00CF                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E                            _TRISE 0090                            u99lld 03B0  
                          _flags 006E                   _WDT_Initialize 0E23                            _fputc 006A  
                          _fputs 0005                            pad@fp 002B                            _width 00DB  
                          _putch 0004                            main@i 00CB                            dtoa@d 0030  
                          dtoa@i 004C                            dtoa@n 0044                            dtoa@p 003E  
                          dtoa@s 0042                            dtoa@w 0040              __size_of_LCDPutChar 001D  
                          status 0003                            wtemp0 007E                  __end_of_sprintf 0F54  
                ?_LCD_Initialize 0070                  __initialization 07D7                     __end_of_main 07D7  
                   __end_of_dtoa 05EC                           ??_main 00A9                           ??_dtoa 0038  
                      ??_LCDGoto 0078                __end_of_LCDPutCmd 0ECE                     LCDPutChar@ch 0076  
              __end_of_LCDPutStr 0F7A           __end_of_WDT_Initialize 0E27                           ?_fputc 0070  
                         ?_fputs 0078                 ___awdiv@dividend 0072                           _ANSELA 018C  
                         ?_putch 0070                           _ANSELB 018D                           _ANSELC 018E  
                         _BORCON 0116                           _ODCONA 028C                           _ODCONB 028D  
                         _ODCONC 028E                           _INLVLA 038C                           _INLVLB 038D  
                         _INLVLC 038E                           _INLVLE 0390                           u101lld 03DB  
                         u110lld 02C6                           _OSCCON 0099                           u112lld 02F1  
                         u108lld 0475                           u118lld 0374                           u128lld 04D0  
                         _WDTCON 0097                     LCDPutStr@str 0077                   _LCDWriteNibble 0EED  
                   vfprintf@cfmt 0064                        ??___aodiv 0070                        ??___aomod 0070  
                         ___wmul 0ECE                        ??___awdiv 0074                        ??___awmod 0074  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                  ___awmod@counter 0075  
                         pad@buf 0024                           dtoa@fp 003D                           _strlen 0E78  
                         fputc@c 0070                           fputs@c 0020                           fputs@i 0021  
                         fputs@s 0023                    main@printchar 00AF                  ?_WDT_Initialize 0070  
                         putch@c 0070                 __end_of_vfprintf 1000                        ??_sprintf 007D  
                      ?_LCDClear 0070                _SYSTEM_Initialize 0E3A           __end_of_LCDWriteNibble 0F0D  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070                        LCDGoto@ln 0077  
             _last3digitsCarnet1 00E1               _last3digitsCarnet2 00DF               _last3digitsCarnet3 00DD  
                 __pcstackCOMMON 0070                     __pidataBANK1 0E2D              ??_SYSTEM_Initialize 0070  
                  __end_of_fputc 00B9                     ??_LCDPutChar 0074                    __end_of_fputs 002E  
                  __end_of_putch 0005                   _OPTION_REGbits 0095                   sumdigits@digit 0020  
                        ??_fputc 0073        __end_of_SYSTEM_Initialize 0E44                          ??_fputs 0079  
                        ??_putch 0070                       __pbssBANK0 006C                       __pbssBANK1 00D1  
                     __pbssBANK2 0120                       ??_LCDClear 007D                  ?_LCDWriteNibble 0070  
             __end_of_LCDPutChar 0EAF                       __pmaintext 05EC                          ?___wmul 0070  
                        ?_strlen 0070                          _LCDGoto 0F7A               __size_of_vfpfcnvrt 00DB  
                        _OSCTUNE 0098                          _SLRCONA 030C                          _SLRCONB 030D  
                        _SLRCONC 030E               __size_of_sumdigits 003C                 ??_LCD_Initialize 0077  
                        ___aodiv 0386                          ___aomod 029C                          ___awdiv 0162  
                        ___awmod 00B9                  __size_of___wmul 001F                        ?_vfprintf 005E  
                        __ptext1 002E                          __ptext2 00B9                          __ptext3 0162  
                        __ptext4 0F30                          __ptext5 0FCF                          __ptext6 01C1  
                        __ptext7 0487                          __ptext8 010C                          __ptext9 0E78  
                __size_of_strlen 001A            _OSCILLATOR_Initialize 0E33                     __size_of_abs 001A  
                   __size_of_pad 0056                 ___awmod@dividend 0072         ??_PIN_MANAGER_Initialize 0070  
                      _LCDPutCmd 0EAF                          main@bin 00BD       __size_of_SYSTEM_Initialize 000A  
                        _sprintf 0F30                          clrloop0 0E28                        _LCDPutStr 0F54  
           end_of_initialization 07FD                          fputc@fp 0072                          fputs@fp 0078  
              __end_of_vfpfcnvrt 029C                       ??_vfprintf 0061                __end_ofmain@label 1002  
                        strlen@a 0073                          strlen@s 0074                __end_of_sumdigits 006A  
               ??_WDT_Initialize 0070                        _PORTBbits 000D                       main@Binary 00B9  
                     ?_LCDPutCmd 0070                       ?_LCDPutStr 0077                       main@carnet 00C7  
                     LCDGoto@pos 007A                __size_of_LCDClear 001A                       main@number 00CD  
                    vfpfcnvrt@ap 004F                      vfpfcnvrt@fp 005D                       LCDPutStr@i 007C  
                    vfpfcnvrt@ll 0055                   __end_of___wmul 0EED           ?_OSCILLATOR_Initialize 0070  
                 __end_of_strlen 0E92              start_initialization 07D7  __size_of_PIN_MANAGER_Initialize 002E  
               ??_LCDWriteNibble 0071                      __end_of_abs 0E78                      __end_of_pad 0162  
                    vfprintf@fmt 005E                         ??___wmul 0074                      __pdataBANK1 00DD  
                sumdigits@number 0079                         ??_strlen 0072                         ?_LCDGoto 0077  
                      ___latbits 0003                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
               ___aodiv@dividend 0028                      ??_LCDPutCmd 0074                      ??_LCDPutStr 0079  
         _PIN_MANAGER_Initialize 0FA1                         ?___aodiv 0020                         ?___aomod 0020  
                       ?___awdiv 0070                 ___aodiv@quotient 0073                         ?___awmod 0070  
               LCDWriteNibble@ch 0073                 LCDWriteNibble@rs 0070                __size_of_vfprintf 0031  
                       ?_sprintf 0066                   __size_of_fputc 004F                   __size_of_fputs 0029  
                 __size_of_putch 0001                         _LCDClear 0E44                   ___wmul@product 0074  
                      clear_ram0 0E27                      _LCDGoto$223 0078                        main@F5610 00D1  
                      _vfpfcnvrt 01C1                ___wmul@multiplier 0070                        main@label 1000  
                      _sumdigits 002E                 __size_of_LCDGoto 0027                        main@prime 00C5  
                     vfprintf@ap 0060                       vfprintf@fp 0063          ??_OSCILLATOR_Initialize 0070  
        __size_of_LCD_Initialize 0023                 __size_of___aodiv 0101                 __size_of___aomod 00EA  
               __size_of___awdiv 005F                 __size_of___awmod 0053                       ?_vfpfcnvrt 004E  
                ___aodiv@divisor 0020                  ___aodiv@counter 0071                       sprintf@fmt 0066  
             sumdigits@SumDigits 0022                       ?_sumdigits 0079                         _dtoa$612 003B  
                       __ptext10 0005                         __ptext11 006A                         __ptext20 0E33  
                       __ptext12 0004                         __ptext21 0F0D                         __ptext13 0E5E  
                       __ptext22 0E44                         __ptext14 029C                         __ptext23 0F54  
                       __ptext15 0386                         __ptext24 0E92                         __ptext16 0ECE  
                       __ptext25 0F7A                         __ptext17 0E3A                         __ptext26 0EAF  
                       __ptext18 0E23                         __ptext27 0EED                         __ptext19 0FA1  
               __size_of_sprintf 0024                    __size_of_main 01EB                    __size_of_dtoa 0165  
                       _vfprintf 0FCF                       _LCDPutChar 0E92                 ___aomod@dividend 0028  
        __size_of_WDT_Initialize 0004                        sprintf@ap 00A2          ?_PIN_MANAGER_Initialize 0070  
                ___aomod@divisor 0020                      ??_vfpfcnvrt 0050                  ___aomod@counter 0071  
                  __pstringtext1 1000                    __pstringtext2 1013                    __pstringtext3 1021  
                  __pstringtext4 102C                    __pstringtext5 1036                    __pstringtext6 103E  
                  __pstringtext7 0000                         sprintf@f 00A4                         sprintf@s 00A3  
                    ??_sumdigits 007B                     ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 0FCF  
        __size_of_LCDWriteNibble 0020                     ___aomod@sign 0072  
